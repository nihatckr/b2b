
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model ProductionTracking
 * 
 */
export type ProductionTracking = $Result.DefaultSelection<Prisma.$ProductionTrackingPayload>
/**
 * Model Revision
 * 
 */
export type Revision = $Result.DefaultSelection<Prisma.$RevisionPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Collection
 * 
 */
export type Collection = $Result.DefaultSelection<Prisma.$CollectionPayload>
/**
 * Model UserFavoriteCollection
 * 
 */
export type UserFavoriteCollection = $Result.DefaultSelection<Prisma.$UserFavoriteCollectionPayload>
/**
 * Model Sample
 * 
 */
export type Sample = $Result.DefaultSelection<Prisma.$SamplePayload>
/**
 * Model AIAnalysis
 * 
 */
export type AIAnalysis = $Result.DefaultSelection<Prisma.$AIAnalysisPayload>
/**
 * Model SampleProduction
 * 
 */
export type SampleProduction = $Result.DefaultSelection<Prisma.$SampleProductionPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderProduction
 * 
 */
export type OrderProduction = $Result.DefaultSelection<Prisma.$OrderProductionPayload>
/**
 * Model Question
 * 
 */
export type Question = $Result.DefaultSelection<Prisma.$QuestionPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model File
 * 
 */
export type File = $Result.DefaultSelection<Prisma.$FilePayload>
/**
 * Model ProductionStageUpdate
 * 
 */
export type ProductionStageUpdate = $Result.DefaultSelection<Prisma.$ProductionStageUpdatePayload>
/**
 * Model QualityControl
 * 
 */
export type QualityControl = $Result.DefaultSelection<Prisma.$QualityControlPayload>
/**
 * Model Workshop
 * 
 */
export type Workshop = $Result.DefaultSelection<Prisma.$WorkshopPayload>
/**
 * Model Color
 * 
 */
export type Color = $Result.DefaultSelection<Prisma.$ColorPayload>
/**
 * Model Fabric
 * 
 */
export type Fabric = $Result.DefaultSelection<Prisma.$FabricPayload>
/**
 * Model SizeGroup
 * 
 */
export type SizeGroup = $Result.DefaultSelection<Prisma.$SizeGroupPayload>
/**
 * Model SeasonItem
 * 
 */
export type SeasonItem = $Result.DefaultSelection<Prisma.$SeasonItemPayload>
/**
 * Model FitItem
 * 
 */
export type FitItem = $Result.DefaultSelection<Prisma.$FitItemPayload>
/**
 * Model Certification
 * 
 */
export type Certification = $Result.DefaultSelection<Prisma.$CertificationPayload>
/**
 * Model ProductionRevision
 * 
 */
export type ProductionRevision = $Result.DefaultSelection<Prisma.$ProductionRevisionPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model Task
 * 
 */
export type Task = $Result.DefaultSelection<Prisma.$TaskPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  ADMIN: 'ADMIN',
  COMPANY_OWNER: 'COMPANY_OWNER',
  COMPANY_EMPLOYEE: 'COMPANY_EMPLOYEE',
  INDIVIDUAL_CUSTOMER: 'INDIVIDUAL_CUSTOMER',
  MANUFACTURE: 'MANUFACTURE',
  CUSTOMER: 'CUSTOMER'
};

export type Role = (typeof Role)[keyof typeof Role]


export const Department: {
  PURCHASING: 'PURCHASING',
  PRODUCTION: 'PRODUCTION',
  QUALITY: 'QUALITY',
  DESIGN: 'DESIGN',
  SALES: 'SALES',
  MANAGEMENT: 'MANAGEMENT'
};

export type Department = (typeof Department)[keyof typeof Department]


export const CompanyType: {
  MANUFACTURER: 'MANUFACTURER',
  BUYER: 'BUYER',
  BOTH: 'BOTH'
};

export type CompanyType = (typeof CompanyType)[keyof typeof CompanyType]


export const SubscriptionPlan: {
  FREE: 'FREE',
  STARTER: 'STARTER',
  PROFESSIONAL: 'PROFESSIONAL',
  ENTERPRISE: 'ENTERPRISE',
  CUSTOM: 'CUSTOM'
};

export type SubscriptionPlan = (typeof SubscriptionPlan)[keyof typeof SubscriptionPlan]


export const SubscriptionStatus: {
  TRIAL: 'TRIAL',
  ACTIVE: 'ACTIVE',
  PAST_DUE: 'PAST_DUE',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

export type SubscriptionStatus = (typeof SubscriptionStatus)[keyof typeof SubscriptionStatus]


export const BillingCycle: {
  MONTHLY: 'MONTHLY',
  YEARLY: 'YEARLY'
};

export type BillingCycle = (typeof BillingCycle)[keyof typeof BillingCycle]


export const Season: {
  SS25: 'SS25',
  FW25: 'FW25',
  SS26: 'SS26',
  FW26: 'FW26',
  SS27: 'SS27',
  FW27: 'FW27'
};

export type Season = (typeof Season)[keyof typeof Season]


export const Gender: {
  WOMEN: 'WOMEN',
  MEN: 'MEN',
  GIRLS: 'GIRLS',
  BOYS: 'BOYS',
  UNISEX: 'UNISEX'
};

export type Gender = (typeof Gender)[keyof typeof Gender]


export const Fit: {
  REGULAR: 'REGULAR',
  SLIM: 'SLIM',
  RELAXED: 'RELAXED',
  OVERSIZED: 'OVERSIZED',
  FITTED: 'FITTED',
  LOOSE: 'LOOSE'
};

export type Fit = (typeof Fit)[keyof typeof Fit]


export const SampleType: {
  STANDARD: 'STANDARD',
  REVISION: 'REVISION',
  CUSTOM: 'CUSTOM',
  DEVELOPMENT: 'DEVELOPMENT'
};

export type SampleType = (typeof SampleType)[keyof typeof SampleType]


export const SampleStatus: {
  AI_DESIGN: 'AI_DESIGN',
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  PENDING: 'PENDING',
  REVIEWED: 'REVIEWED',
  QUOTE_SENT: 'QUOTE_SENT',
  CUSTOMER_QUOTE_SENT: 'CUSTOMER_QUOTE_SENT',
  MANUFACTURER_REVIEWING_QUOTE: 'MANUFACTURER_REVIEWING_QUOTE',
  CONFIRMED: 'CONFIRMED',
  REJECTED: 'REJECTED',
  REJECTED_BY_CUSTOMER: 'REJECTED_BY_CUSTOMER',
  REJECTED_BY_MANUFACTURER: 'REJECTED_BY_MANUFACTURER',
  IN_DESIGN: 'IN_DESIGN',
  PATTERN_READY: 'PATTERN_READY',
  IN_PRODUCTION: 'IN_PRODUCTION',
  PRODUCTION_COMPLETE: 'PRODUCTION_COMPLETE',
  QUALITY_CHECK: 'QUALITY_CHECK',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  ON_HOLD: 'ON_HOLD',
  CANCELLED: 'CANCELLED',
  REQUESTED: 'REQUESTED',
  RECEIVED: 'RECEIVED',
  COMPLETED: 'COMPLETED'
};

export type SampleStatus = (typeof SampleStatus)[keyof typeof SampleStatus]


export const OrderStatus: {
  PENDING: 'PENDING',
  REVIEWED: 'REVIEWED',
  QUOTE_SENT: 'QUOTE_SENT',
  CUSTOMER_QUOTE_SENT: 'CUSTOMER_QUOTE_SENT',
  MANUFACTURER_REVIEWING_QUOTE: 'MANUFACTURER_REVIEWING_QUOTE',
  CONFIRMED: 'CONFIRMED',
  REJECTED: 'REJECTED',
  REJECTED_BY_CUSTOMER: 'REJECTED_BY_CUSTOMER',
  REJECTED_BY_MANUFACTURER: 'REJECTED_BY_MANUFACTURER',
  IN_PRODUCTION: 'IN_PRODUCTION',
  PRODUCTION_COMPLETE: 'PRODUCTION_COMPLETE',
  QUALITY_CHECK: 'QUALITY_CHECK',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const CertificationCategory: {
  FIBER: 'FIBER',
  CHEMICAL: 'CHEMICAL',
  SOCIAL: 'SOCIAL',
  ENVIRONMENTAL: 'ENVIRONMENTAL',
  TRACEABILITY: 'TRACEABILITY'
};

export type CertificationCategory = (typeof CertificationCategory)[keyof typeof CertificationCategory]


export const ProductionStage: {
  PLANNING: 'PLANNING',
  FABRIC: 'FABRIC',
  CUTTING: 'CUTTING',
  SEWING: 'SEWING',
  QUALITY: 'QUALITY',
  PACKAGING: 'PACKAGING',
  SHIPPING: 'SHIPPING'
};

export type ProductionStage = (typeof ProductionStage)[keyof typeof ProductionStage]


export const StageStatus: {
  NOT_STARTED: 'NOT_STARTED',
  IN_PROGRESS: 'IN_PROGRESS',
  ON_HOLD: 'ON_HOLD',
  COMPLETED: 'COMPLETED',
  REQUIRES_REVISION: 'REQUIRES_REVISION'
};

export type StageStatus = (typeof StageStatus)[keyof typeof StageStatus]


export const ProductionStatus: {
  IN_PROGRESS: 'IN_PROGRESS',
  WAITING: 'WAITING',
  BLOCKED: 'BLOCKED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type ProductionStatus = (typeof ProductionStatus)[keyof typeof ProductionStatus]


export const QualityResult: {
  PENDING: 'PENDING',
  PASSED: 'PASSED',
  FAILED: 'FAILED',
  CONDITIONAL_PASS: 'CONDITIONAL_PASS'
};

export type QualityResult = (typeof QualityResult)[keyof typeof QualityResult]


export const WorkshopType: {
  SEWING: 'SEWING',
  PACKAGING: 'PACKAGING',
  QUALITY_CONTROL: 'QUALITY_CONTROL',
  GENERAL: 'GENERAL'
};

export type WorkshopType = (typeof WorkshopType)[keyof typeof WorkshopType]


export const NotificationType: {
  ORDER: 'ORDER',
  SAMPLE: 'SAMPLE',
  MESSAGE: 'MESSAGE',
  PRODUCTION: 'PRODUCTION',
  QUALITY: 'QUALITY',
  SYSTEM: 'SYSTEM'
};

export type NotificationType = (typeof NotificationType)[keyof typeof NotificationType]


export const TaskStatus: {
  TODO: 'TODO',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type TaskStatus = (typeof TaskStatus)[keyof typeof TaskStatus]


export const TaskPriority: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH'
};

export type TaskPriority = (typeof TaskPriority)[keyof typeof TaskPriority]


export const TaskType: {
  STATUS_CHANGE: 'STATUS_CHANGE',
  QUOTATION: 'QUOTATION',
  REVIEW_QUOTE: 'REVIEW_QUOTE',
  APPROVE_REJECT: 'APPROVE_REJECT',
  PAYMENT: 'PAYMENT',
  DOCUMENT: 'DOCUMENT',
  PRODUCTION_STAGE: 'PRODUCTION_STAGE',
  QUALITY_CHECK: 'QUALITY_CHECK',
  SHIPMENT: 'SHIPMENT',
  MATERIAL: 'MATERIAL',
  MEETING: 'MEETING',
  REVISION: 'REVISION',
  NOTIFICATION: 'NOTIFICATION',
  DEADLINE_WARNING: 'DEADLINE_WARNING',
  OTHER: 'OTHER'
};

export type TaskType = (typeof TaskType)[keyof typeof TaskType]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type Department = $Enums.Department

export const Department: typeof $Enums.Department

export type CompanyType = $Enums.CompanyType

export const CompanyType: typeof $Enums.CompanyType

export type SubscriptionPlan = $Enums.SubscriptionPlan

export const SubscriptionPlan: typeof $Enums.SubscriptionPlan

export type SubscriptionStatus = $Enums.SubscriptionStatus

export const SubscriptionStatus: typeof $Enums.SubscriptionStatus

export type BillingCycle = $Enums.BillingCycle

export const BillingCycle: typeof $Enums.BillingCycle

export type Season = $Enums.Season

export const Season: typeof $Enums.Season

export type Gender = $Enums.Gender

export const Gender: typeof $Enums.Gender

export type Fit = $Enums.Fit

export const Fit: typeof $Enums.Fit

export type SampleType = $Enums.SampleType

export const SampleType: typeof $Enums.SampleType

export type SampleStatus = $Enums.SampleStatus

export const SampleStatus: typeof $Enums.SampleStatus

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type CertificationCategory = $Enums.CertificationCategory

export const CertificationCategory: typeof $Enums.CertificationCategory

export type ProductionStage = $Enums.ProductionStage

export const ProductionStage: typeof $Enums.ProductionStage

export type StageStatus = $Enums.StageStatus

export const StageStatus: typeof $Enums.StageStatus

export type ProductionStatus = $Enums.ProductionStatus

export const ProductionStatus: typeof $Enums.ProductionStatus

export type QualityResult = $Enums.QualityResult

export const QualityResult: typeof $Enums.QualityResult

export type WorkshopType = $Enums.WorkshopType

export const WorkshopType: typeof $Enums.WorkshopType

export type NotificationType = $Enums.NotificationType

export const NotificationType: typeof $Enums.NotificationType

export type TaskStatus = $Enums.TaskStatus

export const TaskStatus: typeof $Enums.TaskStatus

export type TaskPriority = $Enums.TaskPriority

export const TaskPriority: typeof $Enums.TaskPriority

export type TaskType = $Enums.TaskType

export const TaskType: typeof $Enums.TaskType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Companies
 * const companies = await prisma.company.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Companies
   * const companies = await prisma.company.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productionTracking`: Exposes CRUD operations for the **ProductionTracking** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductionTrackings
    * const productionTrackings = await prisma.productionTracking.findMany()
    * ```
    */
  get productionTracking(): Prisma.ProductionTrackingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.revision`: Exposes CRUD operations for the **Revision** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Revisions
    * const revisions = await prisma.revision.findMany()
    * ```
    */
  get revision(): Prisma.RevisionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.collection`: Exposes CRUD operations for the **Collection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections
    * const collections = await prisma.collection.findMany()
    * ```
    */
  get collection(): Prisma.CollectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userFavoriteCollection`: Exposes CRUD operations for the **UserFavoriteCollection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserFavoriteCollections
    * const userFavoriteCollections = await prisma.userFavoriteCollection.findMany()
    * ```
    */
  get userFavoriteCollection(): Prisma.UserFavoriteCollectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sample`: Exposes CRUD operations for the **Sample** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Samples
    * const samples = await prisma.sample.findMany()
    * ```
    */
  get sample(): Prisma.SampleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aIAnalysis`: Exposes CRUD operations for the **AIAnalysis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AIAnalyses
    * const aIAnalyses = await prisma.aIAnalysis.findMany()
    * ```
    */
  get aIAnalysis(): Prisma.AIAnalysisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sampleProduction`: Exposes CRUD operations for the **SampleProduction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SampleProductions
    * const sampleProductions = await prisma.sampleProduction.findMany()
    * ```
    */
  get sampleProduction(): Prisma.SampleProductionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderProduction`: Exposes CRUD operations for the **OrderProduction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderProductions
    * const orderProductions = await prisma.orderProduction.findMany()
    * ```
    */
  get orderProduction(): Prisma.OrderProductionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.question`: Exposes CRUD operations for the **Question** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Questions
    * const questions = await prisma.question.findMany()
    * ```
    */
  get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.file`: Exposes CRUD operations for the **File** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Files
    * const files = await prisma.file.findMany()
    * ```
    */
  get file(): Prisma.FileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productionStageUpdate`: Exposes CRUD operations for the **ProductionStageUpdate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductionStageUpdates
    * const productionStageUpdates = await prisma.productionStageUpdate.findMany()
    * ```
    */
  get productionStageUpdate(): Prisma.ProductionStageUpdateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.qualityControl`: Exposes CRUD operations for the **QualityControl** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QualityControls
    * const qualityControls = await prisma.qualityControl.findMany()
    * ```
    */
  get qualityControl(): Prisma.QualityControlDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.workshop`: Exposes CRUD operations for the **Workshop** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Workshops
    * const workshops = await prisma.workshop.findMany()
    * ```
    */
  get workshop(): Prisma.WorkshopDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.color`: Exposes CRUD operations for the **Color** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Colors
    * const colors = await prisma.color.findMany()
    * ```
    */
  get color(): Prisma.ColorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fabric`: Exposes CRUD operations for the **Fabric** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fabrics
    * const fabrics = await prisma.fabric.findMany()
    * ```
    */
  get fabric(): Prisma.FabricDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sizeGroup`: Exposes CRUD operations for the **SizeGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SizeGroups
    * const sizeGroups = await prisma.sizeGroup.findMany()
    * ```
    */
  get sizeGroup(): Prisma.SizeGroupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seasonItem`: Exposes CRUD operations for the **SeasonItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SeasonItems
    * const seasonItems = await prisma.seasonItem.findMany()
    * ```
    */
  get seasonItem(): Prisma.SeasonItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fitItem`: Exposes CRUD operations for the **FitItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FitItems
    * const fitItems = await prisma.fitItem.findMany()
    * ```
    */
  get fitItem(): Prisma.FitItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.certification`: Exposes CRUD operations for the **Certification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Certifications
    * const certifications = await prisma.certification.findMany()
    * ```
    */
  get certification(): Prisma.CertificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productionRevision`: Exposes CRUD operations for the **ProductionRevision** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductionRevisions
    * const productionRevisions = await prisma.productionRevision.findMany()
    * ```
    */
  get productionRevision(): Prisma.ProductionRevisionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.task`: Exposes CRUD operations for the **Task** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tasks
    * const tasks = await prisma.task.findMany()
    * ```
    */
  get task(): Prisma.TaskDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.17.1
   * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Company: 'Company',
    Message: 'Message',
    ProductionTracking: 'ProductionTracking',
    Revision: 'Revision',
    User: 'User',
    Category: 'Category',
    Collection: 'Collection',
    UserFavoriteCollection: 'UserFavoriteCollection',
    Sample: 'Sample',
    AIAnalysis: 'AIAnalysis',
    SampleProduction: 'SampleProduction',
    Order: 'Order',
    OrderProduction: 'OrderProduction',
    Question: 'Question',
    Review: 'Review',
    File: 'File',
    ProductionStageUpdate: 'ProductionStageUpdate',
    QualityControl: 'QualityControl',
    Workshop: 'Workshop',
    Color: 'Color',
    Fabric: 'Fabric',
    SizeGroup: 'SizeGroup',
    SeasonItem: 'SeasonItem',
    FitItem: 'FitItem',
    Certification: 'Certification',
    ProductionRevision: 'ProductionRevision',
    Notification: 'Notification',
    Task: 'Task'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "company" | "message" | "productionTracking" | "revision" | "user" | "category" | "collection" | "userFavoriteCollection" | "sample" | "aIAnalysis" | "sampleProduction" | "order" | "orderProduction" | "question" | "review" | "file" | "productionStageUpdate" | "qualityControl" | "workshop" | "color" | "fabric" | "sizeGroup" | "seasonItem" | "fitItem" | "certification" | "productionRevision" | "notification" | "task"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      ProductionTracking: {
        payload: Prisma.$ProductionTrackingPayload<ExtArgs>
        fields: Prisma.ProductionTrackingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductionTrackingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductionTrackingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload>
          }
          findFirst: {
            args: Prisma.ProductionTrackingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductionTrackingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload>
          }
          findMany: {
            args: Prisma.ProductionTrackingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload>[]
          }
          create: {
            args: Prisma.ProductionTrackingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload>
          }
          createMany: {
            args: Prisma.ProductionTrackingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductionTrackingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload>
          }
          update: {
            args: Prisma.ProductionTrackingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload>
          }
          deleteMany: {
            args: Prisma.ProductionTrackingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductionTrackingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductionTrackingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionTrackingPayload>
          }
          aggregate: {
            args: Prisma.ProductionTrackingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductionTracking>
          }
          groupBy: {
            args: Prisma.ProductionTrackingGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductionTrackingGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductionTrackingCountArgs<ExtArgs>
            result: $Utils.Optional<ProductionTrackingCountAggregateOutputType> | number
          }
        }
      }
      Revision: {
        payload: Prisma.$RevisionPayload<ExtArgs>
        fields: Prisma.RevisionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RevisionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RevisionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload>
          }
          findFirst: {
            args: Prisma.RevisionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RevisionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload>
          }
          findMany: {
            args: Prisma.RevisionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload>[]
          }
          create: {
            args: Prisma.RevisionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload>
          }
          createMany: {
            args: Prisma.RevisionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RevisionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload>
          }
          update: {
            args: Prisma.RevisionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload>
          }
          deleteMany: {
            args: Prisma.RevisionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RevisionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RevisionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RevisionPayload>
          }
          aggregate: {
            args: Prisma.RevisionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRevision>
          }
          groupBy: {
            args: Prisma.RevisionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RevisionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RevisionCountArgs<ExtArgs>
            result: $Utils.Optional<RevisionCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Collection: {
        payload: Prisma.$CollectionPayload<ExtArgs>
        fields: Prisma.CollectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CollectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CollectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          findFirst: {
            args: Prisma.CollectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CollectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          findMany: {
            args: Prisma.CollectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>[]
          }
          create: {
            args: Prisma.CollectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          createMany: {
            args: Prisma.CollectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CollectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          update: {
            args: Prisma.CollectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          deleteMany: {
            args: Prisma.CollectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CollectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CollectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CollectionPayload>
          }
          aggregate: {
            args: Prisma.CollectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCollection>
          }
          groupBy: {
            args: Prisma.CollectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CollectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CollectionCountArgs<ExtArgs>
            result: $Utils.Optional<CollectionCountAggregateOutputType> | number
          }
        }
      }
      UserFavoriteCollection: {
        payload: Prisma.$UserFavoriteCollectionPayload<ExtArgs>
        fields: Prisma.UserFavoriteCollectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFavoriteCollectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFavoriteCollectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload>
          }
          findFirst: {
            args: Prisma.UserFavoriteCollectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFavoriteCollectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload>
          }
          findMany: {
            args: Prisma.UserFavoriteCollectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload>[]
          }
          create: {
            args: Prisma.UserFavoriteCollectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload>
          }
          createMany: {
            args: Prisma.UserFavoriteCollectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserFavoriteCollectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload>
          }
          update: {
            args: Prisma.UserFavoriteCollectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload>
          }
          deleteMany: {
            args: Prisma.UserFavoriteCollectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserFavoriteCollectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserFavoriteCollectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserFavoriteCollectionPayload>
          }
          aggregate: {
            args: Prisma.UserFavoriteCollectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserFavoriteCollection>
          }
          groupBy: {
            args: Prisma.UserFavoriteCollectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserFavoriteCollectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserFavoriteCollectionCountArgs<ExtArgs>
            result: $Utils.Optional<UserFavoriteCollectionCountAggregateOutputType> | number
          }
        }
      }
      Sample: {
        payload: Prisma.$SamplePayload<ExtArgs>
        fields: Prisma.SampleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SampleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SampleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload>
          }
          findFirst: {
            args: Prisma.SampleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SampleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload>
          }
          findMany: {
            args: Prisma.SampleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload>[]
          }
          create: {
            args: Prisma.SampleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload>
          }
          createMany: {
            args: Prisma.SampleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SampleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload>
          }
          update: {
            args: Prisma.SampleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload>
          }
          deleteMany: {
            args: Prisma.SampleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SampleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SampleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SamplePayload>
          }
          aggregate: {
            args: Prisma.SampleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSample>
          }
          groupBy: {
            args: Prisma.SampleGroupByArgs<ExtArgs>
            result: $Utils.Optional<SampleGroupByOutputType>[]
          }
          count: {
            args: Prisma.SampleCountArgs<ExtArgs>
            result: $Utils.Optional<SampleCountAggregateOutputType> | number
          }
        }
      }
      AIAnalysis: {
        payload: Prisma.$AIAnalysisPayload<ExtArgs>
        fields: Prisma.AIAnalysisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AIAnalysisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AIAnalysisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload>
          }
          findFirst: {
            args: Prisma.AIAnalysisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AIAnalysisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload>
          }
          findMany: {
            args: Prisma.AIAnalysisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload>[]
          }
          create: {
            args: Prisma.AIAnalysisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload>
          }
          createMany: {
            args: Prisma.AIAnalysisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AIAnalysisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload>
          }
          update: {
            args: Prisma.AIAnalysisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload>
          }
          deleteMany: {
            args: Prisma.AIAnalysisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AIAnalysisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AIAnalysisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIAnalysisPayload>
          }
          aggregate: {
            args: Prisma.AIAnalysisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAIAnalysis>
          }
          groupBy: {
            args: Prisma.AIAnalysisGroupByArgs<ExtArgs>
            result: $Utils.Optional<AIAnalysisGroupByOutputType>[]
          }
          count: {
            args: Prisma.AIAnalysisCountArgs<ExtArgs>
            result: $Utils.Optional<AIAnalysisCountAggregateOutputType> | number
          }
        }
      }
      SampleProduction: {
        payload: Prisma.$SampleProductionPayload<ExtArgs>
        fields: Prisma.SampleProductionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SampleProductionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SampleProductionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload>
          }
          findFirst: {
            args: Prisma.SampleProductionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SampleProductionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload>
          }
          findMany: {
            args: Prisma.SampleProductionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload>[]
          }
          create: {
            args: Prisma.SampleProductionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload>
          }
          createMany: {
            args: Prisma.SampleProductionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SampleProductionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload>
          }
          update: {
            args: Prisma.SampleProductionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload>
          }
          deleteMany: {
            args: Prisma.SampleProductionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SampleProductionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SampleProductionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SampleProductionPayload>
          }
          aggregate: {
            args: Prisma.SampleProductionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSampleProduction>
          }
          groupBy: {
            args: Prisma.SampleProductionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SampleProductionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SampleProductionCountArgs<ExtArgs>
            result: $Utils.Optional<SampleProductionCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderProduction: {
        payload: Prisma.$OrderProductionPayload<ExtArgs>
        fields: Prisma.OrderProductionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderProductionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderProductionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload>
          }
          findFirst: {
            args: Prisma.OrderProductionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderProductionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload>
          }
          findMany: {
            args: Prisma.OrderProductionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload>[]
          }
          create: {
            args: Prisma.OrderProductionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload>
          }
          createMany: {
            args: Prisma.OrderProductionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderProductionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload>
          }
          update: {
            args: Prisma.OrderProductionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload>
          }
          deleteMany: {
            args: Prisma.OrderProductionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderProductionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderProductionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderProductionPayload>
          }
          aggregate: {
            args: Prisma.OrderProductionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderProduction>
          }
          groupBy: {
            args: Prisma.OrderProductionGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderProductionGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderProductionCountArgs<ExtArgs>
            result: $Utils.Optional<OrderProductionCountAggregateOutputType> | number
          }
        }
      }
      Question: {
        payload: Prisma.$QuestionPayload<ExtArgs>
        fields: Prisma.QuestionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QuestionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QuestionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload>
          }
          findFirst: {
            args: Prisma.QuestionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QuestionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload>
          }
          findMany: {
            args: Prisma.QuestionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload>[]
          }
          create: {
            args: Prisma.QuestionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload>
          }
          createMany: {
            args: Prisma.QuestionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.QuestionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload>
          }
          update: {
            args: Prisma.QuestionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload>
          }
          deleteMany: {
            args: Prisma.QuestionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QuestionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.QuestionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuestionPayload>
          }
          aggregate: {
            args: Prisma.QuestionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuestion>
          }
          groupBy: {
            args: Prisma.QuestionGroupByArgs<ExtArgs>
            result: $Utils.Optional<QuestionGroupByOutputType>[]
          }
          count: {
            args: Prisma.QuestionCountArgs<ExtArgs>
            result: $Utils.Optional<QuestionCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      File: {
        payload: Prisma.$FilePayload<ExtArgs>
        fields: Prisma.FileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          findFirst: {
            args: Prisma.FileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          findMany: {
            args: Prisma.FileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>[]
          }
          create: {
            args: Prisma.FileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          createMany: {
            args: Prisma.FileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          update: {
            args: Prisma.FileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          deleteMany: {
            args: Prisma.FileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          aggregate: {
            args: Prisma.FileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFile>
          }
          groupBy: {
            args: Prisma.FileGroupByArgs<ExtArgs>
            result: $Utils.Optional<FileGroupByOutputType>[]
          }
          count: {
            args: Prisma.FileCountArgs<ExtArgs>
            result: $Utils.Optional<FileCountAggregateOutputType> | number
          }
        }
      }
      ProductionStageUpdate: {
        payload: Prisma.$ProductionStageUpdatePayload<ExtArgs>
        fields: Prisma.ProductionStageUpdateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductionStageUpdateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductionStageUpdateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload>
          }
          findFirst: {
            args: Prisma.ProductionStageUpdateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductionStageUpdateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload>
          }
          findMany: {
            args: Prisma.ProductionStageUpdateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload>[]
          }
          create: {
            args: Prisma.ProductionStageUpdateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload>
          }
          createMany: {
            args: Prisma.ProductionStageUpdateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductionStageUpdateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload>
          }
          update: {
            args: Prisma.ProductionStageUpdateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload>
          }
          deleteMany: {
            args: Prisma.ProductionStageUpdateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductionStageUpdateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductionStageUpdateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionStageUpdatePayload>
          }
          aggregate: {
            args: Prisma.ProductionStageUpdateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductionStageUpdate>
          }
          groupBy: {
            args: Prisma.ProductionStageUpdateGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductionStageUpdateGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductionStageUpdateCountArgs<ExtArgs>
            result: $Utils.Optional<ProductionStageUpdateCountAggregateOutputType> | number
          }
        }
      }
      QualityControl: {
        payload: Prisma.$QualityControlPayload<ExtArgs>
        fields: Prisma.QualityControlFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QualityControlFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QualityControlFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload>
          }
          findFirst: {
            args: Prisma.QualityControlFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QualityControlFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload>
          }
          findMany: {
            args: Prisma.QualityControlFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload>[]
          }
          create: {
            args: Prisma.QualityControlCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload>
          }
          createMany: {
            args: Prisma.QualityControlCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.QualityControlDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload>
          }
          update: {
            args: Prisma.QualityControlUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload>
          }
          deleteMany: {
            args: Prisma.QualityControlDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QualityControlUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.QualityControlUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualityControlPayload>
          }
          aggregate: {
            args: Prisma.QualityControlAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualityControl>
          }
          groupBy: {
            args: Prisma.QualityControlGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualityControlGroupByOutputType>[]
          }
          count: {
            args: Prisma.QualityControlCountArgs<ExtArgs>
            result: $Utils.Optional<QualityControlCountAggregateOutputType> | number
          }
        }
      }
      Workshop: {
        payload: Prisma.$WorkshopPayload<ExtArgs>
        fields: Prisma.WorkshopFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WorkshopFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WorkshopFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload>
          }
          findFirst: {
            args: Prisma.WorkshopFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WorkshopFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload>
          }
          findMany: {
            args: Prisma.WorkshopFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload>[]
          }
          create: {
            args: Prisma.WorkshopCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload>
          }
          createMany: {
            args: Prisma.WorkshopCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WorkshopDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload>
          }
          update: {
            args: Prisma.WorkshopUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload>
          }
          deleteMany: {
            args: Prisma.WorkshopDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WorkshopUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WorkshopUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkshopPayload>
          }
          aggregate: {
            args: Prisma.WorkshopAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWorkshop>
          }
          groupBy: {
            args: Prisma.WorkshopGroupByArgs<ExtArgs>
            result: $Utils.Optional<WorkshopGroupByOutputType>[]
          }
          count: {
            args: Prisma.WorkshopCountArgs<ExtArgs>
            result: $Utils.Optional<WorkshopCountAggregateOutputType> | number
          }
        }
      }
      Color: {
        payload: Prisma.$ColorPayload<ExtArgs>
        fields: Prisma.ColorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ColorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ColorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          findFirst: {
            args: Prisma.ColorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ColorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          findMany: {
            args: Prisma.ColorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>[]
          }
          create: {
            args: Prisma.ColorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          createMany: {
            args: Prisma.ColorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ColorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          update: {
            args: Prisma.ColorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          deleteMany: {
            args: Prisma.ColorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ColorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ColorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          aggregate: {
            args: Prisma.ColorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateColor>
          }
          groupBy: {
            args: Prisma.ColorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ColorGroupByOutputType>[]
          }
          count: {
            args: Prisma.ColorCountArgs<ExtArgs>
            result: $Utils.Optional<ColorCountAggregateOutputType> | number
          }
        }
      }
      Fabric: {
        payload: Prisma.$FabricPayload<ExtArgs>
        fields: Prisma.FabricFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FabricFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FabricFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload>
          }
          findFirst: {
            args: Prisma.FabricFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FabricFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload>
          }
          findMany: {
            args: Prisma.FabricFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload>[]
          }
          create: {
            args: Prisma.FabricCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload>
          }
          createMany: {
            args: Prisma.FabricCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FabricDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload>
          }
          update: {
            args: Prisma.FabricUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload>
          }
          deleteMany: {
            args: Prisma.FabricDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FabricUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FabricUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FabricPayload>
          }
          aggregate: {
            args: Prisma.FabricAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFabric>
          }
          groupBy: {
            args: Prisma.FabricGroupByArgs<ExtArgs>
            result: $Utils.Optional<FabricGroupByOutputType>[]
          }
          count: {
            args: Prisma.FabricCountArgs<ExtArgs>
            result: $Utils.Optional<FabricCountAggregateOutputType> | number
          }
        }
      }
      SizeGroup: {
        payload: Prisma.$SizeGroupPayload<ExtArgs>
        fields: Prisma.SizeGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SizeGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SizeGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload>
          }
          findFirst: {
            args: Prisma.SizeGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SizeGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload>
          }
          findMany: {
            args: Prisma.SizeGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload>[]
          }
          create: {
            args: Prisma.SizeGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload>
          }
          createMany: {
            args: Prisma.SizeGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SizeGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload>
          }
          update: {
            args: Prisma.SizeGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload>
          }
          deleteMany: {
            args: Prisma.SizeGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SizeGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SizeGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SizeGroupPayload>
          }
          aggregate: {
            args: Prisma.SizeGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSizeGroup>
          }
          groupBy: {
            args: Prisma.SizeGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<SizeGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.SizeGroupCountArgs<ExtArgs>
            result: $Utils.Optional<SizeGroupCountAggregateOutputType> | number
          }
        }
      }
      SeasonItem: {
        payload: Prisma.$SeasonItemPayload<ExtArgs>
        fields: Prisma.SeasonItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeasonItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeasonItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload>
          }
          findFirst: {
            args: Prisma.SeasonItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeasonItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload>
          }
          findMany: {
            args: Prisma.SeasonItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload>[]
          }
          create: {
            args: Prisma.SeasonItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload>
          }
          createMany: {
            args: Prisma.SeasonItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SeasonItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload>
          }
          update: {
            args: Prisma.SeasonItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload>
          }
          deleteMany: {
            args: Prisma.SeasonItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeasonItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SeasonItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeasonItemPayload>
          }
          aggregate: {
            args: Prisma.SeasonItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeasonItem>
          }
          groupBy: {
            args: Prisma.SeasonItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeasonItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeasonItemCountArgs<ExtArgs>
            result: $Utils.Optional<SeasonItemCountAggregateOutputType> | number
          }
        }
      }
      FitItem: {
        payload: Prisma.$FitItemPayload<ExtArgs>
        fields: Prisma.FitItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FitItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FitItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload>
          }
          findFirst: {
            args: Prisma.FitItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FitItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload>
          }
          findMany: {
            args: Prisma.FitItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload>[]
          }
          create: {
            args: Prisma.FitItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload>
          }
          createMany: {
            args: Prisma.FitItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FitItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload>
          }
          update: {
            args: Prisma.FitItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload>
          }
          deleteMany: {
            args: Prisma.FitItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FitItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FitItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FitItemPayload>
          }
          aggregate: {
            args: Prisma.FitItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFitItem>
          }
          groupBy: {
            args: Prisma.FitItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<FitItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.FitItemCountArgs<ExtArgs>
            result: $Utils.Optional<FitItemCountAggregateOutputType> | number
          }
        }
      }
      Certification: {
        payload: Prisma.$CertificationPayload<ExtArgs>
        fields: Prisma.CertificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CertificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CertificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload>
          }
          findFirst: {
            args: Prisma.CertificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CertificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload>
          }
          findMany: {
            args: Prisma.CertificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload>[]
          }
          create: {
            args: Prisma.CertificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload>
          }
          createMany: {
            args: Prisma.CertificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CertificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload>
          }
          update: {
            args: Prisma.CertificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload>
          }
          deleteMany: {
            args: Prisma.CertificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CertificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CertificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificationPayload>
          }
          aggregate: {
            args: Prisma.CertificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCertification>
          }
          groupBy: {
            args: Prisma.CertificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<CertificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.CertificationCountArgs<ExtArgs>
            result: $Utils.Optional<CertificationCountAggregateOutputType> | number
          }
        }
      }
      ProductionRevision: {
        payload: Prisma.$ProductionRevisionPayload<ExtArgs>
        fields: Prisma.ProductionRevisionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductionRevisionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductionRevisionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload>
          }
          findFirst: {
            args: Prisma.ProductionRevisionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductionRevisionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload>
          }
          findMany: {
            args: Prisma.ProductionRevisionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload>[]
          }
          create: {
            args: Prisma.ProductionRevisionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload>
          }
          createMany: {
            args: Prisma.ProductionRevisionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductionRevisionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload>
          }
          update: {
            args: Prisma.ProductionRevisionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload>
          }
          deleteMany: {
            args: Prisma.ProductionRevisionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductionRevisionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductionRevisionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductionRevisionPayload>
          }
          aggregate: {
            args: Prisma.ProductionRevisionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductionRevision>
          }
          groupBy: {
            args: Prisma.ProductionRevisionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductionRevisionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductionRevisionCountArgs<ExtArgs>
            result: $Utils.Optional<ProductionRevisionCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      Task: {
        payload: Prisma.$TaskPayload<ExtArgs>
        fields: Prisma.TaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findFirst: {
            args: Prisma.TaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findMany: {
            args: Prisma.TaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          create: {
            args: Prisma.TaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          createMany: {
            args: Prisma.TaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          update: {
            args: Prisma.TaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          deleteMany: {
            args: Prisma.TaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          aggregate: {
            args: Prisma.TaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTask>
          }
          groupBy: {
            args: Prisma.TaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<TaskGroupByOutputType>[]
          }
          count: {
            args: Prisma.TaskCountArgs<ExtArgs>
            result: $Utils.Optional<TaskCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    company?: CompanyOmit
    message?: MessageOmit
    productionTracking?: ProductionTrackingOmit
    revision?: RevisionOmit
    user?: UserOmit
    category?: CategoryOmit
    collection?: CollectionOmit
    userFavoriteCollection?: UserFavoriteCollectionOmit
    sample?: SampleOmit
    aIAnalysis?: AIAnalysisOmit
    sampleProduction?: SampleProductionOmit
    order?: OrderOmit
    orderProduction?: OrderProductionOmit
    question?: QuestionOmit
    review?: ReviewOmit
    file?: FileOmit
    productionStageUpdate?: ProductionStageUpdateOmit
    qualityControl?: QualityControlOmit
    workshop?: WorkshopOmit
    color?: ColorOmit
    fabric?: FabricOmit
    sizeGroup?: SizeGroupOmit
    seasonItem?: SeasonItemOmit
    fitItem?: FitItemOmit
    certification?: CertificationOmit
    productionRevision?: ProductionRevisionOmit
    notification?: NotificationOmit
    task?: TaskOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    employees: number
    categories: number
    collections: number
    samples: number
    orders: number
    productionTracking: number
    messages: number
    colors: number
    fabrics: number
    sizeGroups: number
    seasons: number
    fits: number
    certifications: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | CompanyCountOutputTypeCountEmployeesArgs
    categories?: boolean | CompanyCountOutputTypeCountCategoriesArgs
    collections?: boolean | CompanyCountOutputTypeCountCollectionsArgs
    samples?: boolean | CompanyCountOutputTypeCountSamplesArgs
    orders?: boolean | CompanyCountOutputTypeCountOrdersArgs
    productionTracking?: boolean | CompanyCountOutputTypeCountProductionTrackingArgs
    messages?: boolean | CompanyCountOutputTypeCountMessagesArgs
    colors?: boolean | CompanyCountOutputTypeCountColorsArgs
    fabrics?: boolean | CompanyCountOutputTypeCountFabricsArgs
    sizeGroups?: boolean | CompanyCountOutputTypeCountSizeGroupsArgs
    seasons?: boolean | CompanyCountOutputTypeCountSeasonsArgs
    fits?: boolean | CompanyCountOutputTypeCountFitsArgs
    certifications?: boolean | CompanyCountOutputTypeCountCertificationsArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountEmployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountProductionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionTrackingWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountColorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ColorWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountFabricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FabricWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountSizeGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SizeGroupWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountSeasonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeasonItemWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountFitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FitItemWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountCertificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CertificationWhereInput
  }


  /**
   * Count Type ProductionTrackingCountOutputType
   */

  export type ProductionTrackingCountOutputType = {
    stageUpdates: number
    qualityControls: number
    productionRevisions: number
    revisions: number
    tasks: number
    notifications: number
  }

  export type ProductionTrackingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stageUpdates?: boolean | ProductionTrackingCountOutputTypeCountStageUpdatesArgs
    qualityControls?: boolean | ProductionTrackingCountOutputTypeCountQualityControlsArgs
    productionRevisions?: boolean | ProductionTrackingCountOutputTypeCountProductionRevisionsArgs
    revisions?: boolean | ProductionTrackingCountOutputTypeCountRevisionsArgs
    tasks?: boolean | ProductionTrackingCountOutputTypeCountTasksArgs
    notifications?: boolean | ProductionTrackingCountOutputTypeCountNotificationsArgs
  }

  // Custom InputTypes
  /**
   * ProductionTrackingCountOutputType without action
   */
  export type ProductionTrackingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTrackingCountOutputType
     */
    select?: ProductionTrackingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductionTrackingCountOutputType without action
   */
  export type ProductionTrackingCountOutputTypeCountStageUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionStageUpdateWhereInput
  }

  /**
   * ProductionTrackingCountOutputType without action
   */
  export type ProductionTrackingCountOutputTypeCountQualityControlsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualityControlWhereInput
  }

  /**
   * ProductionTrackingCountOutputType without action
   */
  export type ProductionTrackingCountOutputTypeCountProductionRevisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionRevisionWhereInput
  }

  /**
   * ProductionTrackingCountOutputType without action
   */
  export type ProductionTrackingCountOutputTypeCountRevisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RevisionWhereInput
  }

  /**
   * ProductionTrackingCountOutputType without action
   */
  export type ProductionTrackingCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * ProductionTrackingCountOutputType without action
   */
  export type ProductionTrackingCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    ownedCompanies: number
    sentMessages: number
    receivedMessages: number
    categories: number
    collections: number
    customerSamples: number
    customerOrders: number
    customerQuestions: number
    customerReviews: number
    manufactureSamples: number
    manufactureOrders: number
    manufactureQuestions: number
    sampleProductionUpdates: number
    orderProductionUpdates: number
    qualityInspections: number
    ownedWorkshops: number
    revisionRequests: number
    favoriteCollections: number
    notifications: number
    tasks: number
    assignedTasks: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ownedCompanies?: boolean | UserCountOutputTypeCountOwnedCompaniesArgs
    sentMessages?: boolean | UserCountOutputTypeCountSentMessagesArgs
    receivedMessages?: boolean | UserCountOutputTypeCountReceivedMessagesArgs
    categories?: boolean | UserCountOutputTypeCountCategoriesArgs
    collections?: boolean | UserCountOutputTypeCountCollectionsArgs
    customerSamples?: boolean | UserCountOutputTypeCountCustomerSamplesArgs
    customerOrders?: boolean | UserCountOutputTypeCountCustomerOrdersArgs
    customerQuestions?: boolean | UserCountOutputTypeCountCustomerQuestionsArgs
    customerReviews?: boolean | UserCountOutputTypeCountCustomerReviewsArgs
    manufactureSamples?: boolean | UserCountOutputTypeCountManufactureSamplesArgs
    manufactureOrders?: boolean | UserCountOutputTypeCountManufactureOrdersArgs
    manufactureQuestions?: boolean | UserCountOutputTypeCountManufactureQuestionsArgs
    sampleProductionUpdates?: boolean | UserCountOutputTypeCountSampleProductionUpdatesArgs
    orderProductionUpdates?: boolean | UserCountOutputTypeCountOrderProductionUpdatesArgs
    qualityInspections?: boolean | UserCountOutputTypeCountQualityInspectionsArgs
    ownedWorkshops?: boolean | UserCountOutputTypeCountOwnedWorkshopsArgs
    revisionRequests?: boolean | UserCountOutputTypeCountRevisionRequestsArgs
    favoriteCollections?: boolean | UserCountOutputTypeCountFavoriteCollectionsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    tasks?: boolean | UserCountOutputTypeCountTasksArgs
    assignedTasks?: boolean | UserCountOutputTypeCountAssignedTasksArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedCompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomerSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomerOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomerQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuestionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomerReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountManufactureSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountManufactureOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountManufactureQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuestionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSampleProductionUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleProductionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrderProductionUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderProductionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountQualityInspectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualityControlWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedWorkshopsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorkshopWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRevisionRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionRevisionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFavoriteCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserFavoriteCollectionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAssignedTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    collections: number
    subCategories: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | CategoryCountOutputTypeCountCollectionsArgs
    subCategories?: boolean | CategoryCountOutputTypeCountSubCategoriesArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountSubCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }


  /**
   * Count Type CollectionCountOutputType
   */

  export type CollectionCountOutputType = {
    certifications: number
    favoritedBy: number
    samples: number
    revisedSamples: number
    orders: number
    questions: number
    reviews: number
    tasks: number
  }

  export type CollectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    certifications?: boolean | CollectionCountOutputTypeCountCertificationsArgs
    favoritedBy?: boolean | CollectionCountOutputTypeCountFavoritedByArgs
    samples?: boolean | CollectionCountOutputTypeCountSamplesArgs
    revisedSamples?: boolean | CollectionCountOutputTypeCountRevisedSamplesArgs
    orders?: boolean | CollectionCountOutputTypeCountOrdersArgs
    questions?: boolean | CollectionCountOutputTypeCountQuestionsArgs
    reviews?: boolean | CollectionCountOutputTypeCountReviewsArgs
    tasks?: boolean | CollectionCountOutputTypeCountTasksArgs
  }

  // Custom InputTypes
  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionCountOutputType
     */
    select?: CollectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountCertificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CertificationWhereInput
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountFavoritedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserFavoriteCollectionWhereInput
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleWhereInput
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountRevisedSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleWhereInput
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuestionWhereInput
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * CollectionCountOutputType without action
   */
  export type CollectionCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }


  /**
   * Count Type SampleCountOutputType
   */

  export type SampleCountOutputType = {
    productionHistory: number
    productionTracking: number
    revisions: number
    messages: number
    tasks: number
    notifications: number
  }

  export type SampleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productionHistory?: boolean | SampleCountOutputTypeCountProductionHistoryArgs
    productionTracking?: boolean | SampleCountOutputTypeCountProductionTrackingArgs
    revisions?: boolean | SampleCountOutputTypeCountRevisionsArgs
    messages?: boolean | SampleCountOutputTypeCountMessagesArgs
    tasks?: boolean | SampleCountOutputTypeCountTasksArgs
    notifications?: boolean | SampleCountOutputTypeCountNotificationsArgs
  }

  // Custom InputTypes
  /**
   * SampleCountOutputType without action
   */
  export type SampleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleCountOutputType
     */
    select?: SampleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SampleCountOutputType without action
   */
  export type SampleCountOutputTypeCountProductionHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleProductionWhereInput
  }

  /**
   * SampleCountOutputType without action
   */
  export type SampleCountOutputTypeCountProductionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionTrackingWhereInput
  }

  /**
   * SampleCountOutputType without action
   */
  export type SampleCountOutputTypeCountRevisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RevisionWhereInput
  }

  /**
   * SampleCountOutputType without action
   */
  export type SampleCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * SampleCountOutputType without action
   */
  export type SampleCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * SampleCountOutputType without action
   */
  export type SampleCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    productionHistory: number
    productionTracking: number
    revisions: number
    messages: number
    tasks: number
    notifications: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productionHistory?: boolean | OrderCountOutputTypeCountProductionHistoryArgs
    productionTracking?: boolean | OrderCountOutputTypeCountProductionTrackingArgs
    revisions?: boolean | OrderCountOutputTypeCountRevisionsArgs
    messages?: boolean | OrderCountOutputTypeCountMessagesArgs
    tasks?: boolean | OrderCountOutputTypeCountTasksArgs
    notifications?: boolean | OrderCountOutputTypeCountNotificationsArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountProductionHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderProductionWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountProductionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionTrackingWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountRevisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RevisionWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type WorkshopCountOutputType
   */

  export type WorkshopCountOutputType = {
    sewingProductions: number
    packagingProductions: number
  }

  export type WorkshopCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sewingProductions?: boolean | WorkshopCountOutputTypeCountSewingProductionsArgs
    packagingProductions?: boolean | WorkshopCountOutputTypeCountPackagingProductionsArgs
  }

  // Custom InputTypes
  /**
   * WorkshopCountOutputType without action
   */
  export type WorkshopCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkshopCountOutputType
     */
    select?: WorkshopCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WorkshopCountOutputType without action
   */
  export type WorkshopCountOutputTypeCountSewingProductionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionTrackingWhereInput
  }

  /**
   * WorkshopCountOutputType without action
   */
  export type WorkshopCountOutputTypeCountPackagingProductionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionTrackingWhereInput
  }


  /**
   * Count Type CertificationCountOutputType
   */

  export type CertificationCountOutputType = {
    collections: number
  }

  export type CertificationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | CertificationCountOutputTypeCountCollectionsArgs
  }

  // Custom InputTypes
  /**
   * CertificationCountOutputType without action
   */
  export type CertificationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CertificationCountOutputType
     */
    select?: CertificationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CertificationCountOutputType without action
   */
  export type CertificationCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    id: number | null
    ownerId: number | null
    maxUsers: number | null
    maxSamples: number | null
    maxOrders: number | null
    maxCollections: number | null
    maxStorageGB: number | null
    currentUsers: number | null
    currentSamples: number | null
    currentOrders: number | null
    currentCollections: number | null
    currentStorageGB: number | null
  }

  export type CompanySumAggregateOutputType = {
    id: number | null
    ownerId: number | null
    maxUsers: number | null
    maxSamples: number | null
    maxOrders: number | null
    maxCollections: number | null
    maxStorageGB: number | null
    currentUsers: number | null
    currentSamples: number | null
    currentOrders: number | null
    currentCollections: number | null
    currentStorageGB: number | null
  }

  export type CompanyMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    address: string | null
    location: string | null
    website: string | null
    type: $Enums.CompanyType | null
    description: string | null
    ownerId: number | null
    isActive: boolean | null
    logo: string | null
    coverImage: string | null
    isPublicProfile: boolean | null
    profileSlug: string | null
    subscriptionPlan: $Enums.SubscriptionPlan | null
    subscriptionStatus: $Enums.SubscriptionStatus | null
    billingCycle: $Enums.BillingCycle | null
    maxUsers: number | null
    maxSamples: number | null
    maxOrders: number | null
    maxCollections: number | null
    maxStorageGB: number | null
    currentUsers: number | null
    currentSamples: number | null
    currentOrders: number | null
    currentCollections: number | null
    currentStorageGB: number | null
    trialStartedAt: Date | null
    trialEndsAt: Date | null
    billingEmail: string | null
    taxId: string | null
    billingAddress: string | null
    subscriptionStartedAt: Date | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    cancelAtPeriodEnd: boolean | null
    cancelledAt: Date | null
    defaultView: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    address: string | null
    location: string | null
    website: string | null
    type: $Enums.CompanyType | null
    description: string | null
    ownerId: number | null
    isActive: boolean | null
    logo: string | null
    coverImage: string | null
    isPublicProfile: boolean | null
    profileSlug: string | null
    subscriptionPlan: $Enums.SubscriptionPlan | null
    subscriptionStatus: $Enums.SubscriptionStatus | null
    billingCycle: $Enums.BillingCycle | null
    maxUsers: number | null
    maxSamples: number | null
    maxOrders: number | null
    maxCollections: number | null
    maxStorageGB: number | null
    currentUsers: number | null
    currentSamples: number | null
    currentOrders: number | null
    currentCollections: number | null
    currentStorageGB: number | null
    trialStartedAt: Date | null
    trialEndsAt: Date | null
    billingEmail: string | null
    taxId: string | null
    billingAddress: string | null
    subscriptionStartedAt: Date | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    cancelAtPeriodEnd: boolean | null
    cancelledAt: Date | null
    defaultView: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    name: number
    email: number
    phone: number
    address: number
    location: number
    website: number
    type: number
    description: number
    ownerId: number
    isActive: number
    settings: number
    logo: number
    coverImage: number
    brandColors: number
    socialLinks: number
    isPublicProfile: number
    profileSlug: number
    subscriptionPlan: number
    subscriptionStatus: number
    billingCycle: number
    maxUsers: number
    maxSamples: number
    maxOrders: number
    maxCollections: number
    maxStorageGB: number
    currentUsers: number
    currentSamples: number
    currentOrders: number
    currentCollections: number
    currentStorageGB: number
    trialStartedAt: number
    trialEndsAt: number
    billingEmail: number
    taxId: number
    billingAddress: number
    subscriptionStartedAt: number
    currentPeriodStart: number
    currentPeriodEnd: number
    cancelAtPeriodEnd: number
    cancelledAt: number
    defaultView: number
    enabledModules: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    id?: true
    ownerId?: true
    maxUsers?: true
    maxSamples?: true
    maxOrders?: true
    maxCollections?: true
    maxStorageGB?: true
    currentUsers?: true
    currentSamples?: true
    currentOrders?: true
    currentCollections?: true
    currentStorageGB?: true
  }

  export type CompanySumAggregateInputType = {
    id?: true
    ownerId?: true
    maxUsers?: true
    maxSamples?: true
    maxOrders?: true
    maxCollections?: true
    maxStorageGB?: true
    currentUsers?: true
    currentSamples?: true
    currentOrders?: true
    currentCollections?: true
    currentStorageGB?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    location?: true
    website?: true
    type?: true
    description?: true
    ownerId?: true
    isActive?: true
    logo?: true
    coverImage?: true
    isPublicProfile?: true
    profileSlug?: true
    subscriptionPlan?: true
    subscriptionStatus?: true
    billingCycle?: true
    maxUsers?: true
    maxSamples?: true
    maxOrders?: true
    maxCollections?: true
    maxStorageGB?: true
    currentUsers?: true
    currentSamples?: true
    currentOrders?: true
    currentCollections?: true
    currentStorageGB?: true
    trialStartedAt?: true
    trialEndsAt?: true
    billingEmail?: true
    taxId?: true
    billingAddress?: true
    subscriptionStartedAt?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    cancelAtPeriodEnd?: true
    cancelledAt?: true
    defaultView?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    location?: true
    website?: true
    type?: true
    description?: true
    ownerId?: true
    isActive?: true
    logo?: true
    coverImage?: true
    isPublicProfile?: true
    profileSlug?: true
    subscriptionPlan?: true
    subscriptionStatus?: true
    billingCycle?: true
    maxUsers?: true
    maxSamples?: true
    maxOrders?: true
    maxCollections?: true
    maxStorageGB?: true
    currentUsers?: true
    currentSamples?: true
    currentOrders?: true
    currentCollections?: true
    currentStorageGB?: true
    trialStartedAt?: true
    trialEndsAt?: true
    billingEmail?: true
    taxId?: true
    billingAddress?: true
    subscriptionStartedAt?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    cancelAtPeriodEnd?: true
    cancelledAt?: true
    defaultView?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    location?: true
    website?: true
    type?: true
    description?: true
    ownerId?: true
    isActive?: true
    settings?: true
    logo?: true
    coverImage?: true
    brandColors?: true
    socialLinks?: true
    isPublicProfile?: true
    profileSlug?: true
    subscriptionPlan?: true
    subscriptionStatus?: true
    billingCycle?: true
    maxUsers?: true
    maxSamples?: true
    maxOrders?: true
    maxCollections?: true
    maxStorageGB?: true
    currentUsers?: true
    currentSamples?: true
    currentOrders?: true
    currentCollections?: true
    currentStorageGB?: true
    trialStartedAt?: true
    trialEndsAt?: true
    billingEmail?: true
    taxId?: true
    billingAddress?: true
    subscriptionStartedAt?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    cancelAtPeriodEnd?: true
    cancelledAt?: true
    defaultView?: true
    enabledModules?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: number
    name: string
    email: string
    phone: string | null
    address: string | null
    location: string | null
    website: string | null
    type: $Enums.CompanyType
    description: string | null
    ownerId: number | null
    isActive: boolean
    settings: JsonValue | null
    logo: string | null
    coverImage: string | null
    brandColors: JsonValue | null
    socialLinks: JsonValue | null
    isPublicProfile: boolean
    profileSlug: string | null
    subscriptionPlan: $Enums.SubscriptionPlan
    subscriptionStatus: $Enums.SubscriptionStatus
    billingCycle: $Enums.BillingCycle
    maxUsers: number
    maxSamples: number
    maxOrders: number
    maxCollections: number
    maxStorageGB: number
    currentUsers: number
    currentSamples: number
    currentOrders: number
    currentCollections: number
    currentStorageGB: number
    trialStartedAt: Date | null
    trialEndsAt: Date | null
    billingEmail: string | null
    taxId: string | null
    billingAddress: string | null
    subscriptionStartedAt: Date | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    cancelAtPeriodEnd: boolean
    cancelledAt: Date | null
    defaultView: string | null
    enabledModules: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    location?: boolean
    website?: boolean
    type?: boolean
    description?: boolean
    ownerId?: boolean
    isActive?: boolean
    settings?: boolean
    logo?: boolean
    coverImage?: boolean
    brandColors?: boolean
    socialLinks?: boolean
    isPublicProfile?: boolean
    profileSlug?: boolean
    subscriptionPlan?: boolean
    subscriptionStatus?: boolean
    billingCycle?: boolean
    maxUsers?: boolean
    maxSamples?: boolean
    maxOrders?: boolean
    maxCollections?: boolean
    maxStorageGB?: boolean
    currentUsers?: boolean
    currentSamples?: boolean
    currentOrders?: boolean
    currentCollections?: boolean
    currentStorageGB?: boolean
    trialStartedAt?: boolean
    trialEndsAt?: boolean
    billingEmail?: boolean
    taxId?: boolean
    billingAddress?: boolean
    subscriptionStartedAt?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    cancelAtPeriodEnd?: boolean
    cancelledAt?: boolean
    defaultView?: boolean
    enabledModules?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    owner?: boolean | Company$ownerArgs<ExtArgs>
    employees?: boolean | Company$employeesArgs<ExtArgs>
    categories?: boolean | Company$categoriesArgs<ExtArgs>
    collections?: boolean | Company$collectionsArgs<ExtArgs>
    samples?: boolean | Company$samplesArgs<ExtArgs>
    orders?: boolean | Company$ordersArgs<ExtArgs>
    productionTracking?: boolean | Company$productionTrackingArgs<ExtArgs>
    messages?: boolean | Company$messagesArgs<ExtArgs>
    colors?: boolean | Company$colorsArgs<ExtArgs>
    fabrics?: boolean | Company$fabricsArgs<ExtArgs>
    sizeGroups?: boolean | Company$sizeGroupsArgs<ExtArgs>
    seasons?: boolean | Company$seasonsArgs<ExtArgs>
    fits?: boolean | Company$fitsArgs<ExtArgs>
    certifications?: boolean | Company$certificationsArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>



  export type CompanySelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    location?: boolean
    website?: boolean
    type?: boolean
    description?: boolean
    ownerId?: boolean
    isActive?: boolean
    settings?: boolean
    logo?: boolean
    coverImage?: boolean
    brandColors?: boolean
    socialLinks?: boolean
    isPublicProfile?: boolean
    profileSlug?: boolean
    subscriptionPlan?: boolean
    subscriptionStatus?: boolean
    billingCycle?: boolean
    maxUsers?: boolean
    maxSamples?: boolean
    maxOrders?: boolean
    maxCollections?: boolean
    maxStorageGB?: boolean
    currentUsers?: boolean
    currentSamples?: boolean
    currentOrders?: boolean
    currentCollections?: boolean
    currentStorageGB?: boolean
    trialStartedAt?: boolean
    trialEndsAt?: boolean
    billingEmail?: boolean
    taxId?: boolean
    billingAddress?: boolean
    subscriptionStartedAt?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    cancelAtPeriodEnd?: boolean
    cancelledAt?: boolean
    defaultView?: boolean
    enabledModules?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CompanyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "phone" | "address" | "location" | "website" | "type" | "description" | "ownerId" | "isActive" | "settings" | "logo" | "coverImage" | "brandColors" | "socialLinks" | "isPublicProfile" | "profileSlug" | "subscriptionPlan" | "subscriptionStatus" | "billingCycle" | "maxUsers" | "maxSamples" | "maxOrders" | "maxCollections" | "maxStorageGB" | "currentUsers" | "currentSamples" | "currentOrders" | "currentCollections" | "currentStorageGB" | "trialStartedAt" | "trialEndsAt" | "billingEmail" | "taxId" | "billingAddress" | "subscriptionStartedAt" | "currentPeriodStart" | "currentPeriodEnd" | "cancelAtPeriodEnd" | "cancelledAt" | "defaultView" | "enabledModules" | "createdAt" | "updatedAt", ExtArgs["result"]["company"]>
  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | Company$ownerArgs<ExtArgs>
    employees?: boolean | Company$employeesArgs<ExtArgs>
    categories?: boolean | Company$categoriesArgs<ExtArgs>
    collections?: boolean | Company$collectionsArgs<ExtArgs>
    samples?: boolean | Company$samplesArgs<ExtArgs>
    orders?: boolean | Company$ordersArgs<ExtArgs>
    productionTracking?: boolean | Company$productionTrackingArgs<ExtArgs>
    messages?: boolean | Company$messagesArgs<ExtArgs>
    colors?: boolean | Company$colorsArgs<ExtArgs>
    fabrics?: boolean | Company$fabricsArgs<ExtArgs>
    sizeGroups?: boolean | Company$sizeGroupsArgs<ExtArgs>
    seasons?: boolean | Company$seasonsArgs<ExtArgs>
    fits?: boolean | Company$fitsArgs<ExtArgs>
    certifications?: boolean | Company$certificationsArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      owner: Prisma.$UserPayload<ExtArgs> | null
      employees: Prisma.$UserPayload<ExtArgs>[]
      categories: Prisma.$CategoryPayload<ExtArgs>[]
      collections: Prisma.$CollectionPayload<ExtArgs>[]
      samples: Prisma.$SamplePayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      productionTracking: Prisma.$ProductionTrackingPayload<ExtArgs>[]
      messages: Prisma.$MessagePayload<ExtArgs>[]
      colors: Prisma.$ColorPayload<ExtArgs>[]
      fabrics: Prisma.$FabricPayload<ExtArgs>[]
      sizeGroups: Prisma.$SizeGroupPayload<ExtArgs>[]
      seasons: Prisma.$SeasonItemPayload<ExtArgs>[]
      fits: Prisma.$FitItemPayload<ExtArgs>[]
      certifications: Prisma.$CertificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      phone: string | null
      address: string | null
      location: string | null
      website: string | null
      type: $Enums.CompanyType
      description: string | null
      ownerId: number | null
      isActive: boolean
      settings: Prisma.JsonValue | null
      logo: string | null
      coverImage: string | null
      brandColors: Prisma.JsonValue | null
      socialLinks: Prisma.JsonValue | null
      isPublicProfile: boolean
      profileSlug: string | null
      subscriptionPlan: $Enums.SubscriptionPlan
      subscriptionStatus: $Enums.SubscriptionStatus
      billingCycle: $Enums.BillingCycle
      maxUsers: number
      maxSamples: number
      maxOrders: number
      maxCollections: number
      maxStorageGB: number
      currentUsers: number
      currentSamples: number
      currentOrders: number
      currentCollections: number
      currentStorageGB: number
      trialStartedAt: Date | null
      trialEndsAt: Date | null
      billingEmail: string | null
      taxId: string | null
      billingAddress: string | null
      subscriptionStartedAt: Date | null
      currentPeriodStart: Date | null
      currentPeriodEnd: Date | null
      cancelAtPeriodEnd: boolean
      cancelledAt: Date | null
      defaultView: string | null
      enabledModules: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owner<T extends Company$ownerArgs<ExtArgs> = {}>(args?: Subset<T, Company$ownerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employees<T extends Company$employeesArgs<ExtArgs> = {}>(args?: Subset<T, Company$employeesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categories<T extends Company$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, Company$categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    collections<T extends Company$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, Company$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    samples<T extends Company$samplesArgs<ExtArgs> = {}>(args?: Subset<T, Company$samplesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends Company$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Company$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productionTracking<T extends Company$productionTrackingArgs<ExtArgs> = {}>(args?: Subset<T, Company$productionTrackingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends Company$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Company$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    colors<T extends Company$colorsArgs<ExtArgs> = {}>(args?: Subset<T, Company$colorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fabrics<T extends Company$fabricsArgs<ExtArgs> = {}>(args?: Subset<T, Company$fabricsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sizeGroups<T extends Company$sizeGroupsArgs<ExtArgs> = {}>(args?: Subset<T, Company$sizeGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    seasons<T extends Company$seasonsArgs<ExtArgs> = {}>(args?: Subset<T, Company$seasonsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fits<T extends Company$fitsArgs<ExtArgs> = {}>(args?: Subset<T, Company$fitsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    certifications<T extends Company$certificationsArgs<ExtArgs> = {}>(args?: Subset<T, Company$certificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'Int'>
    readonly name: FieldRef<"Company", 'String'>
    readonly email: FieldRef<"Company", 'String'>
    readonly phone: FieldRef<"Company", 'String'>
    readonly address: FieldRef<"Company", 'String'>
    readonly location: FieldRef<"Company", 'String'>
    readonly website: FieldRef<"Company", 'String'>
    readonly type: FieldRef<"Company", 'CompanyType'>
    readonly description: FieldRef<"Company", 'String'>
    readonly ownerId: FieldRef<"Company", 'Int'>
    readonly isActive: FieldRef<"Company", 'Boolean'>
    readonly settings: FieldRef<"Company", 'Json'>
    readonly logo: FieldRef<"Company", 'String'>
    readonly coverImage: FieldRef<"Company", 'String'>
    readonly brandColors: FieldRef<"Company", 'Json'>
    readonly socialLinks: FieldRef<"Company", 'Json'>
    readonly isPublicProfile: FieldRef<"Company", 'Boolean'>
    readonly profileSlug: FieldRef<"Company", 'String'>
    readonly subscriptionPlan: FieldRef<"Company", 'SubscriptionPlan'>
    readonly subscriptionStatus: FieldRef<"Company", 'SubscriptionStatus'>
    readonly billingCycle: FieldRef<"Company", 'BillingCycle'>
    readonly maxUsers: FieldRef<"Company", 'Int'>
    readonly maxSamples: FieldRef<"Company", 'Int'>
    readonly maxOrders: FieldRef<"Company", 'Int'>
    readonly maxCollections: FieldRef<"Company", 'Int'>
    readonly maxStorageGB: FieldRef<"Company", 'Float'>
    readonly currentUsers: FieldRef<"Company", 'Int'>
    readonly currentSamples: FieldRef<"Company", 'Int'>
    readonly currentOrders: FieldRef<"Company", 'Int'>
    readonly currentCollections: FieldRef<"Company", 'Int'>
    readonly currentStorageGB: FieldRef<"Company", 'Float'>
    readonly trialStartedAt: FieldRef<"Company", 'DateTime'>
    readonly trialEndsAt: FieldRef<"Company", 'DateTime'>
    readonly billingEmail: FieldRef<"Company", 'String'>
    readonly taxId: FieldRef<"Company", 'String'>
    readonly billingAddress: FieldRef<"Company", 'String'>
    readonly subscriptionStartedAt: FieldRef<"Company", 'DateTime'>
    readonly currentPeriodStart: FieldRef<"Company", 'DateTime'>
    readonly currentPeriodEnd: FieldRef<"Company", 'DateTime'>
    readonly cancelAtPeriodEnd: FieldRef<"Company", 'Boolean'>
    readonly cancelledAt: FieldRef<"Company", 'DateTime'>
    readonly defaultView: FieldRef<"Company", 'String'>
    readonly enabledModules: FieldRef<"Company", 'Json'>
    readonly createdAt: FieldRef<"Company", 'DateTime'>
    readonly updatedAt: FieldRef<"Company", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to update.
     */
    limit?: number
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to delete.
     */
    limit?: number
  }

  /**
   * Company.owner
   */
  export type Company$ownerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Company.employees
   */
  export type Company$employeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Company.categories
   */
  export type Company$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Company.collections
   */
  export type Company$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    cursor?: CollectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Company.samples
   */
  export type Company$samplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    cursor?: SampleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * Company.orders
   */
  export type Company$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Company.productionTracking
   */
  export type Company$productionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    cursor?: ProductionTrackingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * Company.messages
   */
  export type Company$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Company.colors
   */
  export type Company$colorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    where?: ColorWhereInput
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    cursor?: ColorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ColorScalarFieldEnum | ColorScalarFieldEnum[]
  }

  /**
   * Company.fabrics
   */
  export type Company$fabricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    where?: FabricWhereInput
    orderBy?: FabricOrderByWithRelationInput | FabricOrderByWithRelationInput[]
    cursor?: FabricWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FabricScalarFieldEnum | FabricScalarFieldEnum[]
  }

  /**
   * Company.sizeGroups
   */
  export type Company$sizeGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    where?: SizeGroupWhereInput
    orderBy?: SizeGroupOrderByWithRelationInput | SizeGroupOrderByWithRelationInput[]
    cursor?: SizeGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SizeGroupScalarFieldEnum | SizeGroupScalarFieldEnum[]
  }

  /**
   * Company.seasons
   */
  export type Company$seasonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    where?: SeasonItemWhereInput
    orderBy?: SeasonItemOrderByWithRelationInput | SeasonItemOrderByWithRelationInput[]
    cursor?: SeasonItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SeasonItemScalarFieldEnum | SeasonItemScalarFieldEnum[]
  }

  /**
   * Company.fits
   */
  export type Company$fitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    where?: FitItemWhereInput
    orderBy?: FitItemOrderByWithRelationInput | FitItemOrderByWithRelationInput[]
    cursor?: FitItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FitItemScalarFieldEnum | FitItemScalarFieldEnum[]
  }

  /**
   * Company.certifications
   */
  export type Company$certificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    where?: CertificationWhereInput
    orderBy?: CertificationOrderByWithRelationInput | CertificationOrderByWithRelationInput[]
    cursor?: CertificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CertificationScalarFieldEnum | CertificationScalarFieldEnum[]
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageAvgAggregateOutputType = {
    id: number | null
    senderId: number | null
    receiverId: number | null
    orderId: number | null
    sampleId: number | null
    companyId: number | null
  }

  export type MessageSumAggregateOutputType = {
    id: number | null
    senderId: number | null
    receiverId: number | null
    orderId: number | null
    sampleId: number | null
    companyId: number | null
  }

  export type MessageMinAggregateOutputType = {
    id: number | null
    content: string | null
    senderId: number | null
    receiverId: number | null
    isRead: boolean | null
    type: string | null
    orderId: number | null
    sampleId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: number | null
  }

  export type MessageMaxAggregateOutputType = {
    id: number | null
    content: string | null
    senderId: number | null
    receiverId: number | null
    isRead: boolean | null
    type: string | null
    orderId: number | null
    sampleId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: number | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    content: number
    senderId: number
    receiverId: number
    isRead: number
    type: number
    orderId: number
    sampleId: number
    createdAt: number
    updatedAt: number
    companyId: number
    _all: number
  }


  export type MessageAvgAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    orderId?: true
    sampleId?: true
    companyId?: true
  }

  export type MessageSumAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    orderId?: true
    sampleId?: true
    companyId?: true
  }

  export type MessageMinAggregateInputType = {
    id?: true
    content?: true
    senderId?: true
    receiverId?: true
    isRead?: true
    type?: true
    orderId?: true
    sampleId?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    content?: true
    senderId?: true
    receiverId?: true
    isRead?: true
    type?: true
    orderId?: true
    sampleId?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    content?: true
    senderId?: true
    receiverId?: true
    isRead?: true
    type?: true
    orderId?: true
    sampleId?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _avg?: MessageAvgAggregateInputType
    _sum?: MessageSumAggregateInputType
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: number
    content: string
    senderId: number
    receiverId: number | null
    isRead: boolean
    type: string
    orderId: number | null
    sampleId: number | null
    createdAt: Date
    updatedAt: Date
    companyId: number | null
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    senderId?: boolean
    receiverId?: boolean
    isRead?: boolean
    type?: boolean
    orderId?: boolean
    sampleId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | Message$receiverArgs<ExtArgs>
    order?: boolean | Message$orderArgs<ExtArgs>
    sample?: boolean | Message$sampleArgs<ExtArgs>
    company?: boolean | Message$companyArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>



  export type MessageSelectScalar = {
    id?: boolean
    content?: boolean
    senderId?: boolean
    receiverId?: boolean
    isRead?: boolean
    type?: boolean
    orderId?: boolean
    sampleId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
  }

  export type MessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "senderId" | "receiverId" | "isRead" | "type" | "orderId" | "sampleId" | "createdAt" | "updatedAt" | "companyId", ExtArgs["result"]["message"]>
  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | Message$receiverArgs<ExtArgs>
    order?: boolean | Message$orderArgs<ExtArgs>
    sample?: boolean | Message$sampleArgs<ExtArgs>
    company?: boolean | Message$companyArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      sender: Prisma.$UserPayload<ExtArgs>
      receiver: Prisma.$UserPayload<ExtArgs> | null
      order: Prisma.$OrderPayload<ExtArgs> | null
      sample: Prisma.$SamplePayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      senderId: number
      receiverId: number | null
      isRead: boolean
      type: string
      orderId: number | null
      sampleId: number | null
      createdAt: Date
      updatedAt: Date
      companyId: number | null
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    receiver<T extends Message$receiverArgs<ExtArgs> = {}>(args?: Subset<T, Message$receiverArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order<T extends Message$orderArgs<ExtArgs> = {}>(args?: Subset<T, Message$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sample<T extends Message$sampleArgs<ExtArgs> = {}>(args?: Subset<T, Message$sampleArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    company<T extends Message$companyArgs<ExtArgs> = {}>(args?: Subset<T, Message$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'Int'>
    readonly content: FieldRef<"Message", 'String'>
    readonly senderId: FieldRef<"Message", 'Int'>
    readonly receiverId: FieldRef<"Message", 'Int'>
    readonly isRead: FieldRef<"Message", 'Boolean'>
    readonly type: FieldRef<"Message", 'String'>
    readonly orderId: FieldRef<"Message", 'Int'>
    readonly sampleId: FieldRef<"Message", 'Int'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
    readonly updatedAt: FieldRef<"Message", 'DateTime'>
    readonly companyId: FieldRef<"Message", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to delete.
     */
    limit?: number
  }

  /**
   * Message.receiver
   */
  export type Message$receiverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Message.order
   */
  export type Message$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Message.sample
   */
  export type Message$sampleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
  }

  /**
   * Message.company
   */
  export type Message$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model ProductionTracking
   */

  export type AggregateProductionTracking = {
    _count: ProductionTrackingCountAggregateOutputType | null
    _avg: ProductionTrackingAvgAggregateOutputType | null
    _sum: ProductionTrackingSumAggregateOutputType | null
    _min: ProductionTrackingMinAggregateOutputType | null
    _max: ProductionTrackingMaxAggregateOutputType | null
  }

  export type ProductionTrackingAvgAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    progress: number | null
    companyId: number | null
    sewingWorkshopId: number | null
    packagingWorkshopId: number | null
  }

  export type ProductionTrackingSumAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    progress: number | null
    companyId: number | null
    sewingWorkshopId: number | null
    packagingWorkshopId: number | null
  }

  export type ProductionTrackingMinAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    currentStage: $Enums.ProductionStage | null
    overallStatus: $Enums.ProductionStatus | null
    progress: number | null
    estimatedStartDate: Date | null
    estimatedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: number | null
    sewingWorkshopId: number | null
    packagingWorkshopId: number | null
  }

  export type ProductionTrackingMaxAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    currentStage: $Enums.ProductionStage | null
    overallStatus: $Enums.ProductionStatus | null
    progress: number | null
    estimatedStartDate: Date | null
    estimatedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: number | null
    sewingWorkshopId: number | null
    packagingWorkshopId: number | null
  }

  export type ProductionTrackingCountAggregateOutputType = {
    id: number
    orderId: number
    sampleId: number
    currentStage: number
    overallStatus: number
    progress: number
    estimatedStartDate: number
    estimatedEndDate: number
    actualStartDate: number
    actualEndDate: number
    notes: number
    createdAt: number
    updatedAt: number
    companyId: number
    sewingWorkshopId: number
    packagingWorkshopId: number
    _all: number
  }


  export type ProductionTrackingAvgAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    progress?: true
    companyId?: true
    sewingWorkshopId?: true
    packagingWorkshopId?: true
  }

  export type ProductionTrackingSumAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    progress?: true
    companyId?: true
    sewingWorkshopId?: true
    packagingWorkshopId?: true
  }

  export type ProductionTrackingMinAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    currentStage?: true
    overallStatus?: true
    progress?: true
    estimatedStartDate?: true
    estimatedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
    sewingWorkshopId?: true
    packagingWorkshopId?: true
  }

  export type ProductionTrackingMaxAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    currentStage?: true
    overallStatus?: true
    progress?: true
    estimatedStartDate?: true
    estimatedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
    sewingWorkshopId?: true
    packagingWorkshopId?: true
  }

  export type ProductionTrackingCountAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    currentStage?: true
    overallStatus?: true
    progress?: true
    estimatedStartDate?: true
    estimatedEndDate?: true
    actualStartDate?: true
    actualEndDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
    sewingWorkshopId?: true
    packagingWorkshopId?: true
    _all?: true
  }

  export type ProductionTrackingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductionTracking to aggregate.
     */
    where?: ProductionTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionTrackings to fetch.
     */
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductionTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionTrackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductionTrackings
    **/
    _count?: true | ProductionTrackingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductionTrackingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductionTrackingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductionTrackingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductionTrackingMaxAggregateInputType
  }

  export type GetProductionTrackingAggregateType<T extends ProductionTrackingAggregateArgs> = {
        [P in keyof T & keyof AggregateProductionTracking]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductionTracking[P]>
      : GetScalarType<T[P], AggregateProductionTracking[P]>
  }




  export type ProductionTrackingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionTrackingWhereInput
    orderBy?: ProductionTrackingOrderByWithAggregationInput | ProductionTrackingOrderByWithAggregationInput[]
    by: ProductionTrackingScalarFieldEnum[] | ProductionTrackingScalarFieldEnum
    having?: ProductionTrackingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductionTrackingCountAggregateInputType | true
    _avg?: ProductionTrackingAvgAggregateInputType
    _sum?: ProductionTrackingSumAggregateInputType
    _min?: ProductionTrackingMinAggregateInputType
    _max?: ProductionTrackingMaxAggregateInputType
  }

  export type ProductionTrackingGroupByOutputType = {
    id: number
    orderId: number | null
    sampleId: number | null
    currentStage: $Enums.ProductionStage
    overallStatus: $Enums.ProductionStatus
    progress: number
    estimatedStartDate: Date | null
    estimatedEndDate: Date | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    companyId: number | null
    sewingWorkshopId: number | null
    packagingWorkshopId: number | null
    _count: ProductionTrackingCountAggregateOutputType | null
    _avg: ProductionTrackingAvgAggregateOutputType | null
    _sum: ProductionTrackingSumAggregateOutputType | null
    _min: ProductionTrackingMinAggregateOutputType | null
    _max: ProductionTrackingMaxAggregateOutputType | null
  }

  type GetProductionTrackingGroupByPayload<T extends ProductionTrackingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductionTrackingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductionTrackingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductionTrackingGroupByOutputType[P]>
            : GetScalarType<T[P], ProductionTrackingGroupByOutputType[P]>
        }
      >
    >


  export type ProductionTrackingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    sampleId?: boolean
    currentStage?: boolean
    overallStatus?: boolean
    progress?: boolean
    estimatedStartDate?: boolean
    estimatedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
    sewingWorkshopId?: boolean
    packagingWorkshopId?: boolean
    order?: boolean | ProductionTracking$orderArgs<ExtArgs>
    sample?: boolean | ProductionTracking$sampleArgs<ExtArgs>
    company?: boolean | ProductionTracking$companyArgs<ExtArgs>
    sewingWorkshop?: boolean | ProductionTracking$sewingWorkshopArgs<ExtArgs>
    packagingWorkshop?: boolean | ProductionTracking$packagingWorkshopArgs<ExtArgs>
    stageUpdates?: boolean | ProductionTracking$stageUpdatesArgs<ExtArgs>
    qualityControls?: boolean | ProductionTracking$qualityControlsArgs<ExtArgs>
    productionRevisions?: boolean | ProductionTracking$productionRevisionsArgs<ExtArgs>
    revisions?: boolean | ProductionTracking$revisionsArgs<ExtArgs>
    tasks?: boolean | ProductionTracking$tasksArgs<ExtArgs>
    notifications?: boolean | ProductionTracking$notificationsArgs<ExtArgs>
    _count?: boolean | ProductionTrackingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productionTracking"]>



  export type ProductionTrackingSelectScalar = {
    id?: boolean
    orderId?: boolean
    sampleId?: boolean
    currentStage?: boolean
    overallStatus?: boolean
    progress?: boolean
    estimatedStartDate?: boolean
    estimatedEndDate?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
    sewingWorkshopId?: boolean
    packagingWorkshopId?: boolean
  }

  export type ProductionTrackingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "sampleId" | "currentStage" | "overallStatus" | "progress" | "estimatedStartDate" | "estimatedEndDate" | "actualStartDate" | "actualEndDate" | "notes" | "createdAt" | "updatedAt" | "companyId" | "sewingWorkshopId" | "packagingWorkshopId", ExtArgs["result"]["productionTracking"]>
  export type ProductionTrackingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ProductionTracking$orderArgs<ExtArgs>
    sample?: boolean | ProductionTracking$sampleArgs<ExtArgs>
    company?: boolean | ProductionTracking$companyArgs<ExtArgs>
    sewingWorkshop?: boolean | ProductionTracking$sewingWorkshopArgs<ExtArgs>
    packagingWorkshop?: boolean | ProductionTracking$packagingWorkshopArgs<ExtArgs>
    stageUpdates?: boolean | ProductionTracking$stageUpdatesArgs<ExtArgs>
    qualityControls?: boolean | ProductionTracking$qualityControlsArgs<ExtArgs>
    productionRevisions?: boolean | ProductionTracking$productionRevisionsArgs<ExtArgs>
    revisions?: boolean | ProductionTracking$revisionsArgs<ExtArgs>
    tasks?: boolean | ProductionTracking$tasksArgs<ExtArgs>
    notifications?: boolean | ProductionTracking$notificationsArgs<ExtArgs>
    _count?: boolean | ProductionTrackingCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ProductionTrackingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductionTracking"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs> | null
      sample: Prisma.$SamplePayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs> | null
      sewingWorkshop: Prisma.$WorkshopPayload<ExtArgs> | null
      packagingWorkshop: Prisma.$WorkshopPayload<ExtArgs> | null
      stageUpdates: Prisma.$ProductionStageUpdatePayload<ExtArgs>[]
      qualityControls: Prisma.$QualityControlPayload<ExtArgs>[]
      productionRevisions: Prisma.$ProductionRevisionPayload<ExtArgs>[]
      revisions: Prisma.$RevisionPayload<ExtArgs>[]
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: number | null
      sampleId: number | null
      currentStage: $Enums.ProductionStage
      overallStatus: $Enums.ProductionStatus
      progress: number
      estimatedStartDate: Date | null
      estimatedEndDate: Date | null
      actualStartDate: Date | null
      actualEndDate: Date | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
      companyId: number | null
      sewingWorkshopId: number | null
      packagingWorkshopId: number | null
    }, ExtArgs["result"]["productionTracking"]>
    composites: {}
  }

  type ProductionTrackingGetPayload<S extends boolean | null | undefined | ProductionTrackingDefaultArgs> = $Result.GetResult<Prisma.$ProductionTrackingPayload, S>

  type ProductionTrackingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductionTrackingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductionTrackingCountAggregateInputType | true
    }

  export interface ProductionTrackingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductionTracking'], meta: { name: 'ProductionTracking' } }
    /**
     * Find zero or one ProductionTracking that matches the filter.
     * @param {ProductionTrackingFindUniqueArgs} args - Arguments to find a ProductionTracking
     * @example
     * // Get one ProductionTracking
     * const productionTracking = await prisma.productionTracking.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductionTrackingFindUniqueArgs>(args: SelectSubset<T, ProductionTrackingFindUniqueArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductionTracking that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductionTrackingFindUniqueOrThrowArgs} args - Arguments to find a ProductionTracking
     * @example
     * // Get one ProductionTracking
     * const productionTracking = await prisma.productionTracking.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductionTrackingFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductionTrackingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductionTracking that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionTrackingFindFirstArgs} args - Arguments to find a ProductionTracking
     * @example
     * // Get one ProductionTracking
     * const productionTracking = await prisma.productionTracking.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductionTrackingFindFirstArgs>(args?: SelectSubset<T, ProductionTrackingFindFirstArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductionTracking that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionTrackingFindFirstOrThrowArgs} args - Arguments to find a ProductionTracking
     * @example
     * // Get one ProductionTracking
     * const productionTracking = await prisma.productionTracking.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductionTrackingFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductionTrackingFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductionTrackings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionTrackingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductionTrackings
     * const productionTrackings = await prisma.productionTracking.findMany()
     * 
     * // Get first 10 ProductionTrackings
     * const productionTrackings = await prisma.productionTracking.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productionTrackingWithIdOnly = await prisma.productionTracking.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductionTrackingFindManyArgs>(args?: SelectSubset<T, ProductionTrackingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductionTracking.
     * @param {ProductionTrackingCreateArgs} args - Arguments to create a ProductionTracking.
     * @example
     * // Create one ProductionTracking
     * const ProductionTracking = await prisma.productionTracking.create({
     *   data: {
     *     // ... data to create a ProductionTracking
     *   }
     * })
     * 
     */
    create<T extends ProductionTrackingCreateArgs>(args: SelectSubset<T, ProductionTrackingCreateArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductionTrackings.
     * @param {ProductionTrackingCreateManyArgs} args - Arguments to create many ProductionTrackings.
     * @example
     * // Create many ProductionTrackings
     * const productionTracking = await prisma.productionTracking.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductionTrackingCreateManyArgs>(args?: SelectSubset<T, ProductionTrackingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProductionTracking.
     * @param {ProductionTrackingDeleteArgs} args - Arguments to delete one ProductionTracking.
     * @example
     * // Delete one ProductionTracking
     * const ProductionTracking = await prisma.productionTracking.delete({
     *   where: {
     *     // ... filter to delete one ProductionTracking
     *   }
     * })
     * 
     */
    delete<T extends ProductionTrackingDeleteArgs>(args: SelectSubset<T, ProductionTrackingDeleteArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductionTracking.
     * @param {ProductionTrackingUpdateArgs} args - Arguments to update one ProductionTracking.
     * @example
     * // Update one ProductionTracking
     * const productionTracking = await prisma.productionTracking.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductionTrackingUpdateArgs>(args: SelectSubset<T, ProductionTrackingUpdateArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductionTrackings.
     * @param {ProductionTrackingDeleteManyArgs} args - Arguments to filter ProductionTrackings to delete.
     * @example
     * // Delete a few ProductionTrackings
     * const { count } = await prisma.productionTracking.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductionTrackingDeleteManyArgs>(args?: SelectSubset<T, ProductionTrackingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductionTrackings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionTrackingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductionTrackings
     * const productionTracking = await prisma.productionTracking.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductionTrackingUpdateManyArgs>(args: SelectSubset<T, ProductionTrackingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductionTracking.
     * @param {ProductionTrackingUpsertArgs} args - Arguments to update or create a ProductionTracking.
     * @example
     * // Update or create a ProductionTracking
     * const productionTracking = await prisma.productionTracking.upsert({
     *   create: {
     *     // ... data to create a ProductionTracking
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductionTracking we want to update
     *   }
     * })
     */
    upsert<T extends ProductionTrackingUpsertArgs>(args: SelectSubset<T, ProductionTrackingUpsertArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductionTrackings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionTrackingCountArgs} args - Arguments to filter ProductionTrackings to count.
     * @example
     * // Count the number of ProductionTrackings
     * const count = await prisma.productionTracking.count({
     *   where: {
     *     // ... the filter for the ProductionTrackings we want to count
     *   }
     * })
    **/
    count<T extends ProductionTrackingCountArgs>(
      args?: Subset<T, ProductionTrackingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductionTrackingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductionTracking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionTrackingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductionTrackingAggregateArgs>(args: Subset<T, ProductionTrackingAggregateArgs>): Prisma.PrismaPromise<GetProductionTrackingAggregateType<T>>

    /**
     * Group by ProductionTracking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionTrackingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductionTrackingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductionTrackingGroupByArgs['orderBy'] }
        : { orderBy?: ProductionTrackingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductionTrackingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductionTrackingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductionTracking model
   */
  readonly fields: ProductionTrackingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductionTracking.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductionTrackingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends ProductionTracking$orderArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sample<T extends ProductionTracking$sampleArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$sampleArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    company<T extends ProductionTracking$companyArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sewingWorkshop<T extends ProductionTracking$sewingWorkshopArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$sewingWorkshopArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    packagingWorkshop<T extends ProductionTracking$packagingWorkshopArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$packagingWorkshopArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stageUpdates<T extends ProductionTracking$stageUpdatesArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$stageUpdatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualityControls<T extends ProductionTracking$qualityControlsArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$qualityControlsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productionRevisions<T extends ProductionTracking$productionRevisionsArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$productionRevisionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    revisions<T extends ProductionTracking$revisionsArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$revisionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends ProductionTracking$tasksArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends ProductionTracking$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTracking$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductionTracking model
   */
  interface ProductionTrackingFieldRefs {
    readonly id: FieldRef<"ProductionTracking", 'Int'>
    readonly orderId: FieldRef<"ProductionTracking", 'Int'>
    readonly sampleId: FieldRef<"ProductionTracking", 'Int'>
    readonly currentStage: FieldRef<"ProductionTracking", 'ProductionStage'>
    readonly overallStatus: FieldRef<"ProductionTracking", 'ProductionStatus'>
    readonly progress: FieldRef<"ProductionTracking", 'Int'>
    readonly estimatedStartDate: FieldRef<"ProductionTracking", 'DateTime'>
    readonly estimatedEndDate: FieldRef<"ProductionTracking", 'DateTime'>
    readonly actualStartDate: FieldRef<"ProductionTracking", 'DateTime'>
    readonly actualEndDate: FieldRef<"ProductionTracking", 'DateTime'>
    readonly notes: FieldRef<"ProductionTracking", 'String'>
    readonly createdAt: FieldRef<"ProductionTracking", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductionTracking", 'DateTime'>
    readonly companyId: FieldRef<"ProductionTracking", 'Int'>
    readonly sewingWorkshopId: FieldRef<"ProductionTracking", 'Int'>
    readonly packagingWorkshopId: FieldRef<"ProductionTracking", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ProductionTracking findUnique
   */
  export type ProductionTrackingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ProductionTracking to fetch.
     */
    where: ProductionTrackingWhereUniqueInput
  }

  /**
   * ProductionTracking findUniqueOrThrow
   */
  export type ProductionTrackingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ProductionTracking to fetch.
     */
    where: ProductionTrackingWhereUniqueInput
  }

  /**
   * ProductionTracking findFirst
   */
  export type ProductionTrackingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ProductionTracking to fetch.
     */
    where?: ProductionTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionTrackings to fetch.
     */
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductionTrackings.
     */
    cursor?: ProductionTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionTrackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductionTrackings.
     */
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * ProductionTracking findFirstOrThrow
   */
  export type ProductionTrackingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ProductionTracking to fetch.
     */
    where?: ProductionTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionTrackings to fetch.
     */
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductionTrackings.
     */
    cursor?: ProductionTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionTrackings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductionTrackings.
     */
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * ProductionTracking findMany
   */
  export type ProductionTrackingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * Filter, which ProductionTrackings to fetch.
     */
    where?: ProductionTrackingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionTrackings to fetch.
     */
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductionTrackings.
     */
    cursor?: ProductionTrackingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionTrackings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionTrackings.
     */
    skip?: number
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * ProductionTracking create
   */
  export type ProductionTrackingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductionTracking.
     */
    data: XOR<ProductionTrackingCreateInput, ProductionTrackingUncheckedCreateInput>
  }

  /**
   * ProductionTracking createMany
   */
  export type ProductionTrackingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductionTrackings.
     */
    data: ProductionTrackingCreateManyInput | ProductionTrackingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductionTracking update
   */
  export type ProductionTrackingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductionTracking.
     */
    data: XOR<ProductionTrackingUpdateInput, ProductionTrackingUncheckedUpdateInput>
    /**
     * Choose, which ProductionTracking to update.
     */
    where: ProductionTrackingWhereUniqueInput
  }

  /**
   * ProductionTracking updateMany
   */
  export type ProductionTrackingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductionTrackings.
     */
    data: XOR<ProductionTrackingUpdateManyMutationInput, ProductionTrackingUncheckedUpdateManyInput>
    /**
     * Filter which ProductionTrackings to update
     */
    where?: ProductionTrackingWhereInput
    /**
     * Limit how many ProductionTrackings to update.
     */
    limit?: number
  }

  /**
   * ProductionTracking upsert
   */
  export type ProductionTrackingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductionTracking to update in case it exists.
     */
    where: ProductionTrackingWhereUniqueInput
    /**
     * In case the ProductionTracking found by the `where` argument doesn't exist, create a new ProductionTracking with this data.
     */
    create: XOR<ProductionTrackingCreateInput, ProductionTrackingUncheckedCreateInput>
    /**
     * In case the ProductionTracking was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductionTrackingUpdateInput, ProductionTrackingUncheckedUpdateInput>
  }

  /**
   * ProductionTracking delete
   */
  export type ProductionTrackingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    /**
     * Filter which ProductionTracking to delete.
     */
    where: ProductionTrackingWhereUniqueInput
  }

  /**
   * ProductionTracking deleteMany
   */
  export type ProductionTrackingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductionTrackings to delete
     */
    where?: ProductionTrackingWhereInput
    /**
     * Limit how many ProductionTrackings to delete.
     */
    limit?: number
  }

  /**
   * ProductionTracking.order
   */
  export type ProductionTracking$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * ProductionTracking.sample
   */
  export type ProductionTracking$sampleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
  }

  /**
   * ProductionTracking.company
   */
  export type ProductionTracking$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * ProductionTracking.sewingWorkshop
   */
  export type ProductionTracking$sewingWorkshopArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    where?: WorkshopWhereInput
  }

  /**
   * ProductionTracking.packagingWorkshop
   */
  export type ProductionTracking$packagingWorkshopArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    where?: WorkshopWhereInput
  }

  /**
   * ProductionTracking.stageUpdates
   */
  export type ProductionTracking$stageUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    where?: ProductionStageUpdateWhereInput
    orderBy?: ProductionStageUpdateOrderByWithRelationInput | ProductionStageUpdateOrderByWithRelationInput[]
    cursor?: ProductionStageUpdateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionStageUpdateScalarFieldEnum | ProductionStageUpdateScalarFieldEnum[]
  }

  /**
   * ProductionTracking.qualityControls
   */
  export type ProductionTracking$qualityControlsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    where?: QualityControlWhereInput
    orderBy?: QualityControlOrderByWithRelationInput | QualityControlOrderByWithRelationInput[]
    cursor?: QualityControlWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualityControlScalarFieldEnum | QualityControlScalarFieldEnum[]
  }

  /**
   * ProductionTracking.productionRevisions
   */
  export type ProductionTracking$productionRevisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    where?: ProductionRevisionWhereInput
    orderBy?: ProductionRevisionOrderByWithRelationInput | ProductionRevisionOrderByWithRelationInput[]
    cursor?: ProductionRevisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionRevisionScalarFieldEnum | ProductionRevisionScalarFieldEnum[]
  }

  /**
   * ProductionTracking.revisions
   */
  export type ProductionTracking$revisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    where?: RevisionWhereInput
    orderBy?: RevisionOrderByWithRelationInput | RevisionOrderByWithRelationInput[]
    cursor?: RevisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * ProductionTracking.tasks
   */
  export type ProductionTracking$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * ProductionTracking.notifications
   */
  export type ProductionTracking$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * ProductionTracking without action
   */
  export type ProductionTrackingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
  }


  /**
   * Model Revision
   */

  export type AggregateRevision = {
    _count: RevisionCountAggregateOutputType | null
    _avg: RevisionAvgAggregateOutputType | null
    _sum: RevisionSumAggregateOutputType | null
    _min: RevisionMinAggregateOutputType | null
    _max: RevisionMaxAggregateOutputType | null
  }

  export type RevisionAvgAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    revisionNumber: number | null
  }

  export type RevisionSumAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    revisionNumber: number | null
  }

  export type RevisionMinAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    revisionNumber: number | null
    requestMessage: string | null
    responseMessage: string | null
    status: string | null
    requestedAt: Date | null
    completedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RevisionMaxAggregateOutputType = {
    id: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    revisionNumber: number | null
    requestMessage: string | null
    responseMessage: string | null
    status: string | null
    requestedAt: Date | null
    completedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RevisionCountAggregateOutputType = {
    id: number
    orderId: number
    sampleId: number
    productionTrackingId: number
    revisionNumber: number
    requestMessage: number
    responseMessage: number
    status: number
    requestedAt: number
    completedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RevisionAvgAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    revisionNumber?: true
  }

  export type RevisionSumAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    revisionNumber?: true
  }

  export type RevisionMinAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    revisionNumber?: true
    requestMessage?: true
    responseMessage?: true
    status?: true
    requestedAt?: true
    completedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RevisionMaxAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    revisionNumber?: true
    requestMessage?: true
    responseMessage?: true
    status?: true
    requestedAt?: true
    completedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RevisionCountAggregateInputType = {
    id?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    revisionNumber?: true
    requestMessage?: true
    responseMessage?: true
    status?: true
    requestedAt?: true
    completedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RevisionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Revision to aggregate.
     */
    where?: RevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisions to fetch.
     */
    orderBy?: RevisionOrderByWithRelationInput | RevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Revisions
    **/
    _count?: true | RevisionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RevisionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RevisionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RevisionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RevisionMaxAggregateInputType
  }

  export type GetRevisionAggregateType<T extends RevisionAggregateArgs> = {
        [P in keyof T & keyof AggregateRevision]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRevision[P]>
      : GetScalarType<T[P], AggregateRevision[P]>
  }




  export type RevisionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RevisionWhereInput
    orderBy?: RevisionOrderByWithAggregationInput | RevisionOrderByWithAggregationInput[]
    by: RevisionScalarFieldEnum[] | RevisionScalarFieldEnum
    having?: RevisionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RevisionCountAggregateInputType | true
    _avg?: RevisionAvgAggregateInputType
    _sum?: RevisionSumAggregateInputType
    _min?: RevisionMinAggregateInputType
    _max?: RevisionMaxAggregateInputType
  }

  export type RevisionGroupByOutputType = {
    id: number
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    revisionNumber: number
    requestMessage: string | null
    responseMessage: string | null
    status: string
    requestedAt: Date
    completedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: RevisionCountAggregateOutputType | null
    _avg: RevisionAvgAggregateOutputType | null
    _sum: RevisionSumAggregateOutputType | null
    _min: RevisionMinAggregateOutputType | null
    _max: RevisionMaxAggregateOutputType | null
  }

  type GetRevisionGroupByPayload<T extends RevisionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RevisionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RevisionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RevisionGroupByOutputType[P]>
            : GetScalarType<T[P], RevisionGroupByOutputType[P]>
        }
      >
    >


  export type RevisionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    sampleId?: boolean
    productionTrackingId?: boolean
    revisionNumber?: boolean
    requestMessage?: boolean
    responseMessage?: boolean
    status?: boolean
    requestedAt?: boolean
    completedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | Revision$orderArgs<ExtArgs>
    sample?: boolean | Revision$sampleArgs<ExtArgs>
    productionTracking?: boolean | Revision$productionTrackingArgs<ExtArgs>
  }, ExtArgs["result"]["revision"]>



  export type RevisionSelectScalar = {
    id?: boolean
    orderId?: boolean
    sampleId?: boolean
    productionTrackingId?: boolean
    revisionNumber?: boolean
    requestMessage?: boolean
    responseMessage?: boolean
    status?: boolean
    requestedAt?: boolean
    completedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RevisionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "sampleId" | "productionTrackingId" | "revisionNumber" | "requestMessage" | "responseMessage" | "status" | "requestedAt" | "completedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["revision"]>
  export type RevisionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | Revision$orderArgs<ExtArgs>
    sample?: boolean | Revision$sampleArgs<ExtArgs>
    productionTracking?: boolean | Revision$productionTrackingArgs<ExtArgs>
  }

  export type $RevisionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Revision"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs> | null
      sample: Prisma.$SamplePayload<ExtArgs> | null
      productionTracking: Prisma.$ProductionTrackingPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: number | null
      sampleId: number | null
      productionTrackingId: number | null
      revisionNumber: number
      requestMessage: string | null
      responseMessage: string | null
      status: string
      requestedAt: Date
      completedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["revision"]>
    composites: {}
  }

  type RevisionGetPayload<S extends boolean | null | undefined | RevisionDefaultArgs> = $Result.GetResult<Prisma.$RevisionPayload, S>

  type RevisionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RevisionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RevisionCountAggregateInputType | true
    }

  export interface RevisionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Revision'], meta: { name: 'Revision' } }
    /**
     * Find zero or one Revision that matches the filter.
     * @param {RevisionFindUniqueArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RevisionFindUniqueArgs>(args: SelectSubset<T, RevisionFindUniqueArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Revision that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RevisionFindUniqueOrThrowArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RevisionFindUniqueOrThrowArgs>(args: SelectSubset<T, RevisionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Revision that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionFindFirstArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RevisionFindFirstArgs>(args?: SelectSubset<T, RevisionFindFirstArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Revision that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionFindFirstOrThrowArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RevisionFindFirstOrThrowArgs>(args?: SelectSubset<T, RevisionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Revisions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Revisions
     * const revisions = await prisma.revision.findMany()
     * 
     * // Get first 10 Revisions
     * const revisions = await prisma.revision.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const revisionWithIdOnly = await prisma.revision.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RevisionFindManyArgs>(args?: SelectSubset<T, RevisionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Revision.
     * @param {RevisionCreateArgs} args - Arguments to create a Revision.
     * @example
     * // Create one Revision
     * const Revision = await prisma.revision.create({
     *   data: {
     *     // ... data to create a Revision
     *   }
     * })
     * 
     */
    create<T extends RevisionCreateArgs>(args: SelectSubset<T, RevisionCreateArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Revisions.
     * @param {RevisionCreateManyArgs} args - Arguments to create many Revisions.
     * @example
     * // Create many Revisions
     * const revision = await prisma.revision.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RevisionCreateManyArgs>(args?: SelectSubset<T, RevisionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Revision.
     * @param {RevisionDeleteArgs} args - Arguments to delete one Revision.
     * @example
     * // Delete one Revision
     * const Revision = await prisma.revision.delete({
     *   where: {
     *     // ... filter to delete one Revision
     *   }
     * })
     * 
     */
    delete<T extends RevisionDeleteArgs>(args: SelectSubset<T, RevisionDeleteArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Revision.
     * @param {RevisionUpdateArgs} args - Arguments to update one Revision.
     * @example
     * // Update one Revision
     * const revision = await prisma.revision.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RevisionUpdateArgs>(args: SelectSubset<T, RevisionUpdateArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Revisions.
     * @param {RevisionDeleteManyArgs} args - Arguments to filter Revisions to delete.
     * @example
     * // Delete a few Revisions
     * const { count } = await prisma.revision.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RevisionDeleteManyArgs>(args?: SelectSubset<T, RevisionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Revisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Revisions
     * const revision = await prisma.revision.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RevisionUpdateManyArgs>(args: SelectSubset<T, RevisionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Revision.
     * @param {RevisionUpsertArgs} args - Arguments to update or create a Revision.
     * @example
     * // Update or create a Revision
     * const revision = await prisma.revision.upsert({
     *   create: {
     *     // ... data to create a Revision
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Revision we want to update
     *   }
     * })
     */
    upsert<T extends RevisionUpsertArgs>(args: SelectSubset<T, RevisionUpsertArgs<ExtArgs>>): Prisma__RevisionClient<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Revisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionCountArgs} args - Arguments to filter Revisions to count.
     * @example
     * // Count the number of Revisions
     * const count = await prisma.revision.count({
     *   where: {
     *     // ... the filter for the Revisions we want to count
     *   }
     * })
    **/
    count<T extends RevisionCountArgs>(
      args?: Subset<T, RevisionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RevisionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Revision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RevisionAggregateArgs>(args: Subset<T, RevisionAggregateArgs>): Prisma.PrismaPromise<GetRevisionAggregateType<T>>

    /**
     * Group by Revision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RevisionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RevisionGroupByArgs['orderBy'] }
        : { orderBy?: RevisionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RevisionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRevisionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Revision model
   */
  readonly fields: RevisionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Revision.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RevisionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends Revision$orderArgs<ExtArgs> = {}>(args?: Subset<T, Revision$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sample<T extends Revision$sampleArgs<ExtArgs> = {}>(args?: Subset<T, Revision$sampleArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productionTracking<T extends Revision$productionTrackingArgs<ExtArgs> = {}>(args?: Subset<T, Revision$productionTrackingArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Revision model
   */
  interface RevisionFieldRefs {
    readonly id: FieldRef<"Revision", 'Int'>
    readonly orderId: FieldRef<"Revision", 'Int'>
    readonly sampleId: FieldRef<"Revision", 'Int'>
    readonly productionTrackingId: FieldRef<"Revision", 'Int'>
    readonly revisionNumber: FieldRef<"Revision", 'Int'>
    readonly requestMessage: FieldRef<"Revision", 'String'>
    readonly responseMessage: FieldRef<"Revision", 'String'>
    readonly status: FieldRef<"Revision", 'String'>
    readonly requestedAt: FieldRef<"Revision", 'DateTime'>
    readonly completedAt: FieldRef<"Revision", 'DateTime'>
    readonly createdAt: FieldRef<"Revision", 'DateTime'>
    readonly updatedAt: FieldRef<"Revision", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Revision findUnique
   */
  export type RevisionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * Filter, which Revision to fetch.
     */
    where: RevisionWhereUniqueInput
  }

  /**
   * Revision findUniqueOrThrow
   */
  export type RevisionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * Filter, which Revision to fetch.
     */
    where: RevisionWhereUniqueInput
  }

  /**
   * Revision findFirst
   */
  export type RevisionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * Filter, which Revision to fetch.
     */
    where?: RevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisions to fetch.
     */
    orderBy?: RevisionOrderByWithRelationInput | RevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Revisions.
     */
    cursor?: RevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Revisions.
     */
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * Revision findFirstOrThrow
   */
  export type RevisionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * Filter, which Revision to fetch.
     */
    where?: RevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisions to fetch.
     */
    orderBy?: RevisionOrderByWithRelationInput | RevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Revisions.
     */
    cursor?: RevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Revisions.
     */
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * Revision findMany
   */
  export type RevisionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * Filter, which Revisions to fetch.
     */
    where?: RevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Revisions to fetch.
     */
    orderBy?: RevisionOrderByWithRelationInput | RevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Revisions.
     */
    cursor?: RevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Revisions.
     */
    skip?: number
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * Revision create
   */
  export type RevisionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * The data needed to create a Revision.
     */
    data: XOR<RevisionCreateInput, RevisionUncheckedCreateInput>
  }

  /**
   * Revision createMany
   */
  export type RevisionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Revisions.
     */
    data: RevisionCreateManyInput | RevisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Revision update
   */
  export type RevisionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * The data needed to update a Revision.
     */
    data: XOR<RevisionUpdateInput, RevisionUncheckedUpdateInput>
    /**
     * Choose, which Revision to update.
     */
    where: RevisionWhereUniqueInput
  }

  /**
   * Revision updateMany
   */
  export type RevisionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Revisions.
     */
    data: XOR<RevisionUpdateManyMutationInput, RevisionUncheckedUpdateManyInput>
    /**
     * Filter which Revisions to update
     */
    where?: RevisionWhereInput
    /**
     * Limit how many Revisions to update.
     */
    limit?: number
  }

  /**
   * Revision upsert
   */
  export type RevisionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * The filter to search for the Revision to update in case it exists.
     */
    where: RevisionWhereUniqueInput
    /**
     * In case the Revision found by the `where` argument doesn't exist, create a new Revision with this data.
     */
    create: XOR<RevisionCreateInput, RevisionUncheckedCreateInput>
    /**
     * In case the Revision was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RevisionUpdateInput, RevisionUncheckedUpdateInput>
  }

  /**
   * Revision delete
   */
  export type RevisionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    /**
     * Filter which Revision to delete.
     */
    where: RevisionWhereUniqueInput
  }

  /**
   * Revision deleteMany
   */
  export type RevisionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Revisions to delete
     */
    where?: RevisionWhereInput
    /**
     * Limit how many Revisions to delete.
     */
    limit?: number
  }

  /**
   * Revision.order
   */
  export type Revision$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Revision.sample
   */
  export type Revision$sampleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
  }

  /**
   * Revision.productionTracking
   */
  export type Revision$productionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
  }

  /**
   * Revision without action
   */
  export type RevisionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    name: string | null
    username: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    companyId: number | null
    role: $Enums.Role | null
    isCompanyOwner: boolean | null
    department: $Enums.Department | null
    jobTitle: string | null
    avatar: string | null
    bio: string | null
    emailNotifications: boolean | null
    pushNotifications: boolean | null
    language: string | null
    timezone: string | null
    isActive: boolean | null
    isPendingApproval: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    name: string | null
    username: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    companyId: number | null
    role: $Enums.Role | null
    isCompanyOwner: boolean | null
    department: $Enums.Department | null
    jobTitle: string | null
    avatar: string | null
    bio: string | null
    emailNotifications: boolean | null
    pushNotifications: boolean | null
    language: string | null
    timezone: string | null
    isActive: boolean | null
    isPendingApproval: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    username: number
    firstName: number
    lastName: number
    phone: number
    companyId: number
    role: number
    isCompanyOwner: number
    department: number
    jobTitle: number
    avatar: number
    bio: number
    socialLinks: number
    emailNotifications: number
    pushNotifications: number
    language: number
    timezone: number
    permissions: number
    isActive: number
    isPendingApproval: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    username?: true
    firstName?: true
    lastName?: true
    phone?: true
    companyId?: true
    role?: true
    isCompanyOwner?: true
    department?: true
    jobTitle?: true
    avatar?: true
    bio?: true
    emailNotifications?: true
    pushNotifications?: true
    language?: true
    timezone?: true
    isActive?: true
    isPendingApproval?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    username?: true
    firstName?: true
    lastName?: true
    phone?: true
    companyId?: true
    role?: true
    isCompanyOwner?: true
    department?: true
    jobTitle?: true
    avatar?: true
    bio?: true
    emailNotifications?: true
    pushNotifications?: true
    language?: true
    timezone?: true
    isActive?: true
    isPendingApproval?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    username?: true
    firstName?: true
    lastName?: true
    phone?: true
    companyId?: true
    role?: true
    isCompanyOwner?: true
    department?: true
    jobTitle?: true
    avatar?: true
    bio?: true
    socialLinks?: true
    emailNotifications?: true
    pushNotifications?: true
    language?: true
    timezone?: true
    permissions?: true
    isActive?: true
    isPendingApproval?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    email: string
    password: string
    name: string | null
    username: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    companyId: number | null
    role: $Enums.Role
    isCompanyOwner: boolean
    department: $Enums.Department | null
    jobTitle: string | null
    avatar: string | null
    bio: string | null
    socialLinks: JsonValue | null
    emailNotifications: boolean
    pushNotifications: boolean
    language: string
    timezone: string
    permissions: JsonValue | null
    isActive: boolean
    isPendingApproval: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    companyId?: boolean
    role?: boolean
    isCompanyOwner?: boolean
    department?: boolean
    jobTitle?: boolean
    avatar?: boolean
    bio?: boolean
    socialLinks?: boolean
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: boolean
    timezone?: boolean
    permissions?: boolean
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | User$companyArgs<ExtArgs>
    ownedCompanies?: boolean | User$ownedCompaniesArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    categories?: boolean | User$categoriesArgs<ExtArgs>
    collections?: boolean | User$collectionsArgs<ExtArgs>
    customerSamples?: boolean | User$customerSamplesArgs<ExtArgs>
    customerOrders?: boolean | User$customerOrdersArgs<ExtArgs>
    customerQuestions?: boolean | User$customerQuestionsArgs<ExtArgs>
    customerReviews?: boolean | User$customerReviewsArgs<ExtArgs>
    manufactureSamples?: boolean | User$manufactureSamplesArgs<ExtArgs>
    manufactureOrders?: boolean | User$manufactureOrdersArgs<ExtArgs>
    manufactureQuestions?: boolean | User$manufactureQuestionsArgs<ExtArgs>
    sampleProductionUpdates?: boolean | User$sampleProductionUpdatesArgs<ExtArgs>
    orderProductionUpdates?: boolean | User$orderProductionUpdatesArgs<ExtArgs>
    qualityInspections?: boolean | User$qualityInspectionsArgs<ExtArgs>
    ownedWorkshops?: boolean | User$ownedWorkshopsArgs<ExtArgs>
    revisionRequests?: boolean | User$revisionRequestsArgs<ExtArgs>
    favoriteCollections?: boolean | User$favoriteCollectionsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    tasks?: boolean | User$tasksArgs<ExtArgs>
    assignedTasks?: boolean | User$assignedTasksArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    companyId?: boolean
    role?: boolean
    isCompanyOwner?: boolean
    department?: boolean
    jobTitle?: boolean
    avatar?: boolean
    bio?: boolean
    socialLinks?: boolean
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: boolean
    timezone?: boolean
    permissions?: boolean
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "name" | "username" | "firstName" | "lastName" | "phone" | "companyId" | "role" | "isCompanyOwner" | "department" | "jobTitle" | "avatar" | "bio" | "socialLinks" | "emailNotifications" | "pushNotifications" | "language" | "timezone" | "permissions" | "isActive" | "isPendingApproval" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | User$companyArgs<ExtArgs>
    ownedCompanies?: boolean | User$ownedCompaniesArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    categories?: boolean | User$categoriesArgs<ExtArgs>
    collections?: boolean | User$collectionsArgs<ExtArgs>
    customerSamples?: boolean | User$customerSamplesArgs<ExtArgs>
    customerOrders?: boolean | User$customerOrdersArgs<ExtArgs>
    customerQuestions?: boolean | User$customerQuestionsArgs<ExtArgs>
    customerReviews?: boolean | User$customerReviewsArgs<ExtArgs>
    manufactureSamples?: boolean | User$manufactureSamplesArgs<ExtArgs>
    manufactureOrders?: boolean | User$manufactureOrdersArgs<ExtArgs>
    manufactureQuestions?: boolean | User$manufactureQuestionsArgs<ExtArgs>
    sampleProductionUpdates?: boolean | User$sampleProductionUpdatesArgs<ExtArgs>
    orderProductionUpdates?: boolean | User$orderProductionUpdatesArgs<ExtArgs>
    qualityInspections?: boolean | User$qualityInspectionsArgs<ExtArgs>
    ownedWorkshops?: boolean | User$ownedWorkshopsArgs<ExtArgs>
    revisionRequests?: boolean | User$revisionRequestsArgs<ExtArgs>
    favoriteCollections?: boolean | User$favoriteCollectionsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    tasks?: boolean | User$tasksArgs<ExtArgs>
    assignedTasks?: boolean | User$assignedTasksArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs> | null
      ownedCompanies: Prisma.$CompanyPayload<ExtArgs>[]
      sentMessages: Prisma.$MessagePayload<ExtArgs>[]
      receivedMessages: Prisma.$MessagePayload<ExtArgs>[]
      categories: Prisma.$CategoryPayload<ExtArgs>[]
      collections: Prisma.$CollectionPayload<ExtArgs>[]
      customerSamples: Prisma.$SamplePayload<ExtArgs>[]
      customerOrders: Prisma.$OrderPayload<ExtArgs>[]
      customerQuestions: Prisma.$QuestionPayload<ExtArgs>[]
      customerReviews: Prisma.$ReviewPayload<ExtArgs>[]
      manufactureSamples: Prisma.$SamplePayload<ExtArgs>[]
      manufactureOrders: Prisma.$OrderPayload<ExtArgs>[]
      manufactureQuestions: Prisma.$QuestionPayload<ExtArgs>[]
      sampleProductionUpdates: Prisma.$SampleProductionPayload<ExtArgs>[]
      orderProductionUpdates: Prisma.$OrderProductionPayload<ExtArgs>[]
      qualityInspections: Prisma.$QualityControlPayload<ExtArgs>[]
      ownedWorkshops: Prisma.$WorkshopPayload<ExtArgs>[]
      revisionRequests: Prisma.$ProductionRevisionPayload<ExtArgs>[]
      favoriteCollections: Prisma.$UserFavoriteCollectionPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      assignedTasks: Prisma.$TaskPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      password: string
      name: string | null
      username: string | null
      firstName: string | null
      lastName: string | null
      phone: string | null
      companyId: number | null
      role: $Enums.Role
      isCompanyOwner: boolean
      department: $Enums.Department | null
      jobTitle: string | null
      avatar: string | null
      bio: string | null
      socialLinks: Prisma.JsonValue | null
      emailNotifications: boolean
      pushNotifications: boolean
      language: string
      timezone: string
      permissions: Prisma.JsonValue | null
      isActive: boolean
      isPendingApproval: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends User$companyArgs<ExtArgs> = {}>(args?: Subset<T, User$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ownedCompanies<T extends User$ownedCompaniesArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedCompaniesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sentMessages<T extends User$sentMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedMessages<T extends User$receivedMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categories<T extends User$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    collections<T extends User$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, User$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customerSamples<T extends User$customerSamplesArgs<ExtArgs> = {}>(args?: Subset<T, User$customerSamplesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customerOrders<T extends User$customerOrdersArgs<ExtArgs> = {}>(args?: Subset<T, User$customerOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customerQuestions<T extends User$customerQuestionsArgs<ExtArgs> = {}>(args?: Subset<T, User$customerQuestionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customerReviews<T extends User$customerReviewsArgs<ExtArgs> = {}>(args?: Subset<T, User$customerReviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    manufactureSamples<T extends User$manufactureSamplesArgs<ExtArgs> = {}>(args?: Subset<T, User$manufactureSamplesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    manufactureOrders<T extends User$manufactureOrdersArgs<ExtArgs> = {}>(args?: Subset<T, User$manufactureOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    manufactureQuestions<T extends User$manufactureQuestionsArgs<ExtArgs> = {}>(args?: Subset<T, User$manufactureQuestionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sampleProductionUpdates<T extends User$sampleProductionUpdatesArgs<ExtArgs> = {}>(args?: Subset<T, User$sampleProductionUpdatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderProductionUpdates<T extends User$orderProductionUpdatesArgs<ExtArgs> = {}>(args?: Subset<T, User$orderProductionUpdatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualityInspections<T extends User$qualityInspectionsArgs<ExtArgs> = {}>(args?: Subset<T, User$qualityInspectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ownedWorkshops<T extends User$ownedWorkshopsArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedWorkshopsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    revisionRequests<T extends User$revisionRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$revisionRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favoriteCollections<T extends User$favoriteCollectionsArgs<ExtArgs> = {}>(args?: Subset<T, User$favoriteCollectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends User$tasksArgs<ExtArgs> = {}>(args?: Subset<T, User$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    assignedTasks<T extends User$assignedTasksArgs<ExtArgs> = {}>(args?: Subset<T, User$assignedTasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly companyId: FieldRef<"User", 'Int'>
    readonly role: FieldRef<"User", 'Role'>
    readonly isCompanyOwner: FieldRef<"User", 'Boolean'>
    readonly department: FieldRef<"User", 'Department'>
    readonly jobTitle: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly bio: FieldRef<"User", 'String'>
    readonly socialLinks: FieldRef<"User", 'Json'>
    readonly emailNotifications: FieldRef<"User", 'Boolean'>
    readonly pushNotifications: FieldRef<"User", 'Boolean'>
    readonly language: FieldRef<"User", 'String'>
    readonly timezone: FieldRef<"User", 'String'>
    readonly permissions: FieldRef<"User", 'Json'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly isPendingApproval: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.company
   */
  export type User$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * User.ownedCompanies
   */
  export type User$ownedCompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    cursor?: CompanyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * User.sentMessages
   */
  export type User$sentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.receivedMessages
   */
  export type User$receivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.categories
   */
  export type User$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.collections
   */
  export type User$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    cursor?: CollectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * User.customerSamples
   */
  export type User$customerSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    cursor?: SampleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * User.customerOrders
   */
  export type User$customerOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.customerQuestions
   */
  export type User$customerQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    where?: QuestionWhereInput
    orderBy?: QuestionOrderByWithRelationInput | QuestionOrderByWithRelationInput[]
    cursor?: QuestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuestionScalarFieldEnum | QuestionScalarFieldEnum[]
  }

  /**
   * User.customerReviews
   */
  export type User$customerReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * User.manufactureSamples
   */
  export type User$manufactureSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    cursor?: SampleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * User.manufactureOrders
   */
  export type User$manufactureOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.manufactureQuestions
   */
  export type User$manufactureQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    where?: QuestionWhereInput
    orderBy?: QuestionOrderByWithRelationInput | QuestionOrderByWithRelationInput[]
    cursor?: QuestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuestionScalarFieldEnum | QuestionScalarFieldEnum[]
  }

  /**
   * User.sampleProductionUpdates
   */
  export type User$sampleProductionUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    where?: SampleProductionWhereInput
    orderBy?: SampleProductionOrderByWithRelationInput | SampleProductionOrderByWithRelationInput[]
    cursor?: SampleProductionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SampleProductionScalarFieldEnum | SampleProductionScalarFieldEnum[]
  }

  /**
   * User.orderProductionUpdates
   */
  export type User$orderProductionUpdatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    where?: OrderProductionWhereInput
    orderBy?: OrderProductionOrderByWithRelationInput | OrderProductionOrderByWithRelationInput[]
    cursor?: OrderProductionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderProductionScalarFieldEnum | OrderProductionScalarFieldEnum[]
  }

  /**
   * User.qualityInspections
   */
  export type User$qualityInspectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    where?: QualityControlWhereInput
    orderBy?: QualityControlOrderByWithRelationInput | QualityControlOrderByWithRelationInput[]
    cursor?: QualityControlWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualityControlScalarFieldEnum | QualityControlScalarFieldEnum[]
  }

  /**
   * User.ownedWorkshops
   */
  export type User$ownedWorkshopsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    where?: WorkshopWhereInput
    orderBy?: WorkshopOrderByWithRelationInput | WorkshopOrderByWithRelationInput[]
    cursor?: WorkshopWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WorkshopScalarFieldEnum | WorkshopScalarFieldEnum[]
  }

  /**
   * User.revisionRequests
   */
  export type User$revisionRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    where?: ProductionRevisionWhereInput
    orderBy?: ProductionRevisionOrderByWithRelationInput | ProductionRevisionOrderByWithRelationInput[]
    cursor?: ProductionRevisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionRevisionScalarFieldEnum | ProductionRevisionScalarFieldEnum[]
  }

  /**
   * User.favoriteCollections
   */
  export type User$favoriteCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    where?: UserFavoriteCollectionWhereInput
    orderBy?: UserFavoriteCollectionOrderByWithRelationInput | UserFavoriteCollectionOrderByWithRelationInput[]
    cursor?: UserFavoriteCollectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserFavoriteCollectionScalarFieldEnum | UserFavoriteCollectionScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.tasks
   */
  export type User$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.assignedTasks
   */
  export type User$assignedTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    id: number | null
    authorId: number | null
    parentCategoryId: number | null
    companyId: number | null
  }

  export type CategorySumAggregateOutputType = {
    id: number | null
    authorId: number | null
    parentCategoryId: number | null
    companyId: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    authorId: number | null
    parentCategoryId: number | null
    companyId: number | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    authorId: number | null
    parentCategoryId: number | null
    companyId: number | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    name: number
    description: number
    authorId: number
    parentCategoryId: number
    companyId: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    id?: true
    authorId?: true
    parentCategoryId?: true
    companyId?: true
  }

  export type CategorySumAggregateInputType = {
    id?: true
    authorId?: true
    parentCategoryId?: true
    companyId?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    authorId?: true
    parentCategoryId?: true
    companyId?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    authorId?: true
    parentCategoryId?: true
    companyId?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    authorId?: true
    parentCategoryId?: true
    companyId?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    name: string
    description: string | null
    authorId: number | null
    parentCategoryId: number | null
    companyId: number | null
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    authorId?: boolean
    parentCategoryId?: boolean
    companyId?: boolean
    author?: boolean | Category$authorArgs<ExtArgs>
    collections?: boolean | Category$collectionsArgs<ExtArgs>
    subCategories?: boolean | Category$subCategoriesArgs<ExtArgs>
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    company?: boolean | Category$companyArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>



  export type CategorySelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    authorId?: boolean
    parentCategoryId?: boolean
    companyId?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "name" | "description" | "authorId" | "parentCategoryId" | "companyId", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | Category$authorArgs<ExtArgs>
    collections?: boolean | Category$collectionsArgs<ExtArgs>
    subCategories?: boolean | Category$subCategoriesArgs<ExtArgs>
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    company?: boolean | Category$companyArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      author: Prisma.$UserPayload<ExtArgs> | null
      collections: Prisma.$CollectionPayload<ExtArgs>[]
      subCategories: Prisma.$CategoryPayload<ExtArgs>[]
      parentCategory: Prisma.$CategoryPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      name: string
      description: string | null
      authorId: number | null
      parentCategoryId: number | null
      companyId: number | null
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends Category$authorArgs<ExtArgs> = {}>(args?: Subset<T, Category$authorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    collections<T extends Category$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, Category$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subCategories<T extends Category$subCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Category$subCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parentCategory<T extends Category$parentCategoryArgs<ExtArgs> = {}>(args?: Subset<T, Category$parentCategoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    company<T extends Category$companyArgs<ExtArgs> = {}>(args?: Subset<T, Category$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'Int'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
    readonly name: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly authorId: FieldRef<"Category", 'Int'>
    readonly parentCategoryId: FieldRef<"Category", 'Int'>
    readonly companyId: FieldRef<"Category", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.author
   */
  export type Category$authorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.collections
   */
  export type Category$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    cursor?: CollectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Category.subCategories
   */
  export type Category$subCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.parentCategory
   */
  export type Category$parentCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.company
   */
  export type Category$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Collection
   */

  export type AggregateCollection = {
    _count: CollectionCountAggregateOutputType | null
    _avg: CollectionAvgAggregateOutputType | null
    _sum: CollectionSumAggregateOutputType | null
    _min: CollectionMinAggregateOutputType | null
    _max: CollectionMaxAggregateOutputType | null
  }

  export type CollectionAvgAggregateOutputType = {
    id: number | null
    moq: number | null
    targetPrice: number | null
    targetLeadTime: number | null
    likesCount: number | null
    viewCount: number | null
    shareCount: number | null
    price: number | null
    stock: number | null
    categoryId: number | null
    authorId: number | null
    companyId: number | null
  }

  export type CollectionSumAggregateOutputType = {
    id: number | null
    moq: number | null
    targetPrice: number | null
    targetLeadTime: number | null
    likesCount: number | null
    viewCount: number | null
    shareCount: number | null
    price: number | null
    stock: number | null
    categoryId: number | null
    authorId: number | null
    companyId: number | null
  }

  export type CollectionMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    modelCode: string | null
    season: $Enums.Season | null
    gender: $Enums.Gender | null
    fit: string | null
    trend: string | null
    colors: string | null
    sizeGroups: string | null
    sizeRange: string | null
    measurementChart: string | null
    fabricComposition: string | null
    accessories: string | null
    images: string | null
    techPack: string | null
    moq: number | null
    targetPrice: number | null
    targetLeadTime: number | null
    notes: string | null
    likesCount: number | null
    viewCount: number | null
    shareCount: number | null
    lastViewedAt: Date | null
    price: number | null
    sku: string | null
    stock: number | null
    isActive: boolean | null
    isFeatured: boolean | null
    slug: string | null
    categoryId: number | null
    authorId: number | null
    companyId: number | null
  }

  export type CollectionMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    modelCode: string | null
    season: $Enums.Season | null
    gender: $Enums.Gender | null
    fit: string | null
    trend: string | null
    colors: string | null
    sizeGroups: string | null
    sizeRange: string | null
    measurementChart: string | null
    fabricComposition: string | null
    accessories: string | null
    images: string | null
    techPack: string | null
    moq: number | null
    targetPrice: number | null
    targetLeadTime: number | null
    notes: string | null
    likesCount: number | null
    viewCount: number | null
    shareCount: number | null
    lastViewedAt: Date | null
    price: number | null
    sku: string | null
    stock: number | null
    isActive: boolean | null
    isFeatured: boolean | null
    slug: string | null
    categoryId: number | null
    authorId: number | null
    companyId: number | null
  }

  export type CollectionCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    name: number
    description: number
    modelCode: number
    season: number
    gender: number
    fit: number
    trend: number
    colors: number
    sizeGroups: number
    sizeRange: number
    measurementChart: number
    fabricComposition: number
    accessories: number
    images: number
    techPack: number
    moq: number
    targetPrice: number
    targetLeadTime: number
    notes: number
    likesCount: number
    viewCount: number
    shareCount: number
    lastViewedAt: number
    price: number
    sku: number
    stock: number
    isActive: number
    isFeatured: number
    slug: number
    productionSchedule: number
    categoryId: number
    authorId: number
    companyId: number
    _all: number
  }


  export type CollectionAvgAggregateInputType = {
    id?: true
    moq?: true
    targetPrice?: true
    targetLeadTime?: true
    likesCount?: true
    viewCount?: true
    shareCount?: true
    price?: true
    stock?: true
    categoryId?: true
    authorId?: true
    companyId?: true
  }

  export type CollectionSumAggregateInputType = {
    id?: true
    moq?: true
    targetPrice?: true
    targetLeadTime?: true
    likesCount?: true
    viewCount?: true
    shareCount?: true
    price?: true
    stock?: true
    categoryId?: true
    authorId?: true
    companyId?: true
  }

  export type CollectionMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    modelCode?: true
    season?: true
    gender?: true
    fit?: true
    trend?: true
    colors?: true
    sizeGroups?: true
    sizeRange?: true
    measurementChart?: true
    fabricComposition?: true
    accessories?: true
    images?: true
    techPack?: true
    moq?: true
    targetPrice?: true
    targetLeadTime?: true
    notes?: true
    likesCount?: true
    viewCount?: true
    shareCount?: true
    lastViewedAt?: true
    price?: true
    sku?: true
    stock?: true
    isActive?: true
    isFeatured?: true
    slug?: true
    categoryId?: true
    authorId?: true
    companyId?: true
  }

  export type CollectionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    modelCode?: true
    season?: true
    gender?: true
    fit?: true
    trend?: true
    colors?: true
    sizeGroups?: true
    sizeRange?: true
    measurementChart?: true
    fabricComposition?: true
    accessories?: true
    images?: true
    techPack?: true
    moq?: true
    targetPrice?: true
    targetLeadTime?: true
    notes?: true
    likesCount?: true
    viewCount?: true
    shareCount?: true
    lastViewedAt?: true
    price?: true
    sku?: true
    stock?: true
    isActive?: true
    isFeatured?: true
    slug?: true
    categoryId?: true
    authorId?: true
    companyId?: true
  }

  export type CollectionCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    modelCode?: true
    season?: true
    gender?: true
    fit?: true
    trend?: true
    colors?: true
    sizeGroups?: true
    sizeRange?: true
    measurementChart?: true
    fabricComposition?: true
    accessories?: true
    images?: true
    techPack?: true
    moq?: true
    targetPrice?: true
    targetLeadTime?: true
    notes?: true
    likesCount?: true
    viewCount?: true
    shareCount?: true
    lastViewedAt?: true
    price?: true
    sku?: true
    stock?: true
    isActive?: true
    isFeatured?: true
    slug?: true
    productionSchedule?: true
    categoryId?: true
    authorId?: true
    companyId?: true
    _all?: true
  }

  export type CollectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Collection to aggregate.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Collections
    **/
    _count?: true | CollectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CollectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CollectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CollectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CollectionMaxAggregateInputType
  }

  export type GetCollectionAggregateType<T extends CollectionAggregateArgs> = {
        [P in keyof T & keyof AggregateCollection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollection[P]>
      : GetScalarType<T[P], AggregateCollection[P]>
  }




  export type CollectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CollectionWhereInput
    orderBy?: CollectionOrderByWithAggregationInput | CollectionOrderByWithAggregationInput[]
    by: CollectionScalarFieldEnum[] | CollectionScalarFieldEnum
    having?: CollectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CollectionCountAggregateInputType | true
    _avg?: CollectionAvgAggregateInputType
    _sum?: CollectionSumAggregateInputType
    _min?: CollectionMinAggregateInputType
    _max?: CollectionMaxAggregateInputType
  }

  export type CollectionGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    name: string
    description: string | null
    modelCode: string
    season: $Enums.Season | null
    gender: $Enums.Gender | null
    fit: string | null
    trend: string | null
    colors: string | null
    sizeGroups: string | null
    sizeRange: string | null
    measurementChart: string | null
    fabricComposition: string | null
    accessories: string | null
    images: string | null
    techPack: string | null
    moq: number | null
    targetPrice: number | null
    targetLeadTime: number | null
    notes: string | null
    likesCount: number
    viewCount: number
    shareCount: number
    lastViewedAt: Date | null
    price: number
    sku: string | null
    stock: number
    isActive: boolean
    isFeatured: boolean
    slug: string | null
    productionSchedule: JsonValue | null
    categoryId: number | null
    authorId: number | null
    companyId: number | null
    _count: CollectionCountAggregateOutputType | null
    _avg: CollectionAvgAggregateOutputType | null
    _sum: CollectionSumAggregateOutputType | null
    _min: CollectionMinAggregateOutputType | null
    _max: CollectionMaxAggregateOutputType | null
  }

  type GetCollectionGroupByPayload<T extends CollectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CollectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CollectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CollectionGroupByOutputType[P]>
            : GetScalarType<T[P], CollectionGroupByOutputType[P]>
        }
      >
    >


  export type CollectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    modelCode?: boolean
    season?: boolean
    gender?: boolean
    fit?: boolean
    trend?: boolean
    colors?: boolean
    sizeGroups?: boolean
    sizeRange?: boolean
    measurementChart?: boolean
    fabricComposition?: boolean
    accessories?: boolean
    images?: boolean
    techPack?: boolean
    moq?: boolean
    targetPrice?: boolean
    targetLeadTime?: boolean
    notes?: boolean
    likesCount?: boolean
    viewCount?: boolean
    shareCount?: boolean
    lastViewedAt?: boolean
    price?: boolean
    sku?: boolean
    stock?: boolean
    isActive?: boolean
    isFeatured?: boolean
    slug?: boolean
    productionSchedule?: boolean
    categoryId?: boolean
    authorId?: boolean
    companyId?: boolean
    certifications?: boolean | Collection$certificationsArgs<ExtArgs>
    favoritedBy?: boolean | Collection$favoritedByArgs<ExtArgs>
    category?: boolean | Collection$categoryArgs<ExtArgs>
    author?: boolean | Collection$authorArgs<ExtArgs>
    samples?: boolean | Collection$samplesArgs<ExtArgs>
    revisedSamples?: boolean | Collection$revisedSamplesArgs<ExtArgs>
    orders?: boolean | Collection$ordersArgs<ExtArgs>
    questions?: boolean | Collection$questionsArgs<ExtArgs>
    reviews?: boolean | Collection$reviewsArgs<ExtArgs>
    tasks?: boolean | Collection$tasksArgs<ExtArgs>
    company?: boolean | Collection$companyArgs<ExtArgs>
    _count?: boolean | CollectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collection"]>



  export type CollectionSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    modelCode?: boolean
    season?: boolean
    gender?: boolean
    fit?: boolean
    trend?: boolean
    colors?: boolean
    sizeGroups?: boolean
    sizeRange?: boolean
    measurementChart?: boolean
    fabricComposition?: boolean
    accessories?: boolean
    images?: boolean
    techPack?: boolean
    moq?: boolean
    targetPrice?: boolean
    targetLeadTime?: boolean
    notes?: boolean
    likesCount?: boolean
    viewCount?: boolean
    shareCount?: boolean
    lastViewedAt?: boolean
    price?: boolean
    sku?: boolean
    stock?: boolean
    isActive?: boolean
    isFeatured?: boolean
    slug?: boolean
    productionSchedule?: boolean
    categoryId?: boolean
    authorId?: boolean
    companyId?: boolean
  }

  export type CollectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "name" | "description" | "modelCode" | "season" | "gender" | "fit" | "trend" | "colors" | "sizeGroups" | "sizeRange" | "measurementChart" | "fabricComposition" | "accessories" | "images" | "techPack" | "moq" | "targetPrice" | "targetLeadTime" | "notes" | "likesCount" | "viewCount" | "shareCount" | "lastViewedAt" | "price" | "sku" | "stock" | "isActive" | "isFeatured" | "slug" | "productionSchedule" | "categoryId" | "authorId" | "companyId", ExtArgs["result"]["collection"]>
  export type CollectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    certifications?: boolean | Collection$certificationsArgs<ExtArgs>
    favoritedBy?: boolean | Collection$favoritedByArgs<ExtArgs>
    category?: boolean | Collection$categoryArgs<ExtArgs>
    author?: boolean | Collection$authorArgs<ExtArgs>
    samples?: boolean | Collection$samplesArgs<ExtArgs>
    revisedSamples?: boolean | Collection$revisedSamplesArgs<ExtArgs>
    orders?: boolean | Collection$ordersArgs<ExtArgs>
    questions?: boolean | Collection$questionsArgs<ExtArgs>
    reviews?: boolean | Collection$reviewsArgs<ExtArgs>
    tasks?: boolean | Collection$tasksArgs<ExtArgs>
    company?: boolean | Collection$companyArgs<ExtArgs>
    _count?: boolean | CollectionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CollectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Collection"
    objects: {
      certifications: Prisma.$CertificationPayload<ExtArgs>[]
      favoritedBy: Prisma.$UserFavoriteCollectionPayload<ExtArgs>[]
      category: Prisma.$CategoryPayload<ExtArgs> | null
      author: Prisma.$UserPayload<ExtArgs> | null
      samples: Prisma.$SamplePayload<ExtArgs>[]
      revisedSamples: Prisma.$SamplePayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      questions: Prisma.$QuestionPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      company: Prisma.$CompanyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      name: string
      description: string | null
      modelCode: string
      season: $Enums.Season | null
      gender: $Enums.Gender | null
      fit: string | null
      trend: string | null
      colors: string | null
      sizeGroups: string | null
      sizeRange: string | null
      measurementChart: string | null
      fabricComposition: string | null
      accessories: string | null
      images: string | null
      techPack: string | null
      moq: number | null
      targetPrice: number | null
      targetLeadTime: number | null
      notes: string | null
      likesCount: number
      viewCount: number
      shareCount: number
      lastViewedAt: Date | null
      price: number
      sku: string | null
      stock: number
      isActive: boolean
      isFeatured: boolean
      slug: string | null
      productionSchedule: Prisma.JsonValue | null
      categoryId: number | null
      authorId: number | null
      companyId: number | null
    }, ExtArgs["result"]["collection"]>
    composites: {}
  }

  type CollectionGetPayload<S extends boolean | null | undefined | CollectionDefaultArgs> = $Result.GetResult<Prisma.$CollectionPayload, S>

  type CollectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CollectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CollectionCountAggregateInputType | true
    }

  export interface CollectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Collection'], meta: { name: 'Collection' } }
    /**
     * Find zero or one Collection that matches the filter.
     * @param {CollectionFindUniqueArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CollectionFindUniqueArgs>(args: SelectSubset<T, CollectionFindUniqueArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Collection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CollectionFindUniqueOrThrowArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CollectionFindUniqueOrThrowArgs>(args: SelectSubset<T, CollectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Collection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindFirstArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CollectionFindFirstArgs>(args?: SelectSubset<T, CollectionFindFirstArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Collection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindFirstOrThrowArgs} args - Arguments to find a Collection
     * @example
     * // Get one Collection
     * const collection = await prisma.collection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CollectionFindFirstOrThrowArgs>(args?: SelectSubset<T, CollectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections
     * const collections = await prisma.collection.findMany()
     * 
     * // Get first 10 Collections
     * const collections = await prisma.collection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collectionWithIdOnly = await prisma.collection.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CollectionFindManyArgs>(args?: SelectSubset<T, CollectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Collection.
     * @param {CollectionCreateArgs} args - Arguments to create a Collection.
     * @example
     * // Create one Collection
     * const Collection = await prisma.collection.create({
     *   data: {
     *     // ... data to create a Collection
     *   }
     * })
     * 
     */
    create<T extends CollectionCreateArgs>(args: SelectSubset<T, CollectionCreateArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Collections.
     * @param {CollectionCreateManyArgs} args - Arguments to create many Collections.
     * @example
     * // Create many Collections
     * const collection = await prisma.collection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CollectionCreateManyArgs>(args?: SelectSubset<T, CollectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collection.
     * @param {CollectionDeleteArgs} args - Arguments to delete one Collection.
     * @example
     * // Delete one Collection
     * const Collection = await prisma.collection.delete({
     *   where: {
     *     // ... filter to delete one Collection
     *   }
     * })
     * 
     */
    delete<T extends CollectionDeleteArgs>(args: SelectSubset<T, CollectionDeleteArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Collection.
     * @param {CollectionUpdateArgs} args - Arguments to update one Collection.
     * @example
     * // Update one Collection
     * const collection = await prisma.collection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CollectionUpdateArgs>(args: SelectSubset<T, CollectionUpdateArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Collections.
     * @param {CollectionDeleteManyArgs} args - Arguments to filter Collections to delete.
     * @example
     * // Delete a few Collections
     * const { count } = await prisma.collection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CollectionDeleteManyArgs>(args?: SelectSubset<T, CollectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections
     * const collection = await prisma.collection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CollectionUpdateManyArgs>(args: SelectSubset<T, CollectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collection.
     * @param {CollectionUpsertArgs} args - Arguments to update or create a Collection.
     * @example
     * // Update or create a Collection
     * const collection = await prisma.collection.upsert({
     *   create: {
     *     // ... data to create a Collection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collection we want to update
     *   }
     * })
     */
    upsert<T extends CollectionUpsertArgs>(args: SelectSubset<T, CollectionUpsertArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionCountArgs} args - Arguments to filter Collections to count.
     * @example
     * // Count the number of Collections
     * const count = await prisma.collection.count({
     *   where: {
     *     // ... the filter for the Collections we want to count
     *   }
     * })
    **/
    count<T extends CollectionCountArgs>(
      args?: Subset<T, CollectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CollectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CollectionAggregateArgs>(args: Subset<T, CollectionAggregateArgs>): Prisma.PrismaPromise<GetCollectionAggregateType<T>>

    /**
     * Group by Collection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CollectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CollectionGroupByArgs['orderBy'] }
        : { orderBy?: CollectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CollectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Collection model
   */
  readonly fields: CollectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Collection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CollectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    certifications<T extends Collection$certificationsArgs<ExtArgs> = {}>(args?: Subset<T, Collection$certificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favoritedBy<T extends Collection$favoritedByArgs<ExtArgs> = {}>(args?: Subset<T, Collection$favoritedByArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    category<T extends Collection$categoryArgs<ExtArgs> = {}>(args?: Subset<T, Collection$categoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    author<T extends Collection$authorArgs<ExtArgs> = {}>(args?: Subset<T, Collection$authorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    samples<T extends Collection$samplesArgs<ExtArgs> = {}>(args?: Subset<T, Collection$samplesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    revisedSamples<T extends Collection$revisedSamplesArgs<ExtArgs> = {}>(args?: Subset<T, Collection$revisedSamplesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends Collection$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Collection$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    questions<T extends Collection$questionsArgs<ExtArgs> = {}>(args?: Subset<T, Collection$questionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends Collection$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Collection$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends Collection$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Collection$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    company<T extends Collection$companyArgs<ExtArgs> = {}>(args?: Subset<T, Collection$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Collection model
   */
  interface CollectionFieldRefs {
    readonly id: FieldRef<"Collection", 'Int'>
    readonly createdAt: FieldRef<"Collection", 'DateTime'>
    readonly updatedAt: FieldRef<"Collection", 'DateTime'>
    readonly name: FieldRef<"Collection", 'String'>
    readonly description: FieldRef<"Collection", 'String'>
    readonly modelCode: FieldRef<"Collection", 'String'>
    readonly season: FieldRef<"Collection", 'Season'>
    readonly gender: FieldRef<"Collection", 'Gender'>
    readonly fit: FieldRef<"Collection", 'String'>
    readonly trend: FieldRef<"Collection", 'String'>
    readonly colors: FieldRef<"Collection", 'String'>
    readonly sizeGroups: FieldRef<"Collection", 'String'>
    readonly sizeRange: FieldRef<"Collection", 'String'>
    readonly measurementChart: FieldRef<"Collection", 'String'>
    readonly fabricComposition: FieldRef<"Collection", 'String'>
    readonly accessories: FieldRef<"Collection", 'String'>
    readonly images: FieldRef<"Collection", 'String'>
    readonly techPack: FieldRef<"Collection", 'String'>
    readonly moq: FieldRef<"Collection", 'Int'>
    readonly targetPrice: FieldRef<"Collection", 'Float'>
    readonly targetLeadTime: FieldRef<"Collection", 'Int'>
    readonly notes: FieldRef<"Collection", 'String'>
    readonly likesCount: FieldRef<"Collection", 'Int'>
    readonly viewCount: FieldRef<"Collection", 'Int'>
    readonly shareCount: FieldRef<"Collection", 'Int'>
    readonly lastViewedAt: FieldRef<"Collection", 'DateTime'>
    readonly price: FieldRef<"Collection", 'Float'>
    readonly sku: FieldRef<"Collection", 'String'>
    readonly stock: FieldRef<"Collection", 'Int'>
    readonly isActive: FieldRef<"Collection", 'Boolean'>
    readonly isFeatured: FieldRef<"Collection", 'Boolean'>
    readonly slug: FieldRef<"Collection", 'String'>
    readonly productionSchedule: FieldRef<"Collection", 'Json'>
    readonly categoryId: FieldRef<"Collection", 'Int'>
    readonly authorId: FieldRef<"Collection", 'Int'>
    readonly companyId: FieldRef<"Collection", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Collection findUnique
   */
  export type CollectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection findUniqueOrThrow
   */
  export type CollectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection findFirst
   */
  export type CollectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Collections.
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Collections.
     */
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Collection findFirstOrThrow
   */
  export type CollectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collection to fetch.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Collections.
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Collections.
     */
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Collection findMany
   */
  export type CollectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter, which Collections to fetch.
     */
    where?: CollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Collections to fetch.
     */
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Collections.
     */
    cursor?: CollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Collections.
     */
    skip?: number
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Collection create
   */
  export type CollectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * The data needed to create a Collection.
     */
    data: XOR<CollectionCreateInput, CollectionUncheckedCreateInput>
  }

  /**
   * Collection createMany
   */
  export type CollectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Collections.
     */
    data: CollectionCreateManyInput | CollectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Collection update
   */
  export type CollectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * The data needed to update a Collection.
     */
    data: XOR<CollectionUpdateInput, CollectionUncheckedUpdateInput>
    /**
     * Choose, which Collection to update.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection updateMany
   */
  export type CollectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Collections.
     */
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyInput>
    /**
     * Filter which Collections to update
     */
    where?: CollectionWhereInput
    /**
     * Limit how many Collections to update.
     */
    limit?: number
  }

  /**
   * Collection upsert
   */
  export type CollectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * The filter to search for the Collection to update in case it exists.
     */
    where: CollectionWhereUniqueInput
    /**
     * In case the Collection found by the `where` argument doesn't exist, create a new Collection with this data.
     */
    create: XOR<CollectionCreateInput, CollectionUncheckedCreateInput>
    /**
     * In case the Collection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CollectionUpdateInput, CollectionUncheckedUpdateInput>
  }

  /**
   * Collection delete
   */
  export type CollectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    /**
     * Filter which Collection to delete.
     */
    where: CollectionWhereUniqueInput
  }

  /**
   * Collection deleteMany
   */
  export type CollectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Collections to delete
     */
    where?: CollectionWhereInput
    /**
     * Limit how many Collections to delete.
     */
    limit?: number
  }

  /**
   * Collection.certifications
   */
  export type Collection$certificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    where?: CertificationWhereInput
    orderBy?: CertificationOrderByWithRelationInput | CertificationOrderByWithRelationInput[]
    cursor?: CertificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CertificationScalarFieldEnum | CertificationScalarFieldEnum[]
  }

  /**
   * Collection.favoritedBy
   */
  export type Collection$favoritedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    where?: UserFavoriteCollectionWhereInput
    orderBy?: UserFavoriteCollectionOrderByWithRelationInput | UserFavoriteCollectionOrderByWithRelationInput[]
    cursor?: UserFavoriteCollectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserFavoriteCollectionScalarFieldEnum | UserFavoriteCollectionScalarFieldEnum[]
  }

  /**
   * Collection.category
   */
  export type Collection$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Collection.author
   */
  export type Collection$authorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Collection.samples
   */
  export type Collection$samplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    cursor?: SampleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * Collection.revisedSamples
   */
  export type Collection$revisedSamplesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    cursor?: SampleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * Collection.orders
   */
  export type Collection$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Collection.questions
   */
  export type Collection$questionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    where?: QuestionWhereInput
    orderBy?: QuestionOrderByWithRelationInput | QuestionOrderByWithRelationInput[]
    cursor?: QuestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuestionScalarFieldEnum | QuestionScalarFieldEnum[]
  }

  /**
   * Collection.reviews
   */
  export type Collection$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Collection.tasks
   */
  export type Collection$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Collection.company
   */
  export type Collection$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * Collection without action
   */
  export type CollectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
  }


  /**
   * Model UserFavoriteCollection
   */

  export type AggregateUserFavoriteCollection = {
    _count: UserFavoriteCollectionCountAggregateOutputType | null
    _avg: UserFavoriteCollectionAvgAggregateOutputType | null
    _sum: UserFavoriteCollectionSumAggregateOutputType | null
    _min: UserFavoriteCollectionMinAggregateOutputType | null
    _max: UserFavoriteCollectionMaxAggregateOutputType | null
  }

  export type UserFavoriteCollectionAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    collectionId: number | null
  }

  export type UserFavoriteCollectionSumAggregateOutputType = {
    id: number | null
    userId: number | null
    collectionId: number | null
  }

  export type UserFavoriteCollectionMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    userId: number | null
    collectionId: number | null
  }

  export type UserFavoriteCollectionMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    userId: number | null
    collectionId: number | null
  }

  export type UserFavoriteCollectionCountAggregateOutputType = {
    id: number
    createdAt: number
    userId: number
    collectionId: number
    _all: number
  }


  export type UserFavoriteCollectionAvgAggregateInputType = {
    id?: true
    userId?: true
    collectionId?: true
  }

  export type UserFavoriteCollectionSumAggregateInputType = {
    id?: true
    userId?: true
    collectionId?: true
  }

  export type UserFavoriteCollectionMinAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    collectionId?: true
  }

  export type UserFavoriteCollectionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    collectionId?: true
  }

  export type UserFavoriteCollectionCountAggregateInputType = {
    id?: true
    createdAt?: true
    userId?: true
    collectionId?: true
    _all?: true
  }

  export type UserFavoriteCollectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserFavoriteCollection to aggregate.
     */
    where?: UserFavoriteCollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserFavoriteCollections to fetch.
     */
    orderBy?: UserFavoriteCollectionOrderByWithRelationInput | UserFavoriteCollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserFavoriteCollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserFavoriteCollections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserFavoriteCollections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserFavoriteCollections
    **/
    _count?: true | UserFavoriteCollectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserFavoriteCollectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserFavoriteCollectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserFavoriteCollectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserFavoriteCollectionMaxAggregateInputType
  }

  export type GetUserFavoriteCollectionAggregateType<T extends UserFavoriteCollectionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserFavoriteCollection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserFavoriteCollection[P]>
      : GetScalarType<T[P], AggregateUserFavoriteCollection[P]>
  }




  export type UserFavoriteCollectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserFavoriteCollectionWhereInput
    orderBy?: UserFavoriteCollectionOrderByWithAggregationInput | UserFavoriteCollectionOrderByWithAggregationInput[]
    by: UserFavoriteCollectionScalarFieldEnum[] | UserFavoriteCollectionScalarFieldEnum
    having?: UserFavoriteCollectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserFavoriteCollectionCountAggregateInputType | true
    _avg?: UserFavoriteCollectionAvgAggregateInputType
    _sum?: UserFavoriteCollectionSumAggregateInputType
    _min?: UserFavoriteCollectionMinAggregateInputType
    _max?: UserFavoriteCollectionMaxAggregateInputType
  }

  export type UserFavoriteCollectionGroupByOutputType = {
    id: number
    createdAt: Date
    userId: number
    collectionId: number
    _count: UserFavoriteCollectionCountAggregateOutputType | null
    _avg: UserFavoriteCollectionAvgAggregateOutputType | null
    _sum: UserFavoriteCollectionSumAggregateOutputType | null
    _min: UserFavoriteCollectionMinAggregateOutputType | null
    _max: UserFavoriteCollectionMaxAggregateOutputType | null
  }

  type GetUserFavoriteCollectionGroupByPayload<T extends UserFavoriteCollectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserFavoriteCollectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserFavoriteCollectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserFavoriteCollectionGroupByOutputType[P]>
            : GetScalarType<T[P], UserFavoriteCollectionGroupByOutputType[P]>
        }
      >
    >


  export type UserFavoriteCollectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    userId?: boolean
    collectionId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userFavoriteCollection"]>



  export type UserFavoriteCollectionSelectScalar = {
    id?: boolean
    createdAt?: boolean
    userId?: boolean
    collectionId?: boolean
  }

  export type UserFavoriteCollectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "userId" | "collectionId", ExtArgs["result"]["userFavoriteCollection"]>
  export type UserFavoriteCollectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
  }

  export type $UserFavoriteCollectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserFavoriteCollection"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      collection: Prisma.$CollectionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      userId: number
      collectionId: number
    }, ExtArgs["result"]["userFavoriteCollection"]>
    composites: {}
  }

  type UserFavoriteCollectionGetPayload<S extends boolean | null | undefined | UserFavoriteCollectionDefaultArgs> = $Result.GetResult<Prisma.$UserFavoriteCollectionPayload, S>

  type UserFavoriteCollectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFavoriteCollectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserFavoriteCollectionCountAggregateInputType | true
    }

  export interface UserFavoriteCollectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserFavoriteCollection'], meta: { name: 'UserFavoriteCollection' } }
    /**
     * Find zero or one UserFavoriteCollection that matches the filter.
     * @param {UserFavoriteCollectionFindUniqueArgs} args - Arguments to find a UserFavoriteCollection
     * @example
     * // Get one UserFavoriteCollection
     * const userFavoriteCollection = await prisma.userFavoriteCollection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFavoriteCollectionFindUniqueArgs>(args: SelectSubset<T, UserFavoriteCollectionFindUniqueArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserFavoriteCollection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFavoriteCollectionFindUniqueOrThrowArgs} args - Arguments to find a UserFavoriteCollection
     * @example
     * // Get one UserFavoriteCollection
     * const userFavoriteCollection = await prisma.userFavoriteCollection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFavoriteCollectionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFavoriteCollectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserFavoriteCollection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFavoriteCollectionFindFirstArgs} args - Arguments to find a UserFavoriteCollection
     * @example
     * // Get one UserFavoriteCollection
     * const userFavoriteCollection = await prisma.userFavoriteCollection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFavoriteCollectionFindFirstArgs>(args?: SelectSubset<T, UserFavoriteCollectionFindFirstArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserFavoriteCollection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFavoriteCollectionFindFirstOrThrowArgs} args - Arguments to find a UserFavoriteCollection
     * @example
     * // Get one UserFavoriteCollection
     * const userFavoriteCollection = await prisma.userFavoriteCollection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFavoriteCollectionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFavoriteCollectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserFavoriteCollections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFavoriteCollectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserFavoriteCollections
     * const userFavoriteCollections = await prisma.userFavoriteCollection.findMany()
     * 
     * // Get first 10 UserFavoriteCollections
     * const userFavoriteCollections = await prisma.userFavoriteCollection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userFavoriteCollectionWithIdOnly = await prisma.userFavoriteCollection.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFavoriteCollectionFindManyArgs>(args?: SelectSubset<T, UserFavoriteCollectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserFavoriteCollection.
     * @param {UserFavoriteCollectionCreateArgs} args - Arguments to create a UserFavoriteCollection.
     * @example
     * // Create one UserFavoriteCollection
     * const UserFavoriteCollection = await prisma.userFavoriteCollection.create({
     *   data: {
     *     // ... data to create a UserFavoriteCollection
     *   }
     * })
     * 
     */
    create<T extends UserFavoriteCollectionCreateArgs>(args: SelectSubset<T, UserFavoriteCollectionCreateArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserFavoriteCollections.
     * @param {UserFavoriteCollectionCreateManyArgs} args - Arguments to create many UserFavoriteCollections.
     * @example
     * // Create many UserFavoriteCollections
     * const userFavoriteCollection = await prisma.userFavoriteCollection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserFavoriteCollectionCreateManyArgs>(args?: SelectSubset<T, UserFavoriteCollectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserFavoriteCollection.
     * @param {UserFavoriteCollectionDeleteArgs} args - Arguments to delete one UserFavoriteCollection.
     * @example
     * // Delete one UserFavoriteCollection
     * const UserFavoriteCollection = await prisma.userFavoriteCollection.delete({
     *   where: {
     *     // ... filter to delete one UserFavoriteCollection
     *   }
     * })
     * 
     */
    delete<T extends UserFavoriteCollectionDeleteArgs>(args: SelectSubset<T, UserFavoriteCollectionDeleteArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserFavoriteCollection.
     * @param {UserFavoriteCollectionUpdateArgs} args - Arguments to update one UserFavoriteCollection.
     * @example
     * // Update one UserFavoriteCollection
     * const userFavoriteCollection = await prisma.userFavoriteCollection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserFavoriteCollectionUpdateArgs>(args: SelectSubset<T, UserFavoriteCollectionUpdateArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserFavoriteCollections.
     * @param {UserFavoriteCollectionDeleteManyArgs} args - Arguments to filter UserFavoriteCollections to delete.
     * @example
     * // Delete a few UserFavoriteCollections
     * const { count } = await prisma.userFavoriteCollection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserFavoriteCollectionDeleteManyArgs>(args?: SelectSubset<T, UserFavoriteCollectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserFavoriteCollections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFavoriteCollectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserFavoriteCollections
     * const userFavoriteCollection = await prisma.userFavoriteCollection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserFavoriteCollectionUpdateManyArgs>(args: SelectSubset<T, UserFavoriteCollectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserFavoriteCollection.
     * @param {UserFavoriteCollectionUpsertArgs} args - Arguments to update or create a UserFavoriteCollection.
     * @example
     * // Update or create a UserFavoriteCollection
     * const userFavoriteCollection = await prisma.userFavoriteCollection.upsert({
     *   create: {
     *     // ... data to create a UserFavoriteCollection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserFavoriteCollection we want to update
     *   }
     * })
     */
    upsert<T extends UserFavoriteCollectionUpsertArgs>(args: SelectSubset<T, UserFavoriteCollectionUpsertArgs<ExtArgs>>): Prisma__UserFavoriteCollectionClient<$Result.GetResult<Prisma.$UserFavoriteCollectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserFavoriteCollections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFavoriteCollectionCountArgs} args - Arguments to filter UserFavoriteCollections to count.
     * @example
     * // Count the number of UserFavoriteCollections
     * const count = await prisma.userFavoriteCollection.count({
     *   where: {
     *     // ... the filter for the UserFavoriteCollections we want to count
     *   }
     * })
    **/
    count<T extends UserFavoriteCollectionCountArgs>(
      args?: Subset<T, UserFavoriteCollectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserFavoriteCollectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserFavoriteCollection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFavoriteCollectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserFavoriteCollectionAggregateArgs>(args: Subset<T, UserFavoriteCollectionAggregateArgs>): Prisma.PrismaPromise<GetUserFavoriteCollectionAggregateType<T>>

    /**
     * Group by UserFavoriteCollection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFavoriteCollectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserFavoriteCollectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserFavoriteCollectionGroupByArgs['orderBy'] }
        : { orderBy?: UserFavoriteCollectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserFavoriteCollectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserFavoriteCollectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserFavoriteCollection model
   */
  readonly fields: UserFavoriteCollectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserFavoriteCollection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserFavoriteCollectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    collection<T extends CollectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CollectionDefaultArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserFavoriteCollection model
   */
  interface UserFavoriteCollectionFieldRefs {
    readonly id: FieldRef<"UserFavoriteCollection", 'Int'>
    readonly createdAt: FieldRef<"UserFavoriteCollection", 'DateTime'>
    readonly userId: FieldRef<"UserFavoriteCollection", 'Int'>
    readonly collectionId: FieldRef<"UserFavoriteCollection", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * UserFavoriteCollection findUnique
   */
  export type UserFavoriteCollectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * Filter, which UserFavoriteCollection to fetch.
     */
    where: UserFavoriteCollectionWhereUniqueInput
  }

  /**
   * UserFavoriteCollection findUniqueOrThrow
   */
  export type UserFavoriteCollectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * Filter, which UserFavoriteCollection to fetch.
     */
    where: UserFavoriteCollectionWhereUniqueInput
  }

  /**
   * UserFavoriteCollection findFirst
   */
  export type UserFavoriteCollectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * Filter, which UserFavoriteCollection to fetch.
     */
    where?: UserFavoriteCollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserFavoriteCollections to fetch.
     */
    orderBy?: UserFavoriteCollectionOrderByWithRelationInput | UserFavoriteCollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserFavoriteCollections.
     */
    cursor?: UserFavoriteCollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserFavoriteCollections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserFavoriteCollections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserFavoriteCollections.
     */
    distinct?: UserFavoriteCollectionScalarFieldEnum | UserFavoriteCollectionScalarFieldEnum[]
  }

  /**
   * UserFavoriteCollection findFirstOrThrow
   */
  export type UserFavoriteCollectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * Filter, which UserFavoriteCollection to fetch.
     */
    where?: UserFavoriteCollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserFavoriteCollections to fetch.
     */
    orderBy?: UserFavoriteCollectionOrderByWithRelationInput | UserFavoriteCollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserFavoriteCollections.
     */
    cursor?: UserFavoriteCollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserFavoriteCollections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserFavoriteCollections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserFavoriteCollections.
     */
    distinct?: UserFavoriteCollectionScalarFieldEnum | UserFavoriteCollectionScalarFieldEnum[]
  }

  /**
   * UserFavoriteCollection findMany
   */
  export type UserFavoriteCollectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * Filter, which UserFavoriteCollections to fetch.
     */
    where?: UserFavoriteCollectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserFavoriteCollections to fetch.
     */
    orderBy?: UserFavoriteCollectionOrderByWithRelationInput | UserFavoriteCollectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserFavoriteCollections.
     */
    cursor?: UserFavoriteCollectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserFavoriteCollections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserFavoriteCollections.
     */
    skip?: number
    distinct?: UserFavoriteCollectionScalarFieldEnum | UserFavoriteCollectionScalarFieldEnum[]
  }

  /**
   * UserFavoriteCollection create
   */
  export type UserFavoriteCollectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserFavoriteCollection.
     */
    data: XOR<UserFavoriteCollectionCreateInput, UserFavoriteCollectionUncheckedCreateInput>
  }

  /**
   * UserFavoriteCollection createMany
   */
  export type UserFavoriteCollectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserFavoriteCollections.
     */
    data: UserFavoriteCollectionCreateManyInput | UserFavoriteCollectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserFavoriteCollection update
   */
  export type UserFavoriteCollectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserFavoriteCollection.
     */
    data: XOR<UserFavoriteCollectionUpdateInput, UserFavoriteCollectionUncheckedUpdateInput>
    /**
     * Choose, which UserFavoriteCollection to update.
     */
    where: UserFavoriteCollectionWhereUniqueInput
  }

  /**
   * UserFavoriteCollection updateMany
   */
  export type UserFavoriteCollectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserFavoriteCollections.
     */
    data: XOR<UserFavoriteCollectionUpdateManyMutationInput, UserFavoriteCollectionUncheckedUpdateManyInput>
    /**
     * Filter which UserFavoriteCollections to update
     */
    where?: UserFavoriteCollectionWhereInput
    /**
     * Limit how many UserFavoriteCollections to update.
     */
    limit?: number
  }

  /**
   * UserFavoriteCollection upsert
   */
  export type UserFavoriteCollectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserFavoriteCollection to update in case it exists.
     */
    where: UserFavoriteCollectionWhereUniqueInput
    /**
     * In case the UserFavoriteCollection found by the `where` argument doesn't exist, create a new UserFavoriteCollection with this data.
     */
    create: XOR<UserFavoriteCollectionCreateInput, UserFavoriteCollectionUncheckedCreateInput>
    /**
     * In case the UserFavoriteCollection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserFavoriteCollectionUpdateInput, UserFavoriteCollectionUncheckedUpdateInput>
  }

  /**
   * UserFavoriteCollection delete
   */
  export type UserFavoriteCollectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
    /**
     * Filter which UserFavoriteCollection to delete.
     */
    where: UserFavoriteCollectionWhereUniqueInput
  }

  /**
   * UserFavoriteCollection deleteMany
   */
  export type UserFavoriteCollectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserFavoriteCollections to delete
     */
    where?: UserFavoriteCollectionWhereInput
    /**
     * Limit how many UserFavoriteCollections to delete.
     */
    limit?: number
  }

  /**
   * UserFavoriteCollection without action
   */
  export type UserFavoriteCollectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserFavoriteCollection
     */
    select?: UserFavoriteCollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserFavoriteCollection
     */
    omit?: UserFavoriteCollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserFavoriteCollectionInclude<ExtArgs> | null
  }


  /**
   * Model Sample
   */

  export type AggregateSample = {
    _count: SampleCountAggregateOutputType | null
    _avg: SampleAvgAggregateOutputType | null
    _sum: SampleSumAggregateOutputType | null
    _min: SampleMinAggregateOutputType | null
    _max: SampleMaxAggregateOutputType | null
  }

  export type SampleAvgAggregateOutputType = {
    id: number | null
    originalCollectionId: number | null
    unitPrice: number | null
    productionDays: number | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
    viewCount: number | null
    shareCount: number | null
  }

  export type SampleSumAggregateOutputType = {
    id: number | null
    originalCollectionId: number | null
    unitPrice: number | null
    productionDays: number | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
    viewCount: number | null
    shareCount: number | null
  }

  export type SampleMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    sampleNumber: string | null
    sampleType: $Enums.SampleType | null
    status: $Enums.SampleStatus | null
    customerNote: string | null
    manufacturerResponse: string | null
    customDesignImages: string | null
    revisionRequests: string | null
    originalCollectionId: number | null
    name: string | null
    description: string | null
    images: string | null
    aiGenerated: boolean | null
    aiPrompt: string | null
    aiSketchUrl: string | null
    unitPrice: number | null
    productionDays: number | null
    estimatedProductionDate: Date | null
    actualProductionDate: Date | null
    shippingDate: Date | null
    deliveryAddress: string | null
    cargoTrackingNumber: string | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    customerQuoteNote: string | null
    customerQuoteType: string | null
    customerQuoteSentAt: Date | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
    viewCount: number | null
    shareCount: number | null
    lastViewedAt: Date | null
  }

  export type SampleMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    sampleNumber: string | null
    sampleType: $Enums.SampleType | null
    status: $Enums.SampleStatus | null
    customerNote: string | null
    manufacturerResponse: string | null
    customDesignImages: string | null
    revisionRequests: string | null
    originalCollectionId: number | null
    name: string | null
    description: string | null
    images: string | null
    aiGenerated: boolean | null
    aiPrompt: string | null
    aiSketchUrl: string | null
    unitPrice: number | null
    productionDays: number | null
    estimatedProductionDate: Date | null
    actualProductionDate: Date | null
    shippingDate: Date | null
    deliveryAddress: string | null
    cargoTrackingNumber: string | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    customerQuoteNote: string | null
    customerQuoteType: string | null
    customerQuoteSentAt: Date | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
    viewCount: number | null
    shareCount: number | null
    lastViewedAt: Date | null
  }

  export type SampleCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    sampleNumber: number
    sampleType: number
    status: number
    customerNote: number
    manufacturerResponse: number
    customDesignImages: number
    revisionRequests: number
    originalCollectionId: number
    name: number
    description: number
    images: number
    aiGenerated: number
    aiPrompt: number
    aiSketchUrl: number
    unitPrice: number
    productionDays: number
    estimatedProductionDate: number
    actualProductionDate: number
    shippingDate: number
    deliveryAddress: number
    cargoTrackingNumber: number
    customerQuotedPrice: number
    customerQuoteDays: number
    customerQuoteNote: number
    customerQuoteType: number
    customerQuoteSentAt: number
    collectionId: number
    customerId: number
    manufactureId: number
    companyId: number
    viewCount: number
    shareCount: number
    lastViewedAt: number
    _all: number
  }


  export type SampleAvgAggregateInputType = {
    id?: true
    originalCollectionId?: true
    unitPrice?: true
    productionDays?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
    viewCount?: true
    shareCount?: true
  }

  export type SampleSumAggregateInputType = {
    id?: true
    originalCollectionId?: true
    unitPrice?: true
    productionDays?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
    viewCount?: true
    shareCount?: true
  }

  export type SampleMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    sampleNumber?: true
    sampleType?: true
    status?: true
    customerNote?: true
    manufacturerResponse?: true
    customDesignImages?: true
    revisionRequests?: true
    originalCollectionId?: true
    name?: true
    description?: true
    images?: true
    aiGenerated?: true
    aiPrompt?: true
    aiSketchUrl?: true
    unitPrice?: true
    productionDays?: true
    estimatedProductionDate?: true
    actualProductionDate?: true
    shippingDate?: true
    deliveryAddress?: true
    cargoTrackingNumber?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    customerQuoteNote?: true
    customerQuoteType?: true
    customerQuoteSentAt?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
    viewCount?: true
    shareCount?: true
    lastViewedAt?: true
  }

  export type SampleMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    sampleNumber?: true
    sampleType?: true
    status?: true
    customerNote?: true
    manufacturerResponse?: true
    customDesignImages?: true
    revisionRequests?: true
    originalCollectionId?: true
    name?: true
    description?: true
    images?: true
    aiGenerated?: true
    aiPrompt?: true
    aiSketchUrl?: true
    unitPrice?: true
    productionDays?: true
    estimatedProductionDate?: true
    actualProductionDate?: true
    shippingDate?: true
    deliveryAddress?: true
    cargoTrackingNumber?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    customerQuoteNote?: true
    customerQuoteType?: true
    customerQuoteSentAt?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
    viewCount?: true
    shareCount?: true
    lastViewedAt?: true
  }

  export type SampleCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    sampleNumber?: true
    sampleType?: true
    status?: true
    customerNote?: true
    manufacturerResponse?: true
    customDesignImages?: true
    revisionRequests?: true
    originalCollectionId?: true
    name?: true
    description?: true
    images?: true
    aiGenerated?: true
    aiPrompt?: true
    aiSketchUrl?: true
    unitPrice?: true
    productionDays?: true
    estimatedProductionDate?: true
    actualProductionDate?: true
    shippingDate?: true
    deliveryAddress?: true
    cargoTrackingNumber?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    customerQuoteNote?: true
    customerQuoteType?: true
    customerQuoteSentAt?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
    viewCount?: true
    shareCount?: true
    lastViewedAt?: true
    _all?: true
  }

  export type SampleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sample to aggregate.
     */
    where?: SampleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Samples to fetch.
     */
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SampleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Samples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Samples.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Samples
    **/
    _count?: true | SampleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SampleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SampleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SampleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SampleMaxAggregateInputType
  }

  export type GetSampleAggregateType<T extends SampleAggregateArgs> = {
        [P in keyof T & keyof AggregateSample]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSample[P]>
      : GetScalarType<T[P], AggregateSample[P]>
  }




  export type SampleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleWhereInput
    orderBy?: SampleOrderByWithAggregationInput | SampleOrderByWithAggregationInput[]
    by: SampleScalarFieldEnum[] | SampleScalarFieldEnum
    having?: SampleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SampleCountAggregateInputType | true
    _avg?: SampleAvgAggregateInputType
    _sum?: SampleSumAggregateInputType
    _min?: SampleMinAggregateInputType
    _max?: SampleMaxAggregateInputType
  }

  export type SampleGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    sampleNumber: string
    sampleType: $Enums.SampleType
    status: $Enums.SampleStatus
    customerNote: string | null
    manufacturerResponse: string | null
    customDesignImages: string | null
    revisionRequests: string | null
    originalCollectionId: number | null
    name: string | null
    description: string | null
    images: string | null
    aiGenerated: boolean | null
    aiPrompt: string | null
    aiSketchUrl: string | null
    unitPrice: number | null
    productionDays: number | null
    estimatedProductionDate: Date | null
    actualProductionDate: Date | null
    shippingDate: Date | null
    deliveryAddress: string | null
    cargoTrackingNumber: string | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    customerQuoteNote: string | null
    customerQuoteType: string | null
    customerQuoteSentAt: Date | null
    collectionId: number | null
    customerId: number
    manufactureId: number
    companyId: number | null
    viewCount: number
    shareCount: number
    lastViewedAt: Date | null
    _count: SampleCountAggregateOutputType | null
    _avg: SampleAvgAggregateOutputType | null
    _sum: SampleSumAggregateOutputType | null
    _min: SampleMinAggregateOutputType | null
    _max: SampleMaxAggregateOutputType | null
  }

  type GetSampleGroupByPayload<T extends SampleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SampleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SampleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SampleGroupByOutputType[P]>
            : GetScalarType<T[P], SampleGroupByOutputType[P]>
        }
      >
    >


  export type SampleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sampleNumber?: boolean
    sampleType?: boolean
    status?: boolean
    customerNote?: boolean
    manufacturerResponse?: boolean
    customDesignImages?: boolean
    revisionRequests?: boolean
    originalCollectionId?: boolean
    name?: boolean
    description?: boolean
    images?: boolean
    aiGenerated?: boolean
    aiPrompt?: boolean
    aiSketchUrl?: boolean
    unitPrice?: boolean
    productionDays?: boolean
    estimatedProductionDate?: boolean
    actualProductionDate?: boolean
    shippingDate?: boolean
    deliveryAddress?: boolean
    cargoTrackingNumber?: boolean
    customerQuotedPrice?: boolean
    customerQuoteDays?: boolean
    customerQuoteNote?: boolean
    customerQuoteType?: boolean
    customerQuoteSentAt?: boolean
    collectionId?: boolean
    customerId?: boolean
    manufactureId?: boolean
    companyId?: boolean
    viewCount?: boolean
    shareCount?: boolean
    lastViewedAt?: boolean
    collection?: boolean | Sample$collectionArgs<ExtArgs>
    originalCollection?: boolean | Sample$originalCollectionArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    manufacture?: boolean | UserDefaultArgs<ExtArgs>
    productionHistory?: boolean | Sample$productionHistoryArgs<ExtArgs>
    productionTracking?: boolean | Sample$productionTrackingArgs<ExtArgs>
    revisions?: boolean | Sample$revisionsArgs<ExtArgs>
    messages?: boolean | Sample$messagesArgs<ExtArgs>
    company?: boolean | Sample$companyArgs<ExtArgs>
    aiAnalysis?: boolean | Sample$aiAnalysisArgs<ExtArgs>
    tasks?: boolean | Sample$tasksArgs<ExtArgs>
    notifications?: boolean | Sample$notificationsArgs<ExtArgs>
    _count?: boolean | SampleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sample"]>



  export type SampleSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sampleNumber?: boolean
    sampleType?: boolean
    status?: boolean
    customerNote?: boolean
    manufacturerResponse?: boolean
    customDesignImages?: boolean
    revisionRequests?: boolean
    originalCollectionId?: boolean
    name?: boolean
    description?: boolean
    images?: boolean
    aiGenerated?: boolean
    aiPrompt?: boolean
    aiSketchUrl?: boolean
    unitPrice?: boolean
    productionDays?: boolean
    estimatedProductionDate?: boolean
    actualProductionDate?: boolean
    shippingDate?: boolean
    deliveryAddress?: boolean
    cargoTrackingNumber?: boolean
    customerQuotedPrice?: boolean
    customerQuoteDays?: boolean
    customerQuoteNote?: boolean
    customerQuoteType?: boolean
    customerQuoteSentAt?: boolean
    collectionId?: boolean
    customerId?: boolean
    manufactureId?: boolean
    companyId?: boolean
    viewCount?: boolean
    shareCount?: boolean
    lastViewedAt?: boolean
  }

  export type SampleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "sampleNumber" | "sampleType" | "status" | "customerNote" | "manufacturerResponse" | "customDesignImages" | "revisionRequests" | "originalCollectionId" | "name" | "description" | "images" | "aiGenerated" | "aiPrompt" | "aiSketchUrl" | "unitPrice" | "productionDays" | "estimatedProductionDate" | "actualProductionDate" | "shippingDate" | "deliveryAddress" | "cargoTrackingNumber" | "customerQuotedPrice" | "customerQuoteDays" | "customerQuoteNote" | "customerQuoteType" | "customerQuoteSentAt" | "collectionId" | "customerId" | "manufactureId" | "companyId" | "viewCount" | "shareCount" | "lastViewedAt", ExtArgs["result"]["sample"]>
  export type SampleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collection?: boolean | Sample$collectionArgs<ExtArgs>
    originalCollection?: boolean | Sample$originalCollectionArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    manufacture?: boolean | UserDefaultArgs<ExtArgs>
    productionHistory?: boolean | Sample$productionHistoryArgs<ExtArgs>
    productionTracking?: boolean | Sample$productionTrackingArgs<ExtArgs>
    revisions?: boolean | Sample$revisionsArgs<ExtArgs>
    messages?: boolean | Sample$messagesArgs<ExtArgs>
    company?: boolean | Sample$companyArgs<ExtArgs>
    aiAnalysis?: boolean | Sample$aiAnalysisArgs<ExtArgs>
    tasks?: boolean | Sample$tasksArgs<ExtArgs>
    notifications?: boolean | Sample$notificationsArgs<ExtArgs>
    _count?: boolean | SampleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SamplePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sample"
    objects: {
      collection: Prisma.$CollectionPayload<ExtArgs> | null
      originalCollection: Prisma.$CollectionPayload<ExtArgs> | null
      customer: Prisma.$UserPayload<ExtArgs>
      manufacture: Prisma.$UserPayload<ExtArgs>
      productionHistory: Prisma.$SampleProductionPayload<ExtArgs>[]
      productionTracking: Prisma.$ProductionTrackingPayload<ExtArgs>[]
      revisions: Prisma.$RevisionPayload<ExtArgs>[]
      messages: Prisma.$MessagePayload<ExtArgs>[]
      company: Prisma.$CompanyPayload<ExtArgs> | null
      aiAnalysis: Prisma.$AIAnalysisPayload<ExtArgs> | null
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      sampleNumber: string
      sampleType: $Enums.SampleType
      status: $Enums.SampleStatus
      customerNote: string | null
      manufacturerResponse: string | null
      customDesignImages: string | null
      revisionRequests: string | null
      originalCollectionId: number | null
      name: string | null
      description: string | null
      images: string | null
      aiGenerated: boolean | null
      aiPrompt: string | null
      aiSketchUrl: string | null
      unitPrice: number | null
      productionDays: number | null
      estimatedProductionDate: Date | null
      actualProductionDate: Date | null
      shippingDate: Date | null
      deliveryAddress: string | null
      cargoTrackingNumber: string | null
      customerQuotedPrice: number | null
      customerQuoteDays: number | null
      customerQuoteNote: string | null
      customerQuoteType: string | null
      customerQuoteSentAt: Date | null
      collectionId: number | null
      customerId: number
      manufactureId: number
      companyId: number | null
      viewCount: number
      shareCount: number
      lastViewedAt: Date | null
    }, ExtArgs["result"]["sample"]>
    composites: {}
  }

  type SampleGetPayload<S extends boolean | null | undefined | SampleDefaultArgs> = $Result.GetResult<Prisma.$SamplePayload, S>

  type SampleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SampleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SampleCountAggregateInputType | true
    }

  export interface SampleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sample'], meta: { name: 'Sample' } }
    /**
     * Find zero or one Sample that matches the filter.
     * @param {SampleFindUniqueArgs} args - Arguments to find a Sample
     * @example
     * // Get one Sample
     * const sample = await prisma.sample.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SampleFindUniqueArgs>(args: SelectSubset<T, SampleFindUniqueArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sample that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SampleFindUniqueOrThrowArgs} args - Arguments to find a Sample
     * @example
     * // Get one Sample
     * const sample = await prisma.sample.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SampleFindUniqueOrThrowArgs>(args: SelectSubset<T, SampleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sample that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleFindFirstArgs} args - Arguments to find a Sample
     * @example
     * // Get one Sample
     * const sample = await prisma.sample.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SampleFindFirstArgs>(args?: SelectSubset<T, SampleFindFirstArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sample that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleFindFirstOrThrowArgs} args - Arguments to find a Sample
     * @example
     * // Get one Sample
     * const sample = await prisma.sample.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SampleFindFirstOrThrowArgs>(args?: SelectSubset<T, SampleFindFirstOrThrowArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Samples that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Samples
     * const samples = await prisma.sample.findMany()
     * 
     * // Get first 10 Samples
     * const samples = await prisma.sample.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sampleWithIdOnly = await prisma.sample.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SampleFindManyArgs>(args?: SelectSubset<T, SampleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sample.
     * @param {SampleCreateArgs} args - Arguments to create a Sample.
     * @example
     * // Create one Sample
     * const Sample = await prisma.sample.create({
     *   data: {
     *     // ... data to create a Sample
     *   }
     * })
     * 
     */
    create<T extends SampleCreateArgs>(args: SelectSubset<T, SampleCreateArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Samples.
     * @param {SampleCreateManyArgs} args - Arguments to create many Samples.
     * @example
     * // Create many Samples
     * const sample = await prisma.sample.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SampleCreateManyArgs>(args?: SelectSubset<T, SampleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sample.
     * @param {SampleDeleteArgs} args - Arguments to delete one Sample.
     * @example
     * // Delete one Sample
     * const Sample = await prisma.sample.delete({
     *   where: {
     *     // ... filter to delete one Sample
     *   }
     * })
     * 
     */
    delete<T extends SampleDeleteArgs>(args: SelectSubset<T, SampleDeleteArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sample.
     * @param {SampleUpdateArgs} args - Arguments to update one Sample.
     * @example
     * // Update one Sample
     * const sample = await prisma.sample.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SampleUpdateArgs>(args: SelectSubset<T, SampleUpdateArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Samples.
     * @param {SampleDeleteManyArgs} args - Arguments to filter Samples to delete.
     * @example
     * // Delete a few Samples
     * const { count } = await prisma.sample.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SampleDeleteManyArgs>(args?: SelectSubset<T, SampleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Samples.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Samples
     * const sample = await prisma.sample.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SampleUpdateManyArgs>(args: SelectSubset<T, SampleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sample.
     * @param {SampleUpsertArgs} args - Arguments to update or create a Sample.
     * @example
     * // Update or create a Sample
     * const sample = await prisma.sample.upsert({
     *   create: {
     *     // ... data to create a Sample
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sample we want to update
     *   }
     * })
     */
    upsert<T extends SampleUpsertArgs>(args: SelectSubset<T, SampleUpsertArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Samples.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleCountArgs} args - Arguments to filter Samples to count.
     * @example
     * // Count the number of Samples
     * const count = await prisma.sample.count({
     *   where: {
     *     // ... the filter for the Samples we want to count
     *   }
     * })
    **/
    count<T extends SampleCountArgs>(
      args?: Subset<T, SampleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SampleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sample.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SampleAggregateArgs>(args: Subset<T, SampleAggregateArgs>): Prisma.PrismaPromise<GetSampleAggregateType<T>>

    /**
     * Group by Sample.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SampleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SampleGroupByArgs['orderBy'] }
        : { orderBy?: SampleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SampleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSampleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sample model
   */
  readonly fields: SampleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sample.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SampleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    collection<T extends Sample$collectionArgs<ExtArgs> = {}>(args?: Subset<T, Sample$collectionArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    originalCollection<T extends Sample$originalCollectionArgs<ExtArgs> = {}>(args?: Subset<T, Sample$originalCollectionArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    manufacture<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productionHistory<T extends Sample$productionHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Sample$productionHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productionTracking<T extends Sample$productionTrackingArgs<ExtArgs> = {}>(args?: Subset<T, Sample$productionTrackingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    revisions<T extends Sample$revisionsArgs<ExtArgs> = {}>(args?: Subset<T, Sample$revisionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends Sample$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Sample$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    company<T extends Sample$companyArgs<ExtArgs> = {}>(args?: Subset<T, Sample$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    aiAnalysis<T extends Sample$aiAnalysisArgs<ExtArgs> = {}>(args?: Subset<T, Sample$aiAnalysisArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tasks<T extends Sample$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Sample$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends Sample$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Sample$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sample model
   */
  interface SampleFieldRefs {
    readonly id: FieldRef<"Sample", 'Int'>
    readonly createdAt: FieldRef<"Sample", 'DateTime'>
    readonly updatedAt: FieldRef<"Sample", 'DateTime'>
    readonly sampleNumber: FieldRef<"Sample", 'String'>
    readonly sampleType: FieldRef<"Sample", 'SampleType'>
    readonly status: FieldRef<"Sample", 'SampleStatus'>
    readonly customerNote: FieldRef<"Sample", 'String'>
    readonly manufacturerResponse: FieldRef<"Sample", 'String'>
    readonly customDesignImages: FieldRef<"Sample", 'String'>
    readonly revisionRequests: FieldRef<"Sample", 'String'>
    readonly originalCollectionId: FieldRef<"Sample", 'Int'>
    readonly name: FieldRef<"Sample", 'String'>
    readonly description: FieldRef<"Sample", 'String'>
    readonly images: FieldRef<"Sample", 'String'>
    readonly aiGenerated: FieldRef<"Sample", 'Boolean'>
    readonly aiPrompt: FieldRef<"Sample", 'String'>
    readonly aiSketchUrl: FieldRef<"Sample", 'String'>
    readonly unitPrice: FieldRef<"Sample", 'Float'>
    readonly productionDays: FieldRef<"Sample", 'Int'>
    readonly estimatedProductionDate: FieldRef<"Sample", 'DateTime'>
    readonly actualProductionDate: FieldRef<"Sample", 'DateTime'>
    readonly shippingDate: FieldRef<"Sample", 'DateTime'>
    readonly deliveryAddress: FieldRef<"Sample", 'String'>
    readonly cargoTrackingNumber: FieldRef<"Sample", 'String'>
    readonly customerQuotedPrice: FieldRef<"Sample", 'Float'>
    readonly customerQuoteDays: FieldRef<"Sample", 'Int'>
    readonly customerQuoteNote: FieldRef<"Sample", 'String'>
    readonly customerQuoteType: FieldRef<"Sample", 'String'>
    readonly customerQuoteSentAt: FieldRef<"Sample", 'DateTime'>
    readonly collectionId: FieldRef<"Sample", 'Int'>
    readonly customerId: FieldRef<"Sample", 'Int'>
    readonly manufactureId: FieldRef<"Sample", 'Int'>
    readonly companyId: FieldRef<"Sample", 'Int'>
    readonly viewCount: FieldRef<"Sample", 'Int'>
    readonly shareCount: FieldRef<"Sample", 'Int'>
    readonly lastViewedAt: FieldRef<"Sample", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Sample findUnique
   */
  export type SampleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * Filter, which Sample to fetch.
     */
    where: SampleWhereUniqueInput
  }

  /**
   * Sample findUniqueOrThrow
   */
  export type SampleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * Filter, which Sample to fetch.
     */
    where: SampleWhereUniqueInput
  }

  /**
   * Sample findFirst
   */
  export type SampleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * Filter, which Sample to fetch.
     */
    where?: SampleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Samples to fetch.
     */
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Samples.
     */
    cursor?: SampleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Samples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Samples.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Samples.
     */
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * Sample findFirstOrThrow
   */
  export type SampleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * Filter, which Sample to fetch.
     */
    where?: SampleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Samples to fetch.
     */
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Samples.
     */
    cursor?: SampleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Samples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Samples.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Samples.
     */
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * Sample findMany
   */
  export type SampleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * Filter, which Samples to fetch.
     */
    where?: SampleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Samples to fetch.
     */
    orderBy?: SampleOrderByWithRelationInput | SampleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Samples.
     */
    cursor?: SampleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Samples from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Samples.
     */
    skip?: number
    distinct?: SampleScalarFieldEnum | SampleScalarFieldEnum[]
  }

  /**
   * Sample create
   */
  export type SampleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * The data needed to create a Sample.
     */
    data: XOR<SampleCreateInput, SampleUncheckedCreateInput>
  }

  /**
   * Sample createMany
   */
  export type SampleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Samples.
     */
    data: SampleCreateManyInput | SampleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sample update
   */
  export type SampleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * The data needed to update a Sample.
     */
    data: XOR<SampleUpdateInput, SampleUncheckedUpdateInput>
    /**
     * Choose, which Sample to update.
     */
    where: SampleWhereUniqueInput
  }

  /**
   * Sample updateMany
   */
  export type SampleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Samples.
     */
    data: XOR<SampleUpdateManyMutationInput, SampleUncheckedUpdateManyInput>
    /**
     * Filter which Samples to update
     */
    where?: SampleWhereInput
    /**
     * Limit how many Samples to update.
     */
    limit?: number
  }

  /**
   * Sample upsert
   */
  export type SampleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * The filter to search for the Sample to update in case it exists.
     */
    where: SampleWhereUniqueInput
    /**
     * In case the Sample found by the `where` argument doesn't exist, create a new Sample with this data.
     */
    create: XOR<SampleCreateInput, SampleUncheckedCreateInput>
    /**
     * In case the Sample was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SampleUpdateInput, SampleUncheckedUpdateInput>
  }

  /**
   * Sample delete
   */
  export type SampleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    /**
     * Filter which Sample to delete.
     */
    where: SampleWhereUniqueInput
  }

  /**
   * Sample deleteMany
   */
  export type SampleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Samples to delete
     */
    where?: SampleWhereInput
    /**
     * Limit how many Samples to delete.
     */
    limit?: number
  }

  /**
   * Sample.collection
   */
  export type Sample$collectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
  }

  /**
   * Sample.originalCollection
   */
  export type Sample$originalCollectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
  }

  /**
   * Sample.productionHistory
   */
  export type Sample$productionHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    where?: SampleProductionWhereInput
    orderBy?: SampleProductionOrderByWithRelationInput | SampleProductionOrderByWithRelationInput[]
    cursor?: SampleProductionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SampleProductionScalarFieldEnum | SampleProductionScalarFieldEnum[]
  }

  /**
   * Sample.productionTracking
   */
  export type Sample$productionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    cursor?: ProductionTrackingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * Sample.revisions
   */
  export type Sample$revisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    where?: RevisionWhereInput
    orderBy?: RevisionOrderByWithRelationInput | RevisionOrderByWithRelationInput[]
    cursor?: RevisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * Sample.messages
   */
  export type Sample$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Sample.company
   */
  export type Sample$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * Sample.aiAnalysis
   */
  export type Sample$aiAnalysisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    where?: AIAnalysisWhereInput
  }

  /**
   * Sample.tasks
   */
  export type Sample$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Sample.notifications
   */
  export type Sample$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Sample without action
   */
  export type SampleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
  }


  /**
   * Model AIAnalysis
   */

  export type AggregateAIAnalysis = {
    _count: AIAnalysisCountAggregateOutputType | null
    _avg: AIAnalysisAvgAggregateOutputType | null
    _sum: AIAnalysisSumAggregateOutputType | null
    _min: AIAnalysisMinAggregateOutputType | null
    _max: AIAnalysisMaxAggregateOutputType | null
  }

  export type AIAnalysisAvgAggregateOutputType = {
    id: number | null
    qualityScore: number | null
    estimatedCostMin: number | null
    estimatedCostMax: number | null
    suggestedMinOrder: number | null
    trendScore: number | null
    sampleId: number | null
  }

  export type AIAnalysisSumAggregateOutputType = {
    id: number | null
    qualityScore: number | null
    estimatedCostMin: number | null
    estimatedCostMax: number | null
    suggestedMinOrder: number | null
    trendScore: number | null
    sampleId: number | null
  }

  export type AIAnalysisMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    detectedProduct: string | null
    detectedColor: string | null
    detectedFabric: string | null
    detectedPattern: string | null
    detectedGender: string | null
    detectedClassification: string | null
    detectedAccessories: string | null
    technicalDescription: string | null
    qualityAnalysis: string | null
    qualityScore: number | null
    costAnalysis: string | null
    estimatedCostMin: number | null
    estimatedCostMax: number | null
    suggestedMinOrder: number | null
    trendAnalysis: string | null
    trendScore: number | null
    targetMarket: string | null
    salesPotential: string | null
    designSuggestions: string | null
    designStyle: string | null
    designFocus: string | null
    sampleId: number | null
  }

  export type AIAnalysisMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    detectedProduct: string | null
    detectedColor: string | null
    detectedFabric: string | null
    detectedPattern: string | null
    detectedGender: string | null
    detectedClassification: string | null
    detectedAccessories: string | null
    technicalDescription: string | null
    qualityAnalysis: string | null
    qualityScore: number | null
    costAnalysis: string | null
    estimatedCostMin: number | null
    estimatedCostMax: number | null
    suggestedMinOrder: number | null
    trendAnalysis: string | null
    trendScore: number | null
    targetMarket: string | null
    salesPotential: string | null
    designSuggestions: string | null
    designStyle: string | null
    designFocus: string | null
    sampleId: number | null
  }

  export type AIAnalysisCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    detectedProduct: number
    detectedColor: number
    detectedFabric: number
    detectedPattern: number
    detectedGender: number
    detectedClassification: number
    detectedAccessories: number
    technicalDescription: number
    qualityAnalysis: number
    qualityScore: number
    costAnalysis: number
    estimatedCostMin: number
    estimatedCostMax: number
    suggestedMinOrder: number
    trendAnalysis: number
    trendScore: number
    targetMarket: number
    salesPotential: number
    designSuggestions: number
    designStyle: number
    designFocus: number
    sampleId: number
    _all: number
  }


  export type AIAnalysisAvgAggregateInputType = {
    id?: true
    qualityScore?: true
    estimatedCostMin?: true
    estimatedCostMax?: true
    suggestedMinOrder?: true
    trendScore?: true
    sampleId?: true
  }

  export type AIAnalysisSumAggregateInputType = {
    id?: true
    qualityScore?: true
    estimatedCostMin?: true
    estimatedCostMax?: true
    suggestedMinOrder?: true
    trendScore?: true
    sampleId?: true
  }

  export type AIAnalysisMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    detectedProduct?: true
    detectedColor?: true
    detectedFabric?: true
    detectedPattern?: true
    detectedGender?: true
    detectedClassification?: true
    detectedAccessories?: true
    technicalDescription?: true
    qualityAnalysis?: true
    qualityScore?: true
    costAnalysis?: true
    estimatedCostMin?: true
    estimatedCostMax?: true
    suggestedMinOrder?: true
    trendAnalysis?: true
    trendScore?: true
    targetMarket?: true
    salesPotential?: true
    designSuggestions?: true
    designStyle?: true
    designFocus?: true
    sampleId?: true
  }

  export type AIAnalysisMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    detectedProduct?: true
    detectedColor?: true
    detectedFabric?: true
    detectedPattern?: true
    detectedGender?: true
    detectedClassification?: true
    detectedAccessories?: true
    technicalDescription?: true
    qualityAnalysis?: true
    qualityScore?: true
    costAnalysis?: true
    estimatedCostMin?: true
    estimatedCostMax?: true
    suggestedMinOrder?: true
    trendAnalysis?: true
    trendScore?: true
    targetMarket?: true
    salesPotential?: true
    designSuggestions?: true
    designStyle?: true
    designFocus?: true
    sampleId?: true
  }

  export type AIAnalysisCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    detectedProduct?: true
    detectedColor?: true
    detectedFabric?: true
    detectedPattern?: true
    detectedGender?: true
    detectedClassification?: true
    detectedAccessories?: true
    technicalDescription?: true
    qualityAnalysis?: true
    qualityScore?: true
    costAnalysis?: true
    estimatedCostMin?: true
    estimatedCostMax?: true
    suggestedMinOrder?: true
    trendAnalysis?: true
    trendScore?: true
    targetMarket?: true
    salesPotential?: true
    designSuggestions?: true
    designStyle?: true
    designFocus?: true
    sampleId?: true
    _all?: true
  }

  export type AIAnalysisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIAnalysis to aggregate.
     */
    where?: AIAnalysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIAnalyses to fetch.
     */
    orderBy?: AIAnalysisOrderByWithRelationInput | AIAnalysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AIAnalysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIAnalyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIAnalyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AIAnalyses
    **/
    _count?: true | AIAnalysisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AIAnalysisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AIAnalysisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AIAnalysisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AIAnalysisMaxAggregateInputType
  }

  export type GetAIAnalysisAggregateType<T extends AIAnalysisAggregateArgs> = {
        [P in keyof T & keyof AggregateAIAnalysis]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAIAnalysis[P]>
      : GetScalarType<T[P], AggregateAIAnalysis[P]>
  }




  export type AIAnalysisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIAnalysisWhereInput
    orderBy?: AIAnalysisOrderByWithAggregationInput | AIAnalysisOrderByWithAggregationInput[]
    by: AIAnalysisScalarFieldEnum[] | AIAnalysisScalarFieldEnum
    having?: AIAnalysisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AIAnalysisCountAggregateInputType | true
    _avg?: AIAnalysisAvgAggregateInputType
    _sum?: AIAnalysisSumAggregateInputType
    _min?: AIAnalysisMinAggregateInputType
    _max?: AIAnalysisMaxAggregateInputType
  }

  export type AIAnalysisGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    detectedProduct: string | null
    detectedColor: string | null
    detectedFabric: string | null
    detectedPattern: string | null
    detectedGender: string | null
    detectedClassification: string | null
    detectedAccessories: string | null
    technicalDescription: string | null
    qualityAnalysis: string | null
    qualityScore: number | null
    costAnalysis: string | null
    estimatedCostMin: number | null
    estimatedCostMax: number | null
    suggestedMinOrder: number | null
    trendAnalysis: string | null
    trendScore: number | null
    targetMarket: string | null
    salesPotential: string | null
    designSuggestions: string | null
    designStyle: string | null
    designFocus: string | null
    sampleId: number
    _count: AIAnalysisCountAggregateOutputType | null
    _avg: AIAnalysisAvgAggregateOutputType | null
    _sum: AIAnalysisSumAggregateOutputType | null
    _min: AIAnalysisMinAggregateOutputType | null
    _max: AIAnalysisMaxAggregateOutputType | null
  }

  type GetAIAnalysisGroupByPayload<T extends AIAnalysisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AIAnalysisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AIAnalysisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AIAnalysisGroupByOutputType[P]>
            : GetScalarType<T[P], AIAnalysisGroupByOutputType[P]>
        }
      >
    >


  export type AIAnalysisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    detectedProduct?: boolean
    detectedColor?: boolean
    detectedFabric?: boolean
    detectedPattern?: boolean
    detectedGender?: boolean
    detectedClassification?: boolean
    detectedAccessories?: boolean
    technicalDescription?: boolean
    qualityAnalysis?: boolean
    qualityScore?: boolean
    costAnalysis?: boolean
    estimatedCostMin?: boolean
    estimatedCostMax?: boolean
    suggestedMinOrder?: boolean
    trendAnalysis?: boolean
    trendScore?: boolean
    targetMarket?: boolean
    salesPotential?: boolean
    designSuggestions?: boolean
    designStyle?: boolean
    designFocus?: boolean
    sampleId?: boolean
    sample?: boolean | SampleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aIAnalysis"]>



  export type AIAnalysisSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    detectedProduct?: boolean
    detectedColor?: boolean
    detectedFabric?: boolean
    detectedPattern?: boolean
    detectedGender?: boolean
    detectedClassification?: boolean
    detectedAccessories?: boolean
    technicalDescription?: boolean
    qualityAnalysis?: boolean
    qualityScore?: boolean
    costAnalysis?: boolean
    estimatedCostMin?: boolean
    estimatedCostMax?: boolean
    suggestedMinOrder?: boolean
    trendAnalysis?: boolean
    trendScore?: boolean
    targetMarket?: boolean
    salesPotential?: boolean
    designSuggestions?: boolean
    designStyle?: boolean
    designFocus?: boolean
    sampleId?: boolean
  }

  export type AIAnalysisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "detectedProduct" | "detectedColor" | "detectedFabric" | "detectedPattern" | "detectedGender" | "detectedClassification" | "detectedAccessories" | "technicalDescription" | "qualityAnalysis" | "qualityScore" | "costAnalysis" | "estimatedCostMin" | "estimatedCostMax" | "suggestedMinOrder" | "trendAnalysis" | "trendScore" | "targetMarket" | "salesPotential" | "designSuggestions" | "designStyle" | "designFocus" | "sampleId", ExtArgs["result"]["aIAnalysis"]>
  export type AIAnalysisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sample?: boolean | SampleDefaultArgs<ExtArgs>
  }

  export type $AIAnalysisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AIAnalysis"
    objects: {
      sample: Prisma.$SamplePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      detectedProduct: string | null
      detectedColor: string | null
      detectedFabric: string | null
      detectedPattern: string | null
      detectedGender: string | null
      detectedClassification: string | null
      detectedAccessories: string | null
      technicalDescription: string | null
      qualityAnalysis: string | null
      qualityScore: number | null
      costAnalysis: string | null
      estimatedCostMin: number | null
      estimatedCostMax: number | null
      suggestedMinOrder: number | null
      trendAnalysis: string | null
      trendScore: number | null
      targetMarket: string | null
      salesPotential: string | null
      designSuggestions: string | null
      designStyle: string | null
      designFocus: string | null
      sampleId: number
    }, ExtArgs["result"]["aIAnalysis"]>
    composites: {}
  }

  type AIAnalysisGetPayload<S extends boolean | null | undefined | AIAnalysisDefaultArgs> = $Result.GetResult<Prisma.$AIAnalysisPayload, S>

  type AIAnalysisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AIAnalysisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AIAnalysisCountAggregateInputType | true
    }

  export interface AIAnalysisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AIAnalysis'], meta: { name: 'AIAnalysis' } }
    /**
     * Find zero or one AIAnalysis that matches the filter.
     * @param {AIAnalysisFindUniqueArgs} args - Arguments to find a AIAnalysis
     * @example
     * // Get one AIAnalysis
     * const aIAnalysis = await prisma.aIAnalysis.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AIAnalysisFindUniqueArgs>(args: SelectSubset<T, AIAnalysisFindUniqueArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AIAnalysis that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AIAnalysisFindUniqueOrThrowArgs} args - Arguments to find a AIAnalysis
     * @example
     * // Get one AIAnalysis
     * const aIAnalysis = await prisma.aIAnalysis.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AIAnalysisFindUniqueOrThrowArgs>(args: SelectSubset<T, AIAnalysisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AIAnalysis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIAnalysisFindFirstArgs} args - Arguments to find a AIAnalysis
     * @example
     * // Get one AIAnalysis
     * const aIAnalysis = await prisma.aIAnalysis.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AIAnalysisFindFirstArgs>(args?: SelectSubset<T, AIAnalysisFindFirstArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AIAnalysis that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIAnalysisFindFirstOrThrowArgs} args - Arguments to find a AIAnalysis
     * @example
     * // Get one AIAnalysis
     * const aIAnalysis = await prisma.aIAnalysis.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AIAnalysisFindFirstOrThrowArgs>(args?: SelectSubset<T, AIAnalysisFindFirstOrThrowArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AIAnalyses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIAnalysisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AIAnalyses
     * const aIAnalyses = await prisma.aIAnalysis.findMany()
     * 
     * // Get first 10 AIAnalyses
     * const aIAnalyses = await prisma.aIAnalysis.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aIAnalysisWithIdOnly = await prisma.aIAnalysis.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AIAnalysisFindManyArgs>(args?: SelectSubset<T, AIAnalysisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AIAnalysis.
     * @param {AIAnalysisCreateArgs} args - Arguments to create a AIAnalysis.
     * @example
     * // Create one AIAnalysis
     * const AIAnalysis = await prisma.aIAnalysis.create({
     *   data: {
     *     // ... data to create a AIAnalysis
     *   }
     * })
     * 
     */
    create<T extends AIAnalysisCreateArgs>(args: SelectSubset<T, AIAnalysisCreateArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AIAnalyses.
     * @param {AIAnalysisCreateManyArgs} args - Arguments to create many AIAnalyses.
     * @example
     * // Create many AIAnalyses
     * const aIAnalysis = await prisma.aIAnalysis.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AIAnalysisCreateManyArgs>(args?: SelectSubset<T, AIAnalysisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AIAnalysis.
     * @param {AIAnalysisDeleteArgs} args - Arguments to delete one AIAnalysis.
     * @example
     * // Delete one AIAnalysis
     * const AIAnalysis = await prisma.aIAnalysis.delete({
     *   where: {
     *     // ... filter to delete one AIAnalysis
     *   }
     * })
     * 
     */
    delete<T extends AIAnalysisDeleteArgs>(args: SelectSubset<T, AIAnalysisDeleteArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AIAnalysis.
     * @param {AIAnalysisUpdateArgs} args - Arguments to update one AIAnalysis.
     * @example
     * // Update one AIAnalysis
     * const aIAnalysis = await prisma.aIAnalysis.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AIAnalysisUpdateArgs>(args: SelectSubset<T, AIAnalysisUpdateArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AIAnalyses.
     * @param {AIAnalysisDeleteManyArgs} args - Arguments to filter AIAnalyses to delete.
     * @example
     * // Delete a few AIAnalyses
     * const { count } = await prisma.aIAnalysis.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AIAnalysisDeleteManyArgs>(args?: SelectSubset<T, AIAnalysisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AIAnalyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIAnalysisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AIAnalyses
     * const aIAnalysis = await prisma.aIAnalysis.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AIAnalysisUpdateManyArgs>(args: SelectSubset<T, AIAnalysisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AIAnalysis.
     * @param {AIAnalysisUpsertArgs} args - Arguments to update or create a AIAnalysis.
     * @example
     * // Update or create a AIAnalysis
     * const aIAnalysis = await prisma.aIAnalysis.upsert({
     *   create: {
     *     // ... data to create a AIAnalysis
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AIAnalysis we want to update
     *   }
     * })
     */
    upsert<T extends AIAnalysisUpsertArgs>(args: SelectSubset<T, AIAnalysisUpsertArgs<ExtArgs>>): Prisma__AIAnalysisClient<$Result.GetResult<Prisma.$AIAnalysisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AIAnalyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIAnalysisCountArgs} args - Arguments to filter AIAnalyses to count.
     * @example
     * // Count the number of AIAnalyses
     * const count = await prisma.aIAnalysis.count({
     *   where: {
     *     // ... the filter for the AIAnalyses we want to count
     *   }
     * })
    **/
    count<T extends AIAnalysisCountArgs>(
      args?: Subset<T, AIAnalysisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AIAnalysisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AIAnalysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIAnalysisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AIAnalysisAggregateArgs>(args: Subset<T, AIAnalysisAggregateArgs>): Prisma.PrismaPromise<GetAIAnalysisAggregateType<T>>

    /**
     * Group by AIAnalysis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIAnalysisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AIAnalysisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AIAnalysisGroupByArgs['orderBy'] }
        : { orderBy?: AIAnalysisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AIAnalysisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAIAnalysisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AIAnalysis model
   */
  readonly fields: AIAnalysisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AIAnalysis.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AIAnalysisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sample<T extends SampleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SampleDefaultArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AIAnalysis model
   */
  interface AIAnalysisFieldRefs {
    readonly id: FieldRef<"AIAnalysis", 'Int'>
    readonly createdAt: FieldRef<"AIAnalysis", 'DateTime'>
    readonly updatedAt: FieldRef<"AIAnalysis", 'DateTime'>
    readonly detectedProduct: FieldRef<"AIAnalysis", 'String'>
    readonly detectedColor: FieldRef<"AIAnalysis", 'String'>
    readonly detectedFabric: FieldRef<"AIAnalysis", 'String'>
    readonly detectedPattern: FieldRef<"AIAnalysis", 'String'>
    readonly detectedGender: FieldRef<"AIAnalysis", 'String'>
    readonly detectedClassification: FieldRef<"AIAnalysis", 'String'>
    readonly detectedAccessories: FieldRef<"AIAnalysis", 'String'>
    readonly technicalDescription: FieldRef<"AIAnalysis", 'String'>
    readonly qualityAnalysis: FieldRef<"AIAnalysis", 'String'>
    readonly qualityScore: FieldRef<"AIAnalysis", 'Float'>
    readonly costAnalysis: FieldRef<"AIAnalysis", 'String'>
    readonly estimatedCostMin: FieldRef<"AIAnalysis", 'Float'>
    readonly estimatedCostMax: FieldRef<"AIAnalysis", 'Float'>
    readonly suggestedMinOrder: FieldRef<"AIAnalysis", 'Int'>
    readonly trendAnalysis: FieldRef<"AIAnalysis", 'String'>
    readonly trendScore: FieldRef<"AIAnalysis", 'Float'>
    readonly targetMarket: FieldRef<"AIAnalysis", 'String'>
    readonly salesPotential: FieldRef<"AIAnalysis", 'String'>
    readonly designSuggestions: FieldRef<"AIAnalysis", 'String'>
    readonly designStyle: FieldRef<"AIAnalysis", 'String'>
    readonly designFocus: FieldRef<"AIAnalysis", 'String'>
    readonly sampleId: FieldRef<"AIAnalysis", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * AIAnalysis findUnique
   */
  export type AIAnalysisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * Filter, which AIAnalysis to fetch.
     */
    where: AIAnalysisWhereUniqueInput
  }

  /**
   * AIAnalysis findUniqueOrThrow
   */
  export type AIAnalysisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * Filter, which AIAnalysis to fetch.
     */
    where: AIAnalysisWhereUniqueInput
  }

  /**
   * AIAnalysis findFirst
   */
  export type AIAnalysisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * Filter, which AIAnalysis to fetch.
     */
    where?: AIAnalysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIAnalyses to fetch.
     */
    orderBy?: AIAnalysisOrderByWithRelationInput | AIAnalysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIAnalyses.
     */
    cursor?: AIAnalysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIAnalyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIAnalyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIAnalyses.
     */
    distinct?: AIAnalysisScalarFieldEnum | AIAnalysisScalarFieldEnum[]
  }

  /**
   * AIAnalysis findFirstOrThrow
   */
  export type AIAnalysisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * Filter, which AIAnalysis to fetch.
     */
    where?: AIAnalysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIAnalyses to fetch.
     */
    orderBy?: AIAnalysisOrderByWithRelationInput | AIAnalysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIAnalyses.
     */
    cursor?: AIAnalysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIAnalyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIAnalyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIAnalyses.
     */
    distinct?: AIAnalysisScalarFieldEnum | AIAnalysisScalarFieldEnum[]
  }

  /**
   * AIAnalysis findMany
   */
  export type AIAnalysisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * Filter, which AIAnalyses to fetch.
     */
    where?: AIAnalysisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIAnalyses to fetch.
     */
    orderBy?: AIAnalysisOrderByWithRelationInput | AIAnalysisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AIAnalyses.
     */
    cursor?: AIAnalysisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIAnalyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIAnalyses.
     */
    skip?: number
    distinct?: AIAnalysisScalarFieldEnum | AIAnalysisScalarFieldEnum[]
  }

  /**
   * AIAnalysis create
   */
  export type AIAnalysisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * The data needed to create a AIAnalysis.
     */
    data: XOR<AIAnalysisCreateInput, AIAnalysisUncheckedCreateInput>
  }

  /**
   * AIAnalysis createMany
   */
  export type AIAnalysisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AIAnalyses.
     */
    data: AIAnalysisCreateManyInput | AIAnalysisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AIAnalysis update
   */
  export type AIAnalysisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * The data needed to update a AIAnalysis.
     */
    data: XOR<AIAnalysisUpdateInput, AIAnalysisUncheckedUpdateInput>
    /**
     * Choose, which AIAnalysis to update.
     */
    where: AIAnalysisWhereUniqueInput
  }

  /**
   * AIAnalysis updateMany
   */
  export type AIAnalysisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AIAnalyses.
     */
    data: XOR<AIAnalysisUpdateManyMutationInput, AIAnalysisUncheckedUpdateManyInput>
    /**
     * Filter which AIAnalyses to update
     */
    where?: AIAnalysisWhereInput
    /**
     * Limit how many AIAnalyses to update.
     */
    limit?: number
  }

  /**
   * AIAnalysis upsert
   */
  export type AIAnalysisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * The filter to search for the AIAnalysis to update in case it exists.
     */
    where: AIAnalysisWhereUniqueInput
    /**
     * In case the AIAnalysis found by the `where` argument doesn't exist, create a new AIAnalysis with this data.
     */
    create: XOR<AIAnalysisCreateInput, AIAnalysisUncheckedCreateInput>
    /**
     * In case the AIAnalysis was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AIAnalysisUpdateInput, AIAnalysisUncheckedUpdateInput>
  }

  /**
   * AIAnalysis delete
   */
  export type AIAnalysisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
    /**
     * Filter which AIAnalysis to delete.
     */
    where: AIAnalysisWhereUniqueInput
  }

  /**
   * AIAnalysis deleteMany
   */
  export type AIAnalysisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIAnalyses to delete
     */
    where?: AIAnalysisWhereInput
    /**
     * Limit how many AIAnalyses to delete.
     */
    limit?: number
  }

  /**
   * AIAnalysis without action
   */
  export type AIAnalysisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIAnalysis
     */
    select?: AIAnalysisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIAnalysis
     */
    omit?: AIAnalysisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIAnalysisInclude<ExtArgs> | null
  }


  /**
   * Model SampleProduction
   */

  export type AggregateSampleProduction = {
    _count: SampleProductionCountAggregateOutputType | null
    _avg: SampleProductionAvgAggregateOutputType | null
    _sum: SampleProductionSumAggregateOutputType | null
    _min: SampleProductionMinAggregateOutputType | null
    _max: SampleProductionMaxAggregateOutputType | null
  }

  export type SampleProductionAvgAggregateOutputType = {
    id: number | null
    estimatedDays: number | null
    sampleId: number | null
    updatedById: number | null
  }

  export type SampleProductionSumAggregateOutputType = {
    id: number | null
    estimatedDays: number | null
    sampleId: number | null
    updatedById: number | null
  }

  export type SampleProductionMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    status: $Enums.SampleStatus | null
    note: string | null
    estimatedDays: number | null
    actualDate: Date | null
    sampleId: number | null
    updatedById: number | null
  }

  export type SampleProductionMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    status: $Enums.SampleStatus | null
    note: string | null
    estimatedDays: number | null
    actualDate: Date | null
    sampleId: number | null
    updatedById: number | null
  }

  export type SampleProductionCountAggregateOutputType = {
    id: number
    createdAt: number
    status: number
    note: number
    estimatedDays: number
    actualDate: number
    sampleId: number
    updatedById: number
    _all: number
  }


  export type SampleProductionAvgAggregateInputType = {
    id?: true
    estimatedDays?: true
    sampleId?: true
    updatedById?: true
  }

  export type SampleProductionSumAggregateInputType = {
    id?: true
    estimatedDays?: true
    sampleId?: true
    updatedById?: true
  }

  export type SampleProductionMinAggregateInputType = {
    id?: true
    createdAt?: true
    status?: true
    note?: true
    estimatedDays?: true
    actualDate?: true
    sampleId?: true
    updatedById?: true
  }

  export type SampleProductionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    status?: true
    note?: true
    estimatedDays?: true
    actualDate?: true
    sampleId?: true
    updatedById?: true
  }

  export type SampleProductionCountAggregateInputType = {
    id?: true
    createdAt?: true
    status?: true
    note?: true
    estimatedDays?: true
    actualDate?: true
    sampleId?: true
    updatedById?: true
    _all?: true
  }

  export type SampleProductionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SampleProduction to aggregate.
     */
    where?: SampleProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SampleProductions to fetch.
     */
    orderBy?: SampleProductionOrderByWithRelationInput | SampleProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SampleProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SampleProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SampleProductions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SampleProductions
    **/
    _count?: true | SampleProductionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SampleProductionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SampleProductionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SampleProductionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SampleProductionMaxAggregateInputType
  }

  export type GetSampleProductionAggregateType<T extends SampleProductionAggregateArgs> = {
        [P in keyof T & keyof AggregateSampleProduction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSampleProduction[P]>
      : GetScalarType<T[P], AggregateSampleProduction[P]>
  }




  export type SampleProductionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SampleProductionWhereInput
    orderBy?: SampleProductionOrderByWithAggregationInput | SampleProductionOrderByWithAggregationInput[]
    by: SampleProductionScalarFieldEnum[] | SampleProductionScalarFieldEnum
    having?: SampleProductionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SampleProductionCountAggregateInputType | true
    _avg?: SampleProductionAvgAggregateInputType
    _sum?: SampleProductionSumAggregateInputType
    _min?: SampleProductionMinAggregateInputType
    _max?: SampleProductionMaxAggregateInputType
  }

  export type SampleProductionGroupByOutputType = {
    id: number
    createdAt: Date
    status: $Enums.SampleStatus
    note: string | null
    estimatedDays: number | null
    actualDate: Date | null
    sampleId: number
    updatedById: number
    _count: SampleProductionCountAggregateOutputType | null
    _avg: SampleProductionAvgAggregateOutputType | null
    _sum: SampleProductionSumAggregateOutputType | null
    _min: SampleProductionMinAggregateOutputType | null
    _max: SampleProductionMaxAggregateOutputType | null
  }

  type GetSampleProductionGroupByPayload<T extends SampleProductionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SampleProductionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SampleProductionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SampleProductionGroupByOutputType[P]>
            : GetScalarType<T[P], SampleProductionGroupByOutputType[P]>
        }
      >
    >


  export type SampleProductionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    status?: boolean
    note?: boolean
    estimatedDays?: boolean
    actualDate?: boolean
    sampleId?: boolean
    updatedById?: boolean
    sample?: boolean | SampleDefaultArgs<ExtArgs>
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sampleProduction"]>



  export type SampleProductionSelectScalar = {
    id?: boolean
    createdAt?: boolean
    status?: boolean
    note?: boolean
    estimatedDays?: boolean
    actualDate?: boolean
    sampleId?: boolean
    updatedById?: boolean
  }

  export type SampleProductionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "status" | "note" | "estimatedDays" | "actualDate" | "sampleId" | "updatedById", ExtArgs["result"]["sampleProduction"]>
  export type SampleProductionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sample?: boolean | SampleDefaultArgs<ExtArgs>
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SampleProductionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SampleProduction"
    objects: {
      sample: Prisma.$SamplePayload<ExtArgs>
      updatedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      status: $Enums.SampleStatus
      note: string | null
      estimatedDays: number | null
      actualDate: Date | null
      sampleId: number
      updatedById: number
    }, ExtArgs["result"]["sampleProduction"]>
    composites: {}
  }

  type SampleProductionGetPayload<S extends boolean | null | undefined | SampleProductionDefaultArgs> = $Result.GetResult<Prisma.$SampleProductionPayload, S>

  type SampleProductionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SampleProductionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SampleProductionCountAggregateInputType | true
    }

  export interface SampleProductionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SampleProduction'], meta: { name: 'SampleProduction' } }
    /**
     * Find zero or one SampleProduction that matches the filter.
     * @param {SampleProductionFindUniqueArgs} args - Arguments to find a SampleProduction
     * @example
     * // Get one SampleProduction
     * const sampleProduction = await prisma.sampleProduction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SampleProductionFindUniqueArgs>(args: SelectSubset<T, SampleProductionFindUniqueArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SampleProduction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SampleProductionFindUniqueOrThrowArgs} args - Arguments to find a SampleProduction
     * @example
     * // Get one SampleProduction
     * const sampleProduction = await prisma.sampleProduction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SampleProductionFindUniqueOrThrowArgs>(args: SelectSubset<T, SampleProductionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SampleProduction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleProductionFindFirstArgs} args - Arguments to find a SampleProduction
     * @example
     * // Get one SampleProduction
     * const sampleProduction = await prisma.sampleProduction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SampleProductionFindFirstArgs>(args?: SelectSubset<T, SampleProductionFindFirstArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SampleProduction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleProductionFindFirstOrThrowArgs} args - Arguments to find a SampleProduction
     * @example
     * // Get one SampleProduction
     * const sampleProduction = await prisma.sampleProduction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SampleProductionFindFirstOrThrowArgs>(args?: SelectSubset<T, SampleProductionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SampleProductions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleProductionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SampleProductions
     * const sampleProductions = await prisma.sampleProduction.findMany()
     * 
     * // Get first 10 SampleProductions
     * const sampleProductions = await prisma.sampleProduction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sampleProductionWithIdOnly = await prisma.sampleProduction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SampleProductionFindManyArgs>(args?: SelectSubset<T, SampleProductionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SampleProduction.
     * @param {SampleProductionCreateArgs} args - Arguments to create a SampleProduction.
     * @example
     * // Create one SampleProduction
     * const SampleProduction = await prisma.sampleProduction.create({
     *   data: {
     *     // ... data to create a SampleProduction
     *   }
     * })
     * 
     */
    create<T extends SampleProductionCreateArgs>(args: SelectSubset<T, SampleProductionCreateArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SampleProductions.
     * @param {SampleProductionCreateManyArgs} args - Arguments to create many SampleProductions.
     * @example
     * // Create many SampleProductions
     * const sampleProduction = await prisma.sampleProduction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SampleProductionCreateManyArgs>(args?: SelectSubset<T, SampleProductionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SampleProduction.
     * @param {SampleProductionDeleteArgs} args - Arguments to delete one SampleProduction.
     * @example
     * // Delete one SampleProduction
     * const SampleProduction = await prisma.sampleProduction.delete({
     *   where: {
     *     // ... filter to delete one SampleProduction
     *   }
     * })
     * 
     */
    delete<T extends SampleProductionDeleteArgs>(args: SelectSubset<T, SampleProductionDeleteArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SampleProduction.
     * @param {SampleProductionUpdateArgs} args - Arguments to update one SampleProduction.
     * @example
     * // Update one SampleProduction
     * const sampleProduction = await prisma.sampleProduction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SampleProductionUpdateArgs>(args: SelectSubset<T, SampleProductionUpdateArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SampleProductions.
     * @param {SampleProductionDeleteManyArgs} args - Arguments to filter SampleProductions to delete.
     * @example
     * // Delete a few SampleProductions
     * const { count } = await prisma.sampleProduction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SampleProductionDeleteManyArgs>(args?: SelectSubset<T, SampleProductionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SampleProductions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleProductionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SampleProductions
     * const sampleProduction = await prisma.sampleProduction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SampleProductionUpdateManyArgs>(args: SelectSubset<T, SampleProductionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SampleProduction.
     * @param {SampleProductionUpsertArgs} args - Arguments to update or create a SampleProduction.
     * @example
     * // Update or create a SampleProduction
     * const sampleProduction = await prisma.sampleProduction.upsert({
     *   create: {
     *     // ... data to create a SampleProduction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SampleProduction we want to update
     *   }
     * })
     */
    upsert<T extends SampleProductionUpsertArgs>(args: SelectSubset<T, SampleProductionUpsertArgs<ExtArgs>>): Prisma__SampleProductionClient<$Result.GetResult<Prisma.$SampleProductionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SampleProductions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleProductionCountArgs} args - Arguments to filter SampleProductions to count.
     * @example
     * // Count the number of SampleProductions
     * const count = await prisma.sampleProduction.count({
     *   where: {
     *     // ... the filter for the SampleProductions we want to count
     *   }
     * })
    **/
    count<T extends SampleProductionCountArgs>(
      args?: Subset<T, SampleProductionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SampleProductionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SampleProduction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleProductionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SampleProductionAggregateArgs>(args: Subset<T, SampleProductionAggregateArgs>): Prisma.PrismaPromise<GetSampleProductionAggregateType<T>>

    /**
     * Group by SampleProduction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SampleProductionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SampleProductionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SampleProductionGroupByArgs['orderBy'] }
        : { orderBy?: SampleProductionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SampleProductionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSampleProductionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SampleProduction model
   */
  readonly fields: SampleProductionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SampleProduction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SampleProductionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sample<T extends SampleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SampleDefaultArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SampleProduction model
   */
  interface SampleProductionFieldRefs {
    readonly id: FieldRef<"SampleProduction", 'Int'>
    readonly createdAt: FieldRef<"SampleProduction", 'DateTime'>
    readonly status: FieldRef<"SampleProduction", 'SampleStatus'>
    readonly note: FieldRef<"SampleProduction", 'String'>
    readonly estimatedDays: FieldRef<"SampleProduction", 'Int'>
    readonly actualDate: FieldRef<"SampleProduction", 'DateTime'>
    readonly sampleId: FieldRef<"SampleProduction", 'Int'>
    readonly updatedById: FieldRef<"SampleProduction", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SampleProduction findUnique
   */
  export type SampleProductionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * Filter, which SampleProduction to fetch.
     */
    where: SampleProductionWhereUniqueInput
  }

  /**
   * SampleProduction findUniqueOrThrow
   */
  export type SampleProductionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * Filter, which SampleProduction to fetch.
     */
    where: SampleProductionWhereUniqueInput
  }

  /**
   * SampleProduction findFirst
   */
  export type SampleProductionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * Filter, which SampleProduction to fetch.
     */
    where?: SampleProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SampleProductions to fetch.
     */
    orderBy?: SampleProductionOrderByWithRelationInput | SampleProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SampleProductions.
     */
    cursor?: SampleProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SampleProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SampleProductions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SampleProductions.
     */
    distinct?: SampleProductionScalarFieldEnum | SampleProductionScalarFieldEnum[]
  }

  /**
   * SampleProduction findFirstOrThrow
   */
  export type SampleProductionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * Filter, which SampleProduction to fetch.
     */
    where?: SampleProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SampleProductions to fetch.
     */
    orderBy?: SampleProductionOrderByWithRelationInput | SampleProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SampleProductions.
     */
    cursor?: SampleProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SampleProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SampleProductions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SampleProductions.
     */
    distinct?: SampleProductionScalarFieldEnum | SampleProductionScalarFieldEnum[]
  }

  /**
   * SampleProduction findMany
   */
  export type SampleProductionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * Filter, which SampleProductions to fetch.
     */
    where?: SampleProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SampleProductions to fetch.
     */
    orderBy?: SampleProductionOrderByWithRelationInput | SampleProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SampleProductions.
     */
    cursor?: SampleProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SampleProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SampleProductions.
     */
    skip?: number
    distinct?: SampleProductionScalarFieldEnum | SampleProductionScalarFieldEnum[]
  }

  /**
   * SampleProduction create
   */
  export type SampleProductionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * The data needed to create a SampleProduction.
     */
    data: XOR<SampleProductionCreateInput, SampleProductionUncheckedCreateInput>
  }

  /**
   * SampleProduction createMany
   */
  export type SampleProductionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SampleProductions.
     */
    data: SampleProductionCreateManyInput | SampleProductionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SampleProduction update
   */
  export type SampleProductionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * The data needed to update a SampleProduction.
     */
    data: XOR<SampleProductionUpdateInput, SampleProductionUncheckedUpdateInput>
    /**
     * Choose, which SampleProduction to update.
     */
    where: SampleProductionWhereUniqueInput
  }

  /**
   * SampleProduction updateMany
   */
  export type SampleProductionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SampleProductions.
     */
    data: XOR<SampleProductionUpdateManyMutationInput, SampleProductionUncheckedUpdateManyInput>
    /**
     * Filter which SampleProductions to update
     */
    where?: SampleProductionWhereInput
    /**
     * Limit how many SampleProductions to update.
     */
    limit?: number
  }

  /**
   * SampleProduction upsert
   */
  export type SampleProductionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * The filter to search for the SampleProduction to update in case it exists.
     */
    where: SampleProductionWhereUniqueInput
    /**
     * In case the SampleProduction found by the `where` argument doesn't exist, create a new SampleProduction with this data.
     */
    create: XOR<SampleProductionCreateInput, SampleProductionUncheckedCreateInput>
    /**
     * In case the SampleProduction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SampleProductionUpdateInput, SampleProductionUncheckedUpdateInput>
  }

  /**
   * SampleProduction delete
   */
  export type SampleProductionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
    /**
     * Filter which SampleProduction to delete.
     */
    where: SampleProductionWhereUniqueInput
  }

  /**
   * SampleProduction deleteMany
   */
  export type SampleProductionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SampleProductions to delete
     */
    where?: SampleProductionWhereInput
    /**
     * Limit how many SampleProductions to delete.
     */
    limit?: number
  }

  /**
   * SampleProduction without action
   */
  export type SampleProductionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SampleProduction
     */
    select?: SampleProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SampleProduction
     */
    omit?: SampleProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleProductionInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    id: number | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    productionDays: number | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
  }

  export type OrderSumAggregateOutputType = {
    id: number | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    productionDays: number | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    orderNumber: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    status: $Enums.OrderStatus | null
    customerNote: string | null
    manufacturerResponse: string | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    customerQuoteNote: string | null
    customerQuoteType: string | null
    customerQuoteSentAt: Date | null
    productionDays: number | null
    estimatedProductionDate: Date | null
    actualProductionStart: Date | null
    actualProductionEnd: Date | null
    shippingDate: Date | null
    deliveryAddress: string | null
    cargoTrackingNumber: string | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
  }

  export type OrderMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    orderNumber: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    status: $Enums.OrderStatus | null
    customerNote: string | null
    manufacturerResponse: string | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    customerQuoteNote: string | null
    customerQuoteType: string | null
    customerQuoteSentAt: Date | null
    productionDays: number | null
    estimatedProductionDate: Date | null
    actualProductionStart: Date | null
    actualProductionEnd: Date | null
    shippingDate: Date | null
    deliveryAddress: string | null
    cargoTrackingNumber: string | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
    companyId: number | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    orderNumber: number
    quantity: number
    unitPrice: number
    totalPrice: number
    status: number
    customerNote: number
    manufacturerResponse: number
    customerQuotedPrice: number
    customerQuoteDays: number
    customerQuoteNote: number
    customerQuoteType: number
    customerQuoteSentAt: number
    productionDays: number
    estimatedProductionDate: number
    actualProductionStart: number
    actualProductionEnd: number
    shippingDate: number
    deliveryAddress: number
    cargoTrackingNumber: number
    collectionId: number
    customerId: number
    manufactureId: number
    companyId: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    id?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    productionDays?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
  }

  export type OrderSumAggregateInputType = {
    id?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    productionDays?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    orderNumber?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    customerNote?: true
    manufacturerResponse?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    customerQuoteNote?: true
    customerQuoteType?: true
    customerQuoteSentAt?: true
    productionDays?: true
    estimatedProductionDate?: true
    actualProductionStart?: true
    actualProductionEnd?: true
    shippingDate?: true
    deliveryAddress?: true
    cargoTrackingNumber?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    orderNumber?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    customerNote?: true
    manufacturerResponse?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    customerQuoteNote?: true
    customerQuoteType?: true
    customerQuoteSentAt?: true
    productionDays?: true
    estimatedProductionDate?: true
    actualProductionStart?: true
    actualProductionEnd?: true
    shippingDate?: true
    deliveryAddress?: true
    cargoTrackingNumber?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    orderNumber?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    status?: true
    customerNote?: true
    manufacturerResponse?: true
    customerQuotedPrice?: true
    customerQuoteDays?: true
    customerQuoteNote?: true
    customerQuoteType?: true
    customerQuoteSentAt?: true
    productionDays?: true
    estimatedProductionDate?: true
    actualProductionStart?: true
    actualProductionEnd?: true
    shippingDate?: true
    deliveryAddress?: true
    cargoTrackingNumber?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    companyId?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status: $Enums.OrderStatus
    customerNote: string | null
    manufacturerResponse: string | null
    customerQuotedPrice: number | null
    customerQuoteDays: number | null
    customerQuoteNote: string | null
    customerQuoteType: string | null
    customerQuoteSentAt: Date | null
    productionDays: number | null
    estimatedProductionDate: Date | null
    actualProductionStart: Date | null
    actualProductionEnd: Date | null
    shippingDate: Date | null
    deliveryAddress: string | null
    cargoTrackingNumber: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId: number | null
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    orderNumber?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    customerNote?: boolean
    manufacturerResponse?: boolean
    customerQuotedPrice?: boolean
    customerQuoteDays?: boolean
    customerQuoteNote?: boolean
    customerQuoteType?: boolean
    customerQuoteSentAt?: boolean
    productionDays?: boolean
    estimatedProductionDate?: boolean
    actualProductionStart?: boolean
    actualProductionEnd?: boolean
    shippingDate?: boolean
    deliveryAddress?: boolean
    cargoTrackingNumber?: boolean
    collectionId?: boolean
    customerId?: boolean
    manufactureId?: boolean
    companyId?: boolean
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    manufacture?: boolean | UserDefaultArgs<ExtArgs>
    productionHistory?: boolean | Order$productionHistoryArgs<ExtArgs>
    productionTracking?: boolean | Order$productionTrackingArgs<ExtArgs>
    revisions?: boolean | Order$revisionsArgs<ExtArgs>
    messages?: boolean | Order$messagesArgs<ExtArgs>
    company?: boolean | Order$companyArgs<ExtArgs>
    tasks?: boolean | Order$tasksArgs<ExtArgs>
    notifications?: boolean | Order$notificationsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>



  export type OrderSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    orderNumber?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    status?: boolean
    customerNote?: boolean
    manufacturerResponse?: boolean
    customerQuotedPrice?: boolean
    customerQuoteDays?: boolean
    customerQuoteNote?: boolean
    customerQuoteType?: boolean
    customerQuoteSentAt?: boolean
    productionDays?: boolean
    estimatedProductionDate?: boolean
    actualProductionStart?: boolean
    actualProductionEnd?: boolean
    shippingDate?: boolean
    deliveryAddress?: boolean
    cargoTrackingNumber?: boolean
    collectionId?: boolean
    customerId?: boolean
    manufactureId?: boolean
    companyId?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "orderNumber" | "quantity" | "unitPrice" | "totalPrice" | "status" | "customerNote" | "manufacturerResponse" | "customerQuotedPrice" | "customerQuoteDays" | "customerQuoteNote" | "customerQuoteType" | "customerQuoteSentAt" | "productionDays" | "estimatedProductionDate" | "actualProductionStart" | "actualProductionEnd" | "shippingDate" | "deliveryAddress" | "cargoTrackingNumber" | "collectionId" | "customerId" | "manufactureId" | "companyId", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    manufacture?: boolean | UserDefaultArgs<ExtArgs>
    productionHistory?: boolean | Order$productionHistoryArgs<ExtArgs>
    productionTracking?: boolean | Order$productionTrackingArgs<ExtArgs>
    revisions?: boolean | Order$revisionsArgs<ExtArgs>
    messages?: boolean | Order$messagesArgs<ExtArgs>
    company?: boolean | Order$companyArgs<ExtArgs>
    tasks?: boolean | Order$tasksArgs<ExtArgs>
    notifications?: boolean | Order$notificationsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      collection: Prisma.$CollectionPayload<ExtArgs>
      customer: Prisma.$UserPayload<ExtArgs>
      manufacture: Prisma.$UserPayload<ExtArgs>
      productionHistory: Prisma.$OrderProductionPayload<ExtArgs>[]
      productionTracking: Prisma.$ProductionTrackingPayload<ExtArgs>[]
      revisions: Prisma.$RevisionPayload<ExtArgs>[]
      messages: Prisma.$MessagePayload<ExtArgs>[]
      company: Prisma.$CompanyPayload<ExtArgs> | null
      tasks: Prisma.$TaskPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      orderNumber: string
      quantity: number
      unitPrice: number
      totalPrice: number
      status: $Enums.OrderStatus
      customerNote: string | null
      manufacturerResponse: string | null
      customerQuotedPrice: number | null
      customerQuoteDays: number | null
      customerQuoteNote: string | null
      customerQuoteType: string | null
      customerQuoteSentAt: Date | null
      productionDays: number | null
      estimatedProductionDate: Date | null
      actualProductionStart: Date | null
      actualProductionEnd: Date | null
      shippingDate: Date | null
      deliveryAddress: string | null
      cargoTrackingNumber: string | null
      collectionId: number
      customerId: number
      manufactureId: number
      companyId: number | null
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    collection<T extends CollectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CollectionDefaultArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    manufacture<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productionHistory<T extends Order$productionHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Order$productionHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productionTracking<T extends Order$productionTrackingArgs<ExtArgs> = {}>(args?: Subset<T, Order$productionTrackingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    revisions<T extends Order$revisionsArgs<ExtArgs> = {}>(args?: Subset<T, Order$revisionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RevisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends Order$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Order$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    company<T extends Order$companyArgs<ExtArgs> = {}>(args?: Subset<T, Order$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tasks<T extends Order$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Order$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends Order$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Order$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'Int'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly quantity: FieldRef<"Order", 'Int'>
    readonly unitPrice: FieldRef<"Order", 'Float'>
    readonly totalPrice: FieldRef<"Order", 'Float'>
    readonly status: FieldRef<"Order", 'OrderStatus'>
    readonly customerNote: FieldRef<"Order", 'String'>
    readonly manufacturerResponse: FieldRef<"Order", 'String'>
    readonly customerQuotedPrice: FieldRef<"Order", 'Float'>
    readonly customerQuoteDays: FieldRef<"Order", 'Int'>
    readonly customerQuoteNote: FieldRef<"Order", 'String'>
    readonly customerQuoteType: FieldRef<"Order", 'String'>
    readonly customerQuoteSentAt: FieldRef<"Order", 'DateTime'>
    readonly productionDays: FieldRef<"Order", 'Int'>
    readonly estimatedProductionDate: FieldRef<"Order", 'DateTime'>
    readonly actualProductionStart: FieldRef<"Order", 'DateTime'>
    readonly actualProductionEnd: FieldRef<"Order", 'DateTime'>
    readonly shippingDate: FieldRef<"Order", 'DateTime'>
    readonly deliveryAddress: FieldRef<"Order", 'String'>
    readonly cargoTrackingNumber: FieldRef<"Order", 'String'>
    readonly collectionId: FieldRef<"Order", 'Int'>
    readonly customerId: FieldRef<"Order", 'Int'>
    readonly manufactureId: FieldRef<"Order", 'Int'>
    readonly companyId: FieldRef<"Order", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.productionHistory
   */
  export type Order$productionHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    where?: OrderProductionWhereInput
    orderBy?: OrderProductionOrderByWithRelationInput | OrderProductionOrderByWithRelationInput[]
    cursor?: OrderProductionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderProductionScalarFieldEnum | OrderProductionScalarFieldEnum[]
  }

  /**
   * Order.productionTracking
   */
  export type Order$productionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    cursor?: ProductionTrackingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * Order.revisions
   */
  export type Order$revisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Revision
     */
    select?: RevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Revision
     */
    omit?: RevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RevisionInclude<ExtArgs> | null
    where?: RevisionWhereInput
    orderBy?: RevisionOrderByWithRelationInput | RevisionOrderByWithRelationInput[]
    cursor?: RevisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * Order.messages
   */
  export type Order$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Order.company
   */
  export type Order$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * Order.tasks
   */
  export type Order$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Order.notifications
   */
  export type Order$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderProduction
   */

  export type AggregateOrderProduction = {
    _count: OrderProductionCountAggregateOutputType | null
    _avg: OrderProductionAvgAggregateOutputType | null
    _sum: OrderProductionSumAggregateOutputType | null
    _min: OrderProductionMinAggregateOutputType | null
    _max: OrderProductionMaxAggregateOutputType | null
  }

  export type OrderProductionAvgAggregateOutputType = {
    id: number | null
    estimatedDays: number | null
    orderId: number | null
    updatedById: number | null
  }

  export type OrderProductionSumAggregateOutputType = {
    id: number | null
    estimatedDays: number | null
    orderId: number | null
    updatedById: number | null
  }

  export type OrderProductionMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    status: $Enums.OrderStatus | null
    note: string | null
    estimatedDays: number | null
    actualDate: Date | null
    orderId: number | null
    updatedById: number | null
  }

  export type OrderProductionMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    status: $Enums.OrderStatus | null
    note: string | null
    estimatedDays: number | null
    actualDate: Date | null
    orderId: number | null
    updatedById: number | null
  }

  export type OrderProductionCountAggregateOutputType = {
    id: number
    createdAt: number
    status: number
    note: number
    estimatedDays: number
    actualDate: number
    orderId: number
    updatedById: number
    _all: number
  }


  export type OrderProductionAvgAggregateInputType = {
    id?: true
    estimatedDays?: true
    orderId?: true
    updatedById?: true
  }

  export type OrderProductionSumAggregateInputType = {
    id?: true
    estimatedDays?: true
    orderId?: true
    updatedById?: true
  }

  export type OrderProductionMinAggregateInputType = {
    id?: true
    createdAt?: true
    status?: true
    note?: true
    estimatedDays?: true
    actualDate?: true
    orderId?: true
    updatedById?: true
  }

  export type OrderProductionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    status?: true
    note?: true
    estimatedDays?: true
    actualDate?: true
    orderId?: true
    updatedById?: true
  }

  export type OrderProductionCountAggregateInputType = {
    id?: true
    createdAt?: true
    status?: true
    note?: true
    estimatedDays?: true
    actualDate?: true
    orderId?: true
    updatedById?: true
    _all?: true
  }

  export type OrderProductionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderProduction to aggregate.
     */
    where?: OrderProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderProductions to fetch.
     */
    orderBy?: OrderProductionOrderByWithRelationInput | OrderProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderProductions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderProductions
    **/
    _count?: true | OrderProductionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderProductionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderProductionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderProductionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderProductionMaxAggregateInputType
  }

  export type GetOrderProductionAggregateType<T extends OrderProductionAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderProduction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderProduction[P]>
      : GetScalarType<T[P], AggregateOrderProduction[P]>
  }




  export type OrderProductionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderProductionWhereInput
    orderBy?: OrderProductionOrderByWithAggregationInput | OrderProductionOrderByWithAggregationInput[]
    by: OrderProductionScalarFieldEnum[] | OrderProductionScalarFieldEnum
    having?: OrderProductionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderProductionCountAggregateInputType | true
    _avg?: OrderProductionAvgAggregateInputType
    _sum?: OrderProductionSumAggregateInputType
    _min?: OrderProductionMinAggregateInputType
    _max?: OrderProductionMaxAggregateInputType
  }

  export type OrderProductionGroupByOutputType = {
    id: number
    createdAt: Date
    status: $Enums.OrderStatus
    note: string | null
    estimatedDays: number | null
    actualDate: Date | null
    orderId: number
    updatedById: number
    _count: OrderProductionCountAggregateOutputType | null
    _avg: OrderProductionAvgAggregateOutputType | null
    _sum: OrderProductionSumAggregateOutputType | null
    _min: OrderProductionMinAggregateOutputType | null
    _max: OrderProductionMaxAggregateOutputType | null
  }

  type GetOrderProductionGroupByPayload<T extends OrderProductionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderProductionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderProductionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderProductionGroupByOutputType[P]>
            : GetScalarType<T[P], OrderProductionGroupByOutputType[P]>
        }
      >
    >


  export type OrderProductionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    status?: boolean
    note?: boolean
    estimatedDays?: boolean
    actualDate?: boolean
    orderId?: boolean
    updatedById?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderProduction"]>



  export type OrderProductionSelectScalar = {
    id?: boolean
    createdAt?: boolean
    status?: boolean
    note?: boolean
    estimatedDays?: boolean
    actualDate?: boolean
    orderId?: boolean
    updatedById?: boolean
  }

  export type OrderProductionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "status" | "note" | "estimatedDays" | "actualDate" | "orderId" | "updatedById", ExtArgs["result"]["orderProduction"]>
  export type OrderProductionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $OrderProductionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderProduction"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      updatedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      status: $Enums.OrderStatus
      note: string | null
      estimatedDays: number | null
      actualDate: Date | null
      orderId: number
      updatedById: number
    }, ExtArgs["result"]["orderProduction"]>
    composites: {}
  }

  type OrderProductionGetPayload<S extends boolean | null | undefined | OrderProductionDefaultArgs> = $Result.GetResult<Prisma.$OrderProductionPayload, S>

  type OrderProductionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderProductionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderProductionCountAggregateInputType | true
    }

  export interface OrderProductionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderProduction'], meta: { name: 'OrderProduction' } }
    /**
     * Find zero or one OrderProduction that matches the filter.
     * @param {OrderProductionFindUniqueArgs} args - Arguments to find a OrderProduction
     * @example
     * // Get one OrderProduction
     * const orderProduction = await prisma.orderProduction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderProductionFindUniqueArgs>(args: SelectSubset<T, OrderProductionFindUniqueArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderProduction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderProductionFindUniqueOrThrowArgs} args - Arguments to find a OrderProduction
     * @example
     * // Get one OrderProduction
     * const orderProduction = await prisma.orderProduction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderProductionFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderProductionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderProduction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderProductionFindFirstArgs} args - Arguments to find a OrderProduction
     * @example
     * // Get one OrderProduction
     * const orderProduction = await prisma.orderProduction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderProductionFindFirstArgs>(args?: SelectSubset<T, OrderProductionFindFirstArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderProduction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderProductionFindFirstOrThrowArgs} args - Arguments to find a OrderProduction
     * @example
     * // Get one OrderProduction
     * const orderProduction = await prisma.orderProduction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderProductionFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderProductionFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderProductions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderProductionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderProductions
     * const orderProductions = await prisma.orderProduction.findMany()
     * 
     * // Get first 10 OrderProductions
     * const orderProductions = await prisma.orderProduction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderProductionWithIdOnly = await prisma.orderProduction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderProductionFindManyArgs>(args?: SelectSubset<T, OrderProductionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderProduction.
     * @param {OrderProductionCreateArgs} args - Arguments to create a OrderProduction.
     * @example
     * // Create one OrderProduction
     * const OrderProduction = await prisma.orderProduction.create({
     *   data: {
     *     // ... data to create a OrderProduction
     *   }
     * })
     * 
     */
    create<T extends OrderProductionCreateArgs>(args: SelectSubset<T, OrderProductionCreateArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderProductions.
     * @param {OrderProductionCreateManyArgs} args - Arguments to create many OrderProductions.
     * @example
     * // Create many OrderProductions
     * const orderProduction = await prisma.orderProduction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderProductionCreateManyArgs>(args?: SelectSubset<T, OrderProductionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a OrderProduction.
     * @param {OrderProductionDeleteArgs} args - Arguments to delete one OrderProduction.
     * @example
     * // Delete one OrderProduction
     * const OrderProduction = await prisma.orderProduction.delete({
     *   where: {
     *     // ... filter to delete one OrderProduction
     *   }
     * })
     * 
     */
    delete<T extends OrderProductionDeleteArgs>(args: SelectSubset<T, OrderProductionDeleteArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderProduction.
     * @param {OrderProductionUpdateArgs} args - Arguments to update one OrderProduction.
     * @example
     * // Update one OrderProduction
     * const orderProduction = await prisma.orderProduction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderProductionUpdateArgs>(args: SelectSubset<T, OrderProductionUpdateArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderProductions.
     * @param {OrderProductionDeleteManyArgs} args - Arguments to filter OrderProductions to delete.
     * @example
     * // Delete a few OrderProductions
     * const { count } = await prisma.orderProduction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderProductionDeleteManyArgs>(args?: SelectSubset<T, OrderProductionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderProductions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderProductionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderProductions
     * const orderProduction = await prisma.orderProduction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderProductionUpdateManyArgs>(args: SelectSubset<T, OrderProductionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrderProduction.
     * @param {OrderProductionUpsertArgs} args - Arguments to update or create a OrderProduction.
     * @example
     * // Update or create a OrderProduction
     * const orderProduction = await prisma.orderProduction.upsert({
     *   create: {
     *     // ... data to create a OrderProduction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderProduction we want to update
     *   }
     * })
     */
    upsert<T extends OrderProductionUpsertArgs>(args: SelectSubset<T, OrderProductionUpsertArgs<ExtArgs>>): Prisma__OrderProductionClient<$Result.GetResult<Prisma.$OrderProductionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderProductions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderProductionCountArgs} args - Arguments to filter OrderProductions to count.
     * @example
     * // Count the number of OrderProductions
     * const count = await prisma.orderProduction.count({
     *   where: {
     *     // ... the filter for the OrderProductions we want to count
     *   }
     * })
    **/
    count<T extends OrderProductionCountArgs>(
      args?: Subset<T, OrderProductionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderProductionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderProduction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderProductionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderProductionAggregateArgs>(args: Subset<T, OrderProductionAggregateArgs>): Prisma.PrismaPromise<GetOrderProductionAggregateType<T>>

    /**
     * Group by OrderProduction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderProductionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderProductionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderProductionGroupByArgs['orderBy'] }
        : { orderBy?: OrderProductionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderProductionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderProductionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderProduction model
   */
  readonly fields: OrderProductionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderProduction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderProductionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderProduction model
   */
  interface OrderProductionFieldRefs {
    readonly id: FieldRef<"OrderProduction", 'Int'>
    readonly createdAt: FieldRef<"OrderProduction", 'DateTime'>
    readonly status: FieldRef<"OrderProduction", 'OrderStatus'>
    readonly note: FieldRef<"OrderProduction", 'String'>
    readonly estimatedDays: FieldRef<"OrderProduction", 'Int'>
    readonly actualDate: FieldRef<"OrderProduction", 'DateTime'>
    readonly orderId: FieldRef<"OrderProduction", 'Int'>
    readonly updatedById: FieldRef<"OrderProduction", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * OrderProduction findUnique
   */
  export type OrderProductionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * Filter, which OrderProduction to fetch.
     */
    where: OrderProductionWhereUniqueInput
  }

  /**
   * OrderProduction findUniqueOrThrow
   */
  export type OrderProductionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * Filter, which OrderProduction to fetch.
     */
    where: OrderProductionWhereUniqueInput
  }

  /**
   * OrderProduction findFirst
   */
  export type OrderProductionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * Filter, which OrderProduction to fetch.
     */
    where?: OrderProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderProductions to fetch.
     */
    orderBy?: OrderProductionOrderByWithRelationInput | OrderProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderProductions.
     */
    cursor?: OrderProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderProductions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderProductions.
     */
    distinct?: OrderProductionScalarFieldEnum | OrderProductionScalarFieldEnum[]
  }

  /**
   * OrderProduction findFirstOrThrow
   */
  export type OrderProductionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * Filter, which OrderProduction to fetch.
     */
    where?: OrderProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderProductions to fetch.
     */
    orderBy?: OrderProductionOrderByWithRelationInput | OrderProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderProductions.
     */
    cursor?: OrderProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderProductions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderProductions.
     */
    distinct?: OrderProductionScalarFieldEnum | OrderProductionScalarFieldEnum[]
  }

  /**
   * OrderProduction findMany
   */
  export type OrderProductionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * Filter, which OrderProductions to fetch.
     */
    where?: OrderProductionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderProductions to fetch.
     */
    orderBy?: OrderProductionOrderByWithRelationInput | OrderProductionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderProductions.
     */
    cursor?: OrderProductionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderProductions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderProductions.
     */
    skip?: number
    distinct?: OrderProductionScalarFieldEnum | OrderProductionScalarFieldEnum[]
  }

  /**
   * OrderProduction create
   */
  export type OrderProductionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderProduction.
     */
    data: XOR<OrderProductionCreateInput, OrderProductionUncheckedCreateInput>
  }

  /**
   * OrderProduction createMany
   */
  export type OrderProductionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderProductions.
     */
    data: OrderProductionCreateManyInput | OrderProductionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderProduction update
   */
  export type OrderProductionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderProduction.
     */
    data: XOR<OrderProductionUpdateInput, OrderProductionUncheckedUpdateInput>
    /**
     * Choose, which OrderProduction to update.
     */
    where: OrderProductionWhereUniqueInput
  }

  /**
   * OrderProduction updateMany
   */
  export type OrderProductionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderProductions.
     */
    data: XOR<OrderProductionUpdateManyMutationInput, OrderProductionUncheckedUpdateManyInput>
    /**
     * Filter which OrderProductions to update
     */
    where?: OrderProductionWhereInput
    /**
     * Limit how many OrderProductions to update.
     */
    limit?: number
  }

  /**
   * OrderProduction upsert
   */
  export type OrderProductionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderProduction to update in case it exists.
     */
    where: OrderProductionWhereUniqueInput
    /**
     * In case the OrderProduction found by the `where` argument doesn't exist, create a new OrderProduction with this data.
     */
    create: XOR<OrderProductionCreateInput, OrderProductionUncheckedCreateInput>
    /**
     * In case the OrderProduction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderProductionUpdateInput, OrderProductionUncheckedUpdateInput>
  }

  /**
   * OrderProduction delete
   */
  export type OrderProductionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
    /**
     * Filter which OrderProduction to delete.
     */
    where: OrderProductionWhereUniqueInput
  }

  /**
   * OrderProduction deleteMany
   */
  export type OrderProductionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderProductions to delete
     */
    where?: OrderProductionWhereInput
    /**
     * Limit how many OrderProductions to delete.
     */
    limit?: number
  }

  /**
   * OrderProduction without action
   */
  export type OrderProductionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderProduction
     */
    select?: OrderProductionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderProduction
     */
    omit?: OrderProductionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderProductionInclude<ExtArgs> | null
  }


  /**
   * Model Question
   */

  export type AggregateQuestion = {
    _count: QuestionCountAggregateOutputType | null
    _avg: QuestionAvgAggregateOutputType | null
    _sum: QuestionSumAggregateOutputType | null
    _min: QuestionMinAggregateOutputType | null
    _max: QuestionMaxAggregateOutputType | null
  }

  export type QuestionAvgAggregateOutputType = {
    id: number | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
  }

  export type QuestionSumAggregateOutputType = {
    id: number | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
  }

  export type QuestionMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    question: string | null
    answer: string | null
    isAnswered: boolean | null
    isPublic: boolean | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
  }

  export type QuestionMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    question: string | null
    answer: string | null
    isAnswered: boolean | null
    isPublic: boolean | null
    collectionId: number | null
    customerId: number | null
    manufactureId: number | null
  }

  export type QuestionCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    question: number
    answer: number
    isAnswered: number
    isPublic: number
    collectionId: number
    customerId: number
    manufactureId: number
    _all: number
  }


  export type QuestionAvgAggregateInputType = {
    id?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
  }

  export type QuestionSumAggregateInputType = {
    id?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
  }

  export type QuestionMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    question?: true
    answer?: true
    isAnswered?: true
    isPublic?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
  }

  export type QuestionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    question?: true
    answer?: true
    isAnswered?: true
    isPublic?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
  }

  export type QuestionCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    question?: true
    answer?: true
    isAnswered?: true
    isPublic?: true
    collectionId?: true
    customerId?: true
    manufactureId?: true
    _all?: true
  }

  export type QuestionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Question to aggregate.
     */
    where?: QuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Questions to fetch.
     */
    orderBy?: QuestionOrderByWithRelationInput | QuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Questions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Questions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Questions
    **/
    _count?: true | QuestionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QuestionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QuestionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QuestionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QuestionMaxAggregateInputType
  }

  export type GetQuestionAggregateType<T extends QuestionAggregateArgs> = {
        [P in keyof T & keyof AggregateQuestion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuestion[P]>
      : GetScalarType<T[P], AggregateQuestion[P]>
  }




  export type QuestionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuestionWhereInput
    orderBy?: QuestionOrderByWithAggregationInput | QuestionOrderByWithAggregationInput[]
    by: QuestionScalarFieldEnum[] | QuestionScalarFieldEnum
    having?: QuestionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QuestionCountAggregateInputType | true
    _avg?: QuestionAvgAggregateInputType
    _sum?: QuestionSumAggregateInputType
    _min?: QuestionMinAggregateInputType
    _max?: QuestionMaxAggregateInputType
  }

  export type QuestionGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    question: string
    answer: string | null
    isAnswered: boolean
    isPublic: boolean
    collectionId: number
    customerId: number
    manufactureId: number
    _count: QuestionCountAggregateOutputType | null
    _avg: QuestionAvgAggregateOutputType | null
    _sum: QuestionSumAggregateOutputType | null
    _min: QuestionMinAggregateOutputType | null
    _max: QuestionMaxAggregateOutputType | null
  }

  type GetQuestionGroupByPayload<T extends QuestionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QuestionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QuestionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QuestionGroupByOutputType[P]>
            : GetScalarType<T[P], QuestionGroupByOutputType[P]>
        }
      >
    >


  export type QuestionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    question?: boolean
    answer?: boolean
    isAnswered?: boolean
    isPublic?: boolean
    collectionId?: boolean
    customerId?: boolean
    manufactureId?: boolean
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    manufacture?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["question"]>



  export type QuestionSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    question?: boolean
    answer?: boolean
    isAnswered?: boolean
    isPublic?: boolean
    collectionId?: boolean
    customerId?: boolean
    manufactureId?: boolean
  }

  export type QuestionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "question" | "answer" | "isAnswered" | "isPublic" | "collectionId" | "customerId" | "manufactureId", ExtArgs["result"]["question"]>
  export type QuestionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
    manufacture?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $QuestionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Question"
    objects: {
      collection: Prisma.$CollectionPayload<ExtArgs>
      customer: Prisma.$UserPayload<ExtArgs>
      manufacture: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      question: string
      answer: string | null
      isAnswered: boolean
      isPublic: boolean
      collectionId: number
      customerId: number
      manufactureId: number
    }, ExtArgs["result"]["question"]>
    composites: {}
  }

  type QuestionGetPayload<S extends boolean | null | undefined | QuestionDefaultArgs> = $Result.GetResult<Prisma.$QuestionPayload, S>

  type QuestionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QuestionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QuestionCountAggregateInputType | true
    }

  export interface QuestionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Question'], meta: { name: 'Question' } }
    /**
     * Find zero or one Question that matches the filter.
     * @param {QuestionFindUniqueArgs} args - Arguments to find a Question
     * @example
     * // Get one Question
     * const question = await prisma.question.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QuestionFindUniqueArgs>(args: SelectSubset<T, QuestionFindUniqueArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Question that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QuestionFindUniqueOrThrowArgs} args - Arguments to find a Question
     * @example
     * // Get one Question
     * const question = await prisma.question.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QuestionFindUniqueOrThrowArgs>(args: SelectSubset<T, QuestionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Question that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuestionFindFirstArgs} args - Arguments to find a Question
     * @example
     * // Get one Question
     * const question = await prisma.question.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QuestionFindFirstArgs>(args?: SelectSubset<T, QuestionFindFirstArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Question that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuestionFindFirstOrThrowArgs} args - Arguments to find a Question
     * @example
     * // Get one Question
     * const question = await prisma.question.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QuestionFindFirstOrThrowArgs>(args?: SelectSubset<T, QuestionFindFirstOrThrowArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Questions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuestionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Questions
     * const questions = await prisma.question.findMany()
     * 
     * // Get first 10 Questions
     * const questions = await prisma.question.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const questionWithIdOnly = await prisma.question.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QuestionFindManyArgs>(args?: SelectSubset<T, QuestionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Question.
     * @param {QuestionCreateArgs} args - Arguments to create a Question.
     * @example
     * // Create one Question
     * const Question = await prisma.question.create({
     *   data: {
     *     // ... data to create a Question
     *   }
     * })
     * 
     */
    create<T extends QuestionCreateArgs>(args: SelectSubset<T, QuestionCreateArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Questions.
     * @param {QuestionCreateManyArgs} args - Arguments to create many Questions.
     * @example
     * // Create many Questions
     * const question = await prisma.question.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QuestionCreateManyArgs>(args?: SelectSubset<T, QuestionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Question.
     * @param {QuestionDeleteArgs} args - Arguments to delete one Question.
     * @example
     * // Delete one Question
     * const Question = await prisma.question.delete({
     *   where: {
     *     // ... filter to delete one Question
     *   }
     * })
     * 
     */
    delete<T extends QuestionDeleteArgs>(args: SelectSubset<T, QuestionDeleteArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Question.
     * @param {QuestionUpdateArgs} args - Arguments to update one Question.
     * @example
     * // Update one Question
     * const question = await prisma.question.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QuestionUpdateArgs>(args: SelectSubset<T, QuestionUpdateArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Questions.
     * @param {QuestionDeleteManyArgs} args - Arguments to filter Questions to delete.
     * @example
     * // Delete a few Questions
     * const { count } = await prisma.question.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QuestionDeleteManyArgs>(args?: SelectSubset<T, QuestionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Questions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuestionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Questions
     * const question = await prisma.question.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QuestionUpdateManyArgs>(args: SelectSubset<T, QuestionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Question.
     * @param {QuestionUpsertArgs} args - Arguments to update or create a Question.
     * @example
     * // Update or create a Question
     * const question = await prisma.question.upsert({
     *   create: {
     *     // ... data to create a Question
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Question we want to update
     *   }
     * })
     */
    upsert<T extends QuestionUpsertArgs>(args: SelectSubset<T, QuestionUpsertArgs<ExtArgs>>): Prisma__QuestionClient<$Result.GetResult<Prisma.$QuestionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Questions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuestionCountArgs} args - Arguments to filter Questions to count.
     * @example
     * // Count the number of Questions
     * const count = await prisma.question.count({
     *   where: {
     *     // ... the filter for the Questions we want to count
     *   }
     * })
    **/
    count<T extends QuestionCountArgs>(
      args?: Subset<T, QuestionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QuestionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Question.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuestionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QuestionAggregateArgs>(args: Subset<T, QuestionAggregateArgs>): Prisma.PrismaPromise<GetQuestionAggregateType<T>>

    /**
     * Group by Question.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuestionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QuestionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QuestionGroupByArgs['orderBy'] }
        : { orderBy?: QuestionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QuestionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuestionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Question model
   */
  readonly fields: QuestionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Question.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QuestionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    collection<T extends CollectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CollectionDefaultArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    manufacture<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Question model
   */
  interface QuestionFieldRefs {
    readonly id: FieldRef<"Question", 'Int'>
    readonly createdAt: FieldRef<"Question", 'DateTime'>
    readonly updatedAt: FieldRef<"Question", 'DateTime'>
    readonly question: FieldRef<"Question", 'String'>
    readonly answer: FieldRef<"Question", 'String'>
    readonly isAnswered: FieldRef<"Question", 'Boolean'>
    readonly isPublic: FieldRef<"Question", 'Boolean'>
    readonly collectionId: FieldRef<"Question", 'Int'>
    readonly customerId: FieldRef<"Question", 'Int'>
    readonly manufactureId: FieldRef<"Question", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Question findUnique
   */
  export type QuestionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * Filter, which Question to fetch.
     */
    where: QuestionWhereUniqueInput
  }

  /**
   * Question findUniqueOrThrow
   */
  export type QuestionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * Filter, which Question to fetch.
     */
    where: QuestionWhereUniqueInput
  }

  /**
   * Question findFirst
   */
  export type QuestionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * Filter, which Question to fetch.
     */
    where?: QuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Questions to fetch.
     */
    orderBy?: QuestionOrderByWithRelationInput | QuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Questions.
     */
    cursor?: QuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Questions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Questions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Questions.
     */
    distinct?: QuestionScalarFieldEnum | QuestionScalarFieldEnum[]
  }

  /**
   * Question findFirstOrThrow
   */
  export type QuestionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * Filter, which Question to fetch.
     */
    where?: QuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Questions to fetch.
     */
    orderBy?: QuestionOrderByWithRelationInput | QuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Questions.
     */
    cursor?: QuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Questions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Questions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Questions.
     */
    distinct?: QuestionScalarFieldEnum | QuestionScalarFieldEnum[]
  }

  /**
   * Question findMany
   */
  export type QuestionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * Filter, which Questions to fetch.
     */
    where?: QuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Questions to fetch.
     */
    orderBy?: QuestionOrderByWithRelationInput | QuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Questions.
     */
    cursor?: QuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Questions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Questions.
     */
    skip?: number
    distinct?: QuestionScalarFieldEnum | QuestionScalarFieldEnum[]
  }

  /**
   * Question create
   */
  export type QuestionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * The data needed to create a Question.
     */
    data: XOR<QuestionCreateInput, QuestionUncheckedCreateInput>
  }

  /**
   * Question createMany
   */
  export type QuestionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Questions.
     */
    data: QuestionCreateManyInput | QuestionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Question update
   */
  export type QuestionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * The data needed to update a Question.
     */
    data: XOR<QuestionUpdateInput, QuestionUncheckedUpdateInput>
    /**
     * Choose, which Question to update.
     */
    where: QuestionWhereUniqueInput
  }

  /**
   * Question updateMany
   */
  export type QuestionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Questions.
     */
    data: XOR<QuestionUpdateManyMutationInput, QuestionUncheckedUpdateManyInput>
    /**
     * Filter which Questions to update
     */
    where?: QuestionWhereInput
    /**
     * Limit how many Questions to update.
     */
    limit?: number
  }

  /**
   * Question upsert
   */
  export type QuestionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * The filter to search for the Question to update in case it exists.
     */
    where: QuestionWhereUniqueInput
    /**
     * In case the Question found by the `where` argument doesn't exist, create a new Question with this data.
     */
    create: XOR<QuestionCreateInput, QuestionUncheckedCreateInput>
    /**
     * In case the Question was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QuestionUpdateInput, QuestionUncheckedUpdateInput>
  }

  /**
   * Question delete
   */
  export type QuestionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
    /**
     * Filter which Question to delete.
     */
    where: QuestionWhereUniqueInput
  }

  /**
   * Question deleteMany
   */
  export type QuestionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Questions to delete
     */
    where?: QuestionWhereInput
    /**
     * Limit how many Questions to delete.
     */
    limit?: number
  }

  /**
   * Question without action
   */
  export type QuestionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Question
     */
    select?: QuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Question
     */
    omit?: QuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuestionInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    id: number | null
    rating: number | null
    collectionId: number | null
    customerId: number | null
  }

  export type ReviewSumAggregateOutputType = {
    id: number | null
    rating: number | null
    collectionId: number | null
    customerId: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    rating: number | null
    comment: string | null
    isApproved: boolean | null
    collectionId: number | null
    customerId: number | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    rating: number | null
    comment: string | null
    isApproved: boolean | null
    collectionId: number | null
    customerId: number | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    rating: number
    comment: number
    isApproved: number
    collectionId: number
    customerId: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    id?: true
    rating?: true
    collectionId?: true
    customerId?: true
  }

  export type ReviewSumAggregateInputType = {
    id?: true
    rating?: true
    collectionId?: true
    customerId?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    rating?: true
    comment?: true
    isApproved?: true
    collectionId?: true
    customerId?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    rating?: true
    comment?: true
    isApproved?: true
    collectionId?: true
    customerId?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    rating?: true
    comment?: true
    isApproved?: true
    collectionId?: true
    customerId?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    rating: number
    comment: string | null
    isApproved: boolean
    collectionId: number
    customerId: number
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rating?: boolean
    comment?: boolean
    isApproved?: boolean
    collectionId?: boolean
    customerId?: boolean
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>



  export type ReviewSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rating?: boolean
    comment?: boolean
    isApproved?: boolean
    collectionId?: boolean
    customerId?: boolean
  }

  export type ReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "rating" | "comment" | "isApproved" | "collectionId" | "customerId", ExtArgs["result"]["review"]>
  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collection?: boolean | CollectionDefaultArgs<ExtArgs>
    customer?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      collection: Prisma.$CollectionPayload<ExtArgs>
      customer: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      rating: number
      comment: string | null
      isApproved: boolean
      collectionId: number
      customerId: number
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    collection<T extends CollectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CollectionDefaultArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'Int'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
    readonly updatedAt: FieldRef<"Review", 'DateTime'>
    readonly rating: FieldRef<"Review", 'Int'>
    readonly comment: FieldRef<"Review", 'String'>
    readonly isApproved: FieldRef<"Review", 'Boolean'>
    readonly collectionId: FieldRef<"Review", 'Int'>
    readonly customerId: FieldRef<"Review", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to delete.
     */
    limit?: number
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model File
   */

  export type AggregateFile = {
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  export type FileAvgAggregateOutputType = {
    size: number | null
  }

  export type FileSumAggregateOutputType = {
    size: number | null
  }

  export type FileMinAggregateOutputType = {
    id: string | null
    filename: string | null
    path: string | null
    size: number | null
    mimetype: string | null
    encoding: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FileMaxAggregateOutputType = {
    id: string | null
    filename: string | null
    path: string | null
    size: number | null
    mimetype: string | null
    encoding: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FileCountAggregateOutputType = {
    id: number
    filename: number
    path: number
    size: number
    mimetype: number
    encoding: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FileAvgAggregateInputType = {
    size?: true
  }

  export type FileSumAggregateInputType = {
    size?: true
  }

  export type FileMinAggregateInputType = {
    id?: true
    filename?: true
    path?: true
    size?: true
    mimetype?: true
    encoding?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FileMaxAggregateInputType = {
    id?: true
    filename?: true
    path?: true
    size?: true
    mimetype?: true
    encoding?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FileCountAggregateInputType = {
    id?: true
    filename?: true
    path?: true
    size?: true
    mimetype?: true
    encoding?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which File to aggregate.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Files
    **/
    _count?: true | FileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FileMaxAggregateInputType
  }

  export type GetFileAggregateType<T extends FileAggregateArgs> = {
        [P in keyof T & keyof AggregateFile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFile[P]>
      : GetScalarType<T[P], AggregateFile[P]>
  }




  export type FileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
    orderBy?: FileOrderByWithAggregationInput | FileOrderByWithAggregationInput[]
    by: FileScalarFieldEnum[] | FileScalarFieldEnum
    having?: FileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FileCountAggregateInputType | true
    _avg?: FileAvgAggregateInputType
    _sum?: FileSumAggregateInputType
    _min?: FileMinAggregateInputType
    _max?: FileMaxAggregateInputType
  }

  export type FileGroupByOutputType = {
    id: string
    filename: string
    path: string
    size: number
    mimetype: string
    encoding: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  type GetFileGroupByPayload<T extends FileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FileGroupByOutputType[P]>
            : GetScalarType<T[P], FileGroupByOutputType[P]>
        }
      >
    >


  export type FileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filename?: boolean
    path?: boolean
    size?: boolean
    mimetype?: boolean
    encoding?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["file"]>



  export type FileSelectScalar = {
    id?: boolean
    filename?: boolean
    path?: boolean
    size?: boolean
    mimetype?: boolean
    encoding?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filename" | "path" | "size" | "mimetype" | "encoding" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["file"]>

  export type $FilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "File"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      filename: string
      path: string
      size: number
      mimetype: string
      encoding: string | null
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["file"]>
    composites: {}
  }

  type FileGetPayload<S extends boolean | null | undefined | FileDefaultArgs> = $Result.GetResult<Prisma.$FilePayload, S>

  type FileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FileCountAggregateInputType | true
    }

  export interface FileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['File'], meta: { name: 'File' } }
    /**
     * Find zero or one File that matches the filter.
     * @param {FileFindUniqueArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FileFindUniqueArgs>(args: SelectSubset<T, FileFindUniqueArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one File that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FileFindUniqueOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FileFindUniqueOrThrowArgs>(args: SelectSubset<T, FileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FileFindFirstArgs>(args?: SelectSubset<T, FileFindFirstArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FileFindFirstOrThrowArgs>(args?: SelectSubset<T, FileFindFirstOrThrowArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Files
     * const files = await prisma.file.findMany()
     * 
     * // Get first 10 Files
     * const files = await prisma.file.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fileWithIdOnly = await prisma.file.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FileFindManyArgs>(args?: SelectSubset<T, FileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a File.
     * @param {FileCreateArgs} args - Arguments to create a File.
     * @example
     * // Create one File
     * const File = await prisma.file.create({
     *   data: {
     *     // ... data to create a File
     *   }
     * })
     * 
     */
    create<T extends FileCreateArgs>(args: SelectSubset<T, FileCreateArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Files.
     * @param {FileCreateManyArgs} args - Arguments to create many Files.
     * @example
     * // Create many Files
     * const file = await prisma.file.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FileCreateManyArgs>(args?: SelectSubset<T, FileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a File.
     * @param {FileDeleteArgs} args - Arguments to delete one File.
     * @example
     * // Delete one File
     * const File = await prisma.file.delete({
     *   where: {
     *     // ... filter to delete one File
     *   }
     * })
     * 
     */
    delete<T extends FileDeleteArgs>(args: SelectSubset<T, FileDeleteArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one File.
     * @param {FileUpdateArgs} args - Arguments to update one File.
     * @example
     * // Update one File
     * const file = await prisma.file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FileUpdateArgs>(args: SelectSubset<T, FileUpdateArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Files.
     * @param {FileDeleteManyArgs} args - Arguments to filter Files to delete.
     * @example
     * // Delete a few Files
     * const { count } = await prisma.file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FileDeleteManyArgs>(args?: SelectSubset<T, FileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Files
     * const file = await prisma.file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FileUpdateManyArgs>(args: SelectSubset<T, FileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one File.
     * @param {FileUpsertArgs} args - Arguments to update or create a File.
     * @example
     * // Update or create a File
     * const file = await prisma.file.upsert({
     *   create: {
     *     // ... data to create a File
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the File we want to update
     *   }
     * })
     */
    upsert<T extends FileUpsertArgs>(args: SelectSubset<T, FileUpsertArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileCountArgs} args - Arguments to filter Files to count.
     * @example
     * // Count the number of Files
     * const count = await prisma.file.count({
     *   where: {
     *     // ... the filter for the Files we want to count
     *   }
     * })
    **/
    count<T extends FileCountArgs>(
      args?: Subset<T, FileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FileAggregateArgs>(args: Subset<T, FileAggregateArgs>): Prisma.PrismaPromise<GetFileAggregateType<T>>

    /**
     * Group by File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FileGroupByArgs['orderBy'] }
        : { orderBy?: FileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the File model
   */
  readonly fields: FileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for File.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the File model
   */
  interface FileFieldRefs {
    readonly id: FieldRef<"File", 'String'>
    readonly filename: FieldRef<"File", 'String'>
    readonly path: FieldRef<"File", 'String'>
    readonly size: FieldRef<"File", 'Int'>
    readonly mimetype: FieldRef<"File", 'String'>
    readonly encoding: FieldRef<"File", 'String'>
    readonly description: FieldRef<"File", 'String'>
    readonly createdAt: FieldRef<"File", 'DateTime'>
    readonly updatedAt: FieldRef<"File", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * File findUnique
   */
  export type FileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File findUniqueOrThrow
   */
  export type FileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File findFirst
   */
  export type FileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File findFirstOrThrow
   */
  export type FileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File findMany
   */
  export type FileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Filter, which Files to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File create
   */
  export type FileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * The data needed to create a File.
     */
    data: XOR<FileCreateInput, FileUncheckedCreateInput>
  }

  /**
   * File createMany
   */
  export type FileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Files.
     */
    data: FileCreateManyInput | FileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * File update
   */
  export type FileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * The data needed to update a File.
     */
    data: XOR<FileUpdateInput, FileUncheckedUpdateInput>
    /**
     * Choose, which File to update.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File updateMany
   */
  export type FileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Files.
     */
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyInput>
    /**
     * Filter which Files to update
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to update.
     */
    limit?: number
  }

  /**
   * File upsert
   */
  export type FileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * The filter to search for the File to update in case it exists.
     */
    where: FileWhereUniqueInput
    /**
     * In case the File found by the `where` argument doesn't exist, create a new File with this data.
     */
    create: XOR<FileCreateInput, FileUncheckedCreateInput>
    /**
     * In case the File was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FileUpdateInput, FileUncheckedUpdateInput>
  }

  /**
   * File delete
   */
  export type FileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Filter which File to delete.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File deleteMany
   */
  export type FileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Files to delete
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to delete.
     */
    limit?: number
  }

  /**
   * File without action
   */
  export type FileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
  }


  /**
   * Model ProductionStageUpdate
   */

  export type AggregateProductionStageUpdate = {
    _count: ProductionStageUpdateCountAggregateOutputType | null
    _avg: ProductionStageUpdateAvgAggregateOutputType | null
    _sum: ProductionStageUpdateSumAggregateOutputType | null
    _min: ProductionStageUpdateMinAggregateOutputType | null
    _max: ProductionStageUpdateMaxAggregateOutputType | null
  }

  export type ProductionStageUpdateAvgAggregateOutputType = {
    id: number | null
    productionId: number | null
    estimatedDays: number | null
    extraDays: number | null
  }

  export type ProductionStageUpdateSumAggregateOutputType = {
    id: number | null
    productionId: number | null
    estimatedDays: number | null
    extraDays: number | null
  }

  export type ProductionStageUpdateMinAggregateOutputType = {
    id: number | null
    productionId: number | null
    stage: $Enums.ProductionStage | null
    status: $Enums.StageStatus | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    estimatedDays: number | null
    notes: string | null
    photos: string | null
    isRevision: boolean | null
    delayReason: string | null
    extraDays: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductionStageUpdateMaxAggregateOutputType = {
    id: number | null
    productionId: number | null
    stage: $Enums.ProductionStage | null
    status: $Enums.StageStatus | null
    actualStartDate: Date | null
    actualEndDate: Date | null
    estimatedDays: number | null
    notes: string | null
    photos: string | null
    isRevision: boolean | null
    delayReason: string | null
    extraDays: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductionStageUpdateCountAggregateOutputType = {
    id: number
    productionId: number
    stage: number
    status: number
    actualStartDate: number
    actualEndDate: number
    estimatedDays: number
    notes: number
    photos: number
    isRevision: number
    delayReason: number
    extraDays: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductionStageUpdateAvgAggregateInputType = {
    id?: true
    productionId?: true
    estimatedDays?: true
    extraDays?: true
  }

  export type ProductionStageUpdateSumAggregateInputType = {
    id?: true
    productionId?: true
    estimatedDays?: true
    extraDays?: true
  }

  export type ProductionStageUpdateMinAggregateInputType = {
    id?: true
    productionId?: true
    stage?: true
    status?: true
    actualStartDate?: true
    actualEndDate?: true
    estimatedDays?: true
    notes?: true
    photos?: true
    isRevision?: true
    delayReason?: true
    extraDays?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductionStageUpdateMaxAggregateInputType = {
    id?: true
    productionId?: true
    stage?: true
    status?: true
    actualStartDate?: true
    actualEndDate?: true
    estimatedDays?: true
    notes?: true
    photos?: true
    isRevision?: true
    delayReason?: true
    extraDays?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductionStageUpdateCountAggregateInputType = {
    id?: true
    productionId?: true
    stage?: true
    status?: true
    actualStartDate?: true
    actualEndDate?: true
    estimatedDays?: true
    notes?: true
    photos?: true
    isRevision?: true
    delayReason?: true
    extraDays?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductionStageUpdateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductionStageUpdate to aggregate.
     */
    where?: ProductionStageUpdateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionStageUpdates to fetch.
     */
    orderBy?: ProductionStageUpdateOrderByWithRelationInput | ProductionStageUpdateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductionStageUpdateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionStageUpdates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionStageUpdates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductionStageUpdates
    **/
    _count?: true | ProductionStageUpdateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductionStageUpdateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductionStageUpdateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductionStageUpdateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductionStageUpdateMaxAggregateInputType
  }

  export type GetProductionStageUpdateAggregateType<T extends ProductionStageUpdateAggregateArgs> = {
        [P in keyof T & keyof AggregateProductionStageUpdate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductionStageUpdate[P]>
      : GetScalarType<T[P], AggregateProductionStageUpdate[P]>
  }




  export type ProductionStageUpdateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionStageUpdateWhereInput
    orderBy?: ProductionStageUpdateOrderByWithAggregationInput | ProductionStageUpdateOrderByWithAggregationInput[]
    by: ProductionStageUpdateScalarFieldEnum[] | ProductionStageUpdateScalarFieldEnum
    having?: ProductionStageUpdateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductionStageUpdateCountAggregateInputType | true
    _avg?: ProductionStageUpdateAvgAggregateInputType
    _sum?: ProductionStageUpdateSumAggregateInputType
    _min?: ProductionStageUpdateMinAggregateInputType
    _max?: ProductionStageUpdateMaxAggregateInputType
  }

  export type ProductionStageUpdateGroupByOutputType = {
    id: number
    productionId: number
    stage: $Enums.ProductionStage
    status: $Enums.StageStatus
    actualStartDate: Date | null
    actualEndDate: Date | null
    estimatedDays: number | null
    notes: string | null
    photos: string | null
    isRevision: boolean
    delayReason: string | null
    extraDays: number
    createdAt: Date
    updatedAt: Date
    _count: ProductionStageUpdateCountAggregateOutputType | null
    _avg: ProductionStageUpdateAvgAggregateOutputType | null
    _sum: ProductionStageUpdateSumAggregateOutputType | null
    _min: ProductionStageUpdateMinAggregateOutputType | null
    _max: ProductionStageUpdateMaxAggregateOutputType | null
  }

  type GetProductionStageUpdateGroupByPayload<T extends ProductionStageUpdateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductionStageUpdateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductionStageUpdateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductionStageUpdateGroupByOutputType[P]>
            : GetScalarType<T[P], ProductionStageUpdateGroupByOutputType[P]>
        }
      >
    >


  export type ProductionStageUpdateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productionId?: boolean
    stage?: boolean
    status?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    estimatedDays?: boolean
    notes?: boolean
    photos?: boolean
    isRevision?: boolean
    delayReason?: boolean
    extraDays?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    production?: boolean | ProductionTrackingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productionStageUpdate"]>



  export type ProductionStageUpdateSelectScalar = {
    id?: boolean
    productionId?: boolean
    stage?: boolean
    status?: boolean
    actualStartDate?: boolean
    actualEndDate?: boolean
    estimatedDays?: boolean
    notes?: boolean
    photos?: boolean
    isRevision?: boolean
    delayReason?: boolean
    extraDays?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductionStageUpdateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productionId" | "stage" | "status" | "actualStartDate" | "actualEndDate" | "estimatedDays" | "notes" | "photos" | "isRevision" | "delayReason" | "extraDays" | "createdAt" | "updatedAt", ExtArgs["result"]["productionStageUpdate"]>
  export type ProductionStageUpdateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    production?: boolean | ProductionTrackingDefaultArgs<ExtArgs>
  }

  export type $ProductionStageUpdatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductionStageUpdate"
    objects: {
      production: Prisma.$ProductionTrackingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productionId: number
      stage: $Enums.ProductionStage
      status: $Enums.StageStatus
      actualStartDate: Date | null
      actualEndDate: Date | null
      estimatedDays: number | null
      notes: string | null
      photos: string | null
      isRevision: boolean
      delayReason: string | null
      extraDays: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productionStageUpdate"]>
    composites: {}
  }

  type ProductionStageUpdateGetPayload<S extends boolean | null | undefined | ProductionStageUpdateDefaultArgs> = $Result.GetResult<Prisma.$ProductionStageUpdatePayload, S>

  type ProductionStageUpdateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductionStageUpdateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductionStageUpdateCountAggregateInputType | true
    }

  export interface ProductionStageUpdateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductionStageUpdate'], meta: { name: 'ProductionStageUpdate' } }
    /**
     * Find zero or one ProductionStageUpdate that matches the filter.
     * @param {ProductionStageUpdateFindUniqueArgs} args - Arguments to find a ProductionStageUpdate
     * @example
     * // Get one ProductionStageUpdate
     * const productionStageUpdate = await prisma.productionStageUpdate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductionStageUpdateFindUniqueArgs>(args: SelectSubset<T, ProductionStageUpdateFindUniqueArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductionStageUpdate that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductionStageUpdateFindUniqueOrThrowArgs} args - Arguments to find a ProductionStageUpdate
     * @example
     * // Get one ProductionStageUpdate
     * const productionStageUpdate = await prisma.productionStageUpdate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductionStageUpdateFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductionStageUpdateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductionStageUpdate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionStageUpdateFindFirstArgs} args - Arguments to find a ProductionStageUpdate
     * @example
     * // Get one ProductionStageUpdate
     * const productionStageUpdate = await prisma.productionStageUpdate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductionStageUpdateFindFirstArgs>(args?: SelectSubset<T, ProductionStageUpdateFindFirstArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductionStageUpdate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionStageUpdateFindFirstOrThrowArgs} args - Arguments to find a ProductionStageUpdate
     * @example
     * // Get one ProductionStageUpdate
     * const productionStageUpdate = await prisma.productionStageUpdate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductionStageUpdateFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductionStageUpdateFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductionStageUpdates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionStageUpdateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductionStageUpdates
     * const productionStageUpdates = await prisma.productionStageUpdate.findMany()
     * 
     * // Get first 10 ProductionStageUpdates
     * const productionStageUpdates = await prisma.productionStageUpdate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productionStageUpdateWithIdOnly = await prisma.productionStageUpdate.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductionStageUpdateFindManyArgs>(args?: SelectSubset<T, ProductionStageUpdateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductionStageUpdate.
     * @param {ProductionStageUpdateCreateArgs} args - Arguments to create a ProductionStageUpdate.
     * @example
     * // Create one ProductionStageUpdate
     * const ProductionStageUpdate = await prisma.productionStageUpdate.create({
     *   data: {
     *     // ... data to create a ProductionStageUpdate
     *   }
     * })
     * 
     */
    create<T extends ProductionStageUpdateCreateArgs>(args: SelectSubset<T, ProductionStageUpdateCreateArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductionStageUpdates.
     * @param {ProductionStageUpdateCreateManyArgs} args - Arguments to create many ProductionStageUpdates.
     * @example
     * // Create many ProductionStageUpdates
     * const productionStageUpdate = await prisma.productionStageUpdate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductionStageUpdateCreateManyArgs>(args?: SelectSubset<T, ProductionStageUpdateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProductionStageUpdate.
     * @param {ProductionStageUpdateDeleteArgs} args - Arguments to delete one ProductionStageUpdate.
     * @example
     * // Delete one ProductionStageUpdate
     * const ProductionStageUpdate = await prisma.productionStageUpdate.delete({
     *   where: {
     *     // ... filter to delete one ProductionStageUpdate
     *   }
     * })
     * 
     */
    delete<T extends ProductionStageUpdateDeleteArgs>(args: SelectSubset<T, ProductionStageUpdateDeleteArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductionStageUpdate.
     * @param {ProductionStageUpdateUpdateArgs} args - Arguments to update one ProductionStageUpdate.
     * @example
     * // Update one ProductionStageUpdate
     * const productionStageUpdate = await prisma.productionStageUpdate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductionStageUpdateUpdateArgs>(args: SelectSubset<T, ProductionStageUpdateUpdateArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductionStageUpdates.
     * @param {ProductionStageUpdateDeleteManyArgs} args - Arguments to filter ProductionStageUpdates to delete.
     * @example
     * // Delete a few ProductionStageUpdates
     * const { count } = await prisma.productionStageUpdate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductionStageUpdateDeleteManyArgs>(args?: SelectSubset<T, ProductionStageUpdateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductionStageUpdates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionStageUpdateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductionStageUpdates
     * const productionStageUpdate = await prisma.productionStageUpdate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductionStageUpdateUpdateManyArgs>(args: SelectSubset<T, ProductionStageUpdateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductionStageUpdate.
     * @param {ProductionStageUpdateUpsertArgs} args - Arguments to update or create a ProductionStageUpdate.
     * @example
     * // Update or create a ProductionStageUpdate
     * const productionStageUpdate = await prisma.productionStageUpdate.upsert({
     *   create: {
     *     // ... data to create a ProductionStageUpdate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductionStageUpdate we want to update
     *   }
     * })
     */
    upsert<T extends ProductionStageUpdateUpsertArgs>(args: SelectSubset<T, ProductionStageUpdateUpsertArgs<ExtArgs>>): Prisma__ProductionStageUpdateClient<$Result.GetResult<Prisma.$ProductionStageUpdatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductionStageUpdates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionStageUpdateCountArgs} args - Arguments to filter ProductionStageUpdates to count.
     * @example
     * // Count the number of ProductionStageUpdates
     * const count = await prisma.productionStageUpdate.count({
     *   where: {
     *     // ... the filter for the ProductionStageUpdates we want to count
     *   }
     * })
    **/
    count<T extends ProductionStageUpdateCountArgs>(
      args?: Subset<T, ProductionStageUpdateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductionStageUpdateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductionStageUpdate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionStageUpdateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductionStageUpdateAggregateArgs>(args: Subset<T, ProductionStageUpdateAggregateArgs>): Prisma.PrismaPromise<GetProductionStageUpdateAggregateType<T>>

    /**
     * Group by ProductionStageUpdate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionStageUpdateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductionStageUpdateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductionStageUpdateGroupByArgs['orderBy'] }
        : { orderBy?: ProductionStageUpdateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductionStageUpdateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductionStageUpdateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductionStageUpdate model
   */
  readonly fields: ProductionStageUpdateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductionStageUpdate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductionStageUpdateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    production<T extends ProductionTrackingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTrackingDefaultArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductionStageUpdate model
   */
  interface ProductionStageUpdateFieldRefs {
    readonly id: FieldRef<"ProductionStageUpdate", 'Int'>
    readonly productionId: FieldRef<"ProductionStageUpdate", 'Int'>
    readonly stage: FieldRef<"ProductionStageUpdate", 'ProductionStage'>
    readonly status: FieldRef<"ProductionStageUpdate", 'StageStatus'>
    readonly actualStartDate: FieldRef<"ProductionStageUpdate", 'DateTime'>
    readonly actualEndDate: FieldRef<"ProductionStageUpdate", 'DateTime'>
    readonly estimatedDays: FieldRef<"ProductionStageUpdate", 'Int'>
    readonly notes: FieldRef<"ProductionStageUpdate", 'String'>
    readonly photos: FieldRef<"ProductionStageUpdate", 'String'>
    readonly isRevision: FieldRef<"ProductionStageUpdate", 'Boolean'>
    readonly delayReason: FieldRef<"ProductionStageUpdate", 'String'>
    readonly extraDays: FieldRef<"ProductionStageUpdate", 'Int'>
    readonly createdAt: FieldRef<"ProductionStageUpdate", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductionStageUpdate", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductionStageUpdate findUnique
   */
  export type ProductionStageUpdateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * Filter, which ProductionStageUpdate to fetch.
     */
    where: ProductionStageUpdateWhereUniqueInput
  }

  /**
   * ProductionStageUpdate findUniqueOrThrow
   */
  export type ProductionStageUpdateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * Filter, which ProductionStageUpdate to fetch.
     */
    where: ProductionStageUpdateWhereUniqueInput
  }

  /**
   * ProductionStageUpdate findFirst
   */
  export type ProductionStageUpdateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * Filter, which ProductionStageUpdate to fetch.
     */
    where?: ProductionStageUpdateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionStageUpdates to fetch.
     */
    orderBy?: ProductionStageUpdateOrderByWithRelationInput | ProductionStageUpdateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductionStageUpdates.
     */
    cursor?: ProductionStageUpdateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionStageUpdates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionStageUpdates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductionStageUpdates.
     */
    distinct?: ProductionStageUpdateScalarFieldEnum | ProductionStageUpdateScalarFieldEnum[]
  }

  /**
   * ProductionStageUpdate findFirstOrThrow
   */
  export type ProductionStageUpdateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * Filter, which ProductionStageUpdate to fetch.
     */
    where?: ProductionStageUpdateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionStageUpdates to fetch.
     */
    orderBy?: ProductionStageUpdateOrderByWithRelationInput | ProductionStageUpdateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductionStageUpdates.
     */
    cursor?: ProductionStageUpdateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionStageUpdates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionStageUpdates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductionStageUpdates.
     */
    distinct?: ProductionStageUpdateScalarFieldEnum | ProductionStageUpdateScalarFieldEnum[]
  }

  /**
   * ProductionStageUpdate findMany
   */
  export type ProductionStageUpdateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * Filter, which ProductionStageUpdates to fetch.
     */
    where?: ProductionStageUpdateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionStageUpdates to fetch.
     */
    orderBy?: ProductionStageUpdateOrderByWithRelationInput | ProductionStageUpdateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductionStageUpdates.
     */
    cursor?: ProductionStageUpdateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionStageUpdates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionStageUpdates.
     */
    skip?: number
    distinct?: ProductionStageUpdateScalarFieldEnum | ProductionStageUpdateScalarFieldEnum[]
  }

  /**
   * ProductionStageUpdate create
   */
  export type ProductionStageUpdateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductionStageUpdate.
     */
    data: XOR<ProductionStageUpdateCreateInput, ProductionStageUpdateUncheckedCreateInput>
  }

  /**
   * ProductionStageUpdate createMany
   */
  export type ProductionStageUpdateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductionStageUpdates.
     */
    data: ProductionStageUpdateCreateManyInput | ProductionStageUpdateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductionStageUpdate update
   */
  export type ProductionStageUpdateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductionStageUpdate.
     */
    data: XOR<ProductionStageUpdateUpdateInput, ProductionStageUpdateUncheckedUpdateInput>
    /**
     * Choose, which ProductionStageUpdate to update.
     */
    where: ProductionStageUpdateWhereUniqueInput
  }

  /**
   * ProductionStageUpdate updateMany
   */
  export type ProductionStageUpdateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductionStageUpdates.
     */
    data: XOR<ProductionStageUpdateUpdateManyMutationInput, ProductionStageUpdateUncheckedUpdateManyInput>
    /**
     * Filter which ProductionStageUpdates to update
     */
    where?: ProductionStageUpdateWhereInput
    /**
     * Limit how many ProductionStageUpdates to update.
     */
    limit?: number
  }

  /**
   * ProductionStageUpdate upsert
   */
  export type ProductionStageUpdateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductionStageUpdate to update in case it exists.
     */
    where: ProductionStageUpdateWhereUniqueInput
    /**
     * In case the ProductionStageUpdate found by the `where` argument doesn't exist, create a new ProductionStageUpdate with this data.
     */
    create: XOR<ProductionStageUpdateCreateInput, ProductionStageUpdateUncheckedCreateInput>
    /**
     * In case the ProductionStageUpdate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductionStageUpdateUpdateInput, ProductionStageUpdateUncheckedUpdateInput>
  }

  /**
   * ProductionStageUpdate delete
   */
  export type ProductionStageUpdateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
    /**
     * Filter which ProductionStageUpdate to delete.
     */
    where: ProductionStageUpdateWhereUniqueInput
  }

  /**
   * ProductionStageUpdate deleteMany
   */
  export type ProductionStageUpdateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductionStageUpdates to delete
     */
    where?: ProductionStageUpdateWhereInput
    /**
     * Limit how many ProductionStageUpdates to delete.
     */
    limit?: number
  }

  /**
   * ProductionStageUpdate without action
   */
  export type ProductionStageUpdateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionStageUpdate
     */
    select?: ProductionStageUpdateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionStageUpdate
     */
    omit?: ProductionStageUpdateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionStageUpdateInclude<ExtArgs> | null
  }


  /**
   * Model QualityControl
   */

  export type AggregateQualityControl = {
    _count: QualityControlCountAggregateOutputType | null
    _avg: QualityControlAvgAggregateOutputType | null
    _sum: QualityControlSumAggregateOutputType | null
    _min: QualityControlMinAggregateOutputType | null
    _max: QualityControlMaxAggregateOutputType | null
  }

  export type QualityControlAvgAggregateOutputType = {
    id: number | null
    productionId: number | null
    inspectorId: number | null
    score: number | null
  }

  export type QualityControlSumAggregateOutputType = {
    id: number | null
    productionId: number | null
    inspectorId: number | null
    score: number | null
  }

  export type QualityControlMinAggregateOutputType = {
    id: number | null
    productionId: number | null
    inspectorId: number | null
    checkDate: Date | null
    result: $Enums.QualityResult | null
    score: number | null
    notes: string | null
    photos: string | null
    fabricDefects: boolean | null
    sewingDefects: boolean | null
    measureDefects: boolean | null
    finishingDefects: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualityControlMaxAggregateOutputType = {
    id: number | null
    productionId: number | null
    inspectorId: number | null
    checkDate: Date | null
    result: $Enums.QualityResult | null
    score: number | null
    notes: string | null
    photos: string | null
    fabricDefects: boolean | null
    sewingDefects: boolean | null
    measureDefects: boolean | null
    finishingDefects: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualityControlCountAggregateOutputType = {
    id: number
    productionId: number
    inspectorId: number
    checkDate: number
    result: number
    score: number
    notes: number
    photos: number
    fabricDefects: number
    sewingDefects: number
    measureDefects: number
    finishingDefects: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type QualityControlAvgAggregateInputType = {
    id?: true
    productionId?: true
    inspectorId?: true
    score?: true
  }

  export type QualityControlSumAggregateInputType = {
    id?: true
    productionId?: true
    inspectorId?: true
    score?: true
  }

  export type QualityControlMinAggregateInputType = {
    id?: true
    productionId?: true
    inspectorId?: true
    checkDate?: true
    result?: true
    score?: true
    notes?: true
    photos?: true
    fabricDefects?: true
    sewingDefects?: true
    measureDefects?: true
    finishingDefects?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualityControlMaxAggregateInputType = {
    id?: true
    productionId?: true
    inspectorId?: true
    checkDate?: true
    result?: true
    score?: true
    notes?: true
    photos?: true
    fabricDefects?: true
    sewingDefects?: true
    measureDefects?: true
    finishingDefects?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualityControlCountAggregateInputType = {
    id?: true
    productionId?: true
    inspectorId?: true
    checkDate?: true
    result?: true
    score?: true
    notes?: true
    photos?: true
    fabricDefects?: true
    sewingDefects?: true
    measureDefects?: true
    finishingDefects?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type QualityControlAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualityControl to aggregate.
     */
    where?: QualityControlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualityControls to fetch.
     */
    orderBy?: QualityControlOrderByWithRelationInput | QualityControlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QualityControlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualityControls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualityControls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QualityControls
    **/
    _count?: true | QualityControlCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualityControlAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualityControlSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualityControlMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualityControlMaxAggregateInputType
  }

  export type GetQualityControlAggregateType<T extends QualityControlAggregateArgs> = {
        [P in keyof T & keyof AggregateQualityControl]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualityControl[P]>
      : GetScalarType<T[P], AggregateQualityControl[P]>
  }




  export type QualityControlGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualityControlWhereInput
    orderBy?: QualityControlOrderByWithAggregationInput | QualityControlOrderByWithAggregationInput[]
    by: QualityControlScalarFieldEnum[] | QualityControlScalarFieldEnum
    having?: QualityControlScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualityControlCountAggregateInputType | true
    _avg?: QualityControlAvgAggregateInputType
    _sum?: QualityControlSumAggregateInputType
    _min?: QualityControlMinAggregateInputType
    _max?: QualityControlMaxAggregateInputType
  }

  export type QualityControlGroupByOutputType = {
    id: number
    productionId: number
    inspectorId: number
    checkDate: Date
    result: $Enums.QualityResult
    score: number | null
    notes: string | null
    photos: string | null
    fabricDefects: boolean
    sewingDefects: boolean
    measureDefects: boolean
    finishingDefects: boolean
    createdAt: Date
    updatedAt: Date
    _count: QualityControlCountAggregateOutputType | null
    _avg: QualityControlAvgAggregateOutputType | null
    _sum: QualityControlSumAggregateOutputType | null
    _min: QualityControlMinAggregateOutputType | null
    _max: QualityControlMaxAggregateOutputType | null
  }

  type GetQualityControlGroupByPayload<T extends QualityControlGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualityControlGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualityControlGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualityControlGroupByOutputType[P]>
            : GetScalarType<T[P], QualityControlGroupByOutputType[P]>
        }
      >
    >


  export type QualityControlSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productionId?: boolean
    inspectorId?: boolean
    checkDate?: boolean
    result?: boolean
    score?: boolean
    notes?: boolean
    photos?: boolean
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    production?: boolean | ProductionTrackingDefaultArgs<ExtArgs>
    inspector?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualityControl"]>



  export type QualityControlSelectScalar = {
    id?: boolean
    productionId?: boolean
    inspectorId?: boolean
    checkDate?: boolean
    result?: boolean
    score?: boolean
    notes?: boolean
    photos?: boolean
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type QualityControlOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productionId" | "inspectorId" | "checkDate" | "result" | "score" | "notes" | "photos" | "fabricDefects" | "sewingDefects" | "measureDefects" | "finishingDefects" | "createdAt" | "updatedAt", ExtArgs["result"]["qualityControl"]>
  export type QualityControlInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    production?: boolean | ProductionTrackingDefaultArgs<ExtArgs>
    inspector?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $QualityControlPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QualityControl"
    objects: {
      production: Prisma.$ProductionTrackingPayload<ExtArgs>
      inspector: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productionId: number
      inspectorId: number
      checkDate: Date
      result: $Enums.QualityResult
      score: number | null
      notes: string | null
      photos: string | null
      fabricDefects: boolean
      sewingDefects: boolean
      measureDefects: boolean
      finishingDefects: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["qualityControl"]>
    composites: {}
  }

  type QualityControlGetPayload<S extends boolean | null | undefined | QualityControlDefaultArgs> = $Result.GetResult<Prisma.$QualityControlPayload, S>

  type QualityControlCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QualityControlFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QualityControlCountAggregateInputType | true
    }

  export interface QualityControlDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QualityControl'], meta: { name: 'QualityControl' } }
    /**
     * Find zero or one QualityControl that matches the filter.
     * @param {QualityControlFindUniqueArgs} args - Arguments to find a QualityControl
     * @example
     * // Get one QualityControl
     * const qualityControl = await prisma.qualityControl.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QualityControlFindUniqueArgs>(args: SelectSubset<T, QualityControlFindUniqueArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one QualityControl that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QualityControlFindUniqueOrThrowArgs} args - Arguments to find a QualityControl
     * @example
     * // Get one QualityControl
     * const qualityControl = await prisma.qualityControl.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QualityControlFindUniqueOrThrowArgs>(args: SelectSubset<T, QualityControlFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualityControl that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualityControlFindFirstArgs} args - Arguments to find a QualityControl
     * @example
     * // Get one QualityControl
     * const qualityControl = await prisma.qualityControl.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QualityControlFindFirstArgs>(args?: SelectSubset<T, QualityControlFindFirstArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualityControl that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualityControlFindFirstOrThrowArgs} args - Arguments to find a QualityControl
     * @example
     * // Get one QualityControl
     * const qualityControl = await prisma.qualityControl.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QualityControlFindFirstOrThrowArgs>(args?: SelectSubset<T, QualityControlFindFirstOrThrowArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more QualityControls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualityControlFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QualityControls
     * const qualityControls = await prisma.qualityControl.findMany()
     * 
     * // Get first 10 QualityControls
     * const qualityControls = await prisma.qualityControl.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const qualityControlWithIdOnly = await prisma.qualityControl.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QualityControlFindManyArgs>(args?: SelectSubset<T, QualityControlFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a QualityControl.
     * @param {QualityControlCreateArgs} args - Arguments to create a QualityControl.
     * @example
     * // Create one QualityControl
     * const QualityControl = await prisma.qualityControl.create({
     *   data: {
     *     // ... data to create a QualityControl
     *   }
     * })
     * 
     */
    create<T extends QualityControlCreateArgs>(args: SelectSubset<T, QualityControlCreateArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many QualityControls.
     * @param {QualityControlCreateManyArgs} args - Arguments to create many QualityControls.
     * @example
     * // Create many QualityControls
     * const qualityControl = await prisma.qualityControl.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QualityControlCreateManyArgs>(args?: SelectSubset<T, QualityControlCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a QualityControl.
     * @param {QualityControlDeleteArgs} args - Arguments to delete one QualityControl.
     * @example
     * // Delete one QualityControl
     * const QualityControl = await prisma.qualityControl.delete({
     *   where: {
     *     // ... filter to delete one QualityControl
     *   }
     * })
     * 
     */
    delete<T extends QualityControlDeleteArgs>(args: SelectSubset<T, QualityControlDeleteArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one QualityControl.
     * @param {QualityControlUpdateArgs} args - Arguments to update one QualityControl.
     * @example
     * // Update one QualityControl
     * const qualityControl = await prisma.qualityControl.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QualityControlUpdateArgs>(args: SelectSubset<T, QualityControlUpdateArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more QualityControls.
     * @param {QualityControlDeleteManyArgs} args - Arguments to filter QualityControls to delete.
     * @example
     * // Delete a few QualityControls
     * const { count } = await prisma.qualityControl.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QualityControlDeleteManyArgs>(args?: SelectSubset<T, QualityControlDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualityControls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualityControlUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QualityControls
     * const qualityControl = await prisma.qualityControl.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QualityControlUpdateManyArgs>(args: SelectSubset<T, QualityControlUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one QualityControl.
     * @param {QualityControlUpsertArgs} args - Arguments to update or create a QualityControl.
     * @example
     * // Update or create a QualityControl
     * const qualityControl = await prisma.qualityControl.upsert({
     *   create: {
     *     // ... data to create a QualityControl
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QualityControl we want to update
     *   }
     * })
     */
    upsert<T extends QualityControlUpsertArgs>(args: SelectSubset<T, QualityControlUpsertArgs<ExtArgs>>): Prisma__QualityControlClient<$Result.GetResult<Prisma.$QualityControlPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of QualityControls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualityControlCountArgs} args - Arguments to filter QualityControls to count.
     * @example
     * // Count the number of QualityControls
     * const count = await prisma.qualityControl.count({
     *   where: {
     *     // ... the filter for the QualityControls we want to count
     *   }
     * })
    **/
    count<T extends QualityControlCountArgs>(
      args?: Subset<T, QualityControlCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualityControlCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QualityControl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualityControlAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualityControlAggregateArgs>(args: Subset<T, QualityControlAggregateArgs>): Prisma.PrismaPromise<GetQualityControlAggregateType<T>>

    /**
     * Group by QualityControl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualityControlGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QualityControlGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QualityControlGroupByArgs['orderBy'] }
        : { orderBy?: QualityControlGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QualityControlGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualityControlGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QualityControl model
   */
  readonly fields: QualityControlFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QualityControl.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QualityControlClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    production<T extends ProductionTrackingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTrackingDefaultArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    inspector<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QualityControl model
   */
  interface QualityControlFieldRefs {
    readonly id: FieldRef<"QualityControl", 'Int'>
    readonly productionId: FieldRef<"QualityControl", 'Int'>
    readonly inspectorId: FieldRef<"QualityControl", 'Int'>
    readonly checkDate: FieldRef<"QualityControl", 'DateTime'>
    readonly result: FieldRef<"QualityControl", 'QualityResult'>
    readonly score: FieldRef<"QualityControl", 'Int'>
    readonly notes: FieldRef<"QualityControl", 'String'>
    readonly photos: FieldRef<"QualityControl", 'String'>
    readonly fabricDefects: FieldRef<"QualityControl", 'Boolean'>
    readonly sewingDefects: FieldRef<"QualityControl", 'Boolean'>
    readonly measureDefects: FieldRef<"QualityControl", 'Boolean'>
    readonly finishingDefects: FieldRef<"QualityControl", 'Boolean'>
    readonly createdAt: FieldRef<"QualityControl", 'DateTime'>
    readonly updatedAt: FieldRef<"QualityControl", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * QualityControl findUnique
   */
  export type QualityControlFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * Filter, which QualityControl to fetch.
     */
    where: QualityControlWhereUniqueInput
  }

  /**
   * QualityControl findUniqueOrThrow
   */
  export type QualityControlFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * Filter, which QualityControl to fetch.
     */
    where: QualityControlWhereUniqueInput
  }

  /**
   * QualityControl findFirst
   */
  export type QualityControlFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * Filter, which QualityControl to fetch.
     */
    where?: QualityControlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualityControls to fetch.
     */
    orderBy?: QualityControlOrderByWithRelationInput | QualityControlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualityControls.
     */
    cursor?: QualityControlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualityControls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualityControls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualityControls.
     */
    distinct?: QualityControlScalarFieldEnum | QualityControlScalarFieldEnum[]
  }

  /**
   * QualityControl findFirstOrThrow
   */
  export type QualityControlFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * Filter, which QualityControl to fetch.
     */
    where?: QualityControlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualityControls to fetch.
     */
    orderBy?: QualityControlOrderByWithRelationInput | QualityControlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualityControls.
     */
    cursor?: QualityControlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualityControls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualityControls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualityControls.
     */
    distinct?: QualityControlScalarFieldEnum | QualityControlScalarFieldEnum[]
  }

  /**
   * QualityControl findMany
   */
  export type QualityControlFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * Filter, which QualityControls to fetch.
     */
    where?: QualityControlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualityControls to fetch.
     */
    orderBy?: QualityControlOrderByWithRelationInput | QualityControlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QualityControls.
     */
    cursor?: QualityControlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualityControls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualityControls.
     */
    skip?: number
    distinct?: QualityControlScalarFieldEnum | QualityControlScalarFieldEnum[]
  }

  /**
   * QualityControl create
   */
  export type QualityControlCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * The data needed to create a QualityControl.
     */
    data: XOR<QualityControlCreateInput, QualityControlUncheckedCreateInput>
  }

  /**
   * QualityControl createMany
   */
  export type QualityControlCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QualityControls.
     */
    data: QualityControlCreateManyInput | QualityControlCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QualityControl update
   */
  export type QualityControlUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * The data needed to update a QualityControl.
     */
    data: XOR<QualityControlUpdateInput, QualityControlUncheckedUpdateInput>
    /**
     * Choose, which QualityControl to update.
     */
    where: QualityControlWhereUniqueInput
  }

  /**
   * QualityControl updateMany
   */
  export type QualityControlUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QualityControls.
     */
    data: XOR<QualityControlUpdateManyMutationInput, QualityControlUncheckedUpdateManyInput>
    /**
     * Filter which QualityControls to update
     */
    where?: QualityControlWhereInput
    /**
     * Limit how many QualityControls to update.
     */
    limit?: number
  }

  /**
   * QualityControl upsert
   */
  export type QualityControlUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * The filter to search for the QualityControl to update in case it exists.
     */
    where: QualityControlWhereUniqueInput
    /**
     * In case the QualityControl found by the `where` argument doesn't exist, create a new QualityControl with this data.
     */
    create: XOR<QualityControlCreateInput, QualityControlUncheckedCreateInput>
    /**
     * In case the QualityControl was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QualityControlUpdateInput, QualityControlUncheckedUpdateInput>
  }

  /**
   * QualityControl delete
   */
  export type QualityControlDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
    /**
     * Filter which QualityControl to delete.
     */
    where: QualityControlWhereUniqueInput
  }

  /**
   * QualityControl deleteMany
   */
  export type QualityControlDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualityControls to delete
     */
    where?: QualityControlWhereInput
    /**
     * Limit how many QualityControls to delete.
     */
    limit?: number
  }

  /**
   * QualityControl without action
   */
  export type QualityControlDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualityControl
     */
    select?: QualityControlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualityControl
     */
    omit?: QualityControlOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualityControlInclude<ExtArgs> | null
  }


  /**
   * Model Workshop
   */

  export type AggregateWorkshop = {
    _count: WorkshopCountAggregateOutputType | null
    _avg: WorkshopAvgAggregateOutputType | null
    _sum: WorkshopSumAggregateOutputType | null
    _min: WorkshopMinAggregateOutputType | null
    _max: WorkshopMaxAggregateOutputType | null
  }

  export type WorkshopAvgAggregateOutputType = {
    id: number | null
    capacity: number | null
    ownerId: number | null
  }

  export type WorkshopSumAggregateOutputType = {
    id: number | null
    capacity: number | null
    ownerId: number | null
  }

  export type WorkshopMinAggregateOutputType = {
    id: number | null
    name: string | null
    type: $Enums.WorkshopType | null
    capacity: number | null
    location: string | null
    isActive: boolean | null
    ownerId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WorkshopMaxAggregateOutputType = {
    id: number | null
    name: string | null
    type: $Enums.WorkshopType | null
    capacity: number | null
    location: string | null
    isActive: boolean | null
    ownerId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WorkshopCountAggregateOutputType = {
    id: number
    name: number
    type: number
    capacity: number
    location: number
    isActive: number
    ownerId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WorkshopAvgAggregateInputType = {
    id?: true
    capacity?: true
    ownerId?: true
  }

  export type WorkshopSumAggregateInputType = {
    id?: true
    capacity?: true
    ownerId?: true
  }

  export type WorkshopMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    capacity?: true
    location?: true
    isActive?: true
    ownerId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WorkshopMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    capacity?: true
    location?: true
    isActive?: true
    ownerId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WorkshopCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    capacity?: true
    location?: true
    isActive?: true
    ownerId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WorkshopAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Workshop to aggregate.
     */
    where?: WorkshopWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workshops to fetch.
     */
    orderBy?: WorkshopOrderByWithRelationInput | WorkshopOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WorkshopWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workshops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workshops.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Workshops
    **/
    _count?: true | WorkshopCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkshopAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkshopSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkshopMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkshopMaxAggregateInputType
  }

  export type GetWorkshopAggregateType<T extends WorkshopAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkshop]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkshop[P]>
      : GetScalarType<T[P], AggregateWorkshop[P]>
  }




  export type WorkshopGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorkshopWhereInput
    orderBy?: WorkshopOrderByWithAggregationInput | WorkshopOrderByWithAggregationInput[]
    by: WorkshopScalarFieldEnum[] | WorkshopScalarFieldEnum
    having?: WorkshopScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkshopCountAggregateInputType | true
    _avg?: WorkshopAvgAggregateInputType
    _sum?: WorkshopSumAggregateInputType
    _min?: WorkshopMinAggregateInputType
    _max?: WorkshopMaxAggregateInputType
  }

  export type WorkshopGroupByOutputType = {
    id: number
    name: string
    type: $Enums.WorkshopType
    capacity: number | null
    location: string | null
    isActive: boolean
    ownerId: number
    createdAt: Date
    updatedAt: Date
    _count: WorkshopCountAggregateOutputType | null
    _avg: WorkshopAvgAggregateOutputType | null
    _sum: WorkshopSumAggregateOutputType | null
    _min: WorkshopMinAggregateOutputType | null
    _max: WorkshopMaxAggregateOutputType | null
  }

  type GetWorkshopGroupByPayload<T extends WorkshopGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WorkshopGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WorkshopGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WorkshopGroupByOutputType[P]>
            : GetScalarType<T[P], WorkshopGroupByOutputType[P]>
        }
      >
    >


  export type WorkshopSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    capacity?: boolean
    location?: boolean
    isActive?: boolean
    ownerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    sewingProductions?: boolean | Workshop$sewingProductionsArgs<ExtArgs>
    packagingProductions?: boolean | Workshop$packagingProductionsArgs<ExtArgs>
    _count?: boolean | WorkshopCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workshop"]>



  export type WorkshopSelectScalar = {
    id?: boolean
    name?: boolean
    type?: boolean
    capacity?: boolean
    location?: boolean
    isActive?: boolean
    ownerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WorkshopOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "type" | "capacity" | "location" | "isActive" | "ownerId" | "createdAt" | "updatedAt", ExtArgs["result"]["workshop"]>
  export type WorkshopInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    sewingProductions?: boolean | Workshop$sewingProductionsArgs<ExtArgs>
    packagingProductions?: boolean | Workshop$packagingProductionsArgs<ExtArgs>
    _count?: boolean | WorkshopCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $WorkshopPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Workshop"
    objects: {
      owner: Prisma.$UserPayload<ExtArgs>
      sewingProductions: Prisma.$ProductionTrackingPayload<ExtArgs>[]
      packagingProductions: Prisma.$ProductionTrackingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      type: $Enums.WorkshopType
      capacity: number | null
      location: string | null
      isActive: boolean
      ownerId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["workshop"]>
    composites: {}
  }

  type WorkshopGetPayload<S extends boolean | null | undefined | WorkshopDefaultArgs> = $Result.GetResult<Prisma.$WorkshopPayload, S>

  type WorkshopCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WorkshopFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WorkshopCountAggregateInputType | true
    }

  export interface WorkshopDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Workshop'], meta: { name: 'Workshop' } }
    /**
     * Find zero or one Workshop that matches the filter.
     * @param {WorkshopFindUniqueArgs} args - Arguments to find a Workshop
     * @example
     * // Get one Workshop
     * const workshop = await prisma.workshop.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WorkshopFindUniqueArgs>(args: SelectSubset<T, WorkshopFindUniqueArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Workshop that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WorkshopFindUniqueOrThrowArgs} args - Arguments to find a Workshop
     * @example
     * // Get one Workshop
     * const workshop = await prisma.workshop.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WorkshopFindUniqueOrThrowArgs>(args: SelectSubset<T, WorkshopFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Workshop that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkshopFindFirstArgs} args - Arguments to find a Workshop
     * @example
     * // Get one Workshop
     * const workshop = await prisma.workshop.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WorkshopFindFirstArgs>(args?: SelectSubset<T, WorkshopFindFirstArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Workshop that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkshopFindFirstOrThrowArgs} args - Arguments to find a Workshop
     * @example
     * // Get one Workshop
     * const workshop = await prisma.workshop.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WorkshopFindFirstOrThrowArgs>(args?: SelectSubset<T, WorkshopFindFirstOrThrowArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Workshops that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkshopFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Workshops
     * const workshops = await prisma.workshop.findMany()
     * 
     * // Get first 10 Workshops
     * const workshops = await prisma.workshop.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workshopWithIdOnly = await prisma.workshop.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WorkshopFindManyArgs>(args?: SelectSubset<T, WorkshopFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Workshop.
     * @param {WorkshopCreateArgs} args - Arguments to create a Workshop.
     * @example
     * // Create one Workshop
     * const Workshop = await prisma.workshop.create({
     *   data: {
     *     // ... data to create a Workshop
     *   }
     * })
     * 
     */
    create<T extends WorkshopCreateArgs>(args: SelectSubset<T, WorkshopCreateArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Workshops.
     * @param {WorkshopCreateManyArgs} args - Arguments to create many Workshops.
     * @example
     * // Create many Workshops
     * const workshop = await prisma.workshop.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WorkshopCreateManyArgs>(args?: SelectSubset<T, WorkshopCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Workshop.
     * @param {WorkshopDeleteArgs} args - Arguments to delete one Workshop.
     * @example
     * // Delete one Workshop
     * const Workshop = await prisma.workshop.delete({
     *   where: {
     *     // ... filter to delete one Workshop
     *   }
     * })
     * 
     */
    delete<T extends WorkshopDeleteArgs>(args: SelectSubset<T, WorkshopDeleteArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Workshop.
     * @param {WorkshopUpdateArgs} args - Arguments to update one Workshop.
     * @example
     * // Update one Workshop
     * const workshop = await prisma.workshop.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WorkshopUpdateArgs>(args: SelectSubset<T, WorkshopUpdateArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Workshops.
     * @param {WorkshopDeleteManyArgs} args - Arguments to filter Workshops to delete.
     * @example
     * // Delete a few Workshops
     * const { count } = await prisma.workshop.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WorkshopDeleteManyArgs>(args?: SelectSubset<T, WorkshopDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Workshops.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkshopUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Workshops
     * const workshop = await prisma.workshop.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WorkshopUpdateManyArgs>(args: SelectSubset<T, WorkshopUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Workshop.
     * @param {WorkshopUpsertArgs} args - Arguments to update or create a Workshop.
     * @example
     * // Update or create a Workshop
     * const workshop = await prisma.workshop.upsert({
     *   create: {
     *     // ... data to create a Workshop
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Workshop we want to update
     *   }
     * })
     */
    upsert<T extends WorkshopUpsertArgs>(args: SelectSubset<T, WorkshopUpsertArgs<ExtArgs>>): Prisma__WorkshopClient<$Result.GetResult<Prisma.$WorkshopPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Workshops.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkshopCountArgs} args - Arguments to filter Workshops to count.
     * @example
     * // Count the number of Workshops
     * const count = await prisma.workshop.count({
     *   where: {
     *     // ... the filter for the Workshops we want to count
     *   }
     * })
    **/
    count<T extends WorkshopCountArgs>(
      args?: Subset<T, WorkshopCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkshopCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Workshop.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkshopAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkshopAggregateArgs>(args: Subset<T, WorkshopAggregateArgs>): Prisma.PrismaPromise<GetWorkshopAggregateType<T>>

    /**
     * Group by Workshop.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkshopGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkshopGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkshopGroupByArgs['orderBy'] }
        : { orderBy?: WorkshopGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkshopGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkshopGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Workshop model
   */
  readonly fields: WorkshopFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Workshop.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WorkshopClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sewingProductions<T extends Workshop$sewingProductionsArgs<ExtArgs> = {}>(args?: Subset<T, Workshop$sewingProductionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    packagingProductions<T extends Workshop$packagingProductionsArgs<ExtArgs> = {}>(args?: Subset<T, Workshop$packagingProductionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Workshop model
   */
  interface WorkshopFieldRefs {
    readonly id: FieldRef<"Workshop", 'Int'>
    readonly name: FieldRef<"Workshop", 'String'>
    readonly type: FieldRef<"Workshop", 'WorkshopType'>
    readonly capacity: FieldRef<"Workshop", 'Int'>
    readonly location: FieldRef<"Workshop", 'String'>
    readonly isActive: FieldRef<"Workshop", 'Boolean'>
    readonly ownerId: FieldRef<"Workshop", 'Int'>
    readonly createdAt: FieldRef<"Workshop", 'DateTime'>
    readonly updatedAt: FieldRef<"Workshop", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Workshop findUnique
   */
  export type WorkshopFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * Filter, which Workshop to fetch.
     */
    where: WorkshopWhereUniqueInput
  }

  /**
   * Workshop findUniqueOrThrow
   */
  export type WorkshopFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * Filter, which Workshop to fetch.
     */
    where: WorkshopWhereUniqueInput
  }

  /**
   * Workshop findFirst
   */
  export type WorkshopFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * Filter, which Workshop to fetch.
     */
    where?: WorkshopWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workshops to fetch.
     */
    orderBy?: WorkshopOrderByWithRelationInput | WorkshopOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Workshops.
     */
    cursor?: WorkshopWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workshops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workshops.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Workshops.
     */
    distinct?: WorkshopScalarFieldEnum | WorkshopScalarFieldEnum[]
  }

  /**
   * Workshop findFirstOrThrow
   */
  export type WorkshopFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * Filter, which Workshop to fetch.
     */
    where?: WorkshopWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workshops to fetch.
     */
    orderBy?: WorkshopOrderByWithRelationInput | WorkshopOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Workshops.
     */
    cursor?: WorkshopWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workshops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workshops.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Workshops.
     */
    distinct?: WorkshopScalarFieldEnum | WorkshopScalarFieldEnum[]
  }

  /**
   * Workshop findMany
   */
  export type WorkshopFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * Filter, which Workshops to fetch.
     */
    where?: WorkshopWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Workshops to fetch.
     */
    orderBy?: WorkshopOrderByWithRelationInput | WorkshopOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Workshops.
     */
    cursor?: WorkshopWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Workshops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Workshops.
     */
    skip?: number
    distinct?: WorkshopScalarFieldEnum | WorkshopScalarFieldEnum[]
  }

  /**
   * Workshop create
   */
  export type WorkshopCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * The data needed to create a Workshop.
     */
    data: XOR<WorkshopCreateInput, WorkshopUncheckedCreateInput>
  }

  /**
   * Workshop createMany
   */
  export type WorkshopCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Workshops.
     */
    data: WorkshopCreateManyInput | WorkshopCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Workshop update
   */
  export type WorkshopUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * The data needed to update a Workshop.
     */
    data: XOR<WorkshopUpdateInput, WorkshopUncheckedUpdateInput>
    /**
     * Choose, which Workshop to update.
     */
    where: WorkshopWhereUniqueInput
  }

  /**
   * Workshop updateMany
   */
  export type WorkshopUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Workshops.
     */
    data: XOR<WorkshopUpdateManyMutationInput, WorkshopUncheckedUpdateManyInput>
    /**
     * Filter which Workshops to update
     */
    where?: WorkshopWhereInput
    /**
     * Limit how many Workshops to update.
     */
    limit?: number
  }

  /**
   * Workshop upsert
   */
  export type WorkshopUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * The filter to search for the Workshop to update in case it exists.
     */
    where: WorkshopWhereUniqueInput
    /**
     * In case the Workshop found by the `where` argument doesn't exist, create a new Workshop with this data.
     */
    create: XOR<WorkshopCreateInput, WorkshopUncheckedCreateInput>
    /**
     * In case the Workshop was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WorkshopUpdateInput, WorkshopUncheckedUpdateInput>
  }

  /**
   * Workshop delete
   */
  export type WorkshopDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
    /**
     * Filter which Workshop to delete.
     */
    where: WorkshopWhereUniqueInput
  }

  /**
   * Workshop deleteMany
   */
  export type WorkshopDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Workshops to delete
     */
    where?: WorkshopWhereInput
    /**
     * Limit how many Workshops to delete.
     */
    limit?: number
  }

  /**
   * Workshop.sewingProductions
   */
  export type Workshop$sewingProductionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    cursor?: ProductionTrackingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * Workshop.packagingProductions
   */
  export type Workshop$packagingProductionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
    orderBy?: ProductionTrackingOrderByWithRelationInput | ProductionTrackingOrderByWithRelationInput[]
    cursor?: ProductionTrackingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductionTrackingScalarFieldEnum | ProductionTrackingScalarFieldEnum[]
  }

  /**
   * Workshop without action
   */
  export type WorkshopDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Workshop
     */
    select?: WorkshopSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Workshop
     */
    omit?: WorkshopOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkshopInclude<ExtArgs> | null
  }


  /**
   * Model Color
   */

  export type AggregateColor = {
    _count: ColorCountAggregateOutputType | null
    _avg: ColorAvgAggregateOutputType | null
    _sum: ColorSumAggregateOutputType | null
    _min: ColorMinAggregateOutputType | null
    _max: ColorMaxAggregateOutputType | null
  }

  export type ColorAvgAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type ColorSumAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type ColorMinAggregateOutputType = {
    id: number | null
    name: string | null
    code: string | null
    hexCode: string | null
    imageUrl: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ColorMaxAggregateOutputType = {
    id: number | null
    name: string | null
    code: string | null
    hexCode: string | null
    imageUrl: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ColorCountAggregateOutputType = {
    id: number
    name: number
    code: number
    hexCode: number
    imageUrl: number
    isActive: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ColorAvgAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type ColorSumAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type ColorMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    hexCode?: true
    imageUrl?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ColorMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    hexCode?: true
    imageUrl?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ColorCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    hexCode?: true
    imageUrl?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ColorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Color to aggregate.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Colors
    **/
    _count?: true | ColorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ColorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ColorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ColorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ColorMaxAggregateInputType
  }

  export type GetColorAggregateType<T extends ColorAggregateArgs> = {
        [P in keyof T & keyof AggregateColor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateColor[P]>
      : GetScalarType<T[P], AggregateColor[P]>
  }




  export type ColorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ColorWhereInput
    orderBy?: ColorOrderByWithAggregationInput | ColorOrderByWithAggregationInput[]
    by: ColorScalarFieldEnum[] | ColorScalarFieldEnum
    having?: ColorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ColorCountAggregateInputType | true
    _avg?: ColorAvgAggregateInputType
    _sum?: ColorSumAggregateInputType
    _min?: ColorMinAggregateInputType
    _max?: ColorMaxAggregateInputType
  }

  export type ColorGroupByOutputType = {
    id: number
    name: string
    code: string | null
    hexCode: string | null
    imageUrl: string | null
    isActive: boolean
    companyId: number
    createdAt: Date
    updatedAt: Date
    _count: ColorCountAggregateOutputType | null
    _avg: ColorAvgAggregateOutputType | null
    _sum: ColorSumAggregateOutputType | null
    _min: ColorMinAggregateOutputType | null
    _max: ColorMaxAggregateOutputType | null
  }

  type GetColorGroupByPayload<T extends ColorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ColorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ColorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ColorGroupByOutputType[P]>
            : GetScalarType<T[P], ColorGroupByOutputType[P]>
        }
      >
    >


  export type ColorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    hexCode?: boolean
    imageUrl?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["color"]>



  export type ColorSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    hexCode?: boolean
    imageUrl?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ColorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "hexCode" | "imageUrl" | "isActive" | "companyId" | "createdAt" | "updatedAt", ExtArgs["result"]["color"]>
  export type ColorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $ColorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Color"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      code: string | null
      hexCode: string | null
      imageUrl: string | null
      isActive: boolean
      companyId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["color"]>
    composites: {}
  }

  type ColorGetPayload<S extends boolean | null | undefined | ColorDefaultArgs> = $Result.GetResult<Prisma.$ColorPayload, S>

  type ColorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ColorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ColorCountAggregateInputType | true
    }

  export interface ColorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Color'], meta: { name: 'Color' } }
    /**
     * Find zero or one Color that matches the filter.
     * @param {ColorFindUniqueArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ColorFindUniqueArgs>(args: SelectSubset<T, ColorFindUniqueArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Color that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ColorFindUniqueOrThrowArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ColorFindUniqueOrThrowArgs>(args: SelectSubset<T, ColorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Color that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorFindFirstArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ColorFindFirstArgs>(args?: SelectSubset<T, ColorFindFirstArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Color that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorFindFirstOrThrowArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ColorFindFirstOrThrowArgs>(args?: SelectSubset<T, ColorFindFirstOrThrowArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Colors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Colors
     * const colors = await prisma.color.findMany()
     * 
     * // Get first 10 Colors
     * const colors = await prisma.color.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const colorWithIdOnly = await prisma.color.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ColorFindManyArgs>(args?: SelectSubset<T, ColorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Color.
     * @param {ColorCreateArgs} args - Arguments to create a Color.
     * @example
     * // Create one Color
     * const Color = await prisma.color.create({
     *   data: {
     *     // ... data to create a Color
     *   }
     * })
     * 
     */
    create<T extends ColorCreateArgs>(args: SelectSubset<T, ColorCreateArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Colors.
     * @param {ColorCreateManyArgs} args - Arguments to create many Colors.
     * @example
     * // Create many Colors
     * const color = await prisma.color.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ColorCreateManyArgs>(args?: SelectSubset<T, ColorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Color.
     * @param {ColorDeleteArgs} args - Arguments to delete one Color.
     * @example
     * // Delete one Color
     * const Color = await prisma.color.delete({
     *   where: {
     *     // ... filter to delete one Color
     *   }
     * })
     * 
     */
    delete<T extends ColorDeleteArgs>(args: SelectSubset<T, ColorDeleteArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Color.
     * @param {ColorUpdateArgs} args - Arguments to update one Color.
     * @example
     * // Update one Color
     * const color = await prisma.color.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ColorUpdateArgs>(args: SelectSubset<T, ColorUpdateArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Colors.
     * @param {ColorDeleteManyArgs} args - Arguments to filter Colors to delete.
     * @example
     * // Delete a few Colors
     * const { count } = await prisma.color.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ColorDeleteManyArgs>(args?: SelectSubset<T, ColorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Colors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Colors
     * const color = await prisma.color.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ColorUpdateManyArgs>(args: SelectSubset<T, ColorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Color.
     * @param {ColorUpsertArgs} args - Arguments to update or create a Color.
     * @example
     * // Update or create a Color
     * const color = await prisma.color.upsert({
     *   create: {
     *     // ... data to create a Color
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Color we want to update
     *   }
     * })
     */
    upsert<T extends ColorUpsertArgs>(args: SelectSubset<T, ColorUpsertArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Colors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorCountArgs} args - Arguments to filter Colors to count.
     * @example
     * // Count the number of Colors
     * const count = await prisma.color.count({
     *   where: {
     *     // ... the filter for the Colors we want to count
     *   }
     * })
    **/
    count<T extends ColorCountArgs>(
      args?: Subset<T, ColorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ColorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Color.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ColorAggregateArgs>(args: Subset<T, ColorAggregateArgs>): Prisma.PrismaPromise<GetColorAggregateType<T>>

    /**
     * Group by Color.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ColorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ColorGroupByArgs['orderBy'] }
        : { orderBy?: ColorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ColorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetColorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Color model
   */
  readonly fields: ColorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Color.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ColorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Color model
   */
  interface ColorFieldRefs {
    readonly id: FieldRef<"Color", 'Int'>
    readonly name: FieldRef<"Color", 'String'>
    readonly code: FieldRef<"Color", 'String'>
    readonly hexCode: FieldRef<"Color", 'String'>
    readonly imageUrl: FieldRef<"Color", 'String'>
    readonly isActive: FieldRef<"Color", 'Boolean'>
    readonly companyId: FieldRef<"Color", 'Int'>
    readonly createdAt: FieldRef<"Color", 'DateTime'>
    readonly updatedAt: FieldRef<"Color", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Color findUnique
   */
  export type ColorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color findUniqueOrThrow
   */
  export type ColorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color findFirst
   */
  export type ColorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colors.
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colors.
     */
    distinct?: ColorScalarFieldEnum | ColorScalarFieldEnum[]
  }

  /**
   * Color findFirstOrThrow
   */
  export type ColorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colors.
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colors.
     */
    distinct?: ColorScalarFieldEnum | ColorScalarFieldEnum[]
  }

  /**
   * Color findMany
   */
  export type ColorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Colors to fetch.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Colors.
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    distinct?: ColorScalarFieldEnum | ColorScalarFieldEnum[]
  }

  /**
   * Color create
   */
  export type ColorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * The data needed to create a Color.
     */
    data: XOR<ColorCreateInput, ColorUncheckedCreateInput>
  }

  /**
   * Color createMany
   */
  export type ColorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Colors.
     */
    data: ColorCreateManyInput | ColorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Color update
   */
  export type ColorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * The data needed to update a Color.
     */
    data: XOR<ColorUpdateInput, ColorUncheckedUpdateInput>
    /**
     * Choose, which Color to update.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color updateMany
   */
  export type ColorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Colors.
     */
    data: XOR<ColorUpdateManyMutationInput, ColorUncheckedUpdateManyInput>
    /**
     * Filter which Colors to update
     */
    where?: ColorWhereInput
    /**
     * Limit how many Colors to update.
     */
    limit?: number
  }

  /**
   * Color upsert
   */
  export type ColorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * The filter to search for the Color to update in case it exists.
     */
    where: ColorWhereUniqueInput
    /**
     * In case the Color found by the `where` argument doesn't exist, create a new Color with this data.
     */
    create: XOR<ColorCreateInput, ColorUncheckedCreateInput>
    /**
     * In case the Color was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ColorUpdateInput, ColorUncheckedUpdateInput>
  }

  /**
   * Color delete
   */
  export type ColorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter which Color to delete.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color deleteMany
   */
  export type ColorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Colors to delete
     */
    where?: ColorWhereInput
    /**
     * Limit how many Colors to delete.
     */
    limit?: number
  }

  /**
   * Color without action
   */
  export type ColorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
  }


  /**
   * Model Fabric
   */

  export type AggregateFabric = {
    _count: FabricCountAggregateOutputType | null
    _avg: FabricAvgAggregateOutputType | null
    _sum: FabricSumAggregateOutputType | null
    _min: FabricMinAggregateOutputType | null
    _max: FabricMaxAggregateOutputType | null
  }

  export type FabricAvgAggregateOutputType = {
    id: number | null
    weight: number | null
    width: number | null
    price: number | null
    minOrder: number | null
    leadTime: number | null
    companyId: number | null
  }

  export type FabricSumAggregateOutputType = {
    id: number | null
    weight: number | null
    width: number | null
    price: number | null
    minOrder: number | null
    leadTime: number | null
    companyId: number | null
  }

  export type FabricMinAggregateOutputType = {
    id: number | null
    name: string | null
    code: string | null
    composition: string | null
    weight: number | null
    width: number | null
    supplier: string | null
    price: number | null
    minOrder: number | null
    leadTime: number | null
    imageUrl: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FabricMaxAggregateOutputType = {
    id: number | null
    name: string | null
    code: string | null
    composition: string | null
    weight: number | null
    width: number | null
    supplier: string | null
    price: number | null
    minOrder: number | null
    leadTime: number | null
    imageUrl: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FabricCountAggregateOutputType = {
    id: number
    name: number
    code: number
    composition: number
    weight: number
    width: number
    supplier: number
    price: number
    minOrder: number
    leadTime: number
    imageUrl: number
    description: number
    isActive: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FabricAvgAggregateInputType = {
    id?: true
    weight?: true
    width?: true
    price?: true
    minOrder?: true
    leadTime?: true
    companyId?: true
  }

  export type FabricSumAggregateInputType = {
    id?: true
    weight?: true
    width?: true
    price?: true
    minOrder?: true
    leadTime?: true
    companyId?: true
  }

  export type FabricMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    composition?: true
    weight?: true
    width?: true
    supplier?: true
    price?: true
    minOrder?: true
    leadTime?: true
    imageUrl?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FabricMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    composition?: true
    weight?: true
    width?: true
    supplier?: true
    price?: true
    minOrder?: true
    leadTime?: true
    imageUrl?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FabricCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    composition?: true
    weight?: true
    width?: true
    supplier?: true
    price?: true
    minOrder?: true
    leadTime?: true
    imageUrl?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FabricAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fabric to aggregate.
     */
    where?: FabricWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fabrics to fetch.
     */
    orderBy?: FabricOrderByWithRelationInput | FabricOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FabricWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fabrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fabrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Fabrics
    **/
    _count?: true | FabricCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FabricAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FabricSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FabricMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FabricMaxAggregateInputType
  }

  export type GetFabricAggregateType<T extends FabricAggregateArgs> = {
        [P in keyof T & keyof AggregateFabric]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFabric[P]>
      : GetScalarType<T[P], AggregateFabric[P]>
  }




  export type FabricGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FabricWhereInput
    orderBy?: FabricOrderByWithAggregationInput | FabricOrderByWithAggregationInput[]
    by: FabricScalarFieldEnum[] | FabricScalarFieldEnum
    having?: FabricScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FabricCountAggregateInputType | true
    _avg?: FabricAvgAggregateInputType
    _sum?: FabricSumAggregateInputType
    _min?: FabricMinAggregateInputType
    _max?: FabricMaxAggregateInputType
  }

  export type FabricGroupByOutputType = {
    id: number
    name: string
    code: string | null
    composition: string
    weight: number | null
    width: number | null
    supplier: string | null
    price: number | null
    minOrder: number | null
    leadTime: number | null
    imageUrl: string | null
    description: string | null
    isActive: boolean
    companyId: number
    createdAt: Date
    updatedAt: Date
    _count: FabricCountAggregateOutputType | null
    _avg: FabricAvgAggregateOutputType | null
    _sum: FabricSumAggregateOutputType | null
    _min: FabricMinAggregateOutputType | null
    _max: FabricMaxAggregateOutputType | null
  }

  type GetFabricGroupByPayload<T extends FabricGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FabricGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FabricGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FabricGroupByOutputType[P]>
            : GetScalarType<T[P], FabricGroupByOutputType[P]>
        }
      >
    >


  export type FabricSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    composition?: boolean
    weight?: boolean
    width?: boolean
    supplier?: boolean
    price?: boolean
    minOrder?: boolean
    leadTime?: boolean
    imageUrl?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fabric"]>



  export type FabricSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    composition?: boolean
    weight?: boolean
    width?: boolean
    supplier?: boolean
    price?: boolean
    minOrder?: boolean
    leadTime?: boolean
    imageUrl?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FabricOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "composition" | "weight" | "width" | "supplier" | "price" | "minOrder" | "leadTime" | "imageUrl" | "description" | "isActive" | "companyId" | "createdAt" | "updatedAt", ExtArgs["result"]["fabric"]>
  export type FabricInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $FabricPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Fabric"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      code: string | null
      composition: string
      weight: number | null
      width: number | null
      supplier: string | null
      price: number | null
      minOrder: number | null
      leadTime: number | null
      imageUrl: string | null
      description: string | null
      isActive: boolean
      companyId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fabric"]>
    composites: {}
  }

  type FabricGetPayload<S extends boolean | null | undefined | FabricDefaultArgs> = $Result.GetResult<Prisma.$FabricPayload, S>

  type FabricCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FabricFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FabricCountAggregateInputType | true
    }

  export interface FabricDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Fabric'], meta: { name: 'Fabric' } }
    /**
     * Find zero or one Fabric that matches the filter.
     * @param {FabricFindUniqueArgs} args - Arguments to find a Fabric
     * @example
     * // Get one Fabric
     * const fabric = await prisma.fabric.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FabricFindUniqueArgs>(args: SelectSubset<T, FabricFindUniqueArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Fabric that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FabricFindUniqueOrThrowArgs} args - Arguments to find a Fabric
     * @example
     * // Get one Fabric
     * const fabric = await prisma.fabric.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FabricFindUniqueOrThrowArgs>(args: SelectSubset<T, FabricFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fabric that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FabricFindFirstArgs} args - Arguments to find a Fabric
     * @example
     * // Get one Fabric
     * const fabric = await prisma.fabric.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FabricFindFirstArgs>(args?: SelectSubset<T, FabricFindFirstArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fabric that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FabricFindFirstOrThrowArgs} args - Arguments to find a Fabric
     * @example
     * // Get one Fabric
     * const fabric = await prisma.fabric.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FabricFindFirstOrThrowArgs>(args?: SelectSubset<T, FabricFindFirstOrThrowArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Fabrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FabricFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fabrics
     * const fabrics = await prisma.fabric.findMany()
     * 
     * // Get first 10 Fabrics
     * const fabrics = await prisma.fabric.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fabricWithIdOnly = await prisma.fabric.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FabricFindManyArgs>(args?: SelectSubset<T, FabricFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Fabric.
     * @param {FabricCreateArgs} args - Arguments to create a Fabric.
     * @example
     * // Create one Fabric
     * const Fabric = await prisma.fabric.create({
     *   data: {
     *     // ... data to create a Fabric
     *   }
     * })
     * 
     */
    create<T extends FabricCreateArgs>(args: SelectSubset<T, FabricCreateArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Fabrics.
     * @param {FabricCreateManyArgs} args - Arguments to create many Fabrics.
     * @example
     * // Create many Fabrics
     * const fabric = await prisma.fabric.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FabricCreateManyArgs>(args?: SelectSubset<T, FabricCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Fabric.
     * @param {FabricDeleteArgs} args - Arguments to delete one Fabric.
     * @example
     * // Delete one Fabric
     * const Fabric = await prisma.fabric.delete({
     *   where: {
     *     // ... filter to delete one Fabric
     *   }
     * })
     * 
     */
    delete<T extends FabricDeleteArgs>(args: SelectSubset<T, FabricDeleteArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Fabric.
     * @param {FabricUpdateArgs} args - Arguments to update one Fabric.
     * @example
     * // Update one Fabric
     * const fabric = await prisma.fabric.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FabricUpdateArgs>(args: SelectSubset<T, FabricUpdateArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Fabrics.
     * @param {FabricDeleteManyArgs} args - Arguments to filter Fabrics to delete.
     * @example
     * // Delete a few Fabrics
     * const { count } = await prisma.fabric.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FabricDeleteManyArgs>(args?: SelectSubset<T, FabricDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fabrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FabricUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fabrics
     * const fabric = await prisma.fabric.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FabricUpdateManyArgs>(args: SelectSubset<T, FabricUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Fabric.
     * @param {FabricUpsertArgs} args - Arguments to update or create a Fabric.
     * @example
     * // Update or create a Fabric
     * const fabric = await prisma.fabric.upsert({
     *   create: {
     *     // ... data to create a Fabric
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fabric we want to update
     *   }
     * })
     */
    upsert<T extends FabricUpsertArgs>(args: SelectSubset<T, FabricUpsertArgs<ExtArgs>>): Prisma__FabricClient<$Result.GetResult<Prisma.$FabricPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Fabrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FabricCountArgs} args - Arguments to filter Fabrics to count.
     * @example
     * // Count the number of Fabrics
     * const count = await prisma.fabric.count({
     *   where: {
     *     // ... the filter for the Fabrics we want to count
     *   }
     * })
    **/
    count<T extends FabricCountArgs>(
      args?: Subset<T, FabricCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FabricCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fabric.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FabricAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FabricAggregateArgs>(args: Subset<T, FabricAggregateArgs>): Prisma.PrismaPromise<GetFabricAggregateType<T>>

    /**
     * Group by Fabric.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FabricGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FabricGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FabricGroupByArgs['orderBy'] }
        : { orderBy?: FabricGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FabricGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFabricGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Fabric model
   */
  readonly fields: FabricFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Fabric.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FabricClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Fabric model
   */
  interface FabricFieldRefs {
    readonly id: FieldRef<"Fabric", 'Int'>
    readonly name: FieldRef<"Fabric", 'String'>
    readonly code: FieldRef<"Fabric", 'String'>
    readonly composition: FieldRef<"Fabric", 'String'>
    readonly weight: FieldRef<"Fabric", 'Int'>
    readonly width: FieldRef<"Fabric", 'Int'>
    readonly supplier: FieldRef<"Fabric", 'String'>
    readonly price: FieldRef<"Fabric", 'Float'>
    readonly minOrder: FieldRef<"Fabric", 'Int'>
    readonly leadTime: FieldRef<"Fabric", 'Int'>
    readonly imageUrl: FieldRef<"Fabric", 'String'>
    readonly description: FieldRef<"Fabric", 'String'>
    readonly isActive: FieldRef<"Fabric", 'Boolean'>
    readonly companyId: FieldRef<"Fabric", 'Int'>
    readonly createdAt: FieldRef<"Fabric", 'DateTime'>
    readonly updatedAt: FieldRef<"Fabric", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Fabric findUnique
   */
  export type FabricFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * Filter, which Fabric to fetch.
     */
    where: FabricWhereUniqueInput
  }

  /**
   * Fabric findUniqueOrThrow
   */
  export type FabricFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * Filter, which Fabric to fetch.
     */
    where: FabricWhereUniqueInput
  }

  /**
   * Fabric findFirst
   */
  export type FabricFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * Filter, which Fabric to fetch.
     */
    where?: FabricWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fabrics to fetch.
     */
    orderBy?: FabricOrderByWithRelationInput | FabricOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fabrics.
     */
    cursor?: FabricWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fabrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fabrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fabrics.
     */
    distinct?: FabricScalarFieldEnum | FabricScalarFieldEnum[]
  }

  /**
   * Fabric findFirstOrThrow
   */
  export type FabricFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * Filter, which Fabric to fetch.
     */
    where?: FabricWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fabrics to fetch.
     */
    orderBy?: FabricOrderByWithRelationInput | FabricOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fabrics.
     */
    cursor?: FabricWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fabrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fabrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fabrics.
     */
    distinct?: FabricScalarFieldEnum | FabricScalarFieldEnum[]
  }

  /**
   * Fabric findMany
   */
  export type FabricFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * Filter, which Fabrics to fetch.
     */
    where?: FabricWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fabrics to fetch.
     */
    orderBy?: FabricOrderByWithRelationInput | FabricOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Fabrics.
     */
    cursor?: FabricWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fabrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fabrics.
     */
    skip?: number
    distinct?: FabricScalarFieldEnum | FabricScalarFieldEnum[]
  }

  /**
   * Fabric create
   */
  export type FabricCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * The data needed to create a Fabric.
     */
    data: XOR<FabricCreateInput, FabricUncheckedCreateInput>
  }

  /**
   * Fabric createMany
   */
  export type FabricCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Fabrics.
     */
    data: FabricCreateManyInput | FabricCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Fabric update
   */
  export type FabricUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * The data needed to update a Fabric.
     */
    data: XOR<FabricUpdateInput, FabricUncheckedUpdateInput>
    /**
     * Choose, which Fabric to update.
     */
    where: FabricWhereUniqueInput
  }

  /**
   * Fabric updateMany
   */
  export type FabricUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Fabrics.
     */
    data: XOR<FabricUpdateManyMutationInput, FabricUncheckedUpdateManyInput>
    /**
     * Filter which Fabrics to update
     */
    where?: FabricWhereInput
    /**
     * Limit how many Fabrics to update.
     */
    limit?: number
  }

  /**
   * Fabric upsert
   */
  export type FabricUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * The filter to search for the Fabric to update in case it exists.
     */
    where: FabricWhereUniqueInput
    /**
     * In case the Fabric found by the `where` argument doesn't exist, create a new Fabric with this data.
     */
    create: XOR<FabricCreateInput, FabricUncheckedCreateInput>
    /**
     * In case the Fabric was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FabricUpdateInput, FabricUncheckedUpdateInput>
  }

  /**
   * Fabric delete
   */
  export type FabricDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
    /**
     * Filter which Fabric to delete.
     */
    where: FabricWhereUniqueInput
  }

  /**
   * Fabric deleteMany
   */
  export type FabricDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fabrics to delete
     */
    where?: FabricWhereInput
    /**
     * Limit how many Fabrics to delete.
     */
    limit?: number
  }

  /**
   * Fabric without action
   */
  export type FabricDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fabric
     */
    select?: FabricSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fabric
     */
    omit?: FabricOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FabricInclude<ExtArgs> | null
  }


  /**
   * Model SizeGroup
   */

  export type AggregateSizeGroup = {
    _count: SizeGroupCountAggregateOutputType | null
    _avg: SizeGroupAvgAggregateOutputType | null
    _sum: SizeGroupSumAggregateOutputType | null
    _min: SizeGroupMinAggregateOutputType | null
    _max: SizeGroupMaxAggregateOutputType | null
  }

  export type SizeGroupAvgAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type SizeGroupSumAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type SizeGroupMinAggregateOutputType = {
    id: number | null
    name: string | null
    category: string | null
    sizes: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SizeGroupMaxAggregateOutputType = {
    id: number | null
    name: string | null
    category: string | null
    sizes: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SizeGroupCountAggregateOutputType = {
    id: number
    name: number
    category: number
    sizes: number
    description: number
    isActive: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SizeGroupAvgAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type SizeGroupSumAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type SizeGroupMinAggregateInputType = {
    id?: true
    name?: true
    category?: true
    sizes?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SizeGroupMaxAggregateInputType = {
    id?: true
    name?: true
    category?: true
    sizes?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SizeGroupCountAggregateInputType = {
    id?: true
    name?: true
    category?: true
    sizes?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SizeGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SizeGroup to aggregate.
     */
    where?: SizeGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SizeGroups to fetch.
     */
    orderBy?: SizeGroupOrderByWithRelationInput | SizeGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SizeGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SizeGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SizeGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SizeGroups
    **/
    _count?: true | SizeGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SizeGroupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SizeGroupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SizeGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SizeGroupMaxAggregateInputType
  }

  export type GetSizeGroupAggregateType<T extends SizeGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateSizeGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSizeGroup[P]>
      : GetScalarType<T[P], AggregateSizeGroup[P]>
  }




  export type SizeGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SizeGroupWhereInput
    orderBy?: SizeGroupOrderByWithAggregationInput | SizeGroupOrderByWithAggregationInput[]
    by: SizeGroupScalarFieldEnum[] | SizeGroupScalarFieldEnum
    having?: SizeGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SizeGroupCountAggregateInputType | true
    _avg?: SizeGroupAvgAggregateInputType
    _sum?: SizeGroupSumAggregateInputType
    _min?: SizeGroupMinAggregateInputType
    _max?: SizeGroupMaxAggregateInputType
  }

  export type SizeGroupGroupByOutputType = {
    id: number
    name: string
    category: string | null
    sizes: string
    description: string | null
    isActive: boolean
    companyId: number
    createdAt: Date
    updatedAt: Date
    _count: SizeGroupCountAggregateOutputType | null
    _avg: SizeGroupAvgAggregateOutputType | null
    _sum: SizeGroupSumAggregateOutputType | null
    _min: SizeGroupMinAggregateOutputType | null
    _max: SizeGroupMaxAggregateOutputType | null
  }

  type GetSizeGroupGroupByPayload<T extends SizeGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SizeGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SizeGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SizeGroupGroupByOutputType[P]>
            : GetScalarType<T[P], SizeGroupGroupByOutputType[P]>
        }
      >
    >


  export type SizeGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    category?: boolean
    sizes?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sizeGroup"]>



  export type SizeGroupSelectScalar = {
    id?: boolean
    name?: boolean
    category?: boolean
    sizes?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SizeGroupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "category" | "sizes" | "description" | "isActive" | "companyId" | "createdAt" | "updatedAt", ExtArgs["result"]["sizeGroup"]>
  export type SizeGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $SizeGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SizeGroup"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      category: string | null
      sizes: string
      description: string | null
      isActive: boolean
      companyId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["sizeGroup"]>
    composites: {}
  }

  type SizeGroupGetPayload<S extends boolean | null | undefined | SizeGroupDefaultArgs> = $Result.GetResult<Prisma.$SizeGroupPayload, S>

  type SizeGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SizeGroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SizeGroupCountAggregateInputType | true
    }

  export interface SizeGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SizeGroup'], meta: { name: 'SizeGroup' } }
    /**
     * Find zero or one SizeGroup that matches the filter.
     * @param {SizeGroupFindUniqueArgs} args - Arguments to find a SizeGroup
     * @example
     * // Get one SizeGroup
     * const sizeGroup = await prisma.sizeGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SizeGroupFindUniqueArgs>(args: SelectSubset<T, SizeGroupFindUniqueArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SizeGroup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SizeGroupFindUniqueOrThrowArgs} args - Arguments to find a SizeGroup
     * @example
     * // Get one SizeGroup
     * const sizeGroup = await prisma.sizeGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SizeGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, SizeGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SizeGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SizeGroupFindFirstArgs} args - Arguments to find a SizeGroup
     * @example
     * // Get one SizeGroup
     * const sizeGroup = await prisma.sizeGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SizeGroupFindFirstArgs>(args?: SelectSubset<T, SizeGroupFindFirstArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SizeGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SizeGroupFindFirstOrThrowArgs} args - Arguments to find a SizeGroup
     * @example
     * // Get one SizeGroup
     * const sizeGroup = await prisma.sizeGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SizeGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, SizeGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SizeGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SizeGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SizeGroups
     * const sizeGroups = await prisma.sizeGroup.findMany()
     * 
     * // Get first 10 SizeGroups
     * const sizeGroups = await prisma.sizeGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sizeGroupWithIdOnly = await prisma.sizeGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SizeGroupFindManyArgs>(args?: SelectSubset<T, SizeGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SizeGroup.
     * @param {SizeGroupCreateArgs} args - Arguments to create a SizeGroup.
     * @example
     * // Create one SizeGroup
     * const SizeGroup = await prisma.sizeGroup.create({
     *   data: {
     *     // ... data to create a SizeGroup
     *   }
     * })
     * 
     */
    create<T extends SizeGroupCreateArgs>(args: SelectSubset<T, SizeGroupCreateArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SizeGroups.
     * @param {SizeGroupCreateManyArgs} args - Arguments to create many SizeGroups.
     * @example
     * // Create many SizeGroups
     * const sizeGroup = await prisma.sizeGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SizeGroupCreateManyArgs>(args?: SelectSubset<T, SizeGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SizeGroup.
     * @param {SizeGroupDeleteArgs} args - Arguments to delete one SizeGroup.
     * @example
     * // Delete one SizeGroup
     * const SizeGroup = await prisma.sizeGroup.delete({
     *   where: {
     *     // ... filter to delete one SizeGroup
     *   }
     * })
     * 
     */
    delete<T extends SizeGroupDeleteArgs>(args: SelectSubset<T, SizeGroupDeleteArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SizeGroup.
     * @param {SizeGroupUpdateArgs} args - Arguments to update one SizeGroup.
     * @example
     * // Update one SizeGroup
     * const sizeGroup = await prisma.sizeGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SizeGroupUpdateArgs>(args: SelectSubset<T, SizeGroupUpdateArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SizeGroups.
     * @param {SizeGroupDeleteManyArgs} args - Arguments to filter SizeGroups to delete.
     * @example
     * // Delete a few SizeGroups
     * const { count } = await prisma.sizeGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SizeGroupDeleteManyArgs>(args?: SelectSubset<T, SizeGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SizeGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SizeGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SizeGroups
     * const sizeGroup = await prisma.sizeGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SizeGroupUpdateManyArgs>(args: SelectSubset<T, SizeGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SizeGroup.
     * @param {SizeGroupUpsertArgs} args - Arguments to update or create a SizeGroup.
     * @example
     * // Update or create a SizeGroup
     * const sizeGroup = await prisma.sizeGroup.upsert({
     *   create: {
     *     // ... data to create a SizeGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SizeGroup we want to update
     *   }
     * })
     */
    upsert<T extends SizeGroupUpsertArgs>(args: SelectSubset<T, SizeGroupUpsertArgs<ExtArgs>>): Prisma__SizeGroupClient<$Result.GetResult<Prisma.$SizeGroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SizeGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SizeGroupCountArgs} args - Arguments to filter SizeGroups to count.
     * @example
     * // Count the number of SizeGroups
     * const count = await prisma.sizeGroup.count({
     *   where: {
     *     // ... the filter for the SizeGroups we want to count
     *   }
     * })
    **/
    count<T extends SizeGroupCountArgs>(
      args?: Subset<T, SizeGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SizeGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SizeGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SizeGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SizeGroupAggregateArgs>(args: Subset<T, SizeGroupAggregateArgs>): Prisma.PrismaPromise<GetSizeGroupAggregateType<T>>

    /**
     * Group by SizeGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SizeGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SizeGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SizeGroupGroupByArgs['orderBy'] }
        : { orderBy?: SizeGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SizeGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSizeGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SizeGroup model
   */
  readonly fields: SizeGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SizeGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SizeGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SizeGroup model
   */
  interface SizeGroupFieldRefs {
    readonly id: FieldRef<"SizeGroup", 'Int'>
    readonly name: FieldRef<"SizeGroup", 'String'>
    readonly category: FieldRef<"SizeGroup", 'String'>
    readonly sizes: FieldRef<"SizeGroup", 'String'>
    readonly description: FieldRef<"SizeGroup", 'String'>
    readonly isActive: FieldRef<"SizeGroup", 'Boolean'>
    readonly companyId: FieldRef<"SizeGroup", 'Int'>
    readonly createdAt: FieldRef<"SizeGroup", 'DateTime'>
    readonly updatedAt: FieldRef<"SizeGroup", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SizeGroup findUnique
   */
  export type SizeGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * Filter, which SizeGroup to fetch.
     */
    where: SizeGroupWhereUniqueInput
  }

  /**
   * SizeGroup findUniqueOrThrow
   */
  export type SizeGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * Filter, which SizeGroup to fetch.
     */
    where: SizeGroupWhereUniqueInput
  }

  /**
   * SizeGroup findFirst
   */
  export type SizeGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * Filter, which SizeGroup to fetch.
     */
    where?: SizeGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SizeGroups to fetch.
     */
    orderBy?: SizeGroupOrderByWithRelationInput | SizeGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SizeGroups.
     */
    cursor?: SizeGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SizeGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SizeGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SizeGroups.
     */
    distinct?: SizeGroupScalarFieldEnum | SizeGroupScalarFieldEnum[]
  }

  /**
   * SizeGroup findFirstOrThrow
   */
  export type SizeGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * Filter, which SizeGroup to fetch.
     */
    where?: SizeGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SizeGroups to fetch.
     */
    orderBy?: SizeGroupOrderByWithRelationInput | SizeGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SizeGroups.
     */
    cursor?: SizeGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SizeGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SizeGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SizeGroups.
     */
    distinct?: SizeGroupScalarFieldEnum | SizeGroupScalarFieldEnum[]
  }

  /**
   * SizeGroup findMany
   */
  export type SizeGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * Filter, which SizeGroups to fetch.
     */
    where?: SizeGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SizeGroups to fetch.
     */
    orderBy?: SizeGroupOrderByWithRelationInput | SizeGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SizeGroups.
     */
    cursor?: SizeGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SizeGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SizeGroups.
     */
    skip?: number
    distinct?: SizeGroupScalarFieldEnum | SizeGroupScalarFieldEnum[]
  }

  /**
   * SizeGroup create
   */
  export type SizeGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a SizeGroup.
     */
    data: XOR<SizeGroupCreateInput, SizeGroupUncheckedCreateInput>
  }

  /**
   * SizeGroup createMany
   */
  export type SizeGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SizeGroups.
     */
    data: SizeGroupCreateManyInput | SizeGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SizeGroup update
   */
  export type SizeGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a SizeGroup.
     */
    data: XOR<SizeGroupUpdateInput, SizeGroupUncheckedUpdateInput>
    /**
     * Choose, which SizeGroup to update.
     */
    where: SizeGroupWhereUniqueInput
  }

  /**
   * SizeGroup updateMany
   */
  export type SizeGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SizeGroups.
     */
    data: XOR<SizeGroupUpdateManyMutationInput, SizeGroupUncheckedUpdateManyInput>
    /**
     * Filter which SizeGroups to update
     */
    where?: SizeGroupWhereInput
    /**
     * Limit how many SizeGroups to update.
     */
    limit?: number
  }

  /**
   * SizeGroup upsert
   */
  export type SizeGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the SizeGroup to update in case it exists.
     */
    where: SizeGroupWhereUniqueInput
    /**
     * In case the SizeGroup found by the `where` argument doesn't exist, create a new SizeGroup with this data.
     */
    create: XOR<SizeGroupCreateInput, SizeGroupUncheckedCreateInput>
    /**
     * In case the SizeGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SizeGroupUpdateInput, SizeGroupUncheckedUpdateInput>
  }

  /**
   * SizeGroup delete
   */
  export type SizeGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
    /**
     * Filter which SizeGroup to delete.
     */
    where: SizeGroupWhereUniqueInput
  }

  /**
   * SizeGroup deleteMany
   */
  export type SizeGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SizeGroups to delete
     */
    where?: SizeGroupWhereInput
    /**
     * Limit how many SizeGroups to delete.
     */
    limit?: number
  }

  /**
   * SizeGroup without action
   */
  export type SizeGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SizeGroup
     */
    select?: SizeGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SizeGroup
     */
    omit?: SizeGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SizeGroupInclude<ExtArgs> | null
  }


  /**
   * Model SeasonItem
   */

  export type AggregateSeasonItem = {
    _count: SeasonItemCountAggregateOutputType | null
    _avg: SeasonItemAvgAggregateOutputType | null
    _sum: SeasonItemSumAggregateOutputType | null
    _min: SeasonItemMinAggregateOutputType | null
    _max: SeasonItemMaxAggregateOutputType | null
  }

  export type SeasonItemAvgAggregateOutputType = {
    id: number | null
    year: number | null
    companyId: number | null
  }

  export type SeasonItemSumAggregateOutputType = {
    id: number | null
    year: number | null
    companyId: number | null
  }

  export type SeasonItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    fullName: string | null
    year: number | null
    type: string | null
    startDate: Date | null
    endDate: Date | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SeasonItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    fullName: string | null
    year: number | null
    type: string | null
    startDate: Date | null
    endDate: Date | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SeasonItemCountAggregateOutputType = {
    id: number
    name: number
    fullName: number
    year: number
    type: number
    startDate: number
    endDate: number
    description: number
    isActive: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SeasonItemAvgAggregateInputType = {
    id?: true
    year?: true
    companyId?: true
  }

  export type SeasonItemSumAggregateInputType = {
    id?: true
    year?: true
    companyId?: true
  }

  export type SeasonItemMinAggregateInputType = {
    id?: true
    name?: true
    fullName?: true
    year?: true
    type?: true
    startDate?: true
    endDate?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SeasonItemMaxAggregateInputType = {
    id?: true
    name?: true
    fullName?: true
    year?: true
    type?: true
    startDate?: true
    endDate?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SeasonItemCountAggregateInputType = {
    id?: true
    name?: true
    fullName?: true
    year?: true
    type?: true
    startDate?: true
    endDate?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SeasonItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeasonItem to aggregate.
     */
    where?: SeasonItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeasonItems to fetch.
     */
    orderBy?: SeasonItemOrderByWithRelationInput | SeasonItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeasonItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeasonItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeasonItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SeasonItems
    **/
    _count?: true | SeasonItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SeasonItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SeasonItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeasonItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeasonItemMaxAggregateInputType
  }

  export type GetSeasonItemAggregateType<T extends SeasonItemAggregateArgs> = {
        [P in keyof T & keyof AggregateSeasonItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeasonItem[P]>
      : GetScalarType<T[P], AggregateSeasonItem[P]>
  }




  export type SeasonItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeasonItemWhereInput
    orderBy?: SeasonItemOrderByWithAggregationInput | SeasonItemOrderByWithAggregationInput[]
    by: SeasonItemScalarFieldEnum[] | SeasonItemScalarFieldEnum
    having?: SeasonItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeasonItemCountAggregateInputType | true
    _avg?: SeasonItemAvgAggregateInputType
    _sum?: SeasonItemSumAggregateInputType
    _min?: SeasonItemMinAggregateInputType
    _max?: SeasonItemMaxAggregateInputType
  }

  export type SeasonItemGroupByOutputType = {
    id: number
    name: string
    fullName: string
    year: number
    type: string
    startDate: Date | null
    endDate: Date | null
    description: string | null
    isActive: boolean
    companyId: number
    createdAt: Date
    updatedAt: Date
    _count: SeasonItemCountAggregateOutputType | null
    _avg: SeasonItemAvgAggregateOutputType | null
    _sum: SeasonItemSumAggregateOutputType | null
    _min: SeasonItemMinAggregateOutputType | null
    _max: SeasonItemMaxAggregateOutputType | null
  }

  type GetSeasonItemGroupByPayload<T extends SeasonItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeasonItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeasonItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeasonItemGroupByOutputType[P]>
            : GetScalarType<T[P], SeasonItemGroupByOutputType[P]>
        }
      >
    >


  export type SeasonItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    fullName?: boolean
    year?: boolean
    type?: boolean
    startDate?: boolean
    endDate?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seasonItem"]>



  export type SeasonItemSelectScalar = {
    id?: boolean
    name?: boolean
    fullName?: boolean
    year?: boolean
    type?: boolean
    startDate?: boolean
    endDate?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SeasonItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "fullName" | "year" | "type" | "startDate" | "endDate" | "description" | "isActive" | "companyId" | "createdAt" | "updatedAt", ExtArgs["result"]["seasonItem"]>
  export type SeasonItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $SeasonItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SeasonItem"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      fullName: string
      year: number
      type: string
      startDate: Date | null
      endDate: Date | null
      description: string | null
      isActive: boolean
      companyId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["seasonItem"]>
    composites: {}
  }

  type SeasonItemGetPayload<S extends boolean | null | undefined | SeasonItemDefaultArgs> = $Result.GetResult<Prisma.$SeasonItemPayload, S>

  type SeasonItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeasonItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeasonItemCountAggregateInputType | true
    }

  export interface SeasonItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SeasonItem'], meta: { name: 'SeasonItem' } }
    /**
     * Find zero or one SeasonItem that matches the filter.
     * @param {SeasonItemFindUniqueArgs} args - Arguments to find a SeasonItem
     * @example
     * // Get one SeasonItem
     * const seasonItem = await prisma.seasonItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeasonItemFindUniqueArgs>(args: SelectSubset<T, SeasonItemFindUniqueArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SeasonItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeasonItemFindUniqueOrThrowArgs} args - Arguments to find a SeasonItem
     * @example
     * // Get one SeasonItem
     * const seasonItem = await prisma.seasonItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeasonItemFindUniqueOrThrowArgs>(args: SelectSubset<T, SeasonItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeasonItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeasonItemFindFirstArgs} args - Arguments to find a SeasonItem
     * @example
     * // Get one SeasonItem
     * const seasonItem = await prisma.seasonItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeasonItemFindFirstArgs>(args?: SelectSubset<T, SeasonItemFindFirstArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeasonItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeasonItemFindFirstOrThrowArgs} args - Arguments to find a SeasonItem
     * @example
     * // Get one SeasonItem
     * const seasonItem = await prisma.seasonItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeasonItemFindFirstOrThrowArgs>(args?: SelectSubset<T, SeasonItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SeasonItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeasonItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SeasonItems
     * const seasonItems = await prisma.seasonItem.findMany()
     * 
     * // Get first 10 SeasonItems
     * const seasonItems = await prisma.seasonItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const seasonItemWithIdOnly = await prisma.seasonItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SeasonItemFindManyArgs>(args?: SelectSubset<T, SeasonItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SeasonItem.
     * @param {SeasonItemCreateArgs} args - Arguments to create a SeasonItem.
     * @example
     * // Create one SeasonItem
     * const SeasonItem = await prisma.seasonItem.create({
     *   data: {
     *     // ... data to create a SeasonItem
     *   }
     * })
     * 
     */
    create<T extends SeasonItemCreateArgs>(args: SelectSubset<T, SeasonItemCreateArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SeasonItems.
     * @param {SeasonItemCreateManyArgs} args - Arguments to create many SeasonItems.
     * @example
     * // Create many SeasonItems
     * const seasonItem = await prisma.seasonItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeasonItemCreateManyArgs>(args?: SelectSubset<T, SeasonItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SeasonItem.
     * @param {SeasonItemDeleteArgs} args - Arguments to delete one SeasonItem.
     * @example
     * // Delete one SeasonItem
     * const SeasonItem = await prisma.seasonItem.delete({
     *   where: {
     *     // ... filter to delete one SeasonItem
     *   }
     * })
     * 
     */
    delete<T extends SeasonItemDeleteArgs>(args: SelectSubset<T, SeasonItemDeleteArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SeasonItem.
     * @param {SeasonItemUpdateArgs} args - Arguments to update one SeasonItem.
     * @example
     * // Update one SeasonItem
     * const seasonItem = await prisma.seasonItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeasonItemUpdateArgs>(args: SelectSubset<T, SeasonItemUpdateArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SeasonItems.
     * @param {SeasonItemDeleteManyArgs} args - Arguments to filter SeasonItems to delete.
     * @example
     * // Delete a few SeasonItems
     * const { count } = await prisma.seasonItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeasonItemDeleteManyArgs>(args?: SelectSubset<T, SeasonItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeasonItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeasonItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SeasonItems
     * const seasonItem = await prisma.seasonItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeasonItemUpdateManyArgs>(args: SelectSubset<T, SeasonItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SeasonItem.
     * @param {SeasonItemUpsertArgs} args - Arguments to update or create a SeasonItem.
     * @example
     * // Update or create a SeasonItem
     * const seasonItem = await prisma.seasonItem.upsert({
     *   create: {
     *     // ... data to create a SeasonItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SeasonItem we want to update
     *   }
     * })
     */
    upsert<T extends SeasonItemUpsertArgs>(args: SelectSubset<T, SeasonItemUpsertArgs<ExtArgs>>): Prisma__SeasonItemClient<$Result.GetResult<Prisma.$SeasonItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SeasonItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeasonItemCountArgs} args - Arguments to filter SeasonItems to count.
     * @example
     * // Count the number of SeasonItems
     * const count = await prisma.seasonItem.count({
     *   where: {
     *     // ... the filter for the SeasonItems we want to count
     *   }
     * })
    **/
    count<T extends SeasonItemCountArgs>(
      args?: Subset<T, SeasonItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeasonItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SeasonItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeasonItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeasonItemAggregateArgs>(args: Subset<T, SeasonItemAggregateArgs>): Prisma.PrismaPromise<GetSeasonItemAggregateType<T>>

    /**
     * Group by SeasonItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeasonItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeasonItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeasonItemGroupByArgs['orderBy'] }
        : { orderBy?: SeasonItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeasonItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeasonItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SeasonItem model
   */
  readonly fields: SeasonItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SeasonItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeasonItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SeasonItem model
   */
  interface SeasonItemFieldRefs {
    readonly id: FieldRef<"SeasonItem", 'Int'>
    readonly name: FieldRef<"SeasonItem", 'String'>
    readonly fullName: FieldRef<"SeasonItem", 'String'>
    readonly year: FieldRef<"SeasonItem", 'Int'>
    readonly type: FieldRef<"SeasonItem", 'String'>
    readonly startDate: FieldRef<"SeasonItem", 'DateTime'>
    readonly endDate: FieldRef<"SeasonItem", 'DateTime'>
    readonly description: FieldRef<"SeasonItem", 'String'>
    readonly isActive: FieldRef<"SeasonItem", 'Boolean'>
    readonly companyId: FieldRef<"SeasonItem", 'Int'>
    readonly createdAt: FieldRef<"SeasonItem", 'DateTime'>
    readonly updatedAt: FieldRef<"SeasonItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SeasonItem findUnique
   */
  export type SeasonItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * Filter, which SeasonItem to fetch.
     */
    where: SeasonItemWhereUniqueInput
  }

  /**
   * SeasonItem findUniqueOrThrow
   */
  export type SeasonItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * Filter, which SeasonItem to fetch.
     */
    where: SeasonItemWhereUniqueInput
  }

  /**
   * SeasonItem findFirst
   */
  export type SeasonItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * Filter, which SeasonItem to fetch.
     */
    where?: SeasonItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeasonItems to fetch.
     */
    orderBy?: SeasonItemOrderByWithRelationInput | SeasonItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeasonItems.
     */
    cursor?: SeasonItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeasonItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeasonItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeasonItems.
     */
    distinct?: SeasonItemScalarFieldEnum | SeasonItemScalarFieldEnum[]
  }

  /**
   * SeasonItem findFirstOrThrow
   */
  export type SeasonItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * Filter, which SeasonItem to fetch.
     */
    where?: SeasonItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeasonItems to fetch.
     */
    orderBy?: SeasonItemOrderByWithRelationInput | SeasonItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeasonItems.
     */
    cursor?: SeasonItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeasonItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeasonItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeasonItems.
     */
    distinct?: SeasonItemScalarFieldEnum | SeasonItemScalarFieldEnum[]
  }

  /**
   * SeasonItem findMany
   */
  export type SeasonItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * Filter, which SeasonItems to fetch.
     */
    where?: SeasonItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeasonItems to fetch.
     */
    orderBy?: SeasonItemOrderByWithRelationInput | SeasonItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SeasonItems.
     */
    cursor?: SeasonItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeasonItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeasonItems.
     */
    skip?: number
    distinct?: SeasonItemScalarFieldEnum | SeasonItemScalarFieldEnum[]
  }

  /**
   * SeasonItem create
   */
  export type SeasonItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * The data needed to create a SeasonItem.
     */
    data: XOR<SeasonItemCreateInput, SeasonItemUncheckedCreateInput>
  }

  /**
   * SeasonItem createMany
   */
  export type SeasonItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SeasonItems.
     */
    data: SeasonItemCreateManyInput | SeasonItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeasonItem update
   */
  export type SeasonItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * The data needed to update a SeasonItem.
     */
    data: XOR<SeasonItemUpdateInput, SeasonItemUncheckedUpdateInput>
    /**
     * Choose, which SeasonItem to update.
     */
    where: SeasonItemWhereUniqueInput
  }

  /**
   * SeasonItem updateMany
   */
  export type SeasonItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SeasonItems.
     */
    data: XOR<SeasonItemUpdateManyMutationInput, SeasonItemUncheckedUpdateManyInput>
    /**
     * Filter which SeasonItems to update
     */
    where?: SeasonItemWhereInput
    /**
     * Limit how many SeasonItems to update.
     */
    limit?: number
  }

  /**
   * SeasonItem upsert
   */
  export type SeasonItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * The filter to search for the SeasonItem to update in case it exists.
     */
    where: SeasonItemWhereUniqueInput
    /**
     * In case the SeasonItem found by the `where` argument doesn't exist, create a new SeasonItem with this data.
     */
    create: XOR<SeasonItemCreateInput, SeasonItemUncheckedCreateInput>
    /**
     * In case the SeasonItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeasonItemUpdateInput, SeasonItemUncheckedUpdateInput>
  }

  /**
   * SeasonItem delete
   */
  export type SeasonItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
    /**
     * Filter which SeasonItem to delete.
     */
    where: SeasonItemWhereUniqueInput
  }

  /**
   * SeasonItem deleteMany
   */
  export type SeasonItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeasonItems to delete
     */
    where?: SeasonItemWhereInput
    /**
     * Limit how many SeasonItems to delete.
     */
    limit?: number
  }

  /**
   * SeasonItem without action
   */
  export type SeasonItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeasonItem
     */
    select?: SeasonItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeasonItem
     */
    omit?: SeasonItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeasonItemInclude<ExtArgs> | null
  }


  /**
   * Model FitItem
   */

  export type AggregateFitItem = {
    _count: FitItemCountAggregateOutputType | null
    _avg: FitItemAvgAggregateOutputType | null
    _sum: FitItemSumAggregateOutputType | null
    _min: FitItemMinAggregateOutputType | null
    _max: FitItemMaxAggregateOutputType | null
  }

  export type FitItemAvgAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type FitItemSumAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type FitItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    code: string | null
    category: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FitItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    code: string | null
    category: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FitItemCountAggregateOutputType = {
    id: number
    name: number
    code: number
    category: number
    description: number
    isActive: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FitItemAvgAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type FitItemSumAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type FitItemMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    category?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FitItemMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    category?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FitItemCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    category?: true
    description?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FitItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FitItem to aggregate.
     */
    where?: FitItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FitItems to fetch.
     */
    orderBy?: FitItemOrderByWithRelationInput | FitItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FitItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FitItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FitItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FitItems
    **/
    _count?: true | FitItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FitItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FitItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FitItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FitItemMaxAggregateInputType
  }

  export type GetFitItemAggregateType<T extends FitItemAggregateArgs> = {
        [P in keyof T & keyof AggregateFitItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFitItem[P]>
      : GetScalarType<T[P], AggregateFitItem[P]>
  }




  export type FitItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FitItemWhereInput
    orderBy?: FitItemOrderByWithAggregationInput | FitItemOrderByWithAggregationInput[]
    by: FitItemScalarFieldEnum[] | FitItemScalarFieldEnum
    having?: FitItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FitItemCountAggregateInputType | true
    _avg?: FitItemAvgAggregateInputType
    _sum?: FitItemSumAggregateInputType
    _min?: FitItemMinAggregateInputType
    _max?: FitItemMaxAggregateInputType
  }

  export type FitItemGroupByOutputType = {
    id: number
    name: string
    code: string | null
    category: string | null
    description: string | null
    isActive: boolean
    companyId: number
    createdAt: Date
    updatedAt: Date
    _count: FitItemCountAggregateOutputType | null
    _avg: FitItemAvgAggregateOutputType | null
    _sum: FitItemSumAggregateOutputType | null
    _min: FitItemMinAggregateOutputType | null
    _max: FitItemMaxAggregateOutputType | null
  }

  type GetFitItemGroupByPayload<T extends FitItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FitItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FitItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FitItemGroupByOutputType[P]>
            : GetScalarType<T[P], FitItemGroupByOutputType[P]>
        }
      >
    >


  export type FitItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fitItem"]>



  export type FitItemSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FitItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "code" | "category" | "description" | "isActive" | "companyId" | "createdAt" | "updatedAt", ExtArgs["result"]["fitItem"]>
  export type FitItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $FitItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FitItem"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      code: string | null
      category: string | null
      description: string | null
      isActive: boolean
      companyId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fitItem"]>
    composites: {}
  }

  type FitItemGetPayload<S extends boolean | null | undefined | FitItemDefaultArgs> = $Result.GetResult<Prisma.$FitItemPayload, S>

  type FitItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FitItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FitItemCountAggregateInputType | true
    }

  export interface FitItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FitItem'], meta: { name: 'FitItem' } }
    /**
     * Find zero or one FitItem that matches the filter.
     * @param {FitItemFindUniqueArgs} args - Arguments to find a FitItem
     * @example
     * // Get one FitItem
     * const fitItem = await prisma.fitItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FitItemFindUniqueArgs>(args: SelectSubset<T, FitItemFindUniqueArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FitItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FitItemFindUniqueOrThrowArgs} args - Arguments to find a FitItem
     * @example
     * // Get one FitItem
     * const fitItem = await prisma.fitItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FitItemFindUniqueOrThrowArgs>(args: SelectSubset<T, FitItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FitItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FitItemFindFirstArgs} args - Arguments to find a FitItem
     * @example
     * // Get one FitItem
     * const fitItem = await prisma.fitItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FitItemFindFirstArgs>(args?: SelectSubset<T, FitItemFindFirstArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FitItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FitItemFindFirstOrThrowArgs} args - Arguments to find a FitItem
     * @example
     * // Get one FitItem
     * const fitItem = await prisma.fitItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FitItemFindFirstOrThrowArgs>(args?: SelectSubset<T, FitItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FitItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FitItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FitItems
     * const fitItems = await prisma.fitItem.findMany()
     * 
     * // Get first 10 FitItems
     * const fitItems = await prisma.fitItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fitItemWithIdOnly = await prisma.fitItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FitItemFindManyArgs>(args?: SelectSubset<T, FitItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FitItem.
     * @param {FitItemCreateArgs} args - Arguments to create a FitItem.
     * @example
     * // Create one FitItem
     * const FitItem = await prisma.fitItem.create({
     *   data: {
     *     // ... data to create a FitItem
     *   }
     * })
     * 
     */
    create<T extends FitItemCreateArgs>(args: SelectSubset<T, FitItemCreateArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FitItems.
     * @param {FitItemCreateManyArgs} args - Arguments to create many FitItems.
     * @example
     * // Create many FitItems
     * const fitItem = await prisma.fitItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FitItemCreateManyArgs>(args?: SelectSubset<T, FitItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FitItem.
     * @param {FitItemDeleteArgs} args - Arguments to delete one FitItem.
     * @example
     * // Delete one FitItem
     * const FitItem = await prisma.fitItem.delete({
     *   where: {
     *     // ... filter to delete one FitItem
     *   }
     * })
     * 
     */
    delete<T extends FitItemDeleteArgs>(args: SelectSubset<T, FitItemDeleteArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FitItem.
     * @param {FitItemUpdateArgs} args - Arguments to update one FitItem.
     * @example
     * // Update one FitItem
     * const fitItem = await prisma.fitItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FitItemUpdateArgs>(args: SelectSubset<T, FitItemUpdateArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FitItems.
     * @param {FitItemDeleteManyArgs} args - Arguments to filter FitItems to delete.
     * @example
     * // Delete a few FitItems
     * const { count } = await prisma.fitItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FitItemDeleteManyArgs>(args?: SelectSubset<T, FitItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FitItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FitItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FitItems
     * const fitItem = await prisma.fitItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FitItemUpdateManyArgs>(args: SelectSubset<T, FitItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FitItem.
     * @param {FitItemUpsertArgs} args - Arguments to update or create a FitItem.
     * @example
     * // Update or create a FitItem
     * const fitItem = await prisma.fitItem.upsert({
     *   create: {
     *     // ... data to create a FitItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FitItem we want to update
     *   }
     * })
     */
    upsert<T extends FitItemUpsertArgs>(args: SelectSubset<T, FitItemUpsertArgs<ExtArgs>>): Prisma__FitItemClient<$Result.GetResult<Prisma.$FitItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FitItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FitItemCountArgs} args - Arguments to filter FitItems to count.
     * @example
     * // Count the number of FitItems
     * const count = await prisma.fitItem.count({
     *   where: {
     *     // ... the filter for the FitItems we want to count
     *   }
     * })
    **/
    count<T extends FitItemCountArgs>(
      args?: Subset<T, FitItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FitItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FitItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FitItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FitItemAggregateArgs>(args: Subset<T, FitItemAggregateArgs>): Prisma.PrismaPromise<GetFitItemAggregateType<T>>

    /**
     * Group by FitItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FitItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FitItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FitItemGroupByArgs['orderBy'] }
        : { orderBy?: FitItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FitItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFitItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FitItem model
   */
  readonly fields: FitItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FitItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FitItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FitItem model
   */
  interface FitItemFieldRefs {
    readonly id: FieldRef<"FitItem", 'Int'>
    readonly name: FieldRef<"FitItem", 'String'>
    readonly code: FieldRef<"FitItem", 'String'>
    readonly category: FieldRef<"FitItem", 'String'>
    readonly description: FieldRef<"FitItem", 'String'>
    readonly isActive: FieldRef<"FitItem", 'Boolean'>
    readonly companyId: FieldRef<"FitItem", 'Int'>
    readonly createdAt: FieldRef<"FitItem", 'DateTime'>
    readonly updatedAt: FieldRef<"FitItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FitItem findUnique
   */
  export type FitItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * Filter, which FitItem to fetch.
     */
    where: FitItemWhereUniqueInput
  }

  /**
   * FitItem findUniqueOrThrow
   */
  export type FitItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * Filter, which FitItem to fetch.
     */
    where: FitItemWhereUniqueInput
  }

  /**
   * FitItem findFirst
   */
  export type FitItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * Filter, which FitItem to fetch.
     */
    where?: FitItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FitItems to fetch.
     */
    orderBy?: FitItemOrderByWithRelationInput | FitItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FitItems.
     */
    cursor?: FitItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FitItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FitItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FitItems.
     */
    distinct?: FitItemScalarFieldEnum | FitItemScalarFieldEnum[]
  }

  /**
   * FitItem findFirstOrThrow
   */
  export type FitItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * Filter, which FitItem to fetch.
     */
    where?: FitItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FitItems to fetch.
     */
    orderBy?: FitItemOrderByWithRelationInput | FitItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FitItems.
     */
    cursor?: FitItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FitItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FitItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FitItems.
     */
    distinct?: FitItemScalarFieldEnum | FitItemScalarFieldEnum[]
  }

  /**
   * FitItem findMany
   */
  export type FitItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * Filter, which FitItems to fetch.
     */
    where?: FitItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FitItems to fetch.
     */
    orderBy?: FitItemOrderByWithRelationInput | FitItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FitItems.
     */
    cursor?: FitItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FitItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FitItems.
     */
    skip?: number
    distinct?: FitItemScalarFieldEnum | FitItemScalarFieldEnum[]
  }

  /**
   * FitItem create
   */
  export type FitItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * The data needed to create a FitItem.
     */
    data: XOR<FitItemCreateInput, FitItemUncheckedCreateInput>
  }

  /**
   * FitItem createMany
   */
  export type FitItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FitItems.
     */
    data: FitItemCreateManyInput | FitItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FitItem update
   */
  export type FitItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * The data needed to update a FitItem.
     */
    data: XOR<FitItemUpdateInput, FitItemUncheckedUpdateInput>
    /**
     * Choose, which FitItem to update.
     */
    where: FitItemWhereUniqueInput
  }

  /**
   * FitItem updateMany
   */
  export type FitItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FitItems.
     */
    data: XOR<FitItemUpdateManyMutationInput, FitItemUncheckedUpdateManyInput>
    /**
     * Filter which FitItems to update
     */
    where?: FitItemWhereInput
    /**
     * Limit how many FitItems to update.
     */
    limit?: number
  }

  /**
   * FitItem upsert
   */
  export type FitItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * The filter to search for the FitItem to update in case it exists.
     */
    where: FitItemWhereUniqueInput
    /**
     * In case the FitItem found by the `where` argument doesn't exist, create a new FitItem with this data.
     */
    create: XOR<FitItemCreateInput, FitItemUncheckedCreateInput>
    /**
     * In case the FitItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FitItemUpdateInput, FitItemUncheckedUpdateInput>
  }

  /**
   * FitItem delete
   */
  export type FitItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
    /**
     * Filter which FitItem to delete.
     */
    where: FitItemWhereUniqueInput
  }

  /**
   * FitItem deleteMany
   */
  export type FitItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FitItems to delete
     */
    where?: FitItemWhereInput
    /**
     * Limit how many FitItems to delete.
     */
    limit?: number
  }

  /**
   * FitItem without action
   */
  export type FitItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FitItem
     */
    select?: FitItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FitItem
     */
    omit?: FitItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FitItemInclude<ExtArgs> | null
  }


  /**
   * Model Certification
   */

  export type AggregateCertification = {
    _count: CertificationCountAggregateOutputType | null
    _avg: CertificationAvgAggregateOutputType | null
    _sum: CertificationSumAggregateOutputType | null
    _min: CertificationMinAggregateOutputType | null
    _max: CertificationMaxAggregateOutputType | null
  }

  export type CertificationAvgAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type CertificationSumAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type CertificationMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    code: string | null
    category: $Enums.CertificationCategory | null
    issuer: string | null
    validFrom: Date | null
    validUntil: Date | null
    certificateNumber: string | null
    certificateFile: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
  }

  export type CertificationMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    code: string | null
    category: $Enums.CertificationCategory | null
    issuer: string | null
    validFrom: Date | null
    validUntil: Date | null
    certificateNumber: string | null
    certificateFile: string | null
    description: string | null
    isActive: boolean | null
    companyId: number | null
  }

  export type CertificationCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    name: number
    code: number
    category: number
    issuer: number
    validFrom: number
    validUntil: number
    certificateNumber: number
    certificateFile: number
    description: number
    isActive: number
    companyId: number
    _all: number
  }


  export type CertificationAvgAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type CertificationSumAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type CertificationMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    code?: true
    category?: true
    issuer?: true
    validFrom?: true
    validUntil?: true
    certificateNumber?: true
    certificateFile?: true
    description?: true
    isActive?: true
    companyId?: true
  }

  export type CertificationMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    code?: true
    category?: true
    issuer?: true
    validFrom?: true
    validUntil?: true
    certificateNumber?: true
    certificateFile?: true
    description?: true
    isActive?: true
    companyId?: true
  }

  export type CertificationCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    code?: true
    category?: true
    issuer?: true
    validFrom?: true
    validUntil?: true
    certificateNumber?: true
    certificateFile?: true
    description?: true
    isActive?: true
    companyId?: true
    _all?: true
  }

  export type CertificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Certification to aggregate.
     */
    where?: CertificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certifications to fetch.
     */
    orderBy?: CertificationOrderByWithRelationInput | CertificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CertificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Certifications
    **/
    _count?: true | CertificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CertificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CertificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CertificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CertificationMaxAggregateInputType
  }

  export type GetCertificationAggregateType<T extends CertificationAggregateArgs> = {
        [P in keyof T & keyof AggregateCertification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCertification[P]>
      : GetScalarType<T[P], AggregateCertification[P]>
  }




  export type CertificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CertificationWhereInput
    orderBy?: CertificationOrderByWithAggregationInput | CertificationOrderByWithAggregationInput[]
    by: CertificationScalarFieldEnum[] | CertificationScalarFieldEnum
    having?: CertificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CertificationCountAggregateInputType | true
    _avg?: CertificationAvgAggregateInputType
    _sum?: CertificationSumAggregateInputType
    _min?: CertificationMinAggregateInputType
    _max?: CertificationMaxAggregateInputType
  }

  export type CertificationGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    name: string
    code: string | null
    category: $Enums.CertificationCategory
    issuer: string | null
    validFrom: Date | null
    validUntil: Date | null
    certificateNumber: string | null
    certificateFile: string | null
    description: string | null
    isActive: boolean
    companyId: number
    _count: CertificationCountAggregateOutputType | null
    _avg: CertificationAvgAggregateOutputType | null
    _sum: CertificationSumAggregateOutputType | null
    _min: CertificationMinAggregateOutputType | null
    _max: CertificationMaxAggregateOutputType | null
  }

  type GetCertificationGroupByPayload<T extends CertificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CertificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CertificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CertificationGroupByOutputType[P]>
            : GetScalarType<T[P], CertificationGroupByOutputType[P]>
        }
      >
    >


  export type CertificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    issuer?: boolean
    validFrom?: boolean
    validUntil?: boolean
    certificateNumber?: boolean
    certificateFile?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    collections?: boolean | Certification$collectionsArgs<ExtArgs>
    _count?: boolean | CertificationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["certification"]>



  export type CertificationSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    code?: boolean
    category?: boolean
    issuer?: boolean
    validFrom?: boolean
    validUntil?: boolean
    certificateNumber?: boolean
    certificateFile?: boolean
    description?: boolean
    isActive?: boolean
    companyId?: boolean
  }

  export type CertificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "name" | "code" | "category" | "issuer" | "validFrom" | "validUntil" | "certificateNumber" | "certificateFile" | "description" | "isActive" | "companyId", ExtArgs["result"]["certification"]>
  export type CertificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    collections?: boolean | Certification$collectionsArgs<ExtArgs>
    _count?: boolean | CertificationCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CertificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Certification"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      collections: Prisma.$CollectionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      name: string
      code: string | null
      category: $Enums.CertificationCategory
      issuer: string | null
      validFrom: Date | null
      validUntil: Date | null
      certificateNumber: string | null
      certificateFile: string | null
      description: string | null
      isActive: boolean
      companyId: number
    }, ExtArgs["result"]["certification"]>
    composites: {}
  }

  type CertificationGetPayload<S extends boolean | null | undefined | CertificationDefaultArgs> = $Result.GetResult<Prisma.$CertificationPayload, S>

  type CertificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CertificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CertificationCountAggregateInputType | true
    }

  export interface CertificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Certification'], meta: { name: 'Certification' } }
    /**
     * Find zero or one Certification that matches the filter.
     * @param {CertificationFindUniqueArgs} args - Arguments to find a Certification
     * @example
     * // Get one Certification
     * const certification = await prisma.certification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CertificationFindUniqueArgs>(args: SelectSubset<T, CertificationFindUniqueArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Certification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CertificationFindUniqueOrThrowArgs} args - Arguments to find a Certification
     * @example
     * // Get one Certification
     * const certification = await prisma.certification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CertificationFindUniqueOrThrowArgs>(args: SelectSubset<T, CertificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Certification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificationFindFirstArgs} args - Arguments to find a Certification
     * @example
     * // Get one Certification
     * const certification = await prisma.certification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CertificationFindFirstArgs>(args?: SelectSubset<T, CertificationFindFirstArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Certification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificationFindFirstOrThrowArgs} args - Arguments to find a Certification
     * @example
     * // Get one Certification
     * const certification = await prisma.certification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CertificationFindFirstOrThrowArgs>(args?: SelectSubset<T, CertificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Certifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Certifications
     * const certifications = await prisma.certification.findMany()
     * 
     * // Get first 10 Certifications
     * const certifications = await prisma.certification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const certificationWithIdOnly = await prisma.certification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CertificationFindManyArgs>(args?: SelectSubset<T, CertificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Certification.
     * @param {CertificationCreateArgs} args - Arguments to create a Certification.
     * @example
     * // Create one Certification
     * const Certification = await prisma.certification.create({
     *   data: {
     *     // ... data to create a Certification
     *   }
     * })
     * 
     */
    create<T extends CertificationCreateArgs>(args: SelectSubset<T, CertificationCreateArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Certifications.
     * @param {CertificationCreateManyArgs} args - Arguments to create many Certifications.
     * @example
     * // Create many Certifications
     * const certification = await prisma.certification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CertificationCreateManyArgs>(args?: SelectSubset<T, CertificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Certification.
     * @param {CertificationDeleteArgs} args - Arguments to delete one Certification.
     * @example
     * // Delete one Certification
     * const Certification = await prisma.certification.delete({
     *   where: {
     *     // ... filter to delete one Certification
     *   }
     * })
     * 
     */
    delete<T extends CertificationDeleteArgs>(args: SelectSubset<T, CertificationDeleteArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Certification.
     * @param {CertificationUpdateArgs} args - Arguments to update one Certification.
     * @example
     * // Update one Certification
     * const certification = await prisma.certification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CertificationUpdateArgs>(args: SelectSubset<T, CertificationUpdateArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Certifications.
     * @param {CertificationDeleteManyArgs} args - Arguments to filter Certifications to delete.
     * @example
     * // Delete a few Certifications
     * const { count } = await prisma.certification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CertificationDeleteManyArgs>(args?: SelectSubset<T, CertificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Certifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Certifications
     * const certification = await prisma.certification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CertificationUpdateManyArgs>(args: SelectSubset<T, CertificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Certification.
     * @param {CertificationUpsertArgs} args - Arguments to update or create a Certification.
     * @example
     * // Update or create a Certification
     * const certification = await prisma.certification.upsert({
     *   create: {
     *     // ... data to create a Certification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Certification we want to update
     *   }
     * })
     */
    upsert<T extends CertificationUpsertArgs>(args: SelectSubset<T, CertificationUpsertArgs<ExtArgs>>): Prisma__CertificationClient<$Result.GetResult<Prisma.$CertificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Certifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificationCountArgs} args - Arguments to filter Certifications to count.
     * @example
     * // Count the number of Certifications
     * const count = await prisma.certification.count({
     *   where: {
     *     // ... the filter for the Certifications we want to count
     *   }
     * })
    **/
    count<T extends CertificationCountArgs>(
      args?: Subset<T, CertificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CertificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Certification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CertificationAggregateArgs>(args: Subset<T, CertificationAggregateArgs>): Prisma.PrismaPromise<GetCertificationAggregateType<T>>

    /**
     * Group by Certification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CertificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CertificationGroupByArgs['orderBy'] }
        : { orderBy?: CertificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CertificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCertificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Certification model
   */
  readonly fields: CertificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Certification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CertificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    collections<T extends Certification$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, Certification$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Certification model
   */
  interface CertificationFieldRefs {
    readonly id: FieldRef<"Certification", 'Int'>
    readonly createdAt: FieldRef<"Certification", 'DateTime'>
    readonly updatedAt: FieldRef<"Certification", 'DateTime'>
    readonly name: FieldRef<"Certification", 'String'>
    readonly code: FieldRef<"Certification", 'String'>
    readonly category: FieldRef<"Certification", 'CertificationCategory'>
    readonly issuer: FieldRef<"Certification", 'String'>
    readonly validFrom: FieldRef<"Certification", 'DateTime'>
    readonly validUntil: FieldRef<"Certification", 'DateTime'>
    readonly certificateNumber: FieldRef<"Certification", 'String'>
    readonly certificateFile: FieldRef<"Certification", 'String'>
    readonly description: FieldRef<"Certification", 'String'>
    readonly isActive: FieldRef<"Certification", 'Boolean'>
    readonly companyId: FieldRef<"Certification", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Certification findUnique
   */
  export type CertificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * Filter, which Certification to fetch.
     */
    where: CertificationWhereUniqueInput
  }

  /**
   * Certification findUniqueOrThrow
   */
  export type CertificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * Filter, which Certification to fetch.
     */
    where: CertificationWhereUniqueInput
  }

  /**
   * Certification findFirst
   */
  export type CertificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * Filter, which Certification to fetch.
     */
    where?: CertificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certifications to fetch.
     */
    orderBy?: CertificationOrderByWithRelationInput | CertificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Certifications.
     */
    cursor?: CertificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Certifications.
     */
    distinct?: CertificationScalarFieldEnum | CertificationScalarFieldEnum[]
  }

  /**
   * Certification findFirstOrThrow
   */
  export type CertificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * Filter, which Certification to fetch.
     */
    where?: CertificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certifications to fetch.
     */
    orderBy?: CertificationOrderByWithRelationInput | CertificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Certifications.
     */
    cursor?: CertificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Certifications.
     */
    distinct?: CertificationScalarFieldEnum | CertificationScalarFieldEnum[]
  }

  /**
   * Certification findMany
   */
  export type CertificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * Filter, which Certifications to fetch.
     */
    where?: CertificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certifications to fetch.
     */
    orderBy?: CertificationOrderByWithRelationInput | CertificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Certifications.
     */
    cursor?: CertificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certifications.
     */
    skip?: number
    distinct?: CertificationScalarFieldEnum | CertificationScalarFieldEnum[]
  }

  /**
   * Certification create
   */
  export type CertificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Certification.
     */
    data: XOR<CertificationCreateInput, CertificationUncheckedCreateInput>
  }

  /**
   * Certification createMany
   */
  export type CertificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Certifications.
     */
    data: CertificationCreateManyInput | CertificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Certification update
   */
  export type CertificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Certification.
     */
    data: XOR<CertificationUpdateInput, CertificationUncheckedUpdateInput>
    /**
     * Choose, which Certification to update.
     */
    where: CertificationWhereUniqueInput
  }

  /**
   * Certification updateMany
   */
  export type CertificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Certifications.
     */
    data: XOR<CertificationUpdateManyMutationInput, CertificationUncheckedUpdateManyInput>
    /**
     * Filter which Certifications to update
     */
    where?: CertificationWhereInput
    /**
     * Limit how many Certifications to update.
     */
    limit?: number
  }

  /**
   * Certification upsert
   */
  export type CertificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Certification to update in case it exists.
     */
    where: CertificationWhereUniqueInput
    /**
     * In case the Certification found by the `where` argument doesn't exist, create a new Certification with this data.
     */
    create: XOR<CertificationCreateInput, CertificationUncheckedCreateInput>
    /**
     * In case the Certification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CertificationUpdateInput, CertificationUncheckedUpdateInput>
  }

  /**
   * Certification delete
   */
  export type CertificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
    /**
     * Filter which Certification to delete.
     */
    where: CertificationWhereUniqueInput
  }

  /**
   * Certification deleteMany
   */
  export type CertificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Certifications to delete
     */
    where?: CertificationWhereInput
    /**
     * Limit how many Certifications to delete.
     */
    limit?: number
  }

  /**
   * Certification.collections
   */
  export type Certification$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
    orderBy?: CollectionOrderByWithRelationInput | CollectionOrderByWithRelationInput[]
    cursor?: CollectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionScalarFieldEnum | CollectionScalarFieldEnum[]
  }

  /**
   * Certification without action
   */
  export type CertificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certification
     */
    select?: CertificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Certification
     */
    omit?: CertificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificationInclude<ExtArgs> | null
  }


  /**
   * Model ProductionRevision
   */

  export type AggregateProductionRevision = {
    _count: ProductionRevisionCountAggregateOutputType | null
    _avg: ProductionRevisionAvgAggregateOutputType | null
    _sum: ProductionRevisionSumAggregateOutputType | null
    _min: ProductionRevisionMinAggregateOutputType | null
    _max: ProductionRevisionMaxAggregateOutputType | null
  }

  export type ProductionRevisionAvgAggregateOutputType = {
    id: number | null
    productionId: number | null
    extraDays: number | null
    extraCost: number | null
    requestedById: number | null
  }

  export type ProductionRevisionSumAggregateOutputType = {
    id: number | null
    productionId: number | null
    extraDays: number | null
    extraCost: number | null
    requestedById: number | null
  }

  export type ProductionRevisionMinAggregateOutputType = {
    id: number | null
    productionId: number | null
    reason: string | null
    description: string | null
    extraDays: number | null
    extraCost: number | null
    isApproved: boolean | null
    requestedById: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductionRevisionMaxAggregateOutputType = {
    id: number | null
    productionId: number | null
    reason: string | null
    description: string | null
    extraDays: number | null
    extraCost: number | null
    isApproved: boolean | null
    requestedById: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductionRevisionCountAggregateOutputType = {
    id: number
    productionId: number
    reason: number
    description: number
    extraDays: number
    extraCost: number
    isApproved: number
    requestedById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductionRevisionAvgAggregateInputType = {
    id?: true
    productionId?: true
    extraDays?: true
    extraCost?: true
    requestedById?: true
  }

  export type ProductionRevisionSumAggregateInputType = {
    id?: true
    productionId?: true
    extraDays?: true
    extraCost?: true
    requestedById?: true
  }

  export type ProductionRevisionMinAggregateInputType = {
    id?: true
    productionId?: true
    reason?: true
    description?: true
    extraDays?: true
    extraCost?: true
    isApproved?: true
    requestedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductionRevisionMaxAggregateInputType = {
    id?: true
    productionId?: true
    reason?: true
    description?: true
    extraDays?: true
    extraCost?: true
    isApproved?: true
    requestedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductionRevisionCountAggregateInputType = {
    id?: true
    productionId?: true
    reason?: true
    description?: true
    extraDays?: true
    extraCost?: true
    isApproved?: true
    requestedById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductionRevisionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductionRevision to aggregate.
     */
    where?: ProductionRevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionRevisions to fetch.
     */
    orderBy?: ProductionRevisionOrderByWithRelationInput | ProductionRevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductionRevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionRevisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionRevisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductionRevisions
    **/
    _count?: true | ProductionRevisionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductionRevisionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductionRevisionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductionRevisionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductionRevisionMaxAggregateInputType
  }

  export type GetProductionRevisionAggregateType<T extends ProductionRevisionAggregateArgs> = {
        [P in keyof T & keyof AggregateProductionRevision]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductionRevision[P]>
      : GetScalarType<T[P], AggregateProductionRevision[P]>
  }




  export type ProductionRevisionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductionRevisionWhereInput
    orderBy?: ProductionRevisionOrderByWithAggregationInput | ProductionRevisionOrderByWithAggregationInput[]
    by: ProductionRevisionScalarFieldEnum[] | ProductionRevisionScalarFieldEnum
    having?: ProductionRevisionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductionRevisionCountAggregateInputType | true
    _avg?: ProductionRevisionAvgAggregateInputType
    _sum?: ProductionRevisionSumAggregateInputType
    _min?: ProductionRevisionMinAggregateInputType
    _max?: ProductionRevisionMaxAggregateInputType
  }

  export type ProductionRevisionGroupByOutputType = {
    id: number
    productionId: number
    reason: string
    description: string | null
    extraDays: number
    extraCost: number
    isApproved: boolean
    requestedById: number
    createdAt: Date
    updatedAt: Date
    _count: ProductionRevisionCountAggregateOutputType | null
    _avg: ProductionRevisionAvgAggregateOutputType | null
    _sum: ProductionRevisionSumAggregateOutputType | null
    _min: ProductionRevisionMinAggregateOutputType | null
    _max: ProductionRevisionMaxAggregateOutputType | null
  }

  type GetProductionRevisionGroupByPayload<T extends ProductionRevisionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductionRevisionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductionRevisionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductionRevisionGroupByOutputType[P]>
            : GetScalarType<T[P], ProductionRevisionGroupByOutputType[P]>
        }
      >
    >


  export type ProductionRevisionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productionId?: boolean
    reason?: boolean
    description?: boolean
    extraDays?: boolean
    extraCost?: boolean
    isApproved?: boolean
    requestedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    production?: boolean | ProductionTrackingDefaultArgs<ExtArgs>
    requestedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productionRevision"]>



  export type ProductionRevisionSelectScalar = {
    id?: boolean
    productionId?: boolean
    reason?: boolean
    description?: boolean
    extraDays?: boolean
    extraCost?: boolean
    isApproved?: boolean
    requestedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductionRevisionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productionId" | "reason" | "description" | "extraDays" | "extraCost" | "isApproved" | "requestedById" | "createdAt" | "updatedAt", ExtArgs["result"]["productionRevision"]>
  export type ProductionRevisionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    production?: boolean | ProductionTrackingDefaultArgs<ExtArgs>
    requestedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProductionRevisionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductionRevision"
    objects: {
      production: Prisma.$ProductionTrackingPayload<ExtArgs>
      requestedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productionId: number
      reason: string
      description: string | null
      extraDays: number
      extraCost: number
      isApproved: boolean
      requestedById: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productionRevision"]>
    composites: {}
  }

  type ProductionRevisionGetPayload<S extends boolean | null | undefined | ProductionRevisionDefaultArgs> = $Result.GetResult<Prisma.$ProductionRevisionPayload, S>

  type ProductionRevisionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductionRevisionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductionRevisionCountAggregateInputType | true
    }

  export interface ProductionRevisionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductionRevision'], meta: { name: 'ProductionRevision' } }
    /**
     * Find zero or one ProductionRevision that matches the filter.
     * @param {ProductionRevisionFindUniqueArgs} args - Arguments to find a ProductionRevision
     * @example
     * // Get one ProductionRevision
     * const productionRevision = await prisma.productionRevision.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductionRevisionFindUniqueArgs>(args: SelectSubset<T, ProductionRevisionFindUniqueArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductionRevision that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductionRevisionFindUniqueOrThrowArgs} args - Arguments to find a ProductionRevision
     * @example
     * // Get one ProductionRevision
     * const productionRevision = await prisma.productionRevision.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductionRevisionFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductionRevisionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductionRevision that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionRevisionFindFirstArgs} args - Arguments to find a ProductionRevision
     * @example
     * // Get one ProductionRevision
     * const productionRevision = await prisma.productionRevision.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductionRevisionFindFirstArgs>(args?: SelectSubset<T, ProductionRevisionFindFirstArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductionRevision that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionRevisionFindFirstOrThrowArgs} args - Arguments to find a ProductionRevision
     * @example
     * // Get one ProductionRevision
     * const productionRevision = await prisma.productionRevision.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductionRevisionFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductionRevisionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductionRevisions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionRevisionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductionRevisions
     * const productionRevisions = await prisma.productionRevision.findMany()
     * 
     * // Get first 10 ProductionRevisions
     * const productionRevisions = await prisma.productionRevision.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productionRevisionWithIdOnly = await prisma.productionRevision.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductionRevisionFindManyArgs>(args?: SelectSubset<T, ProductionRevisionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductionRevision.
     * @param {ProductionRevisionCreateArgs} args - Arguments to create a ProductionRevision.
     * @example
     * // Create one ProductionRevision
     * const ProductionRevision = await prisma.productionRevision.create({
     *   data: {
     *     // ... data to create a ProductionRevision
     *   }
     * })
     * 
     */
    create<T extends ProductionRevisionCreateArgs>(args: SelectSubset<T, ProductionRevisionCreateArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductionRevisions.
     * @param {ProductionRevisionCreateManyArgs} args - Arguments to create many ProductionRevisions.
     * @example
     * // Create many ProductionRevisions
     * const productionRevision = await prisma.productionRevision.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductionRevisionCreateManyArgs>(args?: SelectSubset<T, ProductionRevisionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProductionRevision.
     * @param {ProductionRevisionDeleteArgs} args - Arguments to delete one ProductionRevision.
     * @example
     * // Delete one ProductionRevision
     * const ProductionRevision = await prisma.productionRevision.delete({
     *   where: {
     *     // ... filter to delete one ProductionRevision
     *   }
     * })
     * 
     */
    delete<T extends ProductionRevisionDeleteArgs>(args: SelectSubset<T, ProductionRevisionDeleteArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductionRevision.
     * @param {ProductionRevisionUpdateArgs} args - Arguments to update one ProductionRevision.
     * @example
     * // Update one ProductionRevision
     * const productionRevision = await prisma.productionRevision.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductionRevisionUpdateArgs>(args: SelectSubset<T, ProductionRevisionUpdateArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductionRevisions.
     * @param {ProductionRevisionDeleteManyArgs} args - Arguments to filter ProductionRevisions to delete.
     * @example
     * // Delete a few ProductionRevisions
     * const { count } = await prisma.productionRevision.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductionRevisionDeleteManyArgs>(args?: SelectSubset<T, ProductionRevisionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductionRevisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionRevisionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductionRevisions
     * const productionRevision = await prisma.productionRevision.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductionRevisionUpdateManyArgs>(args: SelectSubset<T, ProductionRevisionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductionRevision.
     * @param {ProductionRevisionUpsertArgs} args - Arguments to update or create a ProductionRevision.
     * @example
     * // Update or create a ProductionRevision
     * const productionRevision = await prisma.productionRevision.upsert({
     *   create: {
     *     // ... data to create a ProductionRevision
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductionRevision we want to update
     *   }
     * })
     */
    upsert<T extends ProductionRevisionUpsertArgs>(args: SelectSubset<T, ProductionRevisionUpsertArgs<ExtArgs>>): Prisma__ProductionRevisionClient<$Result.GetResult<Prisma.$ProductionRevisionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductionRevisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionRevisionCountArgs} args - Arguments to filter ProductionRevisions to count.
     * @example
     * // Count the number of ProductionRevisions
     * const count = await prisma.productionRevision.count({
     *   where: {
     *     // ... the filter for the ProductionRevisions we want to count
     *   }
     * })
    **/
    count<T extends ProductionRevisionCountArgs>(
      args?: Subset<T, ProductionRevisionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductionRevisionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductionRevision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionRevisionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductionRevisionAggregateArgs>(args: Subset<T, ProductionRevisionAggregateArgs>): Prisma.PrismaPromise<GetProductionRevisionAggregateType<T>>

    /**
     * Group by ProductionRevision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductionRevisionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductionRevisionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductionRevisionGroupByArgs['orderBy'] }
        : { orderBy?: ProductionRevisionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductionRevisionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductionRevisionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductionRevision model
   */
  readonly fields: ProductionRevisionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductionRevision.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductionRevisionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    production<T extends ProductionTrackingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductionTrackingDefaultArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requestedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductionRevision model
   */
  interface ProductionRevisionFieldRefs {
    readonly id: FieldRef<"ProductionRevision", 'Int'>
    readonly productionId: FieldRef<"ProductionRevision", 'Int'>
    readonly reason: FieldRef<"ProductionRevision", 'String'>
    readonly description: FieldRef<"ProductionRevision", 'String'>
    readonly extraDays: FieldRef<"ProductionRevision", 'Int'>
    readonly extraCost: FieldRef<"ProductionRevision", 'Float'>
    readonly isApproved: FieldRef<"ProductionRevision", 'Boolean'>
    readonly requestedById: FieldRef<"ProductionRevision", 'Int'>
    readonly createdAt: FieldRef<"ProductionRevision", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductionRevision", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductionRevision findUnique
   */
  export type ProductionRevisionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * Filter, which ProductionRevision to fetch.
     */
    where: ProductionRevisionWhereUniqueInput
  }

  /**
   * ProductionRevision findUniqueOrThrow
   */
  export type ProductionRevisionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * Filter, which ProductionRevision to fetch.
     */
    where: ProductionRevisionWhereUniqueInput
  }

  /**
   * ProductionRevision findFirst
   */
  export type ProductionRevisionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * Filter, which ProductionRevision to fetch.
     */
    where?: ProductionRevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionRevisions to fetch.
     */
    orderBy?: ProductionRevisionOrderByWithRelationInput | ProductionRevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductionRevisions.
     */
    cursor?: ProductionRevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionRevisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionRevisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductionRevisions.
     */
    distinct?: ProductionRevisionScalarFieldEnum | ProductionRevisionScalarFieldEnum[]
  }

  /**
   * ProductionRevision findFirstOrThrow
   */
  export type ProductionRevisionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * Filter, which ProductionRevision to fetch.
     */
    where?: ProductionRevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionRevisions to fetch.
     */
    orderBy?: ProductionRevisionOrderByWithRelationInput | ProductionRevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductionRevisions.
     */
    cursor?: ProductionRevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionRevisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionRevisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductionRevisions.
     */
    distinct?: ProductionRevisionScalarFieldEnum | ProductionRevisionScalarFieldEnum[]
  }

  /**
   * ProductionRevision findMany
   */
  export type ProductionRevisionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * Filter, which ProductionRevisions to fetch.
     */
    where?: ProductionRevisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductionRevisions to fetch.
     */
    orderBy?: ProductionRevisionOrderByWithRelationInput | ProductionRevisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductionRevisions.
     */
    cursor?: ProductionRevisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductionRevisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductionRevisions.
     */
    skip?: number
    distinct?: ProductionRevisionScalarFieldEnum | ProductionRevisionScalarFieldEnum[]
  }

  /**
   * ProductionRevision create
   */
  export type ProductionRevisionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductionRevision.
     */
    data: XOR<ProductionRevisionCreateInput, ProductionRevisionUncheckedCreateInput>
  }

  /**
   * ProductionRevision createMany
   */
  export type ProductionRevisionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductionRevisions.
     */
    data: ProductionRevisionCreateManyInput | ProductionRevisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductionRevision update
   */
  export type ProductionRevisionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductionRevision.
     */
    data: XOR<ProductionRevisionUpdateInput, ProductionRevisionUncheckedUpdateInput>
    /**
     * Choose, which ProductionRevision to update.
     */
    where: ProductionRevisionWhereUniqueInput
  }

  /**
   * ProductionRevision updateMany
   */
  export type ProductionRevisionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductionRevisions.
     */
    data: XOR<ProductionRevisionUpdateManyMutationInput, ProductionRevisionUncheckedUpdateManyInput>
    /**
     * Filter which ProductionRevisions to update
     */
    where?: ProductionRevisionWhereInput
    /**
     * Limit how many ProductionRevisions to update.
     */
    limit?: number
  }

  /**
   * ProductionRevision upsert
   */
  export type ProductionRevisionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductionRevision to update in case it exists.
     */
    where: ProductionRevisionWhereUniqueInput
    /**
     * In case the ProductionRevision found by the `where` argument doesn't exist, create a new ProductionRevision with this data.
     */
    create: XOR<ProductionRevisionCreateInput, ProductionRevisionUncheckedCreateInput>
    /**
     * In case the ProductionRevision was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductionRevisionUpdateInput, ProductionRevisionUncheckedUpdateInput>
  }

  /**
   * ProductionRevision delete
   */
  export type ProductionRevisionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
    /**
     * Filter which ProductionRevision to delete.
     */
    where: ProductionRevisionWhereUniqueInput
  }

  /**
   * ProductionRevision deleteMany
   */
  export type ProductionRevisionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductionRevisions to delete
     */
    where?: ProductionRevisionWhereInput
    /**
     * Limit how many ProductionRevisions to delete.
     */
    limit?: number
  }

  /**
   * ProductionRevision without action
   */
  export type ProductionRevisionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionRevision
     */
    select?: ProductionRevisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionRevision
     */
    omit?: ProductionRevisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionRevisionInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
  }

  export type NotificationSumAggregateOutputType = {
    id: number | null
    userId: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
  }

  export type NotificationMinAggregateOutputType = {
    id: number | null
    type: $Enums.NotificationType | null
    title: string | null
    message: string | null
    link: string | null
    isRead: boolean | null
    userId: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: number | null
    type: $Enums.NotificationType | null
    title: string | null
    message: string | null
    link: string | null
    isRead: boolean | null
    userId: number | null
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    type: number
    title: number
    message: number
    link: number
    isRead: number
    userId: number
    orderId: number
    sampleId: number
    productionTrackingId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
  }

  export type NotificationSumAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
  }

  export type NotificationMinAggregateInputType = {
    id?: true
    type?: true
    title?: true
    message?: true
    link?: true
    isRead?: true
    userId?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    type?: true
    title?: true
    message?: true
    link?: true
    isRead?: true
    userId?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    type?: true
    title?: true
    message?: true
    link?: true
    isRead?: true
    userId?: true
    orderId?: true
    sampleId?: true
    productionTrackingId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: number
    type: $Enums.NotificationType
    title: string
    message: string
    link: string | null
    isRead: boolean
    userId: number
    orderId: number | null
    sampleId: number | null
    productionTrackingId: number | null
    createdAt: Date
    updatedAt: Date
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    link?: boolean
    isRead?: boolean
    userId?: boolean
    orderId?: boolean
    sampleId?: boolean
    productionTrackingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Notification$orderArgs<ExtArgs>
    sample?: boolean | Notification$sampleArgs<ExtArgs>
    productionTracking?: boolean | Notification$productionTrackingArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>



  export type NotificationSelectScalar = {
    id?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    link?: boolean
    isRead?: boolean
    userId?: boolean
    orderId?: boolean
    sampleId?: boolean
    productionTrackingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "title" | "message" | "link" | "isRead" | "userId" | "orderId" | "sampleId" | "productionTrackingId" | "createdAt" | "updatedAt", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Notification$orderArgs<ExtArgs>
    sample?: boolean | Notification$sampleArgs<ExtArgs>
    productionTracking?: boolean | Notification$productionTrackingArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      order: Prisma.$OrderPayload<ExtArgs> | null
      sample: Prisma.$SamplePayload<ExtArgs> | null
      productionTracking: Prisma.$ProductionTrackingPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: $Enums.NotificationType
      title: string
      message: string
      link: string | null
      isRead: boolean
      userId: number
      orderId: number | null
      sampleId: number | null
      productionTrackingId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    order<T extends Notification$orderArgs<ExtArgs> = {}>(args?: Subset<T, Notification$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sample<T extends Notification$sampleArgs<ExtArgs> = {}>(args?: Subset<T, Notification$sampleArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productionTracking<T extends Notification$productionTrackingArgs<ExtArgs> = {}>(args?: Subset<T, Notification$productionTrackingArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'Int'>
    readonly type: FieldRef<"Notification", 'NotificationType'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly link: FieldRef<"Notification", 'String'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly userId: FieldRef<"Notification", 'Int'>
    readonly orderId: FieldRef<"Notification", 'Int'>
    readonly sampleId: FieldRef<"Notification", 'Int'>
    readonly productionTrackingId: FieldRef<"Notification", 'Int'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly updatedAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification.order
   */
  export type Notification$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Notification.sample
   */
  export type Notification$sampleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
  }

  /**
   * Notification.productionTracking
   */
  export type Notification$productionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model Task
   */

  export type AggregateTask = {
    _count: TaskCountAggregateOutputType | null
    _avg: TaskAvgAggregateOutputType | null
    _sum: TaskSumAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  export type TaskAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    assignedToId: number | null
    collectionId: number | null
    sampleId: number | null
    orderId: number | null
    productionTrackingId: number | null
    assignedBy: number | null
  }

  export type TaskSumAggregateOutputType = {
    id: number | null
    userId: number | null
    assignedToId: number | null
    collectionId: number | null
    sampleId: number | null
    orderId: number | null
    productionTrackingId: number | null
    assignedBy: number | null
  }

  export type TaskMinAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    status: $Enums.TaskStatus | null
    priority: $Enums.TaskPriority | null
    type: $Enums.TaskType | null
    relatedStatus: string | null
    targetStatus: string | null
    entityType: string | null
    productionStage: string | null
    userId: number | null
    assignedToId: number | null
    collectionId: number | null
    sampleId: number | null
    orderId: number | null
    productionTrackingId: number | null
    dueDate: Date | null
    completedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    notes: string | null
    assignedBy: number | null
  }

  export type TaskMaxAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    status: $Enums.TaskStatus | null
    priority: $Enums.TaskPriority | null
    type: $Enums.TaskType | null
    relatedStatus: string | null
    targetStatus: string | null
    entityType: string | null
    productionStage: string | null
    userId: number | null
    assignedToId: number | null
    collectionId: number | null
    sampleId: number | null
    orderId: number | null
    productionTrackingId: number | null
    dueDate: Date | null
    completedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    notes: string | null
    assignedBy: number | null
  }

  export type TaskCountAggregateOutputType = {
    id: number
    title: number
    description: number
    status: number
    priority: number
    type: number
    relatedStatus: number
    targetStatus: number
    entityType: number
    productionStage: number
    userId: number
    assignedToId: number
    collectionId: number
    sampleId: number
    orderId: number
    productionTrackingId: number
    dueDate: number
    completedAt: number
    createdAt: number
    updatedAt: number
    notes: number
    assignedBy: number
    actionData: number
    _all: number
  }


  export type TaskAvgAggregateInputType = {
    id?: true
    userId?: true
    assignedToId?: true
    collectionId?: true
    sampleId?: true
    orderId?: true
    productionTrackingId?: true
    assignedBy?: true
  }

  export type TaskSumAggregateInputType = {
    id?: true
    userId?: true
    assignedToId?: true
    collectionId?: true
    sampleId?: true
    orderId?: true
    productionTrackingId?: true
    assignedBy?: true
  }

  export type TaskMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    type?: true
    relatedStatus?: true
    targetStatus?: true
    entityType?: true
    productionStage?: true
    userId?: true
    assignedToId?: true
    collectionId?: true
    sampleId?: true
    orderId?: true
    productionTrackingId?: true
    dueDate?: true
    completedAt?: true
    createdAt?: true
    updatedAt?: true
    notes?: true
    assignedBy?: true
  }

  export type TaskMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    type?: true
    relatedStatus?: true
    targetStatus?: true
    entityType?: true
    productionStage?: true
    userId?: true
    assignedToId?: true
    collectionId?: true
    sampleId?: true
    orderId?: true
    productionTrackingId?: true
    dueDate?: true
    completedAt?: true
    createdAt?: true
    updatedAt?: true
    notes?: true
    assignedBy?: true
  }

  export type TaskCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    status?: true
    priority?: true
    type?: true
    relatedStatus?: true
    targetStatus?: true
    entityType?: true
    productionStage?: true
    userId?: true
    assignedToId?: true
    collectionId?: true
    sampleId?: true
    orderId?: true
    productionTrackingId?: true
    dueDate?: true
    completedAt?: true
    createdAt?: true
    updatedAt?: true
    notes?: true
    assignedBy?: true
    actionData?: true
    _all?: true
  }

  export type TaskAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Task to aggregate.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tasks
    **/
    _count?: true | TaskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TaskAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TaskSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskMaxAggregateInputType
  }

  export type GetTaskAggregateType<T extends TaskAggregateArgs> = {
        [P in keyof T & keyof AggregateTask]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTask[P]>
      : GetScalarType<T[P], AggregateTask[P]>
  }




  export type TaskGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithAggregationInput | TaskOrderByWithAggregationInput[]
    by: TaskScalarFieldEnum[] | TaskScalarFieldEnum
    having?: TaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskCountAggregateInputType | true
    _avg?: TaskAvgAggregateInputType
    _sum?: TaskSumAggregateInputType
    _min?: TaskMinAggregateInputType
    _max?: TaskMaxAggregateInputType
  }

  export type TaskGroupByOutputType = {
    id: number
    title: string
    description: string | null
    status: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus: string | null
    targetStatus: string | null
    entityType: string | null
    productionStage: string | null
    userId: number
    assignedToId: number | null
    collectionId: number | null
    sampleId: number | null
    orderId: number | null
    productionTrackingId: number | null
    dueDate: Date | null
    completedAt: Date | null
    createdAt: Date
    updatedAt: Date
    notes: string | null
    assignedBy: number | null
    actionData: JsonValue | null
    _count: TaskCountAggregateOutputType | null
    _avg: TaskAvgAggregateOutputType | null
    _sum: TaskSumAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  type GetTaskGroupByPayload<T extends TaskGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TaskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskGroupByOutputType[P]>
            : GetScalarType<T[P], TaskGroupByOutputType[P]>
        }
      >
    >


  export type TaskSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    type?: boolean
    relatedStatus?: boolean
    targetStatus?: boolean
    entityType?: boolean
    productionStage?: boolean
    userId?: boolean
    assignedToId?: boolean
    collectionId?: boolean
    sampleId?: boolean
    orderId?: boolean
    productionTrackingId?: boolean
    dueDate?: boolean
    completedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    notes?: boolean
    assignedBy?: boolean
    actionData?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | Task$assignedToArgs<ExtArgs>
    collection?: boolean | Task$collectionArgs<ExtArgs>
    sample?: boolean | Task$sampleArgs<ExtArgs>
    order?: boolean | Task$orderArgs<ExtArgs>
    productionTracking?: boolean | Task$productionTrackingArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>



  export type TaskSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    priority?: boolean
    type?: boolean
    relatedStatus?: boolean
    targetStatus?: boolean
    entityType?: boolean
    productionStage?: boolean
    userId?: boolean
    assignedToId?: boolean
    collectionId?: boolean
    sampleId?: boolean
    orderId?: boolean
    productionTrackingId?: boolean
    dueDate?: boolean
    completedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    notes?: boolean
    assignedBy?: boolean
    actionData?: boolean
  }

  export type TaskOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "status" | "priority" | "type" | "relatedStatus" | "targetStatus" | "entityType" | "productionStage" | "userId" | "assignedToId" | "collectionId" | "sampleId" | "orderId" | "productionTrackingId" | "dueDate" | "completedAt" | "createdAt" | "updatedAt" | "notes" | "assignedBy" | "actionData", ExtArgs["result"]["task"]>
  export type TaskInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | Task$assignedToArgs<ExtArgs>
    collection?: boolean | Task$collectionArgs<ExtArgs>
    sample?: boolean | Task$sampleArgs<ExtArgs>
    order?: boolean | Task$orderArgs<ExtArgs>
    productionTracking?: boolean | Task$productionTrackingArgs<ExtArgs>
  }

  export type $TaskPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Task"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      assignedTo: Prisma.$UserPayload<ExtArgs> | null
      collection: Prisma.$CollectionPayload<ExtArgs> | null
      sample: Prisma.$SamplePayload<ExtArgs> | null
      order: Prisma.$OrderPayload<ExtArgs> | null
      productionTracking: Prisma.$ProductionTrackingPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      description: string | null
      status: $Enums.TaskStatus
      priority: $Enums.TaskPriority
      type: $Enums.TaskType
      relatedStatus: string | null
      targetStatus: string | null
      entityType: string | null
      productionStage: string | null
      userId: number
      assignedToId: number | null
      collectionId: number | null
      sampleId: number | null
      orderId: number | null
      productionTrackingId: number | null
      dueDate: Date | null
      completedAt: Date | null
      createdAt: Date
      updatedAt: Date
      notes: string | null
      assignedBy: number | null
      actionData: Prisma.JsonValue | null
    }, ExtArgs["result"]["task"]>
    composites: {}
  }

  type TaskGetPayload<S extends boolean | null | undefined | TaskDefaultArgs> = $Result.GetResult<Prisma.$TaskPayload, S>

  type TaskCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TaskCountAggregateInputType | true
    }

  export interface TaskDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Task'], meta: { name: 'Task' } }
    /**
     * Find zero or one Task that matches the filter.
     * @param {TaskFindUniqueArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TaskFindUniqueArgs>(args: SelectSubset<T, TaskFindUniqueArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Task that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TaskFindUniqueOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TaskFindUniqueOrThrowArgs>(args: SelectSubset<T, TaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TaskFindFirstArgs>(args?: SelectSubset<T, TaskFindFirstArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TaskFindFirstOrThrowArgs>(args?: SelectSubset<T, TaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tasks
     * const tasks = await prisma.task.findMany()
     * 
     * // Get first 10 Tasks
     * const tasks = await prisma.task.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskWithIdOnly = await prisma.task.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TaskFindManyArgs>(args?: SelectSubset<T, TaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Task.
     * @param {TaskCreateArgs} args - Arguments to create a Task.
     * @example
     * // Create one Task
     * const Task = await prisma.task.create({
     *   data: {
     *     // ... data to create a Task
     *   }
     * })
     * 
     */
    create<T extends TaskCreateArgs>(args: SelectSubset<T, TaskCreateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tasks.
     * @param {TaskCreateManyArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const task = await prisma.task.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TaskCreateManyArgs>(args?: SelectSubset<T, TaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Task.
     * @param {TaskDeleteArgs} args - Arguments to delete one Task.
     * @example
     * // Delete one Task
     * const Task = await prisma.task.delete({
     *   where: {
     *     // ... filter to delete one Task
     *   }
     * })
     * 
     */
    delete<T extends TaskDeleteArgs>(args: SelectSubset<T, TaskDeleteArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Task.
     * @param {TaskUpdateArgs} args - Arguments to update one Task.
     * @example
     * // Update one Task
     * const task = await prisma.task.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TaskUpdateArgs>(args: SelectSubset<T, TaskUpdateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tasks.
     * @param {TaskDeleteManyArgs} args - Arguments to filter Tasks to delete.
     * @example
     * // Delete a few Tasks
     * const { count } = await prisma.task.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TaskDeleteManyArgs>(args?: SelectSubset<T, TaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tasks
     * const task = await prisma.task.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TaskUpdateManyArgs>(args: SelectSubset<T, TaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Task.
     * @param {TaskUpsertArgs} args - Arguments to update or create a Task.
     * @example
     * // Update or create a Task
     * const task = await prisma.task.upsert({
     *   create: {
     *     // ... data to create a Task
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Task we want to update
     *   }
     * })
     */
    upsert<T extends TaskUpsertArgs>(args: SelectSubset<T, TaskUpsertArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskCountArgs} args - Arguments to filter Tasks to count.
     * @example
     * // Count the number of Tasks
     * const count = await prisma.task.count({
     *   where: {
     *     // ... the filter for the Tasks we want to count
     *   }
     * })
    **/
    count<T extends TaskCountArgs>(
      args?: Subset<T, TaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskAggregateArgs>(args: Subset<T, TaskAggregateArgs>): Prisma.PrismaPromise<GetTaskAggregateType<T>>

    /**
     * Group by Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskGroupByArgs['orderBy'] }
        : { orderBy?: TaskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Task model
   */
  readonly fields: TaskFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Task.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TaskClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    assignedTo<T extends Task$assignedToArgs<ExtArgs> = {}>(args?: Subset<T, Task$assignedToArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    collection<T extends Task$collectionArgs<ExtArgs> = {}>(args?: Subset<T, Task$collectionArgs<ExtArgs>>): Prisma__CollectionClient<$Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sample<T extends Task$sampleArgs<ExtArgs> = {}>(args?: Subset<T, Task$sampleArgs<ExtArgs>>): Prisma__SampleClient<$Result.GetResult<Prisma.$SamplePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order<T extends Task$orderArgs<ExtArgs> = {}>(args?: Subset<T, Task$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productionTracking<T extends Task$productionTrackingArgs<ExtArgs> = {}>(args?: Subset<T, Task$productionTrackingArgs<ExtArgs>>): Prisma__ProductionTrackingClient<$Result.GetResult<Prisma.$ProductionTrackingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Task model
   */
  interface TaskFieldRefs {
    readonly id: FieldRef<"Task", 'Int'>
    readonly title: FieldRef<"Task", 'String'>
    readonly description: FieldRef<"Task", 'String'>
    readonly status: FieldRef<"Task", 'TaskStatus'>
    readonly priority: FieldRef<"Task", 'TaskPriority'>
    readonly type: FieldRef<"Task", 'TaskType'>
    readonly relatedStatus: FieldRef<"Task", 'String'>
    readonly targetStatus: FieldRef<"Task", 'String'>
    readonly entityType: FieldRef<"Task", 'String'>
    readonly productionStage: FieldRef<"Task", 'String'>
    readonly userId: FieldRef<"Task", 'Int'>
    readonly assignedToId: FieldRef<"Task", 'Int'>
    readonly collectionId: FieldRef<"Task", 'Int'>
    readonly sampleId: FieldRef<"Task", 'Int'>
    readonly orderId: FieldRef<"Task", 'Int'>
    readonly productionTrackingId: FieldRef<"Task", 'Int'>
    readonly dueDate: FieldRef<"Task", 'DateTime'>
    readonly completedAt: FieldRef<"Task", 'DateTime'>
    readonly createdAt: FieldRef<"Task", 'DateTime'>
    readonly updatedAt: FieldRef<"Task", 'DateTime'>
    readonly notes: FieldRef<"Task", 'String'>
    readonly assignedBy: FieldRef<"Task", 'Int'>
    readonly actionData: FieldRef<"Task", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Task findUnique
   */
  export type TaskFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findUniqueOrThrow
   */
  export type TaskFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findFirst
   */
  export type TaskFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findFirstOrThrow
   */
  export type TaskFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findMany
   */
  export type TaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Tasks to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task create
   */
  export type TaskCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to create a Task.
     */
    data: XOR<TaskCreateInput, TaskUncheckedCreateInput>
  }

  /**
   * Task createMany
   */
  export type TaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tasks.
     */
    data: TaskCreateManyInput | TaskCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Task update
   */
  export type TaskUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to update a Task.
     */
    data: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
    /**
     * Choose, which Task to update.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task updateMany
   */
  export type TaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tasks.
     */
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput>
    /**
     * Filter which Tasks to update
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to update.
     */
    limit?: number
  }

  /**
   * Task upsert
   */
  export type TaskUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The filter to search for the Task to update in case it exists.
     */
    where: TaskWhereUniqueInput
    /**
     * In case the Task found by the `where` argument doesn't exist, create a new Task with this data.
     */
    create: XOR<TaskCreateInput, TaskUncheckedCreateInput>
    /**
     * In case the Task was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
  }

  /**
   * Task delete
   */
  export type TaskDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter which Task to delete.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task deleteMany
   */
  export type TaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tasks to delete
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to delete.
     */
    limit?: number
  }

  /**
   * Task.assignedTo
   */
  export type Task$assignedToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task.collection
   */
  export type Task$collectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection
     */
    select?: CollectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Collection
     */
    omit?: CollectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CollectionInclude<ExtArgs> | null
    where?: CollectionWhereInput
  }

  /**
   * Task.sample
   */
  export type Task$sampleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sample
     */
    select?: SampleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sample
     */
    omit?: SampleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SampleInclude<ExtArgs> | null
    where?: SampleWhereInput
  }

  /**
   * Task.order
   */
  export type Task$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Task.productionTracking
   */
  export type Task$productionTrackingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductionTracking
     */
    select?: ProductionTrackingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductionTracking
     */
    omit?: ProductionTrackingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductionTrackingInclude<ExtArgs> | null
    where?: ProductionTrackingWhereInput
  }

  /**
   * Task without action
   */
  export type TaskDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    phone: 'phone',
    address: 'address',
    location: 'location',
    website: 'website',
    type: 'type',
    description: 'description',
    ownerId: 'ownerId',
    isActive: 'isActive',
    settings: 'settings',
    logo: 'logo',
    coverImage: 'coverImage',
    brandColors: 'brandColors',
    socialLinks: 'socialLinks',
    isPublicProfile: 'isPublicProfile',
    profileSlug: 'profileSlug',
    subscriptionPlan: 'subscriptionPlan',
    subscriptionStatus: 'subscriptionStatus',
    billingCycle: 'billingCycle',
    maxUsers: 'maxUsers',
    maxSamples: 'maxSamples',
    maxOrders: 'maxOrders',
    maxCollections: 'maxCollections',
    maxStorageGB: 'maxStorageGB',
    currentUsers: 'currentUsers',
    currentSamples: 'currentSamples',
    currentOrders: 'currentOrders',
    currentCollections: 'currentCollections',
    currentStorageGB: 'currentStorageGB',
    trialStartedAt: 'trialStartedAt',
    trialEndsAt: 'trialEndsAt',
    billingEmail: 'billingEmail',
    taxId: 'taxId',
    billingAddress: 'billingAddress',
    subscriptionStartedAt: 'subscriptionStartedAt',
    currentPeriodStart: 'currentPeriodStart',
    currentPeriodEnd: 'currentPeriodEnd',
    cancelAtPeriodEnd: 'cancelAtPeriodEnd',
    cancelledAt: 'cancelledAt',
    defaultView: 'defaultView',
    enabledModules: 'enabledModules',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    content: 'content',
    senderId: 'senderId',
    receiverId: 'receiverId',
    isRead: 'isRead',
    type: 'type',
    orderId: 'orderId',
    sampleId: 'sampleId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    companyId: 'companyId'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const ProductionTrackingScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    sampleId: 'sampleId',
    currentStage: 'currentStage',
    overallStatus: 'overallStatus',
    progress: 'progress',
    estimatedStartDate: 'estimatedStartDate',
    estimatedEndDate: 'estimatedEndDate',
    actualStartDate: 'actualStartDate',
    actualEndDate: 'actualEndDate',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    companyId: 'companyId',
    sewingWorkshopId: 'sewingWorkshopId',
    packagingWorkshopId: 'packagingWorkshopId'
  };

  export type ProductionTrackingScalarFieldEnum = (typeof ProductionTrackingScalarFieldEnum)[keyof typeof ProductionTrackingScalarFieldEnum]


  export const RevisionScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    sampleId: 'sampleId',
    productionTrackingId: 'productionTrackingId',
    revisionNumber: 'revisionNumber',
    requestMessage: 'requestMessage',
    responseMessage: 'responseMessage',
    status: 'status',
    requestedAt: 'requestedAt',
    completedAt: 'completedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RevisionScalarFieldEnum = (typeof RevisionScalarFieldEnum)[keyof typeof RevisionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    username: 'username',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    companyId: 'companyId',
    role: 'role',
    isCompanyOwner: 'isCompanyOwner',
    department: 'department',
    jobTitle: 'jobTitle',
    avatar: 'avatar',
    bio: 'bio',
    socialLinks: 'socialLinks',
    emailNotifications: 'emailNotifications',
    pushNotifications: 'pushNotifications',
    language: 'language',
    timezone: 'timezone',
    permissions: 'permissions',
    isActive: 'isActive',
    isPendingApproval: 'isPendingApproval',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    authorId: 'authorId',
    parentCategoryId: 'parentCategoryId',
    companyId: 'companyId'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const CollectionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    modelCode: 'modelCode',
    season: 'season',
    gender: 'gender',
    fit: 'fit',
    trend: 'trend',
    colors: 'colors',
    sizeGroups: 'sizeGroups',
    sizeRange: 'sizeRange',
    measurementChart: 'measurementChart',
    fabricComposition: 'fabricComposition',
    accessories: 'accessories',
    images: 'images',
    techPack: 'techPack',
    moq: 'moq',
    targetPrice: 'targetPrice',
    targetLeadTime: 'targetLeadTime',
    notes: 'notes',
    likesCount: 'likesCount',
    viewCount: 'viewCount',
    shareCount: 'shareCount',
    lastViewedAt: 'lastViewedAt',
    price: 'price',
    sku: 'sku',
    stock: 'stock',
    isActive: 'isActive',
    isFeatured: 'isFeatured',
    slug: 'slug',
    productionSchedule: 'productionSchedule',
    categoryId: 'categoryId',
    authorId: 'authorId',
    companyId: 'companyId'
  };

  export type CollectionScalarFieldEnum = (typeof CollectionScalarFieldEnum)[keyof typeof CollectionScalarFieldEnum]


  export const UserFavoriteCollectionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    userId: 'userId',
    collectionId: 'collectionId'
  };

  export type UserFavoriteCollectionScalarFieldEnum = (typeof UserFavoriteCollectionScalarFieldEnum)[keyof typeof UserFavoriteCollectionScalarFieldEnum]


  export const SampleScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    sampleNumber: 'sampleNumber',
    sampleType: 'sampleType',
    status: 'status',
    customerNote: 'customerNote',
    manufacturerResponse: 'manufacturerResponse',
    customDesignImages: 'customDesignImages',
    revisionRequests: 'revisionRequests',
    originalCollectionId: 'originalCollectionId',
    name: 'name',
    description: 'description',
    images: 'images',
    aiGenerated: 'aiGenerated',
    aiPrompt: 'aiPrompt',
    aiSketchUrl: 'aiSketchUrl',
    unitPrice: 'unitPrice',
    productionDays: 'productionDays',
    estimatedProductionDate: 'estimatedProductionDate',
    actualProductionDate: 'actualProductionDate',
    shippingDate: 'shippingDate',
    deliveryAddress: 'deliveryAddress',
    cargoTrackingNumber: 'cargoTrackingNumber',
    customerQuotedPrice: 'customerQuotedPrice',
    customerQuoteDays: 'customerQuoteDays',
    customerQuoteNote: 'customerQuoteNote',
    customerQuoteType: 'customerQuoteType',
    customerQuoteSentAt: 'customerQuoteSentAt',
    collectionId: 'collectionId',
    customerId: 'customerId',
    manufactureId: 'manufactureId',
    companyId: 'companyId',
    viewCount: 'viewCount',
    shareCount: 'shareCount',
    lastViewedAt: 'lastViewedAt'
  };

  export type SampleScalarFieldEnum = (typeof SampleScalarFieldEnum)[keyof typeof SampleScalarFieldEnum]


  export const AIAnalysisScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    detectedProduct: 'detectedProduct',
    detectedColor: 'detectedColor',
    detectedFabric: 'detectedFabric',
    detectedPattern: 'detectedPattern',
    detectedGender: 'detectedGender',
    detectedClassification: 'detectedClassification',
    detectedAccessories: 'detectedAccessories',
    technicalDescription: 'technicalDescription',
    qualityAnalysis: 'qualityAnalysis',
    qualityScore: 'qualityScore',
    costAnalysis: 'costAnalysis',
    estimatedCostMin: 'estimatedCostMin',
    estimatedCostMax: 'estimatedCostMax',
    suggestedMinOrder: 'suggestedMinOrder',
    trendAnalysis: 'trendAnalysis',
    trendScore: 'trendScore',
    targetMarket: 'targetMarket',
    salesPotential: 'salesPotential',
    designSuggestions: 'designSuggestions',
    designStyle: 'designStyle',
    designFocus: 'designFocus',
    sampleId: 'sampleId'
  };

  export type AIAnalysisScalarFieldEnum = (typeof AIAnalysisScalarFieldEnum)[keyof typeof AIAnalysisScalarFieldEnum]


  export const SampleProductionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    status: 'status',
    note: 'note',
    estimatedDays: 'estimatedDays',
    actualDate: 'actualDate',
    sampleId: 'sampleId',
    updatedById: 'updatedById'
  };

  export type SampleProductionScalarFieldEnum = (typeof SampleProductionScalarFieldEnum)[keyof typeof SampleProductionScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    orderNumber: 'orderNumber',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    status: 'status',
    customerNote: 'customerNote',
    manufacturerResponse: 'manufacturerResponse',
    customerQuotedPrice: 'customerQuotedPrice',
    customerQuoteDays: 'customerQuoteDays',
    customerQuoteNote: 'customerQuoteNote',
    customerQuoteType: 'customerQuoteType',
    customerQuoteSentAt: 'customerQuoteSentAt',
    productionDays: 'productionDays',
    estimatedProductionDate: 'estimatedProductionDate',
    actualProductionStart: 'actualProductionStart',
    actualProductionEnd: 'actualProductionEnd',
    shippingDate: 'shippingDate',
    deliveryAddress: 'deliveryAddress',
    cargoTrackingNumber: 'cargoTrackingNumber',
    collectionId: 'collectionId',
    customerId: 'customerId',
    manufactureId: 'manufactureId',
    companyId: 'companyId'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderProductionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    status: 'status',
    note: 'note',
    estimatedDays: 'estimatedDays',
    actualDate: 'actualDate',
    orderId: 'orderId',
    updatedById: 'updatedById'
  };

  export type OrderProductionScalarFieldEnum = (typeof OrderProductionScalarFieldEnum)[keyof typeof OrderProductionScalarFieldEnum]


  export const QuestionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    question: 'question',
    answer: 'answer',
    isAnswered: 'isAnswered',
    isPublic: 'isPublic',
    collectionId: 'collectionId',
    customerId: 'customerId',
    manufactureId: 'manufactureId'
  };

  export type QuestionScalarFieldEnum = (typeof QuestionScalarFieldEnum)[keyof typeof QuestionScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    rating: 'rating',
    comment: 'comment',
    isApproved: 'isApproved',
    collectionId: 'collectionId',
    customerId: 'customerId'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const FileScalarFieldEnum: {
    id: 'id',
    filename: 'filename',
    path: 'path',
    size: 'size',
    mimetype: 'mimetype',
    encoding: 'encoding',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FileScalarFieldEnum = (typeof FileScalarFieldEnum)[keyof typeof FileScalarFieldEnum]


  export const ProductionStageUpdateScalarFieldEnum: {
    id: 'id',
    productionId: 'productionId',
    stage: 'stage',
    status: 'status',
    actualStartDate: 'actualStartDate',
    actualEndDate: 'actualEndDate',
    estimatedDays: 'estimatedDays',
    notes: 'notes',
    photos: 'photos',
    isRevision: 'isRevision',
    delayReason: 'delayReason',
    extraDays: 'extraDays',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductionStageUpdateScalarFieldEnum = (typeof ProductionStageUpdateScalarFieldEnum)[keyof typeof ProductionStageUpdateScalarFieldEnum]


  export const QualityControlScalarFieldEnum: {
    id: 'id',
    productionId: 'productionId',
    inspectorId: 'inspectorId',
    checkDate: 'checkDate',
    result: 'result',
    score: 'score',
    notes: 'notes',
    photos: 'photos',
    fabricDefects: 'fabricDefects',
    sewingDefects: 'sewingDefects',
    measureDefects: 'measureDefects',
    finishingDefects: 'finishingDefects',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type QualityControlScalarFieldEnum = (typeof QualityControlScalarFieldEnum)[keyof typeof QualityControlScalarFieldEnum]


  export const WorkshopScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    capacity: 'capacity',
    location: 'location',
    isActive: 'isActive',
    ownerId: 'ownerId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WorkshopScalarFieldEnum = (typeof WorkshopScalarFieldEnum)[keyof typeof WorkshopScalarFieldEnum]


  export const ColorScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    hexCode: 'hexCode',
    imageUrl: 'imageUrl',
    isActive: 'isActive',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ColorScalarFieldEnum = (typeof ColorScalarFieldEnum)[keyof typeof ColorScalarFieldEnum]


  export const FabricScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    composition: 'composition',
    weight: 'weight',
    width: 'width',
    supplier: 'supplier',
    price: 'price',
    minOrder: 'minOrder',
    leadTime: 'leadTime',
    imageUrl: 'imageUrl',
    description: 'description',
    isActive: 'isActive',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FabricScalarFieldEnum = (typeof FabricScalarFieldEnum)[keyof typeof FabricScalarFieldEnum]


  export const SizeGroupScalarFieldEnum: {
    id: 'id',
    name: 'name',
    category: 'category',
    sizes: 'sizes',
    description: 'description',
    isActive: 'isActive',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SizeGroupScalarFieldEnum = (typeof SizeGroupScalarFieldEnum)[keyof typeof SizeGroupScalarFieldEnum]


  export const SeasonItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    fullName: 'fullName',
    year: 'year',
    type: 'type',
    startDate: 'startDate',
    endDate: 'endDate',
    description: 'description',
    isActive: 'isActive',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SeasonItemScalarFieldEnum = (typeof SeasonItemScalarFieldEnum)[keyof typeof SeasonItemScalarFieldEnum]


  export const FitItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    category: 'category',
    description: 'description',
    isActive: 'isActive',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FitItemScalarFieldEnum = (typeof FitItemScalarFieldEnum)[keyof typeof FitItemScalarFieldEnum]


  export const CertificationScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    code: 'code',
    category: 'category',
    issuer: 'issuer',
    validFrom: 'validFrom',
    validUntil: 'validUntil',
    certificateNumber: 'certificateNumber',
    certificateFile: 'certificateFile',
    description: 'description',
    isActive: 'isActive',
    companyId: 'companyId'
  };

  export type CertificationScalarFieldEnum = (typeof CertificationScalarFieldEnum)[keyof typeof CertificationScalarFieldEnum]


  export const ProductionRevisionScalarFieldEnum: {
    id: 'id',
    productionId: 'productionId',
    reason: 'reason',
    description: 'description',
    extraDays: 'extraDays',
    extraCost: 'extraCost',
    isApproved: 'isApproved',
    requestedById: 'requestedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductionRevisionScalarFieldEnum = (typeof ProductionRevisionScalarFieldEnum)[keyof typeof ProductionRevisionScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    type: 'type',
    title: 'title',
    message: 'message',
    link: 'link',
    isRead: 'isRead',
    userId: 'userId',
    orderId: 'orderId',
    sampleId: 'sampleId',
    productionTrackingId: 'productionTrackingId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const TaskScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    status: 'status',
    priority: 'priority',
    type: 'type',
    relatedStatus: 'relatedStatus',
    targetStatus: 'targetStatus',
    entityType: 'entityType',
    productionStage: 'productionStage',
    userId: 'userId',
    assignedToId: 'assignedToId',
    collectionId: 'collectionId',
    sampleId: 'sampleId',
    orderId: 'orderId',
    productionTrackingId: 'productionTrackingId',
    dueDate: 'dueDate',
    completedAt: 'completedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    notes: 'notes',
    assignedBy: 'assignedBy',
    actionData: 'actionData'
  };

  export type TaskScalarFieldEnum = (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const CompanyOrderByRelevanceFieldEnum: {
    name: 'name',
    email: 'email',
    phone: 'phone',
    address: 'address',
    location: 'location',
    website: 'website',
    description: 'description',
    logo: 'logo',
    coverImage: 'coverImage',
    profileSlug: 'profileSlug',
    billingEmail: 'billingEmail',
    taxId: 'taxId',
    billingAddress: 'billingAddress',
    defaultView: 'defaultView'
  };

  export type CompanyOrderByRelevanceFieldEnum = (typeof CompanyOrderByRelevanceFieldEnum)[keyof typeof CompanyOrderByRelevanceFieldEnum]


  export const MessageOrderByRelevanceFieldEnum: {
    content: 'content',
    type: 'type'
  };

  export type MessageOrderByRelevanceFieldEnum = (typeof MessageOrderByRelevanceFieldEnum)[keyof typeof MessageOrderByRelevanceFieldEnum]


  export const ProductionTrackingOrderByRelevanceFieldEnum: {
    notes: 'notes'
  };

  export type ProductionTrackingOrderByRelevanceFieldEnum = (typeof ProductionTrackingOrderByRelevanceFieldEnum)[keyof typeof ProductionTrackingOrderByRelevanceFieldEnum]


  export const RevisionOrderByRelevanceFieldEnum: {
    requestMessage: 'requestMessage',
    responseMessage: 'responseMessage',
    status: 'status'
  };

  export type RevisionOrderByRelevanceFieldEnum = (typeof RevisionOrderByRelevanceFieldEnum)[keyof typeof RevisionOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    email: 'email',
    password: 'password',
    name: 'name',
    username: 'username',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    jobTitle: 'jobTitle',
    avatar: 'avatar',
    bio: 'bio',
    language: 'language',
    timezone: 'timezone'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const CategoryOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type CategoryOrderByRelevanceFieldEnum = (typeof CategoryOrderByRelevanceFieldEnum)[keyof typeof CategoryOrderByRelevanceFieldEnum]


  export const CollectionOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description',
    modelCode: 'modelCode',
    fit: 'fit',
    trend: 'trend',
    colors: 'colors',
    sizeGroups: 'sizeGroups',
    sizeRange: 'sizeRange',
    measurementChart: 'measurementChart',
    fabricComposition: 'fabricComposition',
    accessories: 'accessories',
    images: 'images',
    techPack: 'techPack',
    notes: 'notes',
    sku: 'sku',
    slug: 'slug'
  };

  export type CollectionOrderByRelevanceFieldEnum = (typeof CollectionOrderByRelevanceFieldEnum)[keyof typeof CollectionOrderByRelevanceFieldEnum]


  export const SampleOrderByRelevanceFieldEnum: {
    sampleNumber: 'sampleNumber',
    customerNote: 'customerNote',
    manufacturerResponse: 'manufacturerResponse',
    customDesignImages: 'customDesignImages',
    revisionRequests: 'revisionRequests',
    name: 'name',
    description: 'description',
    images: 'images',
    aiPrompt: 'aiPrompt',
    aiSketchUrl: 'aiSketchUrl',
    deliveryAddress: 'deliveryAddress',
    cargoTrackingNumber: 'cargoTrackingNumber',
    customerQuoteNote: 'customerQuoteNote',
    customerQuoteType: 'customerQuoteType'
  };

  export type SampleOrderByRelevanceFieldEnum = (typeof SampleOrderByRelevanceFieldEnum)[keyof typeof SampleOrderByRelevanceFieldEnum]


  export const AIAnalysisOrderByRelevanceFieldEnum: {
    detectedProduct: 'detectedProduct',
    detectedColor: 'detectedColor',
    detectedFabric: 'detectedFabric',
    detectedPattern: 'detectedPattern',
    detectedGender: 'detectedGender',
    detectedClassification: 'detectedClassification',
    detectedAccessories: 'detectedAccessories',
    technicalDescription: 'technicalDescription',
    qualityAnalysis: 'qualityAnalysis',
    costAnalysis: 'costAnalysis',
    trendAnalysis: 'trendAnalysis',
    targetMarket: 'targetMarket',
    salesPotential: 'salesPotential',
    designSuggestions: 'designSuggestions',
    designStyle: 'designStyle',
    designFocus: 'designFocus'
  };

  export type AIAnalysisOrderByRelevanceFieldEnum = (typeof AIAnalysisOrderByRelevanceFieldEnum)[keyof typeof AIAnalysisOrderByRelevanceFieldEnum]


  export const SampleProductionOrderByRelevanceFieldEnum: {
    note: 'note'
  };

  export type SampleProductionOrderByRelevanceFieldEnum = (typeof SampleProductionOrderByRelevanceFieldEnum)[keyof typeof SampleProductionOrderByRelevanceFieldEnum]


  export const OrderOrderByRelevanceFieldEnum: {
    orderNumber: 'orderNumber',
    customerNote: 'customerNote',
    manufacturerResponse: 'manufacturerResponse',
    customerQuoteNote: 'customerQuoteNote',
    customerQuoteType: 'customerQuoteType',
    deliveryAddress: 'deliveryAddress',
    cargoTrackingNumber: 'cargoTrackingNumber'
  };

  export type OrderOrderByRelevanceFieldEnum = (typeof OrderOrderByRelevanceFieldEnum)[keyof typeof OrderOrderByRelevanceFieldEnum]


  export const OrderProductionOrderByRelevanceFieldEnum: {
    note: 'note'
  };

  export type OrderProductionOrderByRelevanceFieldEnum = (typeof OrderProductionOrderByRelevanceFieldEnum)[keyof typeof OrderProductionOrderByRelevanceFieldEnum]


  export const QuestionOrderByRelevanceFieldEnum: {
    question: 'question',
    answer: 'answer'
  };

  export type QuestionOrderByRelevanceFieldEnum = (typeof QuestionOrderByRelevanceFieldEnum)[keyof typeof QuestionOrderByRelevanceFieldEnum]


  export const ReviewOrderByRelevanceFieldEnum: {
    comment: 'comment'
  };

  export type ReviewOrderByRelevanceFieldEnum = (typeof ReviewOrderByRelevanceFieldEnum)[keyof typeof ReviewOrderByRelevanceFieldEnum]


  export const FileOrderByRelevanceFieldEnum: {
    id: 'id',
    filename: 'filename',
    path: 'path',
    mimetype: 'mimetype',
    encoding: 'encoding',
    description: 'description'
  };

  export type FileOrderByRelevanceFieldEnum = (typeof FileOrderByRelevanceFieldEnum)[keyof typeof FileOrderByRelevanceFieldEnum]


  export const ProductionStageUpdateOrderByRelevanceFieldEnum: {
    notes: 'notes',
    photos: 'photos',
    delayReason: 'delayReason'
  };

  export type ProductionStageUpdateOrderByRelevanceFieldEnum = (typeof ProductionStageUpdateOrderByRelevanceFieldEnum)[keyof typeof ProductionStageUpdateOrderByRelevanceFieldEnum]


  export const QualityControlOrderByRelevanceFieldEnum: {
    notes: 'notes',
    photos: 'photos'
  };

  export type QualityControlOrderByRelevanceFieldEnum = (typeof QualityControlOrderByRelevanceFieldEnum)[keyof typeof QualityControlOrderByRelevanceFieldEnum]


  export const WorkshopOrderByRelevanceFieldEnum: {
    name: 'name',
    location: 'location'
  };

  export type WorkshopOrderByRelevanceFieldEnum = (typeof WorkshopOrderByRelevanceFieldEnum)[keyof typeof WorkshopOrderByRelevanceFieldEnum]


  export const ColorOrderByRelevanceFieldEnum: {
    name: 'name',
    code: 'code',
    hexCode: 'hexCode',
    imageUrl: 'imageUrl'
  };

  export type ColorOrderByRelevanceFieldEnum = (typeof ColorOrderByRelevanceFieldEnum)[keyof typeof ColorOrderByRelevanceFieldEnum]


  export const FabricOrderByRelevanceFieldEnum: {
    name: 'name',
    code: 'code',
    composition: 'composition',
    supplier: 'supplier',
    imageUrl: 'imageUrl',
    description: 'description'
  };

  export type FabricOrderByRelevanceFieldEnum = (typeof FabricOrderByRelevanceFieldEnum)[keyof typeof FabricOrderByRelevanceFieldEnum]


  export const SizeGroupOrderByRelevanceFieldEnum: {
    name: 'name',
    category: 'category',
    sizes: 'sizes',
    description: 'description'
  };

  export type SizeGroupOrderByRelevanceFieldEnum = (typeof SizeGroupOrderByRelevanceFieldEnum)[keyof typeof SizeGroupOrderByRelevanceFieldEnum]


  export const SeasonItemOrderByRelevanceFieldEnum: {
    name: 'name',
    fullName: 'fullName',
    type: 'type',
    description: 'description'
  };

  export type SeasonItemOrderByRelevanceFieldEnum = (typeof SeasonItemOrderByRelevanceFieldEnum)[keyof typeof SeasonItemOrderByRelevanceFieldEnum]


  export const FitItemOrderByRelevanceFieldEnum: {
    name: 'name',
    code: 'code',
    category: 'category',
    description: 'description'
  };

  export type FitItemOrderByRelevanceFieldEnum = (typeof FitItemOrderByRelevanceFieldEnum)[keyof typeof FitItemOrderByRelevanceFieldEnum]


  export const CertificationOrderByRelevanceFieldEnum: {
    name: 'name',
    code: 'code',
    issuer: 'issuer',
    certificateNumber: 'certificateNumber',
    certificateFile: 'certificateFile',
    description: 'description'
  };

  export type CertificationOrderByRelevanceFieldEnum = (typeof CertificationOrderByRelevanceFieldEnum)[keyof typeof CertificationOrderByRelevanceFieldEnum]


  export const ProductionRevisionOrderByRelevanceFieldEnum: {
    reason: 'reason',
    description: 'description'
  };

  export type ProductionRevisionOrderByRelevanceFieldEnum = (typeof ProductionRevisionOrderByRelevanceFieldEnum)[keyof typeof ProductionRevisionOrderByRelevanceFieldEnum]


  export const NotificationOrderByRelevanceFieldEnum: {
    title: 'title',
    message: 'message',
    link: 'link'
  };

  export type NotificationOrderByRelevanceFieldEnum = (typeof NotificationOrderByRelevanceFieldEnum)[keyof typeof NotificationOrderByRelevanceFieldEnum]


  export const TaskOrderByRelevanceFieldEnum: {
    title: 'title',
    description: 'description',
    relatedStatus: 'relatedStatus',
    targetStatus: 'targetStatus',
    entityType: 'entityType',
    productionStage: 'productionStage',
    notes: 'notes'
  };

  export type TaskOrderByRelevanceFieldEnum = (typeof TaskOrderByRelevanceFieldEnum)[keyof typeof TaskOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'CompanyType'
   */
  export type EnumCompanyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanyType'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'SubscriptionPlan'
   */
  export type EnumSubscriptionPlanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionPlan'>
    


  /**
   * Reference to a field of type 'SubscriptionStatus'
   */
  export type EnumSubscriptionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionStatus'>
    


  /**
   * Reference to a field of type 'BillingCycle'
   */
  export type EnumBillingCycleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BillingCycle'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'ProductionStage'
   */
  export type EnumProductionStageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductionStage'>
    


  /**
   * Reference to a field of type 'ProductionStatus'
   */
  export type EnumProductionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductionStatus'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Department'
   */
  export type EnumDepartmentFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Department'>
    


  /**
   * Reference to a field of type 'Season'
   */
  export type EnumSeasonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Season'>
    


  /**
   * Reference to a field of type 'Gender'
   */
  export type EnumGenderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Gender'>
    


  /**
   * Reference to a field of type 'SampleType'
   */
  export type EnumSampleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SampleType'>
    


  /**
   * Reference to a field of type 'SampleStatus'
   */
  export type EnumSampleStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SampleStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'StageStatus'
   */
  export type EnumStageStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StageStatus'>
    


  /**
   * Reference to a field of type 'QualityResult'
   */
  export type EnumQualityResultFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QualityResult'>
    


  /**
   * Reference to a field of type 'WorkshopType'
   */
  export type EnumWorkshopTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WorkshopType'>
    


  /**
   * Reference to a field of type 'CertificationCategory'
   */
  export type EnumCertificationCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CertificationCategory'>
    


  /**
   * Reference to a field of type 'NotificationType'
   */
  export type EnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType'>
    


  /**
   * Reference to a field of type 'TaskStatus'
   */
  export type EnumTaskStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskStatus'>
    


  /**
   * Reference to a field of type 'TaskPriority'
   */
  export type EnumTaskPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskPriority'>
    


  /**
   * Reference to a field of type 'TaskType'
   */
  export type EnumTaskTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskType'>
    
  /**
   * Deep Input Types
   */


  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: IntFilter<"Company"> | number
    name?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    location?: StringNullableFilter<"Company"> | string | null
    website?: StringNullableFilter<"Company"> | string | null
    type?: EnumCompanyTypeFilter<"Company"> | $Enums.CompanyType
    description?: StringNullableFilter<"Company"> | string | null
    ownerId?: IntNullableFilter<"Company"> | number | null
    isActive?: BoolFilter<"Company"> | boolean
    settings?: JsonNullableFilter<"Company">
    logo?: StringNullableFilter<"Company"> | string | null
    coverImage?: StringNullableFilter<"Company"> | string | null
    brandColors?: JsonNullableFilter<"Company">
    socialLinks?: JsonNullableFilter<"Company">
    isPublicProfile?: BoolFilter<"Company"> | boolean
    profileSlug?: StringNullableFilter<"Company"> | string | null
    subscriptionPlan?: EnumSubscriptionPlanFilter<"Company"> | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFilter<"Company"> | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFilter<"Company"> | $Enums.BillingCycle
    maxUsers?: IntFilter<"Company"> | number
    maxSamples?: IntFilter<"Company"> | number
    maxOrders?: IntFilter<"Company"> | number
    maxCollections?: IntFilter<"Company"> | number
    maxStorageGB?: FloatFilter<"Company"> | number
    currentUsers?: IntFilter<"Company"> | number
    currentSamples?: IntFilter<"Company"> | number
    currentOrders?: IntFilter<"Company"> | number
    currentCollections?: IntFilter<"Company"> | number
    currentStorageGB?: FloatFilter<"Company"> | number
    trialStartedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    trialEndsAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    billingEmail?: StringNullableFilter<"Company"> | string | null
    taxId?: StringNullableFilter<"Company"> | string | null
    billingAddress?: StringNullableFilter<"Company"> | string | null
    subscriptionStartedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    currentPeriodStart?: DateTimeNullableFilter<"Company"> | Date | string | null
    currentPeriodEnd?: DateTimeNullableFilter<"Company"> | Date | string | null
    cancelAtPeriodEnd?: BoolFilter<"Company"> | boolean
    cancelledAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    defaultView?: StringNullableFilter<"Company"> | string | null
    enabledModules?: JsonNullableFilter<"Company">
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    owner?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    employees?: UserListRelationFilter
    categories?: CategoryListRelationFilter
    collections?: CollectionListRelationFilter
    samples?: SampleListRelationFilter
    orders?: OrderListRelationFilter
    productionTracking?: ProductionTrackingListRelationFilter
    messages?: MessageListRelationFilter
    colors?: ColorListRelationFilter
    fabrics?: FabricListRelationFilter
    sizeGroups?: SizeGroupListRelationFilter
    seasons?: SeasonItemListRelationFilter
    fits?: FitItemListRelationFilter
    certifications?: CertificationListRelationFilter
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    ownerId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    settings?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    coverImage?: SortOrderInput | SortOrder
    brandColors?: SortOrderInput | SortOrder
    socialLinks?: SortOrderInput | SortOrder
    isPublicProfile?: SortOrder
    profileSlug?: SortOrderInput | SortOrder
    subscriptionPlan?: SortOrder
    subscriptionStatus?: SortOrder
    billingCycle?: SortOrder
    maxUsers?: SortOrder
    maxSamples?: SortOrder
    maxOrders?: SortOrder
    maxCollections?: SortOrder
    maxStorageGB?: SortOrder
    currentUsers?: SortOrder
    currentSamples?: SortOrder
    currentOrders?: SortOrder
    currentCollections?: SortOrder
    currentStorageGB?: SortOrder
    trialStartedAt?: SortOrderInput | SortOrder
    trialEndsAt?: SortOrderInput | SortOrder
    billingEmail?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    subscriptionStartedAt?: SortOrderInput | SortOrder
    currentPeriodStart?: SortOrderInput | SortOrder
    currentPeriodEnd?: SortOrderInput | SortOrder
    cancelAtPeriodEnd?: SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    defaultView?: SortOrderInput | SortOrder
    enabledModules?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    owner?: UserOrderByWithRelationInput
    employees?: UserOrderByRelationAggregateInput
    categories?: CategoryOrderByRelationAggregateInput
    collections?: CollectionOrderByRelationAggregateInput
    samples?: SampleOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    productionTracking?: ProductionTrackingOrderByRelationAggregateInput
    messages?: MessageOrderByRelationAggregateInput
    colors?: ColorOrderByRelationAggregateInput
    fabrics?: FabricOrderByRelationAggregateInput
    sizeGroups?: SizeGroupOrderByRelationAggregateInput
    seasons?: SeasonItemOrderByRelationAggregateInput
    fits?: FitItemOrderByRelationAggregateInput
    certifications?: CertificationOrderByRelationAggregateInput
    _relevance?: CompanyOrderByRelevanceInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    ownerId?: number
    profileSlug?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    name?: StringFilter<"Company"> | string
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    location?: StringNullableFilter<"Company"> | string | null
    website?: StringNullableFilter<"Company"> | string | null
    type?: EnumCompanyTypeFilter<"Company"> | $Enums.CompanyType
    description?: StringNullableFilter<"Company"> | string | null
    isActive?: BoolFilter<"Company"> | boolean
    settings?: JsonNullableFilter<"Company">
    logo?: StringNullableFilter<"Company"> | string | null
    coverImage?: StringNullableFilter<"Company"> | string | null
    brandColors?: JsonNullableFilter<"Company">
    socialLinks?: JsonNullableFilter<"Company">
    isPublicProfile?: BoolFilter<"Company"> | boolean
    subscriptionPlan?: EnumSubscriptionPlanFilter<"Company"> | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFilter<"Company"> | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFilter<"Company"> | $Enums.BillingCycle
    maxUsers?: IntFilter<"Company"> | number
    maxSamples?: IntFilter<"Company"> | number
    maxOrders?: IntFilter<"Company"> | number
    maxCollections?: IntFilter<"Company"> | number
    maxStorageGB?: FloatFilter<"Company"> | number
    currentUsers?: IntFilter<"Company"> | number
    currentSamples?: IntFilter<"Company"> | number
    currentOrders?: IntFilter<"Company"> | number
    currentCollections?: IntFilter<"Company"> | number
    currentStorageGB?: FloatFilter<"Company"> | number
    trialStartedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    trialEndsAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    billingEmail?: StringNullableFilter<"Company"> | string | null
    taxId?: StringNullableFilter<"Company"> | string | null
    billingAddress?: StringNullableFilter<"Company"> | string | null
    subscriptionStartedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    currentPeriodStart?: DateTimeNullableFilter<"Company"> | Date | string | null
    currentPeriodEnd?: DateTimeNullableFilter<"Company"> | Date | string | null
    cancelAtPeriodEnd?: BoolFilter<"Company"> | boolean
    cancelledAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    defaultView?: StringNullableFilter<"Company"> | string | null
    enabledModules?: JsonNullableFilter<"Company">
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    owner?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    employees?: UserListRelationFilter
    categories?: CategoryListRelationFilter
    collections?: CollectionListRelationFilter
    samples?: SampleListRelationFilter
    orders?: OrderListRelationFilter
    productionTracking?: ProductionTrackingListRelationFilter
    messages?: MessageListRelationFilter
    colors?: ColorListRelationFilter
    fabrics?: FabricListRelationFilter
    sizeGroups?: SizeGroupListRelationFilter
    seasons?: SeasonItemListRelationFilter
    fits?: FitItemListRelationFilter
    certifications?: CertificationListRelationFilter
  }, "id" | "email" | "ownerId" | "profileSlug">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    ownerId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    settings?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    coverImage?: SortOrderInput | SortOrder
    brandColors?: SortOrderInput | SortOrder
    socialLinks?: SortOrderInput | SortOrder
    isPublicProfile?: SortOrder
    profileSlug?: SortOrderInput | SortOrder
    subscriptionPlan?: SortOrder
    subscriptionStatus?: SortOrder
    billingCycle?: SortOrder
    maxUsers?: SortOrder
    maxSamples?: SortOrder
    maxOrders?: SortOrder
    maxCollections?: SortOrder
    maxStorageGB?: SortOrder
    currentUsers?: SortOrder
    currentSamples?: SortOrder
    currentOrders?: SortOrder
    currentCollections?: SortOrder
    currentStorageGB?: SortOrder
    trialStartedAt?: SortOrderInput | SortOrder
    trialEndsAt?: SortOrderInput | SortOrder
    billingEmail?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    subscriptionStartedAt?: SortOrderInput | SortOrder
    currentPeriodStart?: SortOrderInput | SortOrder
    currentPeriodEnd?: SortOrderInput | SortOrder
    cancelAtPeriodEnd?: SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    defaultView?: SortOrderInput | SortOrder
    enabledModules?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Company"> | number
    name?: StringWithAggregatesFilter<"Company"> | string
    email?: StringWithAggregatesFilter<"Company"> | string
    phone?: StringNullableWithAggregatesFilter<"Company"> | string | null
    address?: StringNullableWithAggregatesFilter<"Company"> | string | null
    location?: StringNullableWithAggregatesFilter<"Company"> | string | null
    website?: StringNullableWithAggregatesFilter<"Company"> | string | null
    type?: EnumCompanyTypeWithAggregatesFilter<"Company"> | $Enums.CompanyType
    description?: StringNullableWithAggregatesFilter<"Company"> | string | null
    ownerId?: IntNullableWithAggregatesFilter<"Company"> | number | null
    isActive?: BoolWithAggregatesFilter<"Company"> | boolean
    settings?: JsonNullableWithAggregatesFilter<"Company">
    logo?: StringNullableWithAggregatesFilter<"Company"> | string | null
    coverImage?: StringNullableWithAggregatesFilter<"Company"> | string | null
    brandColors?: JsonNullableWithAggregatesFilter<"Company">
    socialLinks?: JsonNullableWithAggregatesFilter<"Company">
    isPublicProfile?: BoolWithAggregatesFilter<"Company"> | boolean
    profileSlug?: StringNullableWithAggregatesFilter<"Company"> | string | null
    subscriptionPlan?: EnumSubscriptionPlanWithAggregatesFilter<"Company"> | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusWithAggregatesFilter<"Company"> | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleWithAggregatesFilter<"Company"> | $Enums.BillingCycle
    maxUsers?: IntWithAggregatesFilter<"Company"> | number
    maxSamples?: IntWithAggregatesFilter<"Company"> | number
    maxOrders?: IntWithAggregatesFilter<"Company"> | number
    maxCollections?: IntWithAggregatesFilter<"Company"> | number
    maxStorageGB?: FloatWithAggregatesFilter<"Company"> | number
    currentUsers?: IntWithAggregatesFilter<"Company"> | number
    currentSamples?: IntWithAggregatesFilter<"Company"> | number
    currentOrders?: IntWithAggregatesFilter<"Company"> | number
    currentCollections?: IntWithAggregatesFilter<"Company"> | number
    currentStorageGB?: FloatWithAggregatesFilter<"Company"> | number
    trialStartedAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    trialEndsAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    billingEmail?: StringNullableWithAggregatesFilter<"Company"> | string | null
    taxId?: StringNullableWithAggregatesFilter<"Company"> | string | null
    billingAddress?: StringNullableWithAggregatesFilter<"Company"> | string | null
    subscriptionStartedAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    currentPeriodStart?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    currentPeriodEnd?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    cancelAtPeriodEnd?: BoolWithAggregatesFilter<"Company"> | boolean
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    defaultView?: StringNullableWithAggregatesFilter<"Company"> | string | null
    enabledModules?: JsonNullableWithAggregatesFilter<"Company">
    createdAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: IntFilter<"Message"> | number
    content?: StringFilter<"Message"> | string
    senderId?: IntFilter<"Message"> | number
    receiverId?: IntNullableFilter<"Message"> | number | null
    isRead?: BoolFilter<"Message"> | boolean
    type?: StringFilter<"Message"> | string
    orderId?: IntNullableFilter<"Message"> | number | null
    sampleId?: IntNullableFilter<"Message"> | number | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    companyId?: IntNullableFilter<"Message"> | number | null
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    receiver?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrderInput | SortOrder
    isRead?: SortOrder
    type?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrderInput | SortOrder
    sender?: UserOrderByWithRelationInput
    receiver?: UserOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
    sample?: SampleOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    _relevance?: MessageOrderByRelevanceInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    content?: StringFilter<"Message"> | string
    senderId?: IntFilter<"Message"> | number
    receiverId?: IntNullableFilter<"Message"> | number | null
    isRead?: BoolFilter<"Message"> | boolean
    type?: StringFilter<"Message"> | string
    orderId?: IntNullableFilter<"Message"> | number | null
    sampleId?: IntNullableFilter<"Message"> | number | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    companyId?: IntNullableFilter<"Message"> | number | null
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    receiver?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrderInput | SortOrder
    isRead?: SortOrder
    type?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrderInput | SortOrder
    _count?: MessageCountOrderByAggregateInput
    _avg?: MessageAvgOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
    _sum?: MessageSumOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Message"> | number
    content?: StringWithAggregatesFilter<"Message"> | string
    senderId?: IntWithAggregatesFilter<"Message"> | number
    receiverId?: IntNullableWithAggregatesFilter<"Message"> | number | null
    isRead?: BoolWithAggregatesFilter<"Message"> | boolean
    type?: StringWithAggregatesFilter<"Message"> | string
    orderId?: IntNullableWithAggregatesFilter<"Message"> | number | null
    sampleId?: IntNullableWithAggregatesFilter<"Message"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    companyId?: IntNullableWithAggregatesFilter<"Message"> | number | null
  }

  export type ProductionTrackingWhereInput = {
    AND?: ProductionTrackingWhereInput | ProductionTrackingWhereInput[]
    OR?: ProductionTrackingWhereInput[]
    NOT?: ProductionTrackingWhereInput | ProductionTrackingWhereInput[]
    id?: IntFilter<"ProductionTracking"> | number
    orderId?: IntNullableFilter<"ProductionTracking"> | number | null
    sampleId?: IntNullableFilter<"ProductionTracking"> | number | null
    currentStage?: EnumProductionStageFilter<"ProductionTracking"> | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFilter<"ProductionTracking"> | $Enums.ProductionStatus
    progress?: IntFilter<"ProductionTracking"> | number
    estimatedStartDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    estimatedEndDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    notes?: StringNullableFilter<"ProductionTracking"> | string | null
    createdAt?: DateTimeFilter<"ProductionTracking"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionTracking"> | Date | string
    companyId?: IntNullableFilter<"ProductionTracking"> | number | null
    sewingWorkshopId?: IntNullableFilter<"ProductionTracking"> | number | null
    packagingWorkshopId?: IntNullableFilter<"ProductionTracking"> | number | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    sewingWorkshop?: XOR<WorkshopNullableScalarRelationFilter, WorkshopWhereInput> | null
    packagingWorkshop?: XOR<WorkshopNullableScalarRelationFilter, WorkshopWhereInput> | null
    stageUpdates?: ProductionStageUpdateListRelationFilter
    qualityControls?: QualityControlListRelationFilter
    productionRevisions?: ProductionRevisionListRelationFilter
    revisions?: RevisionListRelationFilter
    tasks?: TaskListRelationFilter
    notifications?: NotificationListRelationFilter
  }

  export type ProductionTrackingOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    currentStage?: SortOrder
    overallStatus?: SortOrder
    progress?: SortOrder
    estimatedStartDate?: SortOrderInput | SortOrder
    estimatedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrderInput | SortOrder
    sewingWorkshopId?: SortOrderInput | SortOrder
    packagingWorkshopId?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
    sample?: SampleOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    sewingWorkshop?: WorkshopOrderByWithRelationInput
    packagingWorkshop?: WorkshopOrderByWithRelationInput
    stageUpdates?: ProductionStageUpdateOrderByRelationAggregateInput
    qualityControls?: QualityControlOrderByRelationAggregateInput
    productionRevisions?: ProductionRevisionOrderByRelationAggregateInput
    revisions?: RevisionOrderByRelationAggregateInput
    tasks?: TaskOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    _relevance?: ProductionTrackingOrderByRelevanceInput
  }

  export type ProductionTrackingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductionTrackingWhereInput | ProductionTrackingWhereInput[]
    OR?: ProductionTrackingWhereInput[]
    NOT?: ProductionTrackingWhereInput | ProductionTrackingWhereInput[]
    orderId?: IntNullableFilter<"ProductionTracking"> | number | null
    sampleId?: IntNullableFilter<"ProductionTracking"> | number | null
    currentStage?: EnumProductionStageFilter<"ProductionTracking"> | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFilter<"ProductionTracking"> | $Enums.ProductionStatus
    progress?: IntFilter<"ProductionTracking"> | number
    estimatedStartDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    estimatedEndDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    notes?: StringNullableFilter<"ProductionTracking"> | string | null
    createdAt?: DateTimeFilter<"ProductionTracking"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionTracking"> | Date | string
    companyId?: IntNullableFilter<"ProductionTracking"> | number | null
    sewingWorkshopId?: IntNullableFilter<"ProductionTracking"> | number | null
    packagingWorkshopId?: IntNullableFilter<"ProductionTracking"> | number | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    sewingWorkshop?: XOR<WorkshopNullableScalarRelationFilter, WorkshopWhereInput> | null
    packagingWorkshop?: XOR<WorkshopNullableScalarRelationFilter, WorkshopWhereInput> | null
    stageUpdates?: ProductionStageUpdateListRelationFilter
    qualityControls?: QualityControlListRelationFilter
    productionRevisions?: ProductionRevisionListRelationFilter
    revisions?: RevisionListRelationFilter
    tasks?: TaskListRelationFilter
    notifications?: NotificationListRelationFilter
  }, "id">

  export type ProductionTrackingOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    currentStage?: SortOrder
    overallStatus?: SortOrder
    progress?: SortOrder
    estimatedStartDate?: SortOrderInput | SortOrder
    estimatedEndDate?: SortOrderInput | SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrderInput | SortOrder
    sewingWorkshopId?: SortOrderInput | SortOrder
    packagingWorkshopId?: SortOrderInput | SortOrder
    _count?: ProductionTrackingCountOrderByAggregateInput
    _avg?: ProductionTrackingAvgOrderByAggregateInput
    _max?: ProductionTrackingMaxOrderByAggregateInput
    _min?: ProductionTrackingMinOrderByAggregateInput
    _sum?: ProductionTrackingSumOrderByAggregateInput
  }

  export type ProductionTrackingScalarWhereWithAggregatesInput = {
    AND?: ProductionTrackingScalarWhereWithAggregatesInput | ProductionTrackingScalarWhereWithAggregatesInput[]
    OR?: ProductionTrackingScalarWhereWithAggregatesInput[]
    NOT?: ProductionTrackingScalarWhereWithAggregatesInput | ProductionTrackingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductionTracking"> | number
    orderId?: IntNullableWithAggregatesFilter<"ProductionTracking"> | number | null
    sampleId?: IntNullableWithAggregatesFilter<"ProductionTracking"> | number | null
    currentStage?: EnumProductionStageWithAggregatesFilter<"ProductionTracking"> | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusWithAggregatesFilter<"ProductionTracking"> | $Enums.ProductionStatus
    progress?: IntWithAggregatesFilter<"ProductionTracking"> | number
    estimatedStartDate?: DateTimeNullableWithAggregatesFilter<"ProductionTracking"> | Date | string | null
    estimatedEndDate?: DateTimeNullableWithAggregatesFilter<"ProductionTracking"> | Date | string | null
    actualStartDate?: DateTimeNullableWithAggregatesFilter<"ProductionTracking"> | Date | string | null
    actualEndDate?: DateTimeNullableWithAggregatesFilter<"ProductionTracking"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"ProductionTracking"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ProductionTracking"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductionTracking"> | Date | string
    companyId?: IntNullableWithAggregatesFilter<"ProductionTracking"> | number | null
    sewingWorkshopId?: IntNullableWithAggregatesFilter<"ProductionTracking"> | number | null
    packagingWorkshopId?: IntNullableWithAggregatesFilter<"ProductionTracking"> | number | null
  }

  export type RevisionWhereInput = {
    AND?: RevisionWhereInput | RevisionWhereInput[]
    OR?: RevisionWhereInput[]
    NOT?: RevisionWhereInput | RevisionWhereInput[]
    id?: IntFilter<"Revision"> | number
    orderId?: IntNullableFilter<"Revision"> | number | null
    sampleId?: IntNullableFilter<"Revision"> | number | null
    productionTrackingId?: IntNullableFilter<"Revision"> | number | null
    revisionNumber?: IntFilter<"Revision"> | number
    requestMessage?: StringNullableFilter<"Revision"> | string | null
    responseMessage?: StringNullableFilter<"Revision"> | string | null
    status?: StringFilter<"Revision"> | string
    requestedAt?: DateTimeFilter<"Revision"> | Date | string
    completedAt?: DateTimeNullableFilter<"Revision"> | Date | string | null
    createdAt?: DateTimeFilter<"Revision"> | Date | string
    updatedAt?: DateTimeFilter<"Revision"> | Date | string
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    productionTracking?: XOR<ProductionTrackingNullableScalarRelationFilter, ProductionTrackingWhereInput> | null
  }

  export type RevisionOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    productionTrackingId?: SortOrderInput | SortOrder
    revisionNumber?: SortOrder
    requestMessage?: SortOrderInput | SortOrder
    responseMessage?: SortOrderInput | SortOrder
    status?: SortOrder
    requestedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    sample?: SampleOrderByWithRelationInput
    productionTracking?: ProductionTrackingOrderByWithRelationInput
    _relevance?: RevisionOrderByRelevanceInput
  }

  export type RevisionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RevisionWhereInput | RevisionWhereInput[]
    OR?: RevisionWhereInput[]
    NOT?: RevisionWhereInput | RevisionWhereInput[]
    orderId?: IntNullableFilter<"Revision"> | number | null
    sampleId?: IntNullableFilter<"Revision"> | number | null
    productionTrackingId?: IntNullableFilter<"Revision"> | number | null
    revisionNumber?: IntFilter<"Revision"> | number
    requestMessage?: StringNullableFilter<"Revision"> | string | null
    responseMessage?: StringNullableFilter<"Revision"> | string | null
    status?: StringFilter<"Revision"> | string
    requestedAt?: DateTimeFilter<"Revision"> | Date | string
    completedAt?: DateTimeNullableFilter<"Revision"> | Date | string | null
    createdAt?: DateTimeFilter<"Revision"> | Date | string
    updatedAt?: DateTimeFilter<"Revision"> | Date | string
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    productionTracking?: XOR<ProductionTrackingNullableScalarRelationFilter, ProductionTrackingWhereInput> | null
  }, "id">

  export type RevisionOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    productionTrackingId?: SortOrderInput | SortOrder
    revisionNumber?: SortOrder
    requestMessage?: SortOrderInput | SortOrder
    responseMessage?: SortOrderInput | SortOrder
    status?: SortOrder
    requestedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RevisionCountOrderByAggregateInput
    _avg?: RevisionAvgOrderByAggregateInput
    _max?: RevisionMaxOrderByAggregateInput
    _min?: RevisionMinOrderByAggregateInput
    _sum?: RevisionSumOrderByAggregateInput
  }

  export type RevisionScalarWhereWithAggregatesInput = {
    AND?: RevisionScalarWhereWithAggregatesInput | RevisionScalarWhereWithAggregatesInput[]
    OR?: RevisionScalarWhereWithAggregatesInput[]
    NOT?: RevisionScalarWhereWithAggregatesInput | RevisionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Revision"> | number
    orderId?: IntNullableWithAggregatesFilter<"Revision"> | number | null
    sampleId?: IntNullableWithAggregatesFilter<"Revision"> | number | null
    productionTrackingId?: IntNullableWithAggregatesFilter<"Revision"> | number | null
    revisionNumber?: IntWithAggregatesFilter<"Revision"> | number
    requestMessage?: StringNullableWithAggregatesFilter<"Revision"> | string | null
    responseMessage?: StringNullableWithAggregatesFilter<"Revision"> | string | null
    status?: StringWithAggregatesFilter<"Revision"> | string
    requestedAt?: DateTimeWithAggregatesFilter<"Revision"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"Revision"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Revision"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Revision"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    username?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    companyId?: IntNullableFilter<"User"> | number | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    isCompanyOwner?: BoolFilter<"User"> | boolean
    department?: EnumDepartmentNullableFilter<"User"> | $Enums.Department | null
    jobTitle?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    socialLinks?: JsonNullableFilter<"User">
    emailNotifications?: BoolFilter<"User"> | boolean
    pushNotifications?: BoolFilter<"User"> | boolean
    language?: StringFilter<"User"> | string
    timezone?: StringFilter<"User"> | string
    permissions?: JsonNullableFilter<"User">
    isActive?: BoolFilter<"User"> | boolean
    isPendingApproval?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    ownedCompanies?: CompanyListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    categories?: CategoryListRelationFilter
    collections?: CollectionListRelationFilter
    customerSamples?: SampleListRelationFilter
    customerOrders?: OrderListRelationFilter
    customerQuestions?: QuestionListRelationFilter
    customerReviews?: ReviewListRelationFilter
    manufactureSamples?: SampleListRelationFilter
    manufactureOrders?: OrderListRelationFilter
    manufactureQuestions?: QuestionListRelationFilter
    sampleProductionUpdates?: SampleProductionListRelationFilter
    orderProductionUpdates?: OrderProductionListRelationFilter
    qualityInspections?: QualityControlListRelationFilter
    ownedWorkshops?: WorkshopListRelationFilter
    revisionRequests?: ProductionRevisionListRelationFilter
    favoriteCollections?: UserFavoriteCollectionListRelationFilter
    notifications?: NotificationListRelationFilter
    tasks?: TaskListRelationFilter
    assignedTasks?: TaskListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    role?: SortOrder
    isCompanyOwner?: SortOrder
    department?: SortOrderInput | SortOrder
    jobTitle?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    socialLinks?: SortOrderInput | SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    permissions?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isPendingApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    ownedCompanies?: CompanyOrderByRelationAggregateInput
    sentMessages?: MessageOrderByRelationAggregateInput
    receivedMessages?: MessageOrderByRelationAggregateInput
    categories?: CategoryOrderByRelationAggregateInput
    collections?: CollectionOrderByRelationAggregateInput
    customerSamples?: SampleOrderByRelationAggregateInput
    customerOrders?: OrderOrderByRelationAggregateInput
    customerQuestions?: QuestionOrderByRelationAggregateInput
    customerReviews?: ReviewOrderByRelationAggregateInput
    manufactureSamples?: SampleOrderByRelationAggregateInput
    manufactureOrders?: OrderOrderByRelationAggregateInput
    manufactureQuestions?: QuestionOrderByRelationAggregateInput
    sampleProductionUpdates?: SampleProductionOrderByRelationAggregateInput
    orderProductionUpdates?: OrderProductionOrderByRelationAggregateInput
    qualityInspections?: QualityControlOrderByRelationAggregateInput
    ownedWorkshops?: WorkshopOrderByRelationAggregateInput
    revisionRequests?: ProductionRevisionOrderByRelationAggregateInput
    favoriteCollections?: UserFavoriteCollectionOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    tasks?: TaskOrderByRelationAggregateInput
    assignedTasks?: TaskOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    companyId?: IntNullableFilter<"User"> | number | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    isCompanyOwner?: BoolFilter<"User"> | boolean
    department?: EnumDepartmentNullableFilter<"User"> | $Enums.Department | null
    jobTitle?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    socialLinks?: JsonNullableFilter<"User">
    emailNotifications?: BoolFilter<"User"> | boolean
    pushNotifications?: BoolFilter<"User"> | boolean
    language?: StringFilter<"User"> | string
    timezone?: StringFilter<"User"> | string
    permissions?: JsonNullableFilter<"User">
    isActive?: BoolFilter<"User"> | boolean
    isPendingApproval?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    ownedCompanies?: CompanyListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    categories?: CategoryListRelationFilter
    collections?: CollectionListRelationFilter
    customerSamples?: SampleListRelationFilter
    customerOrders?: OrderListRelationFilter
    customerQuestions?: QuestionListRelationFilter
    customerReviews?: ReviewListRelationFilter
    manufactureSamples?: SampleListRelationFilter
    manufactureOrders?: OrderListRelationFilter
    manufactureQuestions?: QuestionListRelationFilter
    sampleProductionUpdates?: SampleProductionListRelationFilter
    orderProductionUpdates?: OrderProductionListRelationFilter
    qualityInspections?: QualityControlListRelationFilter
    ownedWorkshops?: WorkshopListRelationFilter
    revisionRequests?: ProductionRevisionListRelationFilter
    favoriteCollections?: UserFavoriteCollectionListRelationFilter
    notifications?: NotificationListRelationFilter
    tasks?: TaskListRelationFilter
    assignedTasks?: TaskListRelationFilter
  }, "id" | "email" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    role?: SortOrder
    isCompanyOwner?: SortOrder
    department?: SortOrderInput | SortOrder
    jobTitle?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    socialLinks?: SortOrderInput | SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    permissions?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isPendingApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    username?: StringNullableWithAggregatesFilter<"User"> | string | null
    firstName?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    companyId?: IntNullableWithAggregatesFilter<"User"> | number | null
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    isCompanyOwner?: BoolWithAggregatesFilter<"User"> | boolean
    department?: EnumDepartmentNullableWithAggregatesFilter<"User"> | $Enums.Department | null
    jobTitle?: StringNullableWithAggregatesFilter<"User"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    bio?: StringNullableWithAggregatesFilter<"User"> | string | null
    socialLinks?: JsonNullableWithAggregatesFilter<"User">
    emailNotifications?: BoolWithAggregatesFilter<"User"> | boolean
    pushNotifications?: BoolWithAggregatesFilter<"User"> | boolean
    language?: StringWithAggregatesFilter<"User"> | string
    timezone?: StringWithAggregatesFilter<"User"> | string
    permissions?: JsonNullableWithAggregatesFilter<"User">
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    isPendingApproval?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: IntFilter<"Category"> | number
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    authorId?: IntNullableFilter<"Category"> | number | null
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    companyId?: IntNullableFilter<"Category"> | number | null
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    collections?: CollectionListRelationFilter
    subCategories?: CategoryListRelationFilter
    parentCategory?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    authorId?: SortOrderInput | SortOrder
    parentCategoryId?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    author?: UserOrderByWithRelationInput
    collections?: CollectionOrderByRelationAggregateInput
    subCategories?: CategoryOrderByRelationAggregateInput
    parentCategory?: CategoryOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    _relevance?: CategoryOrderByRelevanceInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    companyId_parentCategoryId_name?: CategoryCompanyIdParentCategoryIdNameCompoundUniqueInput
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    authorId?: IntNullableFilter<"Category"> | number | null
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    companyId?: IntNullableFilter<"Category"> | number | null
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    collections?: CollectionListRelationFilter
    subCategories?: CategoryListRelationFilter
    parentCategory?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
  }, "id" | "companyId_parentCategoryId_name">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    authorId?: SortOrderInput | SortOrder
    parentCategoryId?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Category"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    name?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    authorId?: IntNullableWithAggregatesFilter<"Category"> | number | null
    parentCategoryId?: IntNullableWithAggregatesFilter<"Category"> | number | null
    companyId?: IntNullableWithAggregatesFilter<"Category"> | number | null
  }

  export type CollectionWhereInput = {
    AND?: CollectionWhereInput | CollectionWhereInput[]
    OR?: CollectionWhereInput[]
    NOT?: CollectionWhereInput | CollectionWhereInput[]
    id?: IntFilter<"Collection"> | number
    createdAt?: DateTimeFilter<"Collection"> | Date | string
    updatedAt?: DateTimeFilter<"Collection"> | Date | string
    name?: StringFilter<"Collection"> | string
    description?: StringNullableFilter<"Collection"> | string | null
    modelCode?: StringFilter<"Collection"> | string
    season?: EnumSeasonNullableFilter<"Collection"> | $Enums.Season | null
    gender?: EnumGenderNullableFilter<"Collection"> | $Enums.Gender | null
    fit?: StringNullableFilter<"Collection"> | string | null
    trend?: StringNullableFilter<"Collection"> | string | null
    colors?: StringNullableFilter<"Collection"> | string | null
    sizeGroups?: StringNullableFilter<"Collection"> | string | null
    sizeRange?: StringNullableFilter<"Collection"> | string | null
    measurementChart?: StringNullableFilter<"Collection"> | string | null
    fabricComposition?: StringNullableFilter<"Collection"> | string | null
    accessories?: StringNullableFilter<"Collection"> | string | null
    images?: StringNullableFilter<"Collection"> | string | null
    techPack?: StringNullableFilter<"Collection"> | string | null
    moq?: IntNullableFilter<"Collection"> | number | null
    targetPrice?: FloatNullableFilter<"Collection"> | number | null
    targetLeadTime?: IntNullableFilter<"Collection"> | number | null
    notes?: StringNullableFilter<"Collection"> | string | null
    likesCount?: IntFilter<"Collection"> | number
    viewCount?: IntFilter<"Collection"> | number
    shareCount?: IntFilter<"Collection"> | number
    lastViewedAt?: DateTimeNullableFilter<"Collection"> | Date | string | null
    price?: FloatFilter<"Collection"> | number
    sku?: StringNullableFilter<"Collection"> | string | null
    stock?: IntFilter<"Collection"> | number
    isActive?: BoolFilter<"Collection"> | boolean
    isFeatured?: BoolFilter<"Collection"> | boolean
    slug?: StringNullableFilter<"Collection"> | string | null
    productionSchedule?: JsonNullableFilter<"Collection">
    categoryId?: IntNullableFilter<"Collection"> | number | null
    authorId?: IntNullableFilter<"Collection"> | number | null
    companyId?: IntNullableFilter<"Collection"> | number | null
    certifications?: CertificationListRelationFilter
    favoritedBy?: UserFavoriteCollectionListRelationFilter
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    samples?: SampleListRelationFilter
    revisedSamples?: SampleListRelationFilter
    orders?: OrderListRelationFilter
    questions?: QuestionListRelationFilter
    reviews?: ReviewListRelationFilter
    tasks?: TaskListRelationFilter
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
  }

  export type CollectionOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    modelCode?: SortOrder
    season?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    fit?: SortOrderInput | SortOrder
    trend?: SortOrderInput | SortOrder
    colors?: SortOrderInput | SortOrder
    sizeGroups?: SortOrderInput | SortOrder
    sizeRange?: SortOrderInput | SortOrder
    measurementChart?: SortOrderInput | SortOrder
    fabricComposition?: SortOrderInput | SortOrder
    accessories?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    techPack?: SortOrderInput | SortOrder
    moq?: SortOrderInput | SortOrder
    targetPrice?: SortOrderInput | SortOrder
    targetLeadTime?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    likesCount?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrderInput | SortOrder
    price?: SortOrder
    sku?: SortOrderInput | SortOrder
    stock?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    slug?: SortOrderInput | SortOrder
    productionSchedule?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    authorId?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    certifications?: CertificationOrderByRelationAggregateInput
    favoritedBy?: UserFavoriteCollectionOrderByRelationAggregateInput
    category?: CategoryOrderByWithRelationInput
    author?: UserOrderByWithRelationInput
    samples?: SampleOrderByRelationAggregateInput
    revisedSamples?: SampleOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    questions?: QuestionOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
    tasks?: TaskOrderByRelationAggregateInput
    company?: CompanyOrderByWithRelationInput
    _relevance?: CollectionOrderByRelevanceInput
  }

  export type CollectionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    modelCode?: string
    sku?: string
    slug?: string
    AND?: CollectionWhereInput | CollectionWhereInput[]
    OR?: CollectionWhereInput[]
    NOT?: CollectionWhereInput | CollectionWhereInput[]
    createdAt?: DateTimeFilter<"Collection"> | Date | string
    updatedAt?: DateTimeFilter<"Collection"> | Date | string
    name?: StringFilter<"Collection"> | string
    description?: StringNullableFilter<"Collection"> | string | null
    season?: EnumSeasonNullableFilter<"Collection"> | $Enums.Season | null
    gender?: EnumGenderNullableFilter<"Collection"> | $Enums.Gender | null
    fit?: StringNullableFilter<"Collection"> | string | null
    trend?: StringNullableFilter<"Collection"> | string | null
    colors?: StringNullableFilter<"Collection"> | string | null
    sizeGroups?: StringNullableFilter<"Collection"> | string | null
    sizeRange?: StringNullableFilter<"Collection"> | string | null
    measurementChart?: StringNullableFilter<"Collection"> | string | null
    fabricComposition?: StringNullableFilter<"Collection"> | string | null
    accessories?: StringNullableFilter<"Collection"> | string | null
    images?: StringNullableFilter<"Collection"> | string | null
    techPack?: StringNullableFilter<"Collection"> | string | null
    moq?: IntNullableFilter<"Collection"> | number | null
    targetPrice?: FloatNullableFilter<"Collection"> | number | null
    targetLeadTime?: IntNullableFilter<"Collection"> | number | null
    notes?: StringNullableFilter<"Collection"> | string | null
    likesCount?: IntFilter<"Collection"> | number
    viewCount?: IntFilter<"Collection"> | number
    shareCount?: IntFilter<"Collection"> | number
    lastViewedAt?: DateTimeNullableFilter<"Collection"> | Date | string | null
    price?: FloatFilter<"Collection"> | number
    stock?: IntFilter<"Collection"> | number
    isActive?: BoolFilter<"Collection"> | boolean
    isFeatured?: BoolFilter<"Collection"> | boolean
    productionSchedule?: JsonNullableFilter<"Collection">
    categoryId?: IntNullableFilter<"Collection"> | number | null
    authorId?: IntNullableFilter<"Collection"> | number | null
    companyId?: IntNullableFilter<"Collection"> | number | null
    certifications?: CertificationListRelationFilter
    favoritedBy?: UserFavoriteCollectionListRelationFilter
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    samples?: SampleListRelationFilter
    revisedSamples?: SampleListRelationFilter
    orders?: OrderListRelationFilter
    questions?: QuestionListRelationFilter
    reviews?: ReviewListRelationFilter
    tasks?: TaskListRelationFilter
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
  }, "id" | "modelCode" | "sku" | "slug">

  export type CollectionOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    modelCode?: SortOrder
    season?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    fit?: SortOrderInput | SortOrder
    trend?: SortOrderInput | SortOrder
    colors?: SortOrderInput | SortOrder
    sizeGroups?: SortOrderInput | SortOrder
    sizeRange?: SortOrderInput | SortOrder
    measurementChart?: SortOrderInput | SortOrder
    fabricComposition?: SortOrderInput | SortOrder
    accessories?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    techPack?: SortOrderInput | SortOrder
    moq?: SortOrderInput | SortOrder
    targetPrice?: SortOrderInput | SortOrder
    targetLeadTime?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    likesCount?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrderInput | SortOrder
    price?: SortOrder
    sku?: SortOrderInput | SortOrder
    stock?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    slug?: SortOrderInput | SortOrder
    productionSchedule?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    authorId?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    _count?: CollectionCountOrderByAggregateInput
    _avg?: CollectionAvgOrderByAggregateInput
    _max?: CollectionMaxOrderByAggregateInput
    _min?: CollectionMinOrderByAggregateInput
    _sum?: CollectionSumOrderByAggregateInput
  }

  export type CollectionScalarWhereWithAggregatesInput = {
    AND?: CollectionScalarWhereWithAggregatesInput | CollectionScalarWhereWithAggregatesInput[]
    OR?: CollectionScalarWhereWithAggregatesInput[]
    NOT?: CollectionScalarWhereWithAggregatesInput | CollectionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Collection"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Collection"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Collection"> | Date | string
    name?: StringWithAggregatesFilter<"Collection"> | string
    description?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    modelCode?: StringWithAggregatesFilter<"Collection"> | string
    season?: EnumSeasonNullableWithAggregatesFilter<"Collection"> | $Enums.Season | null
    gender?: EnumGenderNullableWithAggregatesFilter<"Collection"> | $Enums.Gender | null
    fit?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    trend?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    colors?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    sizeGroups?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    sizeRange?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    measurementChart?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    fabricComposition?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    accessories?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    images?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    techPack?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    moq?: IntNullableWithAggregatesFilter<"Collection"> | number | null
    targetPrice?: FloatNullableWithAggregatesFilter<"Collection"> | number | null
    targetLeadTime?: IntNullableWithAggregatesFilter<"Collection"> | number | null
    notes?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    likesCount?: IntWithAggregatesFilter<"Collection"> | number
    viewCount?: IntWithAggregatesFilter<"Collection"> | number
    shareCount?: IntWithAggregatesFilter<"Collection"> | number
    lastViewedAt?: DateTimeNullableWithAggregatesFilter<"Collection"> | Date | string | null
    price?: FloatWithAggregatesFilter<"Collection"> | number
    sku?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    stock?: IntWithAggregatesFilter<"Collection"> | number
    isActive?: BoolWithAggregatesFilter<"Collection"> | boolean
    isFeatured?: BoolWithAggregatesFilter<"Collection"> | boolean
    slug?: StringNullableWithAggregatesFilter<"Collection"> | string | null
    productionSchedule?: JsonNullableWithAggregatesFilter<"Collection">
    categoryId?: IntNullableWithAggregatesFilter<"Collection"> | number | null
    authorId?: IntNullableWithAggregatesFilter<"Collection"> | number | null
    companyId?: IntNullableWithAggregatesFilter<"Collection"> | number | null
  }

  export type UserFavoriteCollectionWhereInput = {
    AND?: UserFavoriteCollectionWhereInput | UserFavoriteCollectionWhereInput[]
    OR?: UserFavoriteCollectionWhereInput[]
    NOT?: UserFavoriteCollectionWhereInput | UserFavoriteCollectionWhereInput[]
    id?: IntFilter<"UserFavoriteCollection"> | number
    createdAt?: DateTimeFilter<"UserFavoriteCollection"> | Date | string
    userId?: IntFilter<"UserFavoriteCollection"> | number
    collectionId?: IntFilter<"UserFavoriteCollection"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
  }

  export type UserFavoriteCollectionOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    collectionId?: SortOrder
    user?: UserOrderByWithRelationInput
    collection?: CollectionOrderByWithRelationInput
  }

  export type UserFavoriteCollectionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId_collectionId?: UserFavoriteCollectionUserIdCollectionIdCompoundUniqueInput
    AND?: UserFavoriteCollectionWhereInput | UserFavoriteCollectionWhereInput[]
    OR?: UserFavoriteCollectionWhereInput[]
    NOT?: UserFavoriteCollectionWhereInput | UserFavoriteCollectionWhereInput[]
    createdAt?: DateTimeFilter<"UserFavoriteCollection"> | Date | string
    userId?: IntFilter<"UserFavoriteCollection"> | number
    collectionId?: IntFilter<"UserFavoriteCollection"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
  }, "id" | "userId_collectionId">

  export type UserFavoriteCollectionOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    collectionId?: SortOrder
    _count?: UserFavoriteCollectionCountOrderByAggregateInput
    _avg?: UserFavoriteCollectionAvgOrderByAggregateInput
    _max?: UserFavoriteCollectionMaxOrderByAggregateInput
    _min?: UserFavoriteCollectionMinOrderByAggregateInput
    _sum?: UserFavoriteCollectionSumOrderByAggregateInput
  }

  export type UserFavoriteCollectionScalarWhereWithAggregatesInput = {
    AND?: UserFavoriteCollectionScalarWhereWithAggregatesInput | UserFavoriteCollectionScalarWhereWithAggregatesInput[]
    OR?: UserFavoriteCollectionScalarWhereWithAggregatesInput[]
    NOT?: UserFavoriteCollectionScalarWhereWithAggregatesInput | UserFavoriteCollectionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserFavoriteCollection"> | number
    createdAt?: DateTimeWithAggregatesFilter<"UserFavoriteCollection"> | Date | string
    userId?: IntWithAggregatesFilter<"UserFavoriteCollection"> | number
    collectionId?: IntWithAggregatesFilter<"UserFavoriteCollection"> | number
  }

  export type SampleWhereInput = {
    AND?: SampleWhereInput | SampleWhereInput[]
    OR?: SampleWhereInput[]
    NOT?: SampleWhereInput | SampleWhereInput[]
    id?: IntFilter<"Sample"> | number
    createdAt?: DateTimeFilter<"Sample"> | Date | string
    updatedAt?: DateTimeFilter<"Sample"> | Date | string
    sampleNumber?: StringFilter<"Sample"> | string
    sampleType?: EnumSampleTypeFilter<"Sample"> | $Enums.SampleType
    status?: EnumSampleStatusFilter<"Sample"> | $Enums.SampleStatus
    customerNote?: StringNullableFilter<"Sample"> | string | null
    manufacturerResponse?: StringNullableFilter<"Sample"> | string | null
    customDesignImages?: StringNullableFilter<"Sample"> | string | null
    revisionRequests?: StringNullableFilter<"Sample"> | string | null
    originalCollectionId?: IntNullableFilter<"Sample"> | number | null
    name?: StringNullableFilter<"Sample"> | string | null
    description?: StringNullableFilter<"Sample"> | string | null
    images?: StringNullableFilter<"Sample"> | string | null
    aiGenerated?: BoolNullableFilter<"Sample"> | boolean | null
    aiPrompt?: StringNullableFilter<"Sample"> | string | null
    aiSketchUrl?: StringNullableFilter<"Sample"> | string | null
    unitPrice?: FloatNullableFilter<"Sample"> | number | null
    productionDays?: IntNullableFilter<"Sample"> | number | null
    estimatedProductionDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    actualProductionDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    shippingDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"Sample"> | string | null
    cargoTrackingNumber?: StringNullableFilter<"Sample"> | string | null
    customerQuotedPrice?: FloatNullableFilter<"Sample"> | number | null
    customerQuoteDays?: IntNullableFilter<"Sample"> | number | null
    customerQuoteNote?: StringNullableFilter<"Sample"> | string | null
    customerQuoteType?: StringNullableFilter<"Sample"> | string | null
    customerQuoteSentAt?: DateTimeNullableFilter<"Sample"> | Date | string | null
    collectionId?: IntNullableFilter<"Sample"> | number | null
    customerId?: IntFilter<"Sample"> | number
    manufactureId?: IntFilter<"Sample"> | number
    companyId?: IntNullableFilter<"Sample"> | number | null
    viewCount?: IntFilter<"Sample"> | number
    shareCount?: IntFilter<"Sample"> | number
    lastViewedAt?: DateTimeNullableFilter<"Sample"> | Date | string | null
    collection?: XOR<CollectionNullableScalarRelationFilter, CollectionWhereInput> | null
    originalCollection?: XOR<CollectionNullableScalarRelationFilter, CollectionWhereInput> | null
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    manufacture?: XOR<UserScalarRelationFilter, UserWhereInput>
    productionHistory?: SampleProductionListRelationFilter
    productionTracking?: ProductionTrackingListRelationFilter
    revisions?: RevisionListRelationFilter
    messages?: MessageListRelationFilter
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    aiAnalysis?: XOR<AIAnalysisNullableScalarRelationFilter, AIAnalysisWhereInput> | null
    tasks?: TaskListRelationFilter
    notifications?: NotificationListRelationFilter
  }

  export type SampleOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sampleNumber?: SortOrder
    sampleType?: SortOrder
    status?: SortOrder
    customerNote?: SortOrderInput | SortOrder
    manufacturerResponse?: SortOrderInput | SortOrder
    customDesignImages?: SortOrderInput | SortOrder
    revisionRequests?: SortOrderInput | SortOrder
    originalCollectionId?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    aiGenerated?: SortOrderInput | SortOrder
    aiPrompt?: SortOrderInput | SortOrder
    aiSketchUrl?: SortOrderInput | SortOrder
    unitPrice?: SortOrderInput | SortOrder
    productionDays?: SortOrderInput | SortOrder
    estimatedProductionDate?: SortOrderInput | SortOrder
    actualProductionDate?: SortOrderInput | SortOrder
    shippingDate?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    cargoTrackingNumber?: SortOrderInput | SortOrder
    customerQuotedPrice?: SortOrderInput | SortOrder
    customerQuoteDays?: SortOrderInput | SortOrder
    customerQuoteNote?: SortOrderInput | SortOrder
    customerQuoteType?: SortOrderInput | SortOrder
    customerQuoteSentAt?: SortOrderInput | SortOrder
    collectionId?: SortOrderInput | SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrderInput | SortOrder
    collection?: CollectionOrderByWithRelationInput
    originalCollection?: CollectionOrderByWithRelationInput
    customer?: UserOrderByWithRelationInput
    manufacture?: UserOrderByWithRelationInput
    productionHistory?: SampleProductionOrderByRelationAggregateInput
    productionTracking?: ProductionTrackingOrderByRelationAggregateInput
    revisions?: RevisionOrderByRelationAggregateInput
    messages?: MessageOrderByRelationAggregateInput
    company?: CompanyOrderByWithRelationInput
    aiAnalysis?: AIAnalysisOrderByWithRelationInput
    tasks?: TaskOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    _relevance?: SampleOrderByRelevanceInput
  }

  export type SampleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sampleNumber?: string
    AND?: SampleWhereInput | SampleWhereInput[]
    OR?: SampleWhereInput[]
    NOT?: SampleWhereInput | SampleWhereInput[]
    createdAt?: DateTimeFilter<"Sample"> | Date | string
    updatedAt?: DateTimeFilter<"Sample"> | Date | string
    sampleType?: EnumSampleTypeFilter<"Sample"> | $Enums.SampleType
    status?: EnumSampleStatusFilter<"Sample"> | $Enums.SampleStatus
    customerNote?: StringNullableFilter<"Sample"> | string | null
    manufacturerResponse?: StringNullableFilter<"Sample"> | string | null
    customDesignImages?: StringNullableFilter<"Sample"> | string | null
    revisionRequests?: StringNullableFilter<"Sample"> | string | null
    originalCollectionId?: IntNullableFilter<"Sample"> | number | null
    name?: StringNullableFilter<"Sample"> | string | null
    description?: StringNullableFilter<"Sample"> | string | null
    images?: StringNullableFilter<"Sample"> | string | null
    aiGenerated?: BoolNullableFilter<"Sample"> | boolean | null
    aiPrompt?: StringNullableFilter<"Sample"> | string | null
    aiSketchUrl?: StringNullableFilter<"Sample"> | string | null
    unitPrice?: FloatNullableFilter<"Sample"> | number | null
    productionDays?: IntNullableFilter<"Sample"> | number | null
    estimatedProductionDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    actualProductionDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    shippingDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"Sample"> | string | null
    cargoTrackingNumber?: StringNullableFilter<"Sample"> | string | null
    customerQuotedPrice?: FloatNullableFilter<"Sample"> | number | null
    customerQuoteDays?: IntNullableFilter<"Sample"> | number | null
    customerQuoteNote?: StringNullableFilter<"Sample"> | string | null
    customerQuoteType?: StringNullableFilter<"Sample"> | string | null
    customerQuoteSentAt?: DateTimeNullableFilter<"Sample"> | Date | string | null
    collectionId?: IntNullableFilter<"Sample"> | number | null
    customerId?: IntFilter<"Sample"> | number
    manufactureId?: IntFilter<"Sample"> | number
    companyId?: IntNullableFilter<"Sample"> | number | null
    viewCount?: IntFilter<"Sample"> | number
    shareCount?: IntFilter<"Sample"> | number
    lastViewedAt?: DateTimeNullableFilter<"Sample"> | Date | string | null
    collection?: XOR<CollectionNullableScalarRelationFilter, CollectionWhereInput> | null
    originalCollection?: XOR<CollectionNullableScalarRelationFilter, CollectionWhereInput> | null
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    manufacture?: XOR<UserScalarRelationFilter, UserWhereInput>
    productionHistory?: SampleProductionListRelationFilter
    productionTracking?: ProductionTrackingListRelationFilter
    revisions?: RevisionListRelationFilter
    messages?: MessageListRelationFilter
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    aiAnalysis?: XOR<AIAnalysisNullableScalarRelationFilter, AIAnalysisWhereInput> | null
    tasks?: TaskListRelationFilter
    notifications?: NotificationListRelationFilter
  }, "id" | "sampleNumber">

  export type SampleOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sampleNumber?: SortOrder
    sampleType?: SortOrder
    status?: SortOrder
    customerNote?: SortOrderInput | SortOrder
    manufacturerResponse?: SortOrderInput | SortOrder
    customDesignImages?: SortOrderInput | SortOrder
    revisionRequests?: SortOrderInput | SortOrder
    originalCollectionId?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    aiGenerated?: SortOrderInput | SortOrder
    aiPrompt?: SortOrderInput | SortOrder
    aiSketchUrl?: SortOrderInput | SortOrder
    unitPrice?: SortOrderInput | SortOrder
    productionDays?: SortOrderInput | SortOrder
    estimatedProductionDate?: SortOrderInput | SortOrder
    actualProductionDate?: SortOrderInput | SortOrder
    shippingDate?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    cargoTrackingNumber?: SortOrderInput | SortOrder
    customerQuotedPrice?: SortOrderInput | SortOrder
    customerQuoteDays?: SortOrderInput | SortOrder
    customerQuoteNote?: SortOrderInput | SortOrder
    customerQuoteType?: SortOrderInput | SortOrder
    customerQuoteSentAt?: SortOrderInput | SortOrder
    collectionId?: SortOrderInput | SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrderInput | SortOrder
    _count?: SampleCountOrderByAggregateInput
    _avg?: SampleAvgOrderByAggregateInput
    _max?: SampleMaxOrderByAggregateInput
    _min?: SampleMinOrderByAggregateInput
    _sum?: SampleSumOrderByAggregateInput
  }

  export type SampleScalarWhereWithAggregatesInput = {
    AND?: SampleScalarWhereWithAggregatesInput | SampleScalarWhereWithAggregatesInput[]
    OR?: SampleScalarWhereWithAggregatesInput[]
    NOT?: SampleScalarWhereWithAggregatesInput | SampleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Sample"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Sample"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Sample"> | Date | string
    sampleNumber?: StringWithAggregatesFilter<"Sample"> | string
    sampleType?: EnumSampleTypeWithAggregatesFilter<"Sample"> | $Enums.SampleType
    status?: EnumSampleStatusWithAggregatesFilter<"Sample"> | $Enums.SampleStatus
    customerNote?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    manufacturerResponse?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    customDesignImages?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    revisionRequests?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    originalCollectionId?: IntNullableWithAggregatesFilter<"Sample"> | number | null
    name?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    description?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    images?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    aiGenerated?: BoolNullableWithAggregatesFilter<"Sample"> | boolean | null
    aiPrompt?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    aiSketchUrl?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    unitPrice?: FloatNullableWithAggregatesFilter<"Sample"> | number | null
    productionDays?: IntNullableWithAggregatesFilter<"Sample"> | number | null
    estimatedProductionDate?: DateTimeNullableWithAggregatesFilter<"Sample"> | Date | string | null
    actualProductionDate?: DateTimeNullableWithAggregatesFilter<"Sample"> | Date | string | null
    shippingDate?: DateTimeNullableWithAggregatesFilter<"Sample"> | Date | string | null
    deliveryAddress?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    cargoTrackingNumber?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    customerQuotedPrice?: FloatNullableWithAggregatesFilter<"Sample"> | number | null
    customerQuoteDays?: IntNullableWithAggregatesFilter<"Sample"> | number | null
    customerQuoteNote?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    customerQuoteType?: StringNullableWithAggregatesFilter<"Sample"> | string | null
    customerQuoteSentAt?: DateTimeNullableWithAggregatesFilter<"Sample"> | Date | string | null
    collectionId?: IntNullableWithAggregatesFilter<"Sample"> | number | null
    customerId?: IntWithAggregatesFilter<"Sample"> | number
    manufactureId?: IntWithAggregatesFilter<"Sample"> | number
    companyId?: IntNullableWithAggregatesFilter<"Sample"> | number | null
    viewCount?: IntWithAggregatesFilter<"Sample"> | number
    shareCount?: IntWithAggregatesFilter<"Sample"> | number
    lastViewedAt?: DateTimeNullableWithAggregatesFilter<"Sample"> | Date | string | null
  }

  export type AIAnalysisWhereInput = {
    AND?: AIAnalysisWhereInput | AIAnalysisWhereInput[]
    OR?: AIAnalysisWhereInput[]
    NOT?: AIAnalysisWhereInput | AIAnalysisWhereInput[]
    id?: IntFilter<"AIAnalysis"> | number
    createdAt?: DateTimeFilter<"AIAnalysis"> | Date | string
    updatedAt?: DateTimeFilter<"AIAnalysis"> | Date | string
    detectedProduct?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedColor?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedFabric?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedPattern?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedGender?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedClassification?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedAccessories?: StringNullableFilter<"AIAnalysis"> | string | null
    technicalDescription?: StringNullableFilter<"AIAnalysis"> | string | null
    qualityAnalysis?: StringNullableFilter<"AIAnalysis"> | string | null
    qualityScore?: FloatNullableFilter<"AIAnalysis"> | number | null
    costAnalysis?: StringNullableFilter<"AIAnalysis"> | string | null
    estimatedCostMin?: FloatNullableFilter<"AIAnalysis"> | number | null
    estimatedCostMax?: FloatNullableFilter<"AIAnalysis"> | number | null
    suggestedMinOrder?: IntNullableFilter<"AIAnalysis"> | number | null
    trendAnalysis?: StringNullableFilter<"AIAnalysis"> | string | null
    trendScore?: FloatNullableFilter<"AIAnalysis"> | number | null
    targetMarket?: StringNullableFilter<"AIAnalysis"> | string | null
    salesPotential?: StringNullableFilter<"AIAnalysis"> | string | null
    designSuggestions?: StringNullableFilter<"AIAnalysis"> | string | null
    designStyle?: StringNullableFilter<"AIAnalysis"> | string | null
    designFocus?: StringNullableFilter<"AIAnalysis"> | string | null
    sampleId?: IntFilter<"AIAnalysis"> | number
    sample?: XOR<SampleScalarRelationFilter, SampleWhereInput>
  }

  export type AIAnalysisOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detectedProduct?: SortOrderInput | SortOrder
    detectedColor?: SortOrderInput | SortOrder
    detectedFabric?: SortOrderInput | SortOrder
    detectedPattern?: SortOrderInput | SortOrder
    detectedGender?: SortOrderInput | SortOrder
    detectedClassification?: SortOrderInput | SortOrder
    detectedAccessories?: SortOrderInput | SortOrder
    technicalDescription?: SortOrderInput | SortOrder
    qualityAnalysis?: SortOrderInput | SortOrder
    qualityScore?: SortOrderInput | SortOrder
    costAnalysis?: SortOrderInput | SortOrder
    estimatedCostMin?: SortOrderInput | SortOrder
    estimatedCostMax?: SortOrderInput | SortOrder
    suggestedMinOrder?: SortOrderInput | SortOrder
    trendAnalysis?: SortOrderInput | SortOrder
    trendScore?: SortOrderInput | SortOrder
    targetMarket?: SortOrderInput | SortOrder
    salesPotential?: SortOrderInput | SortOrder
    designSuggestions?: SortOrderInput | SortOrder
    designStyle?: SortOrderInput | SortOrder
    designFocus?: SortOrderInput | SortOrder
    sampleId?: SortOrder
    sample?: SampleOrderByWithRelationInput
    _relevance?: AIAnalysisOrderByRelevanceInput
  }

  export type AIAnalysisWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sampleId?: number
    AND?: AIAnalysisWhereInput | AIAnalysisWhereInput[]
    OR?: AIAnalysisWhereInput[]
    NOT?: AIAnalysisWhereInput | AIAnalysisWhereInput[]
    createdAt?: DateTimeFilter<"AIAnalysis"> | Date | string
    updatedAt?: DateTimeFilter<"AIAnalysis"> | Date | string
    detectedProduct?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedColor?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedFabric?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedPattern?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedGender?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedClassification?: StringNullableFilter<"AIAnalysis"> | string | null
    detectedAccessories?: StringNullableFilter<"AIAnalysis"> | string | null
    technicalDescription?: StringNullableFilter<"AIAnalysis"> | string | null
    qualityAnalysis?: StringNullableFilter<"AIAnalysis"> | string | null
    qualityScore?: FloatNullableFilter<"AIAnalysis"> | number | null
    costAnalysis?: StringNullableFilter<"AIAnalysis"> | string | null
    estimatedCostMin?: FloatNullableFilter<"AIAnalysis"> | number | null
    estimatedCostMax?: FloatNullableFilter<"AIAnalysis"> | number | null
    suggestedMinOrder?: IntNullableFilter<"AIAnalysis"> | number | null
    trendAnalysis?: StringNullableFilter<"AIAnalysis"> | string | null
    trendScore?: FloatNullableFilter<"AIAnalysis"> | number | null
    targetMarket?: StringNullableFilter<"AIAnalysis"> | string | null
    salesPotential?: StringNullableFilter<"AIAnalysis"> | string | null
    designSuggestions?: StringNullableFilter<"AIAnalysis"> | string | null
    designStyle?: StringNullableFilter<"AIAnalysis"> | string | null
    designFocus?: StringNullableFilter<"AIAnalysis"> | string | null
    sample?: XOR<SampleScalarRelationFilter, SampleWhereInput>
  }, "id" | "sampleId">

  export type AIAnalysisOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detectedProduct?: SortOrderInput | SortOrder
    detectedColor?: SortOrderInput | SortOrder
    detectedFabric?: SortOrderInput | SortOrder
    detectedPattern?: SortOrderInput | SortOrder
    detectedGender?: SortOrderInput | SortOrder
    detectedClassification?: SortOrderInput | SortOrder
    detectedAccessories?: SortOrderInput | SortOrder
    technicalDescription?: SortOrderInput | SortOrder
    qualityAnalysis?: SortOrderInput | SortOrder
    qualityScore?: SortOrderInput | SortOrder
    costAnalysis?: SortOrderInput | SortOrder
    estimatedCostMin?: SortOrderInput | SortOrder
    estimatedCostMax?: SortOrderInput | SortOrder
    suggestedMinOrder?: SortOrderInput | SortOrder
    trendAnalysis?: SortOrderInput | SortOrder
    trendScore?: SortOrderInput | SortOrder
    targetMarket?: SortOrderInput | SortOrder
    salesPotential?: SortOrderInput | SortOrder
    designSuggestions?: SortOrderInput | SortOrder
    designStyle?: SortOrderInput | SortOrder
    designFocus?: SortOrderInput | SortOrder
    sampleId?: SortOrder
    _count?: AIAnalysisCountOrderByAggregateInput
    _avg?: AIAnalysisAvgOrderByAggregateInput
    _max?: AIAnalysisMaxOrderByAggregateInput
    _min?: AIAnalysisMinOrderByAggregateInput
    _sum?: AIAnalysisSumOrderByAggregateInput
  }

  export type AIAnalysisScalarWhereWithAggregatesInput = {
    AND?: AIAnalysisScalarWhereWithAggregatesInput | AIAnalysisScalarWhereWithAggregatesInput[]
    OR?: AIAnalysisScalarWhereWithAggregatesInput[]
    NOT?: AIAnalysisScalarWhereWithAggregatesInput | AIAnalysisScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AIAnalysis"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AIAnalysis"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AIAnalysis"> | Date | string
    detectedProduct?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    detectedColor?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    detectedFabric?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    detectedPattern?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    detectedGender?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    detectedClassification?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    detectedAccessories?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    technicalDescription?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    qualityAnalysis?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    qualityScore?: FloatNullableWithAggregatesFilter<"AIAnalysis"> | number | null
    costAnalysis?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    estimatedCostMin?: FloatNullableWithAggregatesFilter<"AIAnalysis"> | number | null
    estimatedCostMax?: FloatNullableWithAggregatesFilter<"AIAnalysis"> | number | null
    suggestedMinOrder?: IntNullableWithAggregatesFilter<"AIAnalysis"> | number | null
    trendAnalysis?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    trendScore?: FloatNullableWithAggregatesFilter<"AIAnalysis"> | number | null
    targetMarket?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    salesPotential?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    designSuggestions?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    designStyle?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    designFocus?: StringNullableWithAggregatesFilter<"AIAnalysis"> | string | null
    sampleId?: IntWithAggregatesFilter<"AIAnalysis"> | number
  }

  export type SampleProductionWhereInput = {
    AND?: SampleProductionWhereInput | SampleProductionWhereInput[]
    OR?: SampleProductionWhereInput[]
    NOT?: SampleProductionWhereInput | SampleProductionWhereInput[]
    id?: IntFilter<"SampleProduction"> | number
    createdAt?: DateTimeFilter<"SampleProduction"> | Date | string
    status?: EnumSampleStatusFilter<"SampleProduction"> | $Enums.SampleStatus
    note?: StringNullableFilter<"SampleProduction"> | string | null
    estimatedDays?: IntNullableFilter<"SampleProduction"> | number | null
    actualDate?: DateTimeNullableFilter<"SampleProduction"> | Date | string | null
    sampleId?: IntFilter<"SampleProduction"> | number
    updatedById?: IntFilter<"SampleProduction"> | number
    sample?: XOR<SampleScalarRelationFilter, SampleWhereInput>
    updatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SampleProductionOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    estimatedDays?: SortOrderInput | SortOrder
    actualDate?: SortOrderInput | SortOrder
    sampleId?: SortOrder
    updatedById?: SortOrder
    sample?: SampleOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    _relevance?: SampleProductionOrderByRelevanceInput
  }

  export type SampleProductionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SampleProductionWhereInput | SampleProductionWhereInput[]
    OR?: SampleProductionWhereInput[]
    NOT?: SampleProductionWhereInput | SampleProductionWhereInput[]
    createdAt?: DateTimeFilter<"SampleProduction"> | Date | string
    status?: EnumSampleStatusFilter<"SampleProduction"> | $Enums.SampleStatus
    note?: StringNullableFilter<"SampleProduction"> | string | null
    estimatedDays?: IntNullableFilter<"SampleProduction"> | number | null
    actualDate?: DateTimeNullableFilter<"SampleProduction"> | Date | string | null
    sampleId?: IntFilter<"SampleProduction"> | number
    updatedById?: IntFilter<"SampleProduction"> | number
    sample?: XOR<SampleScalarRelationFilter, SampleWhereInput>
    updatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type SampleProductionOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    estimatedDays?: SortOrderInput | SortOrder
    actualDate?: SortOrderInput | SortOrder
    sampleId?: SortOrder
    updatedById?: SortOrder
    _count?: SampleProductionCountOrderByAggregateInput
    _avg?: SampleProductionAvgOrderByAggregateInput
    _max?: SampleProductionMaxOrderByAggregateInput
    _min?: SampleProductionMinOrderByAggregateInput
    _sum?: SampleProductionSumOrderByAggregateInput
  }

  export type SampleProductionScalarWhereWithAggregatesInput = {
    AND?: SampleProductionScalarWhereWithAggregatesInput | SampleProductionScalarWhereWithAggregatesInput[]
    OR?: SampleProductionScalarWhereWithAggregatesInput[]
    NOT?: SampleProductionScalarWhereWithAggregatesInput | SampleProductionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SampleProduction"> | number
    createdAt?: DateTimeWithAggregatesFilter<"SampleProduction"> | Date | string
    status?: EnumSampleStatusWithAggregatesFilter<"SampleProduction"> | $Enums.SampleStatus
    note?: StringNullableWithAggregatesFilter<"SampleProduction"> | string | null
    estimatedDays?: IntNullableWithAggregatesFilter<"SampleProduction"> | number | null
    actualDate?: DateTimeNullableWithAggregatesFilter<"SampleProduction"> | Date | string | null
    sampleId?: IntWithAggregatesFilter<"SampleProduction"> | number
    updatedById?: IntWithAggregatesFilter<"SampleProduction"> | number
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: IntFilter<"Order"> | number
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    orderNumber?: StringFilter<"Order"> | string
    quantity?: IntFilter<"Order"> | number
    unitPrice?: FloatFilter<"Order"> | number
    totalPrice?: FloatFilter<"Order"> | number
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    customerNote?: StringNullableFilter<"Order"> | string | null
    manufacturerResponse?: StringNullableFilter<"Order"> | string | null
    customerQuotedPrice?: FloatNullableFilter<"Order"> | number | null
    customerQuoteDays?: IntNullableFilter<"Order"> | number | null
    customerQuoteNote?: StringNullableFilter<"Order"> | string | null
    customerQuoteType?: StringNullableFilter<"Order"> | string | null
    customerQuoteSentAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    productionDays?: IntNullableFilter<"Order"> | number | null
    estimatedProductionDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    actualProductionStart?: DateTimeNullableFilter<"Order"> | Date | string | null
    actualProductionEnd?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"Order"> | string | null
    cargoTrackingNumber?: StringNullableFilter<"Order"> | string | null
    collectionId?: IntFilter<"Order"> | number
    customerId?: IntFilter<"Order"> | number
    manufactureId?: IntFilter<"Order"> | number
    companyId?: IntNullableFilter<"Order"> | number | null
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    manufacture?: XOR<UserScalarRelationFilter, UserWhereInput>
    productionHistory?: OrderProductionListRelationFilter
    productionTracking?: ProductionTrackingListRelationFilter
    revisions?: RevisionListRelationFilter
    messages?: MessageListRelationFilter
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    tasks?: TaskListRelationFilter
    notifications?: NotificationListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orderNumber?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    customerNote?: SortOrderInput | SortOrder
    manufacturerResponse?: SortOrderInput | SortOrder
    customerQuotedPrice?: SortOrderInput | SortOrder
    customerQuoteDays?: SortOrderInput | SortOrder
    customerQuoteNote?: SortOrderInput | SortOrder
    customerQuoteType?: SortOrderInput | SortOrder
    customerQuoteSentAt?: SortOrderInput | SortOrder
    productionDays?: SortOrderInput | SortOrder
    estimatedProductionDate?: SortOrderInput | SortOrder
    actualProductionStart?: SortOrderInput | SortOrder
    actualProductionEnd?: SortOrderInput | SortOrder
    shippingDate?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    cargoTrackingNumber?: SortOrderInput | SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrderInput | SortOrder
    collection?: CollectionOrderByWithRelationInput
    customer?: UserOrderByWithRelationInput
    manufacture?: UserOrderByWithRelationInput
    productionHistory?: OrderProductionOrderByRelationAggregateInput
    productionTracking?: ProductionTrackingOrderByRelationAggregateInput
    revisions?: RevisionOrderByRelationAggregateInput
    messages?: MessageOrderByRelationAggregateInput
    company?: CompanyOrderByWithRelationInput
    tasks?: TaskOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    _relevance?: OrderOrderByRelevanceInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    orderNumber?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    quantity?: IntFilter<"Order"> | number
    unitPrice?: FloatFilter<"Order"> | number
    totalPrice?: FloatFilter<"Order"> | number
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    customerNote?: StringNullableFilter<"Order"> | string | null
    manufacturerResponse?: StringNullableFilter<"Order"> | string | null
    customerQuotedPrice?: FloatNullableFilter<"Order"> | number | null
    customerQuoteDays?: IntNullableFilter<"Order"> | number | null
    customerQuoteNote?: StringNullableFilter<"Order"> | string | null
    customerQuoteType?: StringNullableFilter<"Order"> | string | null
    customerQuoteSentAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    productionDays?: IntNullableFilter<"Order"> | number | null
    estimatedProductionDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    actualProductionStart?: DateTimeNullableFilter<"Order"> | Date | string | null
    actualProductionEnd?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"Order"> | string | null
    cargoTrackingNumber?: StringNullableFilter<"Order"> | string | null
    collectionId?: IntFilter<"Order"> | number
    customerId?: IntFilter<"Order"> | number
    manufactureId?: IntFilter<"Order"> | number
    companyId?: IntNullableFilter<"Order"> | number | null
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    manufacture?: XOR<UserScalarRelationFilter, UserWhereInput>
    productionHistory?: OrderProductionListRelationFilter
    productionTracking?: ProductionTrackingListRelationFilter
    revisions?: RevisionListRelationFilter
    messages?: MessageListRelationFilter
    company?: XOR<CompanyNullableScalarRelationFilter, CompanyWhereInput> | null
    tasks?: TaskListRelationFilter
    notifications?: NotificationListRelationFilter
  }, "id" | "orderNumber">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orderNumber?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    customerNote?: SortOrderInput | SortOrder
    manufacturerResponse?: SortOrderInput | SortOrder
    customerQuotedPrice?: SortOrderInput | SortOrder
    customerQuoteDays?: SortOrderInput | SortOrder
    customerQuoteNote?: SortOrderInput | SortOrder
    customerQuoteType?: SortOrderInput | SortOrder
    customerQuoteSentAt?: SortOrderInput | SortOrder
    productionDays?: SortOrderInput | SortOrder
    estimatedProductionDate?: SortOrderInput | SortOrder
    actualProductionStart?: SortOrderInput | SortOrder
    actualProductionEnd?: SortOrderInput | SortOrder
    shippingDate?: SortOrderInput | SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    cargoTrackingNumber?: SortOrderInput | SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrderInput | SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Order"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    quantity?: IntWithAggregatesFilter<"Order"> | number
    unitPrice?: FloatWithAggregatesFilter<"Order"> | number
    totalPrice?: FloatWithAggregatesFilter<"Order"> | number
    status?: EnumOrderStatusWithAggregatesFilter<"Order"> | $Enums.OrderStatus
    customerNote?: StringNullableWithAggregatesFilter<"Order"> | string | null
    manufacturerResponse?: StringNullableWithAggregatesFilter<"Order"> | string | null
    customerQuotedPrice?: FloatNullableWithAggregatesFilter<"Order"> | number | null
    customerQuoteDays?: IntNullableWithAggregatesFilter<"Order"> | number | null
    customerQuoteNote?: StringNullableWithAggregatesFilter<"Order"> | string | null
    customerQuoteType?: StringNullableWithAggregatesFilter<"Order"> | string | null
    customerQuoteSentAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    productionDays?: IntNullableWithAggregatesFilter<"Order"> | number | null
    estimatedProductionDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    actualProductionStart?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    actualProductionEnd?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    shippingDate?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    deliveryAddress?: StringNullableWithAggregatesFilter<"Order"> | string | null
    cargoTrackingNumber?: StringNullableWithAggregatesFilter<"Order"> | string | null
    collectionId?: IntWithAggregatesFilter<"Order"> | number
    customerId?: IntWithAggregatesFilter<"Order"> | number
    manufactureId?: IntWithAggregatesFilter<"Order"> | number
    companyId?: IntNullableWithAggregatesFilter<"Order"> | number | null
  }

  export type OrderProductionWhereInput = {
    AND?: OrderProductionWhereInput | OrderProductionWhereInput[]
    OR?: OrderProductionWhereInput[]
    NOT?: OrderProductionWhereInput | OrderProductionWhereInput[]
    id?: IntFilter<"OrderProduction"> | number
    createdAt?: DateTimeFilter<"OrderProduction"> | Date | string
    status?: EnumOrderStatusFilter<"OrderProduction"> | $Enums.OrderStatus
    note?: StringNullableFilter<"OrderProduction"> | string | null
    estimatedDays?: IntNullableFilter<"OrderProduction"> | number | null
    actualDate?: DateTimeNullableFilter<"OrderProduction"> | Date | string | null
    orderId?: IntFilter<"OrderProduction"> | number
    updatedById?: IntFilter<"OrderProduction"> | number
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    updatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type OrderProductionOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    estimatedDays?: SortOrderInput | SortOrder
    actualDate?: SortOrderInput | SortOrder
    orderId?: SortOrder
    updatedById?: SortOrder
    order?: OrderOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    _relevance?: OrderProductionOrderByRelevanceInput
  }

  export type OrderProductionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderProductionWhereInput | OrderProductionWhereInput[]
    OR?: OrderProductionWhereInput[]
    NOT?: OrderProductionWhereInput | OrderProductionWhereInput[]
    createdAt?: DateTimeFilter<"OrderProduction"> | Date | string
    status?: EnumOrderStatusFilter<"OrderProduction"> | $Enums.OrderStatus
    note?: StringNullableFilter<"OrderProduction"> | string | null
    estimatedDays?: IntNullableFilter<"OrderProduction"> | number | null
    actualDate?: DateTimeNullableFilter<"OrderProduction"> | Date | string | null
    orderId?: IntFilter<"OrderProduction"> | number
    updatedById?: IntFilter<"OrderProduction"> | number
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    updatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type OrderProductionOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrderInput | SortOrder
    estimatedDays?: SortOrderInput | SortOrder
    actualDate?: SortOrderInput | SortOrder
    orderId?: SortOrder
    updatedById?: SortOrder
    _count?: OrderProductionCountOrderByAggregateInput
    _avg?: OrderProductionAvgOrderByAggregateInput
    _max?: OrderProductionMaxOrderByAggregateInput
    _min?: OrderProductionMinOrderByAggregateInput
    _sum?: OrderProductionSumOrderByAggregateInput
  }

  export type OrderProductionScalarWhereWithAggregatesInput = {
    AND?: OrderProductionScalarWhereWithAggregatesInput | OrderProductionScalarWhereWithAggregatesInput[]
    OR?: OrderProductionScalarWhereWithAggregatesInput[]
    NOT?: OrderProductionScalarWhereWithAggregatesInput | OrderProductionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderProduction"> | number
    createdAt?: DateTimeWithAggregatesFilter<"OrderProduction"> | Date | string
    status?: EnumOrderStatusWithAggregatesFilter<"OrderProduction"> | $Enums.OrderStatus
    note?: StringNullableWithAggregatesFilter<"OrderProduction"> | string | null
    estimatedDays?: IntNullableWithAggregatesFilter<"OrderProduction"> | number | null
    actualDate?: DateTimeNullableWithAggregatesFilter<"OrderProduction"> | Date | string | null
    orderId?: IntWithAggregatesFilter<"OrderProduction"> | number
    updatedById?: IntWithAggregatesFilter<"OrderProduction"> | number
  }

  export type QuestionWhereInput = {
    AND?: QuestionWhereInput | QuestionWhereInput[]
    OR?: QuestionWhereInput[]
    NOT?: QuestionWhereInput | QuestionWhereInput[]
    id?: IntFilter<"Question"> | number
    createdAt?: DateTimeFilter<"Question"> | Date | string
    updatedAt?: DateTimeFilter<"Question"> | Date | string
    question?: StringFilter<"Question"> | string
    answer?: StringNullableFilter<"Question"> | string | null
    isAnswered?: BoolFilter<"Question"> | boolean
    isPublic?: BoolFilter<"Question"> | boolean
    collectionId?: IntFilter<"Question"> | number
    customerId?: IntFilter<"Question"> | number
    manufactureId?: IntFilter<"Question"> | number
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    manufacture?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type QuestionOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    question?: SortOrder
    answer?: SortOrderInput | SortOrder
    isAnswered?: SortOrder
    isPublic?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    collection?: CollectionOrderByWithRelationInput
    customer?: UserOrderByWithRelationInput
    manufacture?: UserOrderByWithRelationInput
    _relevance?: QuestionOrderByRelevanceInput
  }

  export type QuestionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: QuestionWhereInput | QuestionWhereInput[]
    OR?: QuestionWhereInput[]
    NOT?: QuestionWhereInput | QuestionWhereInput[]
    createdAt?: DateTimeFilter<"Question"> | Date | string
    updatedAt?: DateTimeFilter<"Question"> | Date | string
    question?: StringFilter<"Question"> | string
    answer?: StringNullableFilter<"Question"> | string | null
    isAnswered?: BoolFilter<"Question"> | boolean
    isPublic?: BoolFilter<"Question"> | boolean
    collectionId?: IntFilter<"Question"> | number
    customerId?: IntFilter<"Question"> | number
    manufactureId?: IntFilter<"Question"> | number
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
    manufacture?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type QuestionOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    question?: SortOrder
    answer?: SortOrderInput | SortOrder
    isAnswered?: SortOrder
    isPublic?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    _count?: QuestionCountOrderByAggregateInput
    _avg?: QuestionAvgOrderByAggregateInput
    _max?: QuestionMaxOrderByAggregateInput
    _min?: QuestionMinOrderByAggregateInput
    _sum?: QuestionSumOrderByAggregateInput
  }

  export type QuestionScalarWhereWithAggregatesInput = {
    AND?: QuestionScalarWhereWithAggregatesInput | QuestionScalarWhereWithAggregatesInput[]
    OR?: QuestionScalarWhereWithAggregatesInput[]
    NOT?: QuestionScalarWhereWithAggregatesInput | QuestionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Question"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Question"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Question"> | Date | string
    question?: StringWithAggregatesFilter<"Question"> | string
    answer?: StringNullableWithAggregatesFilter<"Question"> | string | null
    isAnswered?: BoolWithAggregatesFilter<"Question"> | boolean
    isPublic?: BoolWithAggregatesFilter<"Question"> | boolean
    collectionId?: IntWithAggregatesFilter<"Question"> | number
    customerId?: IntWithAggregatesFilter<"Question"> | number
    manufactureId?: IntWithAggregatesFilter<"Question"> | number
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    rating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    isApproved?: BoolFilter<"Review"> | boolean
    collectionId?: IntFilter<"Review"> | number
    customerId?: IntFilter<"Review"> | number
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    isApproved?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    collection?: CollectionOrderByWithRelationInput
    customer?: UserOrderByWithRelationInput
    _relevance?: ReviewOrderByRelevanceInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    rating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    isApproved?: BoolFilter<"Review"> | boolean
    collectionId?: IntFilter<"Review"> | number
    customerId?: IntFilter<"Review"> | number
    collection?: XOR<CollectionScalarRelationFilter, CollectionWhereInput>
    customer?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    isApproved?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Review"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    rating?: IntWithAggregatesFilter<"Review"> | number
    comment?: StringNullableWithAggregatesFilter<"Review"> | string | null
    isApproved?: BoolWithAggregatesFilter<"Review"> | boolean
    collectionId?: IntWithAggregatesFilter<"Review"> | number
    customerId?: IntWithAggregatesFilter<"Review"> | number
  }

  export type FileWhereInput = {
    AND?: FileWhereInput | FileWhereInput[]
    OR?: FileWhereInput[]
    NOT?: FileWhereInput | FileWhereInput[]
    id?: StringFilter<"File"> | string
    filename?: StringFilter<"File"> | string
    path?: StringFilter<"File"> | string
    size?: IntFilter<"File"> | number
    mimetype?: StringFilter<"File"> | string
    encoding?: StringNullableFilter<"File"> | string | null
    description?: StringNullableFilter<"File"> | string | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    updatedAt?: DateTimeFilter<"File"> | Date | string
  }

  export type FileOrderByWithRelationInput = {
    id?: SortOrder
    filename?: SortOrder
    path?: SortOrder
    size?: SortOrder
    mimetype?: SortOrder
    encoding?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _relevance?: FileOrderByRelevanceInput
  }

  export type FileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FileWhereInput | FileWhereInput[]
    OR?: FileWhereInput[]
    NOT?: FileWhereInput | FileWhereInput[]
    filename?: StringFilter<"File"> | string
    path?: StringFilter<"File"> | string
    size?: IntFilter<"File"> | number
    mimetype?: StringFilter<"File"> | string
    encoding?: StringNullableFilter<"File"> | string | null
    description?: StringNullableFilter<"File"> | string | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    updatedAt?: DateTimeFilter<"File"> | Date | string
  }, "id">

  export type FileOrderByWithAggregationInput = {
    id?: SortOrder
    filename?: SortOrder
    path?: SortOrder
    size?: SortOrder
    mimetype?: SortOrder
    encoding?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FileCountOrderByAggregateInput
    _avg?: FileAvgOrderByAggregateInput
    _max?: FileMaxOrderByAggregateInput
    _min?: FileMinOrderByAggregateInput
    _sum?: FileSumOrderByAggregateInput
  }

  export type FileScalarWhereWithAggregatesInput = {
    AND?: FileScalarWhereWithAggregatesInput | FileScalarWhereWithAggregatesInput[]
    OR?: FileScalarWhereWithAggregatesInput[]
    NOT?: FileScalarWhereWithAggregatesInput | FileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"File"> | string
    filename?: StringWithAggregatesFilter<"File"> | string
    path?: StringWithAggregatesFilter<"File"> | string
    size?: IntWithAggregatesFilter<"File"> | number
    mimetype?: StringWithAggregatesFilter<"File"> | string
    encoding?: StringNullableWithAggregatesFilter<"File"> | string | null
    description?: StringNullableWithAggregatesFilter<"File"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"File"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"File"> | Date | string
  }

  export type ProductionStageUpdateWhereInput = {
    AND?: ProductionStageUpdateWhereInput | ProductionStageUpdateWhereInput[]
    OR?: ProductionStageUpdateWhereInput[]
    NOT?: ProductionStageUpdateWhereInput | ProductionStageUpdateWhereInput[]
    id?: IntFilter<"ProductionStageUpdate"> | number
    productionId?: IntFilter<"ProductionStageUpdate"> | number
    stage?: EnumProductionStageFilter<"ProductionStageUpdate"> | $Enums.ProductionStage
    status?: EnumStageStatusFilter<"ProductionStageUpdate"> | $Enums.StageStatus
    actualStartDate?: DateTimeNullableFilter<"ProductionStageUpdate"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"ProductionStageUpdate"> | Date | string | null
    estimatedDays?: IntNullableFilter<"ProductionStageUpdate"> | number | null
    notes?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    photos?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    isRevision?: BoolFilter<"ProductionStageUpdate"> | boolean
    delayReason?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    extraDays?: IntFilter<"ProductionStageUpdate"> | number
    createdAt?: DateTimeFilter<"ProductionStageUpdate"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionStageUpdate"> | Date | string
    production?: XOR<ProductionTrackingScalarRelationFilter, ProductionTrackingWhereInput>
  }

  export type ProductionStageUpdateOrderByWithRelationInput = {
    id?: SortOrder
    productionId?: SortOrder
    stage?: SortOrder
    status?: SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    estimatedDays?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    isRevision?: SortOrder
    delayReason?: SortOrderInput | SortOrder
    extraDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    production?: ProductionTrackingOrderByWithRelationInput
    _relevance?: ProductionStageUpdateOrderByRelevanceInput
  }

  export type ProductionStageUpdateWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductionStageUpdateWhereInput | ProductionStageUpdateWhereInput[]
    OR?: ProductionStageUpdateWhereInput[]
    NOT?: ProductionStageUpdateWhereInput | ProductionStageUpdateWhereInput[]
    productionId?: IntFilter<"ProductionStageUpdate"> | number
    stage?: EnumProductionStageFilter<"ProductionStageUpdate"> | $Enums.ProductionStage
    status?: EnumStageStatusFilter<"ProductionStageUpdate"> | $Enums.StageStatus
    actualStartDate?: DateTimeNullableFilter<"ProductionStageUpdate"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"ProductionStageUpdate"> | Date | string | null
    estimatedDays?: IntNullableFilter<"ProductionStageUpdate"> | number | null
    notes?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    photos?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    isRevision?: BoolFilter<"ProductionStageUpdate"> | boolean
    delayReason?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    extraDays?: IntFilter<"ProductionStageUpdate"> | number
    createdAt?: DateTimeFilter<"ProductionStageUpdate"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionStageUpdate"> | Date | string
    production?: XOR<ProductionTrackingScalarRelationFilter, ProductionTrackingWhereInput>
  }, "id">

  export type ProductionStageUpdateOrderByWithAggregationInput = {
    id?: SortOrder
    productionId?: SortOrder
    stage?: SortOrder
    status?: SortOrder
    actualStartDate?: SortOrderInput | SortOrder
    actualEndDate?: SortOrderInput | SortOrder
    estimatedDays?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    isRevision?: SortOrder
    delayReason?: SortOrderInput | SortOrder
    extraDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductionStageUpdateCountOrderByAggregateInput
    _avg?: ProductionStageUpdateAvgOrderByAggregateInput
    _max?: ProductionStageUpdateMaxOrderByAggregateInput
    _min?: ProductionStageUpdateMinOrderByAggregateInput
    _sum?: ProductionStageUpdateSumOrderByAggregateInput
  }

  export type ProductionStageUpdateScalarWhereWithAggregatesInput = {
    AND?: ProductionStageUpdateScalarWhereWithAggregatesInput | ProductionStageUpdateScalarWhereWithAggregatesInput[]
    OR?: ProductionStageUpdateScalarWhereWithAggregatesInput[]
    NOT?: ProductionStageUpdateScalarWhereWithAggregatesInput | ProductionStageUpdateScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductionStageUpdate"> | number
    productionId?: IntWithAggregatesFilter<"ProductionStageUpdate"> | number
    stage?: EnumProductionStageWithAggregatesFilter<"ProductionStageUpdate"> | $Enums.ProductionStage
    status?: EnumStageStatusWithAggregatesFilter<"ProductionStageUpdate"> | $Enums.StageStatus
    actualStartDate?: DateTimeNullableWithAggregatesFilter<"ProductionStageUpdate"> | Date | string | null
    actualEndDate?: DateTimeNullableWithAggregatesFilter<"ProductionStageUpdate"> | Date | string | null
    estimatedDays?: IntNullableWithAggregatesFilter<"ProductionStageUpdate"> | number | null
    notes?: StringNullableWithAggregatesFilter<"ProductionStageUpdate"> | string | null
    photos?: StringNullableWithAggregatesFilter<"ProductionStageUpdate"> | string | null
    isRevision?: BoolWithAggregatesFilter<"ProductionStageUpdate"> | boolean
    delayReason?: StringNullableWithAggregatesFilter<"ProductionStageUpdate"> | string | null
    extraDays?: IntWithAggregatesFilter<"ProductionStageUpdate"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ProductionStageUpdate"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductionStageUpdate"> | Date | string
  }

  export type QualityControlWhereInput = {
    AND?: QualityControlWhereInput | QualityControlWhereInput[]
    OR?: QualityControlWhereInput[]
    NOT?: QualityControlWhereInput | QualityControlWhereInput[]
    id?: IntFilter<"QualityControl"> | number
    productionId?: IntFilter<"QualityControl"> | number
    inspectorId?: IntFilter<"QualityControl"> | number
    checkDate?: DateTimeFilter<"QualityControl"> | Date | string
    result?: EnumQualityResultFilter<"QualityControl"> | $Enums.QualityResult
    score?: IntNullableFilter<"QualityControl"> | number | null
    notes?: StringNullableFilter<"QualityControl"> | string | null
    photos?: StringNullableFilter<"QualityControl"> | string | null
    fabricDefects?: BoolFilter<"QualityControl"> | boolean
    sewingDefects?: BoolFilter<"QualityControl"> | boolean
    measureDefects?: BoolFilter<"QualityControl"> | boolean
    finishingDefects?: BoolFilter<"QualityControl"> | boolean
    createdAt?: DateTimeFilter<"QualityControl"> | Date | string
    updatedAt?: DateTimeFilter<"QualityControl"> | Date | string
    production?: XOR<ProductionTrackingScalarRelationFilter, ProductionTrackingWhereInput>
    inspector?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type QualityControlOrderByWithRelationInput = {
    id?: SortOrder
    productionId?: SortOrder
    inspectorId?: SortOrder
    checkDate?: SortOrder
    result?: SortOrder
    score?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    fabricDefects?: SortOrder
    sewingDefects?: SortOrder
    measureDefects?: SortOrder
    finishingDefects?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    production?: ProductionTrackingOrderByWithRelationInput
    inspector?: UserOrderByWithRelationInput
    _relevance?: QualityControlOrderByRelevanceInput
  }

  export type QualityControlWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: QualityControlWhereInput | QualityControlWhereInput[]
    OR?: QualityControlWhereInput[]
    NOT?: QualityControlWhereInput | QualityControlWhereInput[]
    productionId?: IntFilter<"QualityControl"> | number
    inspectorId?: IntFilter<"QualityControl"> | number
    checkDate?: DateTimeFilter<"QualityControl"> | Date | string
    result?: EnumQualityResultFilter<"QualityControl"> | $Enums.QualityResult
    score?: IntNullableFilter<"QualityControl"> | number | null
    notes?: StringNullableFilter<"QualityControl"> | string | null
    photos?: StringNullableFilter<"QualityControl"> | string | null
    fabricDefects?: BoolFilter<"QualityControl"> | boolean
    sewingDefects?: BoolFilter<"QualityControl"> | boolean
    measureDefects?: BoolFilter<"QualityControl"> | boolean
    finishingDefects?: BoolFilter<"QualityControl"> | boolean
    createdAt?: DateTimeFilter<"QualityControl"> | Date | string
    updatedAt?: DateTimeFilter<"QualityControl"> | Date | string
    production?: XOR<ProductionTrackingScalarRelationFilter, ProductionTrackingWhereInput>
    inspector?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type QualityControlOrderByWithAggregationInput = {
    id?: SortOrder
    productionId?: SortOrder
    inspectorId?: SortOrder
    checkDate?: SortOrder
    result?: SortOrder
    score?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    fabricDefects?: SortOrder
    sewingDefects?: SortOrder
    measureDefects?: SortOrder
    finishingDefects?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: QualityControlCountOrderByAggregateInput
    _avg?: QualityControlAvgOrderByAggregateInput
    _max?: QualityControlMaxOrderByAggregateInput
    _min?: QualityControlMinOrderByAggregateInput
    _sum?: QualityControlSumOrderByAggregateInput
  }

  export type QualityControlScalarWhereWithAggregatesInput = {
    AND?: QualityControlScalarWhereWithAggregatesInput | QualityControlScalarWhereWithAggregatesInput[]
    OR?: QualityControlScalarWhereWithAggregatesInput[]
    NOT?: QualityControlScalarWhereWithAggregatesInput | QualityControlScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"QualityControl"> | number
    productionId?: IntWithAggregatesFilter<"QualityControl"> | number
    inspectorId?: IntWithAggregatesFilter<"QualityControl"> | number
    checkDate?: DateTimeWithAggregatesFilter<"QualityControl"> | Date | string
    result?: EnumQualityResultWithAggregatesFilter<"QualityControl"> | $Enums.QualityResult
    score?: IntNullableWithAggregatesFilter<"QualityControl"> | number | null
    notes?: StringNullableWithAggregatesFilter<"QualityControl"> | string | null
    photos?: StringNullableWithAggregatesFilter<"QualityControl"> | string | null
    fabricDefects?: BoolWithAggregatesFilter<"QualityControl"> | boolean
    sewingDefects?: BoolWithAggregatesFilter<"QualityControl"> | boolean
    measureDefects?: BoolWithAggregatesFilter<"QualityControl"> | boolean
    finishingDefects?: BoolWithAggregatesFilter<"QualityControl"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"QualityControl"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"QualityControl"> | Date | string
  }

  export type WorkshopWhereInput = {
    AND?: WorkshopWhereInput | WorkshopWhereInput[]
    OR?: WorkshopWhereInput[]
    NOT?: WorkshopWhereInput | WorkshopWhereInput[]
    id?: IntFilter<"Workshop"> | number
    name?: StringFilter<"Workshop"> | string
    type?: EnumWorkshopTypeFilter<"Workshop"> | $Enums.WorkshopType
    capacity?: IntNullableFilter<"Workshop"> | number | null
    location?: StringNullableFilter<"Workshop"> | string | null
    isActive?: BoolFilter<"Workshop"> | boolean
    ownerId?: IntFilter<"Workshop"> | number
    createdAt?: DateTimeFilter<"Workshop"> | Date | string
    updatedAt?: DateTimeFilter<"Workshop"> | Date | string
    owner?: XOR<UserScalarRelationFilter, UserWhereInput>
    sewingProductions?: ProductionTrackingListRelationFilter
    packagingProductions?: ProductionTrackingListRelationFilter
  }

  export type WorkshopOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    capacity?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    isActive?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    owner?: UserOrderByWithRelationInput
    sewingProductions?: ProductionTrackingOrderByRelationAggregateInput
    packagingProductions?: ProductionTrackingOrderByRelationAggregateInput
    _relevance?: WorkshopOrderByRelevanceInput
  }

  export type WorkshopWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: WorkshopWhereInput | WorkshopWhereInput[]
    OR?: WorkshopWhereInput[]
    NOT?: WorkshopWhereInput | WorkshopWhereInput[]
    type?: EnumWorkshopTypeFilter<"Workshop"> | $Enums.WorkshopType
    capacity?: IntNullableFilter<"Workshop"> | number | null
    location?: StringNullableFilter<"Workshop"> | string | null
    isActive?: BoolFilter<"Workshop"> | boolean
    ownerId?: IntFilter<"Workshop"> | number
    createdAt?: DateTimeFilter<"Workshop"> | Date | string
    updatedAt?: DateTimeFilter<"Workshop"> | Date | string
    owner?: XOR<UserScalarRelationFilter, UserWhereInput>
    sewingProductions?: ProductionTrackingListRelationFilter
    packagingProductions?: ProductionTrackingListRelationFilter
  }, "id" | "name">

  export type WorkshopOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    capacity?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    isActive?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WorkshopCountOrderByAggregateInput
    _avg?: WorkshopAvgOrderByAggregateInput
    _max?: WorkshopMaxOrderByAggregateInput
    _min?: WorkshopMinOrderByAggregateInput
    _sum?: WorkshopSumOrderByAggregateInput
  }

  export type WorkshopScalarWhereWithAggregatesInput = {
    AND?: WorkshopScalarWhereWithAggregatesInput | WorkshopScalarWhereWithAggregatesInput[]
    OR?: WorkshopScalarWhereWithAggregatesInput[]
    NOT?: WorkshopScalarWhereWithAggregatesInput | WorkshopScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Workshop"> | number
    name?: StringWithAggregatesFilter<"Workshop"> | string
    type?: EnumWorkshopTypeWithAggregatesFilter<"Workshop"> | $Enums.WorkshopType
    capacity?: IntNullableWithAggregatesFilter<"Workshop"> | number | null
    location?: StringNullableWithAggregatesFilter<"Workshop"> | string | null
    isActive?: BoolWithAggregatesFilter<"Workshop"> | boolean
    ownerId?: IntWithAggregatesFilter<"Workshop"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Workshop"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Workshop"> | Date | string
  }

  export type ColorWhereInput = {
    AND?: ColorWhereInput | ColorWhereInput[]
    OR?: ColorWhereInput[]
    NOT?: ColorWhereInput | ColorWhereInput[]
    id?: IntFilter<"Color"> | number
    name?: StringFilter<"Color"> | string
    code?: StringNullableFilter<"Color"> | string | null
    hexCode?: StringNullableFilter<"Color"> | string | null
    imageUrl?: StringNullableFilter<"Color"> | string | null
    isActive?: BoolFilter<"Color"> | boolean
    companyId?: IntFilter<"Color"> | number
    createdAt?: DateTimeFilter<"Color"> | Date | string
    updatedAt?: DateTimeFilter<"Color"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }

  export type ColorOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    hexCode?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    _relevance?: ColorOrderByRelevanceInput
  }

  export type ColorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    companyId_name?: ColorCompanyIdNameCompoundUniqueInput
    AND?: ColorWhereInput | ColorWhereInput[]
    OR?: ColorWhereInput[]
    NOT?: ColorWhereInput | ColorWhereInput[]
    name?: StringFilter<"Color"> | string
    code?: StringNullableFilter<"Color"> | string | null
    hexCode?: StringNullableFilter<"Color"> | string | null
    imageUrl?: StringNullableFilter<"Color"> | string | null
    isActive?: BoolFilter<"Color"> | boolean
    companyId?: IntFilter<"Color"> | number
    createdAt?: DateTimeFilter<"Color"> | Date | string
    updatedAt?: DateTimeFilter<"Color"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }, "id" | "companyId_name">

  export type ColorOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    hexCode?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ColorCountOrderByAggregateInput
    _avg?: ColorAvgOrderByAggregateInput
    _max?: ColorMaxOrderByAggregateInput
    _min?: ColorMinOrderByAggregateInput
    _sum?: ColorSumOrderByAggregateInput
  }

  export type ColorScalarWhereWithAggregatesInput = {
    AND?: ColorScalarWhereWithAggregatesInput | ColorScalarWhereWithAggregatesInput[]
    OR?: ColorScalarWhereWithAggregatesInput[]
    NOT?: ColorScalarWhereWithAggregatesInput | ColorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Color"> | number
    name?: StringWithAggregatesFilter<"Color"> | string
    code?: StringNullableWithAggregatesFilter<"Color"> | string | null
    hexCode?: StringNullableWithAggregatesFilter<"Color"> | string | null
    imageUrl?: StringNullableWithAggregatesFilter<"Color"> | string | null
    isActive?: BoolWithAggregatesFilter<"Color"> | boolean
    companyId?: IntWithAggregatesFilter<"Color"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Color"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Color"> | Date | string
  }

  export type FabricWhereInput = {
    AND?: FabricWhereInput | FabricWhereInput[]
    OR?: FabricWhereInput[]
    NOT?: FabricWhereInput | FabricWhereInput[]
    id?: IntFilter<"Fabric"> | number
    name?: StringFilter<"Fabric"> | string
    code?: StringNullableFilter<"Fabric"> | string | null
    composition?: StringFilter<"Fabric"> | string
    weight?: IntNullableFilter<"Fabric"> | number | null
    width?: IntNullableFilter<"Fabric"> | number | null
    supplier?: StringNullableFilter<"Fabric"> | string | null
    price?: FloatNullableFilter<"Fabric"> | number | null
    minOrder?: IntNullableFilter<"Fabric"> | number | null
    leadTime?: IntNullableFilter<"Fabric"> | number | null
    imageUrl?: StringNullableFilter<"Fabric"> | string | null
    description?: StringNullableFilter<"Fabric"> | string | null
    isActive?: BoolFilter<"Fabric"> | boolean
    companyId?: IntFilter<"Fabric"> | number
    createdAt?: DateTimeFilter<"Fabric"> | Date | string
    updatedAt?: DateTimeFilter<"Fabric"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }

  export type FabricOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    composition?: SortOrder
    weight?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    supplier?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    minOrder?: SortOrderInput | SortOrder
    leadTime?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    _relevance?: FabricOrderByRelevanceInput
  }

  export type FabricWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    companyId_code?: FabricCompanyIdCodeCompoundUniqueInput
    AND?: FabricWhereInput | FabricWhereInput[]
    OR?: FabricWhereInput[]
    NOT?: FabricWhereInput | FabricWhereInput[]
    name?: StringFilter<"Fabric"> | string
    code?: StringNullableFilter<"Fabric"> | string | null
    composition?: StringFilter<"Fabric"> | string
    weight?: IntNullableFilter<"Fabric"> | number | null
    width?: IntNullableFilter<"Fabric"> | number | null
    supplier?: StringNullableFilter<"Fabric"> | string | null
    price?: FloatNullableFilter<"Fabric"> | number | null
    minOrder?: IntNullableFilter<"Fabric"> | number | null
    leadTime?: IntNullableFilter<"Fabric"> | number | null
    imageUrl?: StringNullableFilter<"Fabric"> | string | null
    description?: StringNullableFilter<"Fabric"> | string | null
    isActive?: BoolFilter<"Fabric"> | boolean
    companyId?: IntFilter<"Fabric"> | number
    createdAt?: DateTimeFilter<"Fabric"> | Date | string
    updatedAt?: DateTimeFilter<"Fabric"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }, "id" | "companyId_code">

  export type FabricOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    composition?: SortOrder
    weight?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    supplier?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    minOrder?: SortOrderInput | SortOrder
    leadTime?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FabricCountOrderByAggregateInput
    _avg?: FabricAvgOrderByAggregateInput
    _max?: FabricMaxOrderByAggregateInput
    _min?: FabricMinOrderByAggregateInput
    _sum?: FabricSumOrderByAggregateInput
  }

  export type FabricScalarWhereWithAggregatesInput = {
    AND?: FabricScalarWhereWithAggregatesInput | FabricScalarWhereWithAggregatesInput[]
    OR?: FabricScalarWhereWithAggregatesInput[]
    NOT?: FabricScalarWhereWithAggregatesInput | FabricScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Fabric"> | number
    name?: StringWithAggregatesFilter<"Fabric"> | string
    code?: StringNullableWithAggregatesFilter<"Fabric"> | string | null
    composition?: StringWithAggregatesFilter<"Fabric"> | string
    weight?: IntNullableWithAggregatesFilter<"Fabric"> | number | null
    width?: IntNullableWithAggregatesFilter<"Fabric"> | number | null
    supplier?: StringNullableWithAggregatesFilter<"Fabric"> | string | null
    price?: FloatNullableWithAggregatesFilter<"Fabric"> | number | null
    minOrder?: IntNullableWithAggregatesFilter<"Fabric"> | number | null
    leadTime?: IntNullableWithAggregatesFilter<"Fabric"> | number | null
    imageUrl?: StringNullableWithAggregatesFilter<"Fabric"> | string | null
    description?: StringNullableWithAggregatesFilter<"Fabric"> | string | null
    isActive?: BoolWithAggregatesFilter<"Fabric"> | boolean
    companyId?: IntWithAggregatesFilter<"Fabric"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Fabric"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Fabric"> | Date | string
  }

  export type SizeGroupWhereInput = {
    AND?: SizeGroupWhereInput | SizeGroupWhereInput[]
    OR?: SizeGroupWhereInput[]
    NOT?: SizeGroupWhereInput | SizeGroupWhereInput[]
    id?: IntFilter<"SizeGroup"> | number
    name?: StringFilter<"SizeGroup"> | string
    category?: StringNullableFilter<"SizeGroup"> | string | null
    sizes?: StringFilter<"SizeGroup"> | string
    description?: StringNullableFilter<"SizeGroup"> | string | null
    isActive?: BoolFilter<"SizeGroup"> | boolean
    companyId?: IntFilter<"SizeGroup"> | number
    createdAt?: DateTimeFilter<"SizeGroup"> | Date | string
    updatedAt?: DateTimeFilter<"SizeGroup"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }

  export type SizeGroupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrderInput | SortOrder
    sizes?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    _relevance?: SizeGroupOrderByRelevanceInput
  }

  export type SizeGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    companyId_name?: SizeGroupCompanyIdNameCompoundUniqueInput
    AND?: SizeGroupWhereInput | SizeGroupWhereInput[]
    OR?: SizeGroupWhereInput[]
    NOT?: SizeGroupWhereInput | SizeGroupWhereInput[]
    name?: StringFilter<"SizeGroup"> | string
    category?: StringNullableFilter<"SizeGroup"> | string | null
    sizes?: StringFilter<"SizeGroup"> | string
    description?: StringNullableFilter<"SizeGroup"> | string | null
    isActive?: BoolFilter<"SizeGroup"> | boolean
    companyId?: IntFilter<"SizeGroup"> | number
    createdAt?: DateTimeFilter<"SizeGroup"> | Date | string
    updatedAt?: DateTimeFilter<"SizeGroup"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }, "id" | "companyId_name">

  export type SizeGroupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrderInput | SortOrder
    sizes?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SizeGroupCountOrderByAggregateInput
    _avg?: SizeGroupAvgOrderByAggregateInput
    _max?: SizeGroupMaxOrderByAggregateInput
    _min?: SizeGroupMinOrderByAggregateInput
    _sum?: SizeGroupSumOrderByAggregateInput
  }

  export type SizeGroupScalarWhereWithAggregatesInput = {
    AND?: SizeGroupScalarWhereWithAggregatesInput | SizeGroupScalarWhereWithAggregatesInput[]
    OR?: SizeGroupScalarWhereWithAggregatesInput[]
    NOT?: SizeGroupScalarWhereWithAggregatesInput | SizeGroupScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SizeGroup"> | number
    name?: StringWithAggregatesFilter<"SizeGroup"> | string
    category?: StringNullableWithAggregatesFilter<"SizeGroup"> | string | null
    sizes?: StringWithAggregatesFilter<"SizeGroup"> | string
    description?: StringNullableWithAggregatesFilter<"SizeGroup"> | string | null
    isActive?: BoolWithAggregatesFilter<"SizeGroup"> | boolean
    companyId?: IntWithAggregatesFilter<"SizeGroup"> | number
    createdAt?: DateTimeWithAggregatesFilter<"SizeGroup"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SizeGroup"> | Date | string
  }

  export type SeasonItemWhereInput = {
    AND?: SeasonItemWhereInput | SeasonItemWhereInput[]
    OR?: SeasonItemWhereInput[]
    NOT?: SeasonItemWhereInput | SeasonItemWhereInput[]
    id?: IntFilter<"SeasonItem"> | number
    name?: StringFilter<"SeasonItem"> | string
    fullName?: StringFilter<"SeasonItem"> | string
    year?: IntFilter<"SeasonItem"> | number
    type?: StringFilter<"SeasonItem"> | string
    startDate?: DateTimeNullableFilter<"SeasonItem"> | Date | string | null
    endDate?: DateTimeNullableFilter<"SeasonItem"> | Date | string | null
    description?: StringNullableFilter<"SeasonItem"> | string | null
    isActive?: BoolFilter<"SeasonItem"> | boolean
    companyId?: IntFilter<"SeasonItem"> | number
    createdAt?: DateTimeFilter<"SeasonItem"> | Date | string
    updatedAt?: DateTimeFilter<"SeasonItem"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }

  export type SeasonItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    fullName?: SortOrder
    year?: SortOrder
    type?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    _relevance?: SeasonItemOrderByRelevanceInput
  }

  export type SeasonItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    companyId_name?: SeasonItemCompanyIdNameCompoundUniqueInput
    AND?: SeasonItemWhereInput | SeasonItemWhereInput[]
    OR?: SeasonItemWhereInput[]
    NOT?: SeasonItemWhereInput | SeasonItemWhereInput[]
    name?: StringFilter<"SeasonItem"> | string
    fullName?: StringFilter<"SeasonItem"> | string
    year?: IntFilter<"SeasonItem"> | number
    type?: StringFilter<"SeasonItem"> | string
    startDate?: DateTimeNullableFilter<"SeasonItem"> | Date | string | null
    endDate?: DateTimeNullableFilter<"SeasonItem"> | Date | string | null
    description?: StringNullableFilter<"SeasonItem"> | string | null
    isActive?: BoolFilter<"SeasonItem"> | boolean
    companyId?: IntFilter<"SeasonItem"> | number
    createdAt?: DateTimeFilter<"SeasonItem"> | Date | string
    updatedAt?: DateTimeFilter<"SeasonItem"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }, "id" | "companyId_name">

  export type SeasonItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    fullName?: SortOrder
    year?: SortOrder
    type?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SeasonItemCountOrderByAggregateInput
    _avg?: SeasonItemAvgOrderByAggregateInput
    _max?: SeasonItemMaxOrderByAggregateInput
    _min?: SeasonItemMinOrderByAggregateInput
    _sum?: SeasonItemSumOrderByAggregateInput
  }

  export type SeasonItemScalarWhereWithAggregatesInput = {
    AND?: SeasonItemScalarWhereWithAggregatesInput | SeasonItemScalarWhereWithAggregatesInput[]
    OR?: SeasonItemScalarWhereWithAggregatesInput[]
    NOT?: SeasonItemScalarWhereWithAggregatesInput | SeasonItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SeasonItem"> | number
    name?: StringWithAggregatesFilter<"SeasonItem"> | string
    fullName?: StringWithAggregatesFilter<"SeasonItem"> | string
    year?: IntWithAggregatesFilter<"SeasonItem"> | number
    type?: StringWithAggregatesFilter<"SeasonItem"> | string
    startDate?: DateTimeNullableWithAggregatesFilter<"SeasonItem"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"SeasonItem"> | Date | string | null
    description?: StringNullableWithAggregatesFilter<"SeasonItem"> | string | null
    isActive?: BoolWithAggregatesFilter<"SeasonItem"> | boolean
    companyId?: IntWithAggregatesFilter<"SeasonItem"> | number
    createdAt?: DateTimeWithAggregatesFilter<"SeasonItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SeasonItem"> | Date | string
  }

  export type FitItemWhereInput = {
    AND?: FitItemWhereInput | FitItemWhereInput[]
    OR?: FitItemWhereInput[]
    NOT?: FitItemWhereInput | FitItemWhereInput[]
    id?: IntFilter<"FitItem"> | number
    name?: StringFilter<"FitItem"> | string
    code?: StringNullableFilter<"FitItem"> | string | null
    category?: StringNullableFilter<"FitItem"> | string | null
    description?: StringNullableFilter<"FitItem"> | string | null
    isActive?: BoolFilter<"FitItem"> | boolean
    companyId?: IntFilter<"FitItem"> | number
    createdAt?: DateTimeFilter<"FitItem"> | Date | string
    updatedAt?: DateTimeFilter<"FitItem"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }

  export type FitItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    _relevance?: FitItemOrderByRelevanceInput
  }

  export type FitItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    companyId_name?: FitItemCompanyIdNameCompoundUniqueInput
    AND?: FitItemWhereInput | FitItemWhereInput[]
    OR?: FitItemWhereInput[]
    NOT?: FitItemWhereInput | FitItemWhereInput[]
    name?: StringFilter<"FitItem"> | string
    code?: StringNullableFilter<"FitItem"> | string | null
    category?: StringNullableFilter<"FitItem"> | string | null
    description?: StringNullableFilter<"FitItem"> | string | null
    isActive?: BoolFilter<"FitItem"> | boolean
    companyId?: IntFilter<"FitItem"> | number
    createdAt?: DateTimeFilter<"FitItem"> | Date | string
    updatedAt?: DateTimeFilter<"FitItem"> | Date | string
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
  }, "id" | "companyId_name">

  export type FitItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FitItemCountOrderByAggregateInput
    _avg?: FitItemAvgOrderByAggregateInput
    _max?: FitItemMaxOrderByAggregateInput
    _min?: FitItemMinOrderByAggregateInput
    _sum?: FitItemSumOrderByAggregateInput
  }

  export type FitItemScalarWhereWithAggregatesInput = {
    AND?: FitItemScalarWhereWithAggregatesInput | FitItemScalarWhereWithAggregatesInput[]
    OR?: FitItemScalarWhereWithAggregatesInput[]
    NOT?: FitItemScalarWhereWithAggregatesInput | FitItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FitItem"> | number
    name?: StringWithAggregatesFilter<"FitItem"> | string
    code?: StringNullableWithAggregatesFilter<"FitItem"> | string | null
    category?: StringNullableWithAggregatesFilter<"FitItem"> | string | null
    description?: StringNullableWithAggregatesFilter<"FitItem"> | string | null
    isActive?: BoolWithAggregatesFilter<"FitItem"> | boolean
    companyId?: IntWithAggregatesFilter<"FitItem"> | number
    createdAt?: DateTimeWithAggregatesFilter<"FitItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FitItem"> | Date | string
  }

  export type CertificationWhereInput = {
    AND?: CertificationWhereInput | CertificationWhereInput[]
    OR?: CertificationWhereInput[]
    NOT?: CertificationWhereInput | CertificationWhereInput[]
    id?: IntFilter<"Certification"> | number
    createdAt?: DateTimeFilter<"Certification"> | Date | string
    updatedAt?: DateTimeFilter<"Certification"> | Date | string
    name?: StringFilter<"Certification"> | string
    code?: StringNullableFilter<"Certification"> | string | null
    category?: EnumCertificationCategoryFilter<"Certification"> | $Enums.CertificationCategory
    issuer?: StringNullableFilter<"Certification"> | string | null
    validFrom?: DateTimeNullableFilter<"Certification"> | Date | string | null
    validUntil?: DateTimeNullableFilter<"Certification"> | Date | string | null
    certificateNumber?: StringNullableFilter<"Certification"> | string | null
    certificateFile?: StringNullableFilter<"Certification"> | string | null
    description?: StringNullableFilter<"Certification"> | string | null
    isActive?: BoolFilter<"Certification"> | boolean
    companyId?: IntFilter<"Certification"> | number
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    collections?: CollectionListRelationFilter
  }

  export type CertificationOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    category?: SortOrder
    issuer?: SortOrderInput | SortOrder
    validFrom?: SortOrderInput | SortOrder
    validUntil?: SortOrderInput | SortOrder
    certificateNumber?: SortOrderInput | SortOrder
    certificateFile?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    company?: CompanyOrderByWithRelationInput
    collections?: CollectionOrderByRelationAggregateInput
    _relevance?: CertificationOrderByRelevanceInput
  }

  export type CertificationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CertificationWhereInput | CertificationWhereInput[]
    OR?: CertificationWhereInput[]
    NOT?: CertificationWhereInput | CertificationWhereInput[]
    createdAt?: DateTimeFilter<"Certification"> | Date | string
    updatedAt?: DateTimeFilter<"Certification"> | Date | string
    name?: StringFilter<"Certification"> | string
    code?: StringNullableFilter<"Certification"> | string | null
    category?: EnumCertificationCategoryFilter<"Certification"> | $Enums.CertificationCategory
    issuer?: StringNullableFilter<"Certification"> | string | null
    validFrom?: DateTimeNullableFilter<"Certification"> | Date | string | null
    validUntil?: DateTimeNullableFilter<"Certification"> | Date | string | null
    certificateNumber?: StringNullableFilter<"Certification"> | string | null
    certificateFile?: StringNullableFilter<"Certification"> | string | null
    description?: StringNullableFilter<"Certification"> | string | null
    isActive?: BoolFilter<"Certification"> | boolean
    companyId?: IntFilter<"Certification"> | number
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    collections?: CollectionListRelationFilter
  }, "id">

  export type CertificationOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    code?: SortOrderInput | SortOrder
    category?: SortOrder
    issuer?: SortOrderInput | SortOrder
    validFrom?: SortOrderInput | SortOrder
    validUntil?: SortOrderInput | SortOrder
    certificateNumber?: SortOrderInput | SortOrder
    certificateFile?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    _count?: CertificationCountOrderByAggregateInput
    _avg?: CertificationAvgOrderByAggregateInput
    _max?: CertificationMaxOrderByAggregateInput
    _min?: CertificationMinOrderByAggregateInput
    _sum?: CertificationSumOrderByAggregateInput
  }

  export type CertificationScalarWhereWithAggregatesInput = {
    AND?: CertificationScalarWhereWithAggregatesInput | CertificationScalarWhereWithAggregatesInput[]
    OR?: CertificationScalarWhereWithAggregatesInput[]
    NOT?: CertificationScalarWhereWithAggregatesInput | CertificationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Certification"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Certification"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Certification"> | Date | string
    name?: StringWithAggregatesFilter<"Certification"> | string
    code?: StringNullableWithAggregatesFilter<"Certification"> | string | null
    category?: EnumCertificationCategoryWithAggregatesFilter<"Certification"> | $Enums.CertificationCategory
    issuer?: StringNullableWithAggregatesFilter<"Certification"> | string | null
    validFrom?: DateTimeNullableWithAggregatesFilter<"Certification"> | Date | string | null
    validUntil?: DateTimeNullableWithAggregatesFilter<"Certification"> | Date | string | null
    certificateNumber?: StringNullableWithAggregatesFilter<"Certification"> | string | null
    certificateFile?: StringNullableWithAggregatesFilter<"Certification"> | string | null
    description?: StringNullableWithAggregatesFilter<"Certification"> | string | null
    isActive?: BoolWithAggregatesFilter<"Certification"> | boolean
    companyId?: IntWithAggregatesFilter<"Certification"> | number
  }

  export type ProductionRevisionWhereInput = {
    AND?: ProductionRevisionWhereInput | ProductionRevisionWhereInput[]
    OR?: ProductionRevisionWhereInput[]
    NOT?: ProductionRevisionWhereInput | ProductionRevisionWhereInput[]
    id?: IntFilter<"ProductionRevision"> | number
    productionId?: IntFilter<"ProductionRevision"> | number
    reason?: StringFilter<"ProductionRevision"> | string
    description?: StringNullableFilter<"ProductionRevision"> | string | null
    extraDays?: IntFilter<"ProductionRevision"> | number
    extraCost?: FloatFilter<"ProductionRevision"> | number
    isApproved?: BoolFilter<"ProductionRevision"> | boolean
    requestedById?: IntFilter<"ProductionRevision"> | number
    createdAt?: DateTimeFilter<"ProductionRevision"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionRevision"> | Date | string
    production?: XOR<ProductionTrackingScalarRelationFilter, ProductionTrackingWhereInput>
    requestedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProductionRevisionOrderByWithRelationInput = {
    id?: SortOrder
    productionId?: SortOrder
    reason?: SortOrder
    description?: SortOrderInput | SortOrder
    extraDays?: SortOrder
    extraCost?: SortOrder
    isApproved?: SortOrder
    requestedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    production?: ProductionTrackingOrderByWithRelationInput
    requestedBy?: UserOrderByWithRelationInput
    _relevance?: ProductionRevisionOrderByRelevanceInput
  }

  export type ProductionRevisionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductionRevisionWhereInput | ProductionRevisionWhereInput[]
    OR?: ProductionRevisionWhereInput[]
    NOT?: ProductionRevisionWhereInput | ProductionRevisionWhereInput[]
    productionId?: IntFilter<"ProductionRevision"> | number
    reason?: StringFilter<"ProductionRevision"> | string
    description?: StringNullableFilter<"ProductionRevision"> | string | null
    extraDays?: IntFilter<"ProductionRevision"> | number
    extraCost?: FloatFilter<"ProductionRevision"> | number
    isApproved?: BoolFilter<"ProductionRevision"> | boolean
    requestedById?: IntFilter<"ProductionRevision"> | number
    createdAt?: DateTimeFilter<"ProductionRevision"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionRevision"> | Date | string
    production?: XOR<ProductionTrackingScalarRelationFilter, ProductionTrackingWhereInput>
    requestedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ProductionRevisionOrderByWithAggregationInput = {
    id?: SortOrder
    productionId?: SortOrder
    reason?: SortOrder
    description?: SortOrderInput | SortOrder
    extraDays?: SortOrder
    extraCost?: SortOrder
    isApproved?: SortOrder
    requestedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductionRevisionCountOrderByAggregateInput
    _avg?: ProductionRevisionAvgOrderByAggregateInput
    _max?: ProductionRevisionMaxOrderByAggregateInput
    _min?: ProductionRevisionMinOrderByAggregateInput
    _sum?: ProductionRevisionSumOrderByAggregateInput
  }

  export type ProductionRevisionScalarWhereWithAggregatesInput = {
    AND?: ProductionRevisionScalarWhereWithAggregatesInput | ProductionRevisionScalarWhereWithAggregatesInput[]
    OR?: ProductionRevisionScalarWhereWithAggregatesInput[]
    NOT?: ProductionRevisionScalarWhereWithAggregatesInput | ProductionRevisionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductionRevision"> | number
    productionId?: IntWithAggregatesFilter<"ProductionRevision"> | number
    reason?: StringWithAggregatesFilter<"ProductionRevision"> | string
    description?: StringNullableWithAggregatesFilter<"ProductionRevision"> | string | null
    extraDays?: IntWithAggregatesFilter<"ProductionRevision"> | number
    extraCost?: FloatWithAggregatesFilter<"ProductionRevision"> | number
    isApproved?: BoolWithAggregatesFilter<"ProductionRevision"> | boolean
    requestedById?: IntWithAggregatesFilter<"ProductionRevision"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ProductionRevision"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductionRevision"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: IntFilter<"Notification"> | number
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    link?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    userId?: IntFilter<"Notification"> | number
    orderId?: IntNullableFilter<"Notification"> | number | null
    sampleId?: IntNullableFilter<"Notification"> | number | null
    productionTrackingId?: IntNullableFilter<"Notification"> | number | null
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    productionTracking?: XOR<ProductionTrackingNullableScalarRelationFilter, ProductionTrackingWhereInput> | null
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    link?: SortOrderInput | SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    productionTrackingId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
    sample?: SampleOrderByWithRelationInput
    productionTracking?: ProductionTrackingOrderByWithRelationInput
    _relevance?: NotificationOrderByRelevanceInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    link?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    userId?: IntFilter<"Notification"> | number
    orderId?: IntNullableFilter<"Notification"> | number | null
    sampleId?: IntNullableFilter<"Notification"> | number | null
    productionTrackingId?: IntNullableFilter<"Notification"> | number | null
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    productionTracking?: XOR<ProductionTrackingNullableScalarRelationFilter, ProductionTrackingWhereInput> | null
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    link?: SortOrderInput | SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    productionTrackingId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _avg?: NotificationAvgOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
    _sum?: NotificationSumOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Notification"> | number
    type?: EnumNotificationTypeWithAggregatesFilter<"Notification"> | $Enums.NotificationType
    title?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    link?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    userId?: IntWithAggregatesFilter<"Notification"> | number
    orderId?: IntNullableWithAggregatesFilter<"Notification"> | number | null
    sampleId?: IntNullableWithAggregatesFilter<"Notification"> | number | null
    productionTrackingId?: IntNullableWithAggregatesFilter<"Notification"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type TaskWhereInput = {
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    id?: IntFilter<"Task"> | number
    title?: StringFilter<"Task"> | string
    description?: StringNullableFilter<"Task"> | string | null
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"Task"> | $Enums.TaskPriority
    type?: EnumTaskTypeFilter<"Task"> | $Enums.TaskType
    relatedStatus?: StringNullableFilter<"Task"> | string | null
    targetStatus?: StringNullableFilter<"Task"> | string | null
    entityType?: StringNullableFilter<"Task"> | string | null
    productionStage?: StringNullableFilter<"Task"> | string | null
    userId?: IntFilter<"Task"> | number
    assignedToId?: IntNullableFilter<"Task"> | number | null
    collectionId?: IntNullableFilter<"Task"> | number | null
    sampleId?: IntNullableFilter<"Task"> | number | null
    orderId?: IntNullableFilter<"Task"> | number | null
    productionTrackingId?: IntNullableFilter<"Task"> | number | null
    dueDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    notes?: StringNullableFilter<"Task"> | string | null
    assignedBy?: IntNullableFilter<"Task"> | number | null
    actionData?: JsonNullableFilter<"Task">
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    assignedTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    collection?: XOR<CollectionNullableScalarRelationFilter, CollectionWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    productionTracking?: XOR<ProductionTrackingNullableScalarRelationFilter, ProductionTrackingWhereInput> | null
  }

  export type TaskOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    type?: SortOrder
    relatedStatus?: SortOrderInput | SortOrder
    targetStatus?: SortOrderInput | SortOrder
    entityType?: SortOrderInput | SortOrder
    productionStage?: SortOrderInput | SortOrder
    userId?: SortOrder
    assignedToId?: SortOrderInput | SortOrder
    collectionId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    productionTrackingId?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    notes?: SortOrderInput | SortOrder
    assignedBy?: SortOrderInput | SortOrder
    actionData?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    assignedTo?: UserOrderByWithRelationInput
    collection?: CollectionOrderByWithRelationInput
    sample?: SampleOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
    productionTracking?: ProductionTrackingOrderByWithRelationInput
    _relevance?: TaskOrderByRelevanceInput
  }

  export type TaskWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    title?: StringFilter<"Task"> | string
    description?: StringNullableFilter<"Task"> | string | null
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"Task"> | $Enums.TaskPriority
    type?: EnumTaskTypeFilter<"Task"> | $Enums.TaskType
    relatedStatus?: StringNullableFilter<"Task"> | string | null
    targetStatus?: StringNullableFilter<"Task"> | string | null
    entityType?: StringNullableFilter<"Task"> | string | null
    productionStage?: StringNullableFilter<"Task"> | string | null
    userId?: IntFilter<"Task"> | number
    assignedToId?: IntNullableFilter<"Task"> | number | null
    collectionId?: IntNullableFilter<"Task"> | number | null
    sampleId?: IntNullableFilter<"Task"> | number | null
    orderId?: IntNullableFilter<"Task"> | number | null
    productionTrackingId?: IntNullableFilter<"Task"> | number | null
    dueDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    notes?: StringNullableFilter<"Task"> | string | null
    assignedBy?: IntNullableFilter<"Task"> | number | null
    actionData?: JsonNullableFilter<"Task">
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    assignedTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    collection?: XOR<CollectionNullableScalarRelationFilter, CollectionWhereInput> | null
    sample?: XOR<SampleNullableScalarRelationFilter, SampleWhereInput> | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    productionTracking?: XOR<ProductionTrackingNullableScalarRelationFilter, ProductionTrackingWhereInput> | null
  }, "id">

  export type TaskOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    type?: SortOrder
    relatedStatus?: SortOrderInput | SortOrder
    targetStatus?: SortOrderInput | SortOrder
    entityType?: SortOrderInput | SortOrder
    productionStage?: SortOrderInput | SortOrder
    userId?: SortOrder
    assignedToId?: SortOrderInput | SortOrder
    collectionId?: SortOrderInput | SortOrder
    sampleId?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    productionTrackingId?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    notes?: SortOrderInput | SortOrder
    assignedBy?: SortOrderInput | SortOrder
    actionData?: SortOrderInput | SortOrder
    _count?: TaskCountOrderByAggregateInput
    _avg?: TaskAvgOrderByAggregateInput
    _max?: TaskMaxOrderByAggregateInput
    _min?: TaskMinOrderByAggregateInput
    _sum?: TaskSumOrderByAggregateInput
  }

  export type TaskScalarWhereWithAggregatesInput = {
    AND?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    OR?: TaskScalarWhereWithAggregatesInput[]
    NOT?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Task"> | number
    title?: StringWithAggregatesFilter<"Task"> | string
    description?: StringNullableWithAggregatesFilter<"Task"> | string | null
    status?: EnumTaskStatusWithAggregatesFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityWithAggregatesFilter<"Task"> | $Enums.TaskPriority
    type?: EnumTaskTypeWithAggregatesFilter<"Task"> | $Enums.TaskType
    relatedStatus?: StringNullableWithAggregatesFilter<"Task"> | string | null
    targetStatus?: StringNullableWithAggregatesFilter<"Task"> | string | null
    entityType?: StringNullableWithAggregatesFilter<"Task"> | string | null
    productionStage?: StringNullableWithAggregatesFilter<"Task"> | string | null
    userId?: IntWithAggregatesFilter<"Task"> | number
    assignedToId?: IntNullableWithAggregatesFilter<"Task"> | number | null
    collectionId?: IntNullableWithAggregatesFilter<"Task"> | number | null
    sampleId?: IntNullableWithAggregatesFilter<"Task"> | number | null
    orderId?: IntNullableWithAggregatesFilter<"Task"> | number | null
    productionTrackingId?: IntNullableWithAggregatesFilter<"Task"> | number | null
    dueDate?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Task"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Task"> | Date | string
    notes?: StringNullableWithAggregatesFilter<"Task"> | string | null
    assignedBy?: IntNullableWithAggregatesFilter<"Task"> | number | null
    actionData?: JsonNullableWithAggregatesFilter<"Task">
  }

  export type CompanyCreateInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompanyUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateInput = {
    content: string
    isRead?: boolean
    type?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
    order?: OrderCreateNestedOneWithoutMessagesInput
    sample?: SampleCreateNestedOneWithoutMessagesInput
    company?: CompanyCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type MessageUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
    order?: OrderUpdateOneWithoutMessagesNestedInput
    sample?: SampleUpdateOneWithoutMessagesNestedInput
    company?: CompanyUpdateOneWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MessageCreateManyInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type MessageUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProductionTrackingCreateInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUpdateInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingCreateManyInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
  }

  export type ProductionTrackingUpdateManyMutationInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionTrackingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RevisionCreateInput = {
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutRevisionsInput
    sample?: SampleCreateNestedOneWithoutRevisionsInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutRevisionsInput
  }

  export type RevisionUncheckedCreateInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RevisionUpdateInput = {
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutRevisionsNestedInput
    sample?: SampleUpdateOneWithoutRevisionsNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutRevisionsNestedInput
  }

  export type RevisionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RevisionCreateManyInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RevisionUpdateManyMutationInput = {
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RevisionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    author?: UserCreateNestedOneWithoutCategoriesInput
    collections?: CollectionCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    parentCategory?: CategoryCreateNestedOneWithoutSubCategoriesInput
    company?: CompanyCreateNestedOneWithoutCategoriesInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    parentCategoryId?: number | null
    companyId?: number | null
    collections?: CollectionUncheckedCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
  }

  export type CategoryUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    author?: UserUpdateOneWithoutCategoriesNestedInput
    collections?: CollectionUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    parentCategory?: CategoryUpdateOneWithoutSubCategoriesNestedInput
    company?: CompanyUpdateOneWithoutCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    collections?: CollectionUncheckedUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    parentCategoryId?: number | null
    companyId?: number | null
  }

  export type CategoryUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CollectionCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
  }

  export type CollectionUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CollectionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserFavoriteCollectionCreateInput = {
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutFavoriteCollectionsInput
    collection: CollectionCreateNestedOneWithoutFavoritedByInput
  }

  export type UserFavoriteCollectionUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    userId: number
    collectionId: number
  }

  export type UserFavoriteCollectionUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFavoriteCollectionsNestedInput
    collection?: CollectionUpdateOneRequiredWithoutFavoritedByNestedInput
  }

  export type UserFavoriteCollectionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    collectionId?: IntFieldUpdateOperationsInput | number
  }

  export type UserFavoriteCollectionCreateManyInput = {
    id?: number
    createdAt?: Date | string
    userId: number
    collectionId: number
  }

  export type UserFavoriteCollectionUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserFavoriteCollectionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    collectionId?: IntFieldUpdateOperationsInput | number
  }

  export type SampleCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type SampleCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
  }

  export type SampleUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SampleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AIAnalysisCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    detectedProduct?: string | null
    detectedColor?: string | null
    detectedFabric?: string | null
    detectedPattern?: string | null
    detectedGender?: string | null
    detectedClassification?: string | null
    detectedAccessories?: string | null
    technicalDescription?: string | null
    qualityAnalysis?: string | null
    qualityScore?: number | null
    costAnalysis?: string | null
    estimatedCostMin?: number | null
    estimatedCostMax?: number | null
    suggestedMinOrder?: number | null
    trendAnalysis?: string | null
    trendScore?: number | null
    targetMarket?: string | null
    salesPotential?: string | null
    designSuggestions?: string | null
    designStyle?: string | null
    designFocus?: string | null
    sample: SampleCreateNestedOneWithoutAiAnalysisInput
  }

  export type AIAnalysisUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    detectedProduct?: string | null
    detectedColor?: string | null
    detectedFabric?: string | null
    detectedPattern?: string | null
    detectedGender?: string | null
    detectedClassification?: string | null
    detectedAccessories?: string | null
    technicalDescription?: string | null
    qualityAnalysis?: string | null
    qualityScore?: number | null
    costAnalysis?: string | null
    estimatedCostMin?: number | null
    estimatedCostMax?: number | null
    suggestedMinOrder?: number | null
    trendAnalysis?: string | null
    trendScore?: number | null
    targetMarket?: string | null
    salesPotential?: string | null
    designSuggestions?: string | null
    designStyle?: string | null
    designFocus?: string | null
    sampleId: number
  }

  export type AIAnalysisUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detectedProduct?: NullableStringFieldUpdateOperationsInput | string | null
    detectedColor?: NullableStringFieldUpdateOperationsInput | string | null
    detectedFabric?: NullableStringFieldUpdateOperationsInput | string | null
    detectedPattern?: NullableStringFieldUpdateOperationsInput | string | null
    detectedGender?: NullableStringFieldUpdateOperationsInput | string | null
    detectedClassification?: NullableStringFieldUpdateOperationsInput | string | null
    detectedAccessories?: NullableStringFieldUpdateOperationsInput | string | null
    technicalDescription?: NullableStringFieldUpdateOperationsInput | string | null
    qualityAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    qualityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    costAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedCostMin?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedCostMax?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestedMinOrder?: NullableIntFieldUpdateOperationsInput | number | null
    trendAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    trendScore?: NullableFloatFieldUpdateOperationsInput | number | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    salesPotential?: NullableStringFieldUpdateOperationsInput | string | null
    designSuggestions?: NullableStringFieldUpdateOperationsInput | string | null
    designStyle?: NullableStringFieldUpdateOperationsInput | string | null
    designFocus?: NullableStringFieldUpdateOperationsInput | string | null
    sample?: SampleUpdateOneRequiredWithoutAiAnalysisNestedInput
  }

  export type AIAnalysisUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detectedProduct?: NullableStringFieldUpdateOperationsInput | string | null
    detectedColor?: NullableStringFieldUpdateOperationsInput | string | null
    detectedFabric?: NullableStringFieldUpdateOperationsInput | string | null
    detectedPattern?: NullableStringFieldUpdateOperationsInput | string | null
    detectedGender?: NullableStringFieldUpdateOperationsInput | string | null
    detectedClassification?: NullableStringFieldUpdateOperationsInput | string | null
    detectedAccessories?: NullableStringFieldUpdateOperationsInput | string | null
    technicalDescription?: NullableStringFieldUpdateOperationsInput | string | null
    qualityAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    qualityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    costAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedCostMin?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedCostMax?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestedMinOrder?: NullableIntFieldUpdateOperationsInput | number | null
    trendAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    trendScore?: NullableFloatFieldUpdateOperationsInput | number | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    salesPotential?: NullableStringFieldUpdateOperationsInput | string | null
    designSuggestions?: NullableStringFieldUpdateOperationsInput | string | null
    designStyle?: NullableStringFieldUpdateOperationsInput | string | null
    designFocus?: NullableStringFieldUpdateOperationsInput | string | null
    sampleId?: IntFieldUpdateOperationsInput | number
  }

  export type AIAnalysisCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    detectedProduct?: string | null
    detectedColor?: string | null
    detectedFabric?: string | null
    detectedPattern?: string | null
    detectedGender?: string | null
    detectedClassification?: string | null
    detectedAccessories?: string | null
    technicalDescription?: string | null
    qualityAnalysis?: string | null
    qualityScore?: number | null
    costAnalysis?: string | null
    estimatedCostMin?: number | null
    estimatedCostMax?: number | null
    suggestedMinOrder?: number | null
    trendAnalysis?: string | null
    trendScore?: number | null
    targetMarket?: string | null
    salesPotential?: string | null
    designSuggestions?: string | null
    designStyle?: string | null
    designFocus?: string | null
    sampleId: number
  }

  export type AIAnalysisUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detectedProduct?: NullableStringFieldUpdateOperationsInput | string | null
    detectedColor?: NullableStringFieldUpdateOperationsInput | string | null
    detectedFabric?: NullableStringFieldUpdateOperationsInput | string | null
    detectedPattern?: NullableStringFieldUpdateOperationsInput | string | null
    detectedGender?: NullableStringFieldUpdateOperationsInput | string | null
    detectedClassification?: NullableStringFieldUpdateOperationsInput | string | null
    detectedAccessories?: NullableStringFieldUpdateOperationsInput | string | null
    technicalDescription?: NullableStringFieldUpdateOperationsInput | string | null
    qualityAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    qualityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    costAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedCostMin?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedCostMax?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestedMinOrder?: NullableIntFieldUpdateOperationsInput | number | null
    trendAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    trendScore?: NullableFloatFieldUpdateOperationsInput | number | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    salesPotential?: NullableStringFieldUpdateOperationsInput | string | null
    designSuggestions?: NullableStringFieldUpdateOperationsInput | string | null
    designStyle?: NullableStringFieldUpdateOperationsInput | string | null
    designFocus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AIAnalysisUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detectedProduct?: NullableStringFieldUpdateOperationsInput | string | null
    detectedColor?: NullableStringFieldUpdateOperationsInput | string | null
    detectedFabric?: NullableStringFieldUpdateOperationsInput | string | null
    detectedPattern?: NullableStringFieldUpdateOperationsInput | string | null
    detectedGender?: NullableStringFieldUpdateOperationsInput | string | null
    detectedClassification?: NullableStringFieldUpdateOperationsInput | string | null
    detectedAccessories?: NullableStringFieldUpdateOperationsInput | string | null
    technicalDescription?: NullableStringFieldUpdateOperationsInput | string | null
    qualityAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    qualityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    costAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedCostMin?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedCostMax?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestedMinOrder?: NullableIntFieldUpdateOperationsInput | number | null
    trendAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    trendScore?: NullableFloatFieldUpdateOperationsInput | number | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    salesPotential?: NullableStringFieldUpdateOperationsInput | string | null
    designSuggestions?: NullableStringFieldUpdateOperationsInput | string | null
    designStyle?: NullableStringFieldUpdateOperationsInput | string | null
    designFocus?: NullableStringFieldUpdateOperationsInput | string | null
    sampleId?: IntFieldUpdateOperationsInput | number
  }

  export type SampleProductionCreateInput = {
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    sample: SampleCreateNestedOneWithoutProductionHistoryInput
    updatedBy: UserCreateNestedOneWithoutSampleProductionUpdatesInput
  }

  export type SampleProductionUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    sampleId: number
    updatedById: number
  }

  export type SampleProductionUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sample?: SampleUpdateOneRequiredWithoutProductionHistoryNestedInput
    updatedBy?: UserUpdateOneRequiredWithoutSampleProductionUpdatesNestedInput
  }

  export type SampleProductionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sampleId?: IntFieldUpdateOperationsInput | number
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type SampleProductionCreateManyInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    sampleId: number
    updatedById: number
  }

  export type SampleProductionUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SampleProductionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sampleId?: IntFieldUpdateOperationsInput | number
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type OrderCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
  }

  export type OrderUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderProductionCreateInput = {
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    order: OrderCreateNestedOneWithoutProductionHistoryInput
    updatedBy: UserCreateNestedOneWithoutOrderProductionUpdatesInput
  }

  export type OrderProductionUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    orderId: number
    updatedById: number
  }

  export type OrderProductionUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneRequiredWithoutProductionHistoryNestedInput
    updatedBy?: UserUpdateOneRequiredWithoutOrderProductionUpdatesNestedInput
  }

  export type OrderProductionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orderId?: IntFieldUpdateOperationsInput | number
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type OrderProductionCreateManyInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    orderId: number
    updatedById: number
  }

  export type OrderProductionUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderProductionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orderId?: IntFieldUpdateOperationsInput | number
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type QuestionCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collection: CollectionCreateNestedOneWithoutQuestionsInput
    customer: UserCreateNestedOneWithoutCustomerQuestionsInput
    manufacture: UserCreateNestedOneWithoutManufactureQuestionsInput
  }

  export type QuestionUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collectionId: number
    customerId: number
    manufactureId: number
  }

  export type QuestionUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collection?: CollectionUpdateOneRequiredWithoutQuestionsNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerQuestionsNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureQuestionsNestedInput
  }

  export type QuestionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
  }

  export type QuestionCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collectionId: number
    customerId: number
    manufactureId: number
  }

  export type QuestionUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
  }

  export type QuestionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    collection: CollectionCreateNestedOneWithoutReviewsInput
    customer: UserCreateNestedOneWithoutCustomerReviewsInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    collectionId: number
    customerId: number
  }

  export type ReviewUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    collection?: CollectionUpdateOneRequiredWithoutReviewsNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerReviewsNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    collectionId: number
    customerId: number
  }

  export type ReviewUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
  }

  export type FileCreateInput = {
    id?: string
    filename: string
    path: string
    size: number
    mimetype: string
    encoding?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileUncheckedCreateInput = {
    id?: string
    filename: string
    path: string
    size: number
    mimetype: string
    encoding?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    mimetype?: StringFieldUpdateOperationsInput | string
    encoding?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    mimetype?: StringFieldUpdateOperationsInput | string
    encoding?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileCreateManyInput = {
    id?: string
    filename: string
    path: string
    size: number
    mimetype: string
    encoding?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    mimetype?: StringFieldUpdateOperationsInput | string
    encoding?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    mimetype?: StringFieldUpdateOperationsInput | string
    encoding?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionStageUpdateCreateInput = {
    stage: $Enums.ProductionStage
    status?: $Enums.StageStatus
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    estimatedDays?: number | null
    notes?: string | null
    photos?: string | null
    isRevision?: boolean
    delayReason?: string | null
    extraDays?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    production: ProductionTrackingCreateNestedOneWithoutStageUpdatesInput
  }

  export type ProductionStageUpdateUncheckedCreateInput = {
    id?: number
    productionId: number
    stage: $Enums.ProductionStage
    status?: $Enums.StageStatus
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    estimatedDays?: number | null
    notes?: string | null
    photos?: string | null
    isRevision?: boolean
    delayReason?: string | null
    extraDays?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionStageUpdateUpdateInput = {
    stage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    status?: EnumStageStatusFieldUpdateOperationsInput | $Enums.StageStatus
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    isRevision?: BoolFieldUpdateOperationsInput | boolean
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    production?: ProductionTrackingUpdateOneRequiredWithoutStageUpdatesNestedInput
  }

  export type ProductionStageUpdateUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    stage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    status?: EnumStageStatusFieldUpdateOperationsInput | $Enums.StageStatus
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    isRevision?: BoolFieldUpdateOperationsInput | boolean
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionStageUpdateCreateManyInput = {
    id?: number
    productionId: number
    stage: $Enums.ProductionStage
    status?: $Enums.StageStatus
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    estimatedDays?: number | null
    notes?: string | null
    photos?: string | null
    isRevision?: boolean
    delayReason?: string | null
    extraDays?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionStageUpdateUpdateManyMutationInput = {
    stage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    status?: EnumStageStatusFieldUpdateOperationsInput | $Enums.StageStatus
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    isRevision?: BoolFieldUpdateOperationsInput | boolean
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionStageUpdateUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    stage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    status?: EnumStageStatusFieldUpdateOperationsInput | $Enums.StageStatus
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    isRevision?: BoolFieldUpdateOperationsInput | boolean
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualityControlCreateInput = {
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    production: ProductionTrackingCreateNestedOneWithoutQualityControlsInput
    inspector: UserCreateNestedOneWithoutQualityInspectionsInput
  }

  export type QualityControlUncheckedCreateInput = {
    id?: number
    productionId: number
    inspectorId: number
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualityControlUpdateInput = {
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    production?: ProductionTrackingUpdateOneRequiredWithoutQualityControlsNestedInput
    inspector?: UserUpdateOneRequiredWithoutQualityInspectionsNestedInput
  }

  export type QualityControlUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    inspectorId?: IntFieldUpdateOperationsInput | number
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualityControlCreateManyInput = {
    id?: number
    productionId: number
    inspectorId: number
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualityControlUpdateManyMutationInput = {
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualityControlUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    inspectorId?: IntFieldUpdateOperationsInput | number
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkshopCreateInput = {
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    owner: UserCreateNestedOneWithoutOwnedWorkshopsInput
    sewingProductions?: ProductionTrackingCreateNestedManyWithoutSewingWorkshopInput
    packagingProductions?: ProductionTrackingCreateNestedManyWithoutPackagingWorkshopInput
  }

  export type WorkshopUncheckedCreateInput = {
    id?: number
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    ownerId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sewingProductions?: ProductionTrackingUncheckedCreateNestedManyWithoutSewingWorkshopInput
    packagingProductions?: ProductionTrackingUncheckedCreateNestedManyWithoutPackagingWorkshopInput
  }

  export type WorkshopUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneRequiredWithoutOwnedWorkshopsNestedInput
    sewingProductions?: ProductionTrackingUpdateManyWithoutSewingWorkshopNestedInput
    packagingProductions?: ProductionTrackingUpdateManyWithoutPackagingWorkshopNestedInput
  }

  export type WorkshopUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    ownerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sewingProductions?: ProductionTrackingUncheckedUpdateManyWithoutSewingWorkshopNestedInput
    packagingProductions?: ProductionTrackingUncheckedUpdateManyWithoutPackagingWorkshopNestedInput
  }

  export type WorkshopCreateManyInput = {
    id?: number
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    ownerId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WorkshopUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkshopUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    ownerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ColorCreateInput = {
    name: string
    code?: string | null
    hexCode?: string | null
    imageUrl?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutColorsInput
  }

  export type ColorUncheckedCreateInput = {
    id?: number
    name: string
    code?: string | null
    hexCode?: string | null
    imageUrl?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ColorUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    hexCode?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutColorsNestedInput
  }

  export type ColorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    hexCode?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ColorCreateManyInput = {
    id?: number
    name: string
    code?: string | null
    hexCode?: string | null
    imageUrl?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ColorUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    hexCode?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ColorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    hexCode?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FabricCreateInput = {
    name: string
    code?: string | null
    composition: string
    weight?: number | null
    width?: number | null
    supplier?: string | null
    price?: number | null
    minOrder?: number | null
    leadTime?: number | null
    imageUrl?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutFabricsInput
  }

  export type FabricUncheckedCreateInput = {
    id?: number
    name: string
    code?: string | null
    composition: string
    weight?: number | null
    width?: number | null
    supplier?: string | null
    price?: number | null
    minOrder?: number | null
    leadTime?: number | null
    imageUrl?: string | null
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FabricUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: StringFieldUpdateOperationsInput | string
    weight?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    minOrder?: NullableIntFieldUpdateOperationsInput | number | null
    leadTime?: NullableIntFieldUpdateOperationsInput | number | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutFabricsNestedInput
  }

  export type FabricUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: StringFieldUpdateOperationsInput | string
    weight?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    minOrder?: NullableIntFieldUpdateOperationsInput | number | null
    leadTime?: NullableIntFieldUpdateOperationsInput | number | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FabricCreateManyInput = {
    id?: number
    name: string
    code?: string | null
    composition: string
    weight?: number | null
    width?: number | null
    supplier?: string | null
    price?: number | null
    minOrder?: number | null
    leadTime?: number | null
    imageUrl?: string | null
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FabricUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: StringFieldUpdateOperationsInput | string
    weight?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    minOrder?: NullableIntFieldUpdateOperationsInput | number | null
    leadTime?: NullableIntFieldUpdateOperationsInput | number | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FabricUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: StringFieldUpdateOperationsInput | string
    weight?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    minOrder?: NullableIntFieldUpdateOperationsInput | number | null
    leadTime?: NullableIntFieldUpdateOperationsInput | number | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SizeGroupCreateInput = {
    name: string
    category?: string | null
    sizes: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutSizeGroupsInput
  }

  export type SizeGroupUncheckedCreateInput = {
    id?: number
    name: string
    category?: string | null
    sizes: string
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SizeGroupUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sizes?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutSizeGroupsNestedInput
  }

  export type SizeGroupUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sizes?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SizeGroupCreateManyInput = {
    id?: number
    name: string
    category?: string | null
    sizes: string
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SizeGroupUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sizes?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SizeGroupUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sizes?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeasonItemCreateInput = {
    name: string
    fullName: string
    year: number
    type: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutSeasonsInput
  }

  export type SeasonItemUncheckedCreateInput = {
    id?: number
    name: string
    fullName: string
    year: number
    type: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeasonItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutSeasonsNestedInput
  }

  export type SeasonItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeasonItemCreateManyInput = {
    id?: number
    name: string
    fullName: string
    year: number
    type: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeasonItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeasonItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FitItemCreateInput = {
    name: string
    code?: string | null
    category?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutFitsInput
  }

  export type FitItemUncheckedCreateInput = {
    id?: number
    name: string
    code?: string | null
    category?: string | null
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FitItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutFitsNestedInput
  }

  export type FitItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FitItemCreateManyInput = {
    id?: number
    name: string
    code?: string | null
    category?: string | null
    description?: string | null
    isActive?: boolean
    companyId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FitItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FitItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CertificationCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
    company: CompanyCreateNestedOneWithoutCertificationsInput
    collections?: CollectionCreateNestedManyWithoutCertificationsInput
  }

  export type CertificationUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
    companyId: number
    collections?: CollectionUncheckedCreateNestedManyWithoutCertificationsInput
  }

  export type CertificationUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    company?: CompanyUpdateOneRequiredWithoutCertificationsNestedInput
    collections?: CollectionUpdateManyWithoutCertificationsNestedInput
  }

  export type CertificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
    collections?: CollectionUncheckedUpdateManyWithoutCertificationsNestedInput
  }

  export type CertificationCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
    companyId: number
  }

  export type CertificationUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CertificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
  }

  export type ProductionRevisionCreateInput = {
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    production: ProductionTrackingCreateNestedOneWithoutProductionRevisionsInput
    requestedBy: UserCreateNestedOneWithoutRevisionRequestsInput
  }

  export type ProductionRevisionUncheckedCreateInput = {
    id?: number
    productionId: number
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    requestedById: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionRevisionUpdateInput = {
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    production?: ProductionTrackingUpdateOneRequiredWithoutProductionRevisionsNestedInput
    requestedBy?: UserUpdateOneRequiredWithoutRevisionRequestsNestedInput
  }

  export type ProductionRevisionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    requestedById?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionRevisionCreateManyInput = {
    id?: number
    productionId: number
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    requestedById: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionRevisionUpdateManyMutationInput = {
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionRevisionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    requestedById?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
    order?: OrderCreateNestedOneWithoutNotificationsInput
    sample?: SampleCreateNestedOneWithoutNotificationsInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    orderId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateInput = {
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
    order?: OrderUpdateOneWithoutNotificationsNestedInput
    sample?: SampleUpdateOneWithoutNotificationsNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    orderId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskCreateInput = {
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutTasksInput
    assignedTo?: UserCreateNestedOneWithoutAssignedTasksInput
    collection?: CollectionCreateNestedOneWithoutTasksInput
    sample?: SampleCreateNestedOneWithoutTasksInput
    order?: OrderCreateNestedOneWithoutTasksInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutTasksNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedTasksNestedInput
    collection?: CollectionUpdateOneWithoutTasksNestedInput
    sample?: SampleUpdateOneWithoutTasksNestedInput
    order?: OrderUpdateOneWithoutTasksNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateManyInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumCompanyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[]
    notIn?: $Enums.CompanyType[]
    not?: NestedEnumCompanyTypeFilter<$PrismaModel> | $Enums.CompanyType
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumSubscriptionPlanFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPlan | EnumSubscriptionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionPlan[]
    notIn?: $Enums.SubscriptionPlan[]
    not?: NestedEnumSubscriptionPlanFilter<$PrismaModel> | $Enums.SubscriptionPlan
  }

  export type EnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[]
    notIn?: $Enums.SubscriptionStatus[]
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type EnumBillingCycleFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingCycle | EnumBillingCycleFieldRefInput<$PrismaModel>
    in?: $Enums.BillingCycle[]
    notIn?: $Enums.BillingCycle[]
    not?: NestedEnumBillingCycleFilter<$PrismaModel> | $Enums.BillingCycle
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type CollectionListRelationFilter = {
    every?: CollectionWhereInput
    some?: CollectionWhereInput
    none?: CollectionWhereInput
  }

  export type SampleListRelationFilter = {
    every?: SampleWhereInput
    some?: SampleWhereInput
    none?: SampleWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type ProductionTrackingListRelationFilter = {
    every?: ProductionTrackingWhereInput
    some?: ProductionTrackingWhereInput
    none?: ProductionTrackingWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type ColorListRelationFilter = {
    every?: ColorWhereInput
    some?: ColorWhereInput
    none?: ColorWhereInput
  }

  export type FabricListRelationFilter = {
    every?: FabricWhereInput
    some?: FabricWhereInput
    none?: FabricWhereInput
  }

  export type SizeGroupListRelationFilter = {
    every?: SizeGroupWhereInput
    some?: SizeGroupWhereInput
    none?: SizeGroupWhereInput
  }

  export type SeasonItemListRelationFilter = {
    every?: SeasonItemWhereInput
    some?: SeasonItemWhereInput
    none?: SeasonItemWhereInput
  }

  export type FitItemListRelationFilter = {
    every?: FitItemWhereInput
    some?: FitItemWhereInput
    none?: FitItemWhereInput
  }

  export type CertificationListRelationFilter = {
    every?: CertificationWhereInput
    some?: CertificationWhereInput
    none?: CertificationWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CollectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SampleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductionTrackingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ColorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FabricOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SizeGroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SeasonItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FitItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CertificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompanyOrderByRelevanceInput = {
    fields: CompanyOrderByRelevanceFieldEnum | CompanyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    location?: SortOrder
    website?: SortOrder
    type?: SortOrder
    description?: SortOrder
    ownerId?: SortOrder
    isActive?: SortOrder
    settings?: SortOrder
    logo?: SortOrder
    coverImage?: SortOrder
    brandColors?: SortOrder
    socialLinks?: SortOrder
    isPublicProfile?: SortOrder
    profileSlug?: SortOrder
    subscriptionPlan?: SortOrder
    subscriptionStatus?: SortOrder
    billingCycle?: SortOrder
    maxUsers?: SortOrder
    maxSamples?: SortOrder
    maxOrders?: SortOrder
    maxCollections?: SortOrder
    maxStorageGB?: SortOrder
    currentUsers?: SortOrder
    currentSamples?: SortOrder
    currentOrders?: SortOrder
    currentCollections?: SortOrder
    currentStorageGB?: SortOrder
    trialStartedAt?: SortOrder
    trialEndsAt?: SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrder
    billingAddress?: SortOrder
    subscriptionStartedAt?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAtPeriodEnd?: SortOrder
    cancelledAt?: SortOrder
    defaultView?: SortOrder
    enabledModules?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    maxUsers?: SortOrder
    maxSamples?: SortOrder
    maxOrders?: SortOrder
    maxCollections?: SortOrder
    maxStorageGB?: SortOrder
    currentUsers?: SortOrder
    currentSamples?: SortOrder
    currentOrders?: SortOrder
    currentCollections?: SortOrder
    currentStorageGB?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    location?: SortOrder
    website?: SortOrder
    type?: SortOrder
    description?: SortOrder
    ownerId?: SortOrder
    isActive?: SortOrder
    logo?: SortOrder
    coverImage?: SortOrder
    isPublicProfile?: SortOrder
    profileSlug?: SortOrder
    subscriptionPlan?: SortOrder
    subscriptionStatus?: SortOrder
    billingCycle?: SortOrder
    maxUsers?: SortOrder
    maxSamples?: SortOrder
    maxOrders?: SortOrder
    maxCollections?: SortOrder
    maxStorageGB?: SortOrder
    currentUsers?: SortOrder
    currentSamples?: SortOrder
    currentOrders?: SortOrder
    currentCollections?: SortOrder
    currentStorageGB?: SortOrder
    trialStartedAt?: SortOrder
    trialEndsAt?: SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrder
    billingAddress?: SortOrder
    subscriptionStartedAt?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAtPeriodEnd?: SortOrder
    cancelledAt?: SortOrder
    defaultView?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    location?: SortOrder
    website?: SortOrder
    type?: SortOrder
    description?: SortOrder
    ownerId?: SortOrder
    isActive?: SortOrder
    logo?: SortOrder
    coverImage?: SortOrder
    isPublicProfile?: SortOrder
    profileSlug?: SortOrder
    subscriptionPlan?: SortOrder
    subscriptionStatus?: SortOrder
    billingCycle?: SortOrder
    maxUsers?: SortOrder
    maxSamples?: SortOrder
    maxOrders?: SortOrder
    maxCollections?: SortOrder
    maxStorageGB?: SortOrder
    currentUsers?: SortOrder
    currentSamples?: SortOrder
    currentOrders?: SortOrder
    currentCollections?: SortOrder
    currentStorageGB?: SortOrder
    trialStartedAt?: SortOrder
    trialEndsAt?: SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrder
    billingAddress?: SortOrder
    subscriptionStartedAt?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAtPeriodEnd?: SortOrder
    cancelledAt?: SortOrder
    defaultView?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    maxUsers?: SortOrder
    maxSamples?: SortOrder
    maxOrders?: SortOrder
    maxCollections?: SortOrder
    maxStorageGB?: SortOrder
    currentUsers?: SortOrder
    currentSamples?: SortOrder
    currentOrders?: SortOrder
    currentCollections?: SortOrder
    currentStorageGB?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumCompanyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[]
    notIn?: $Enums.CompanyType[]
    not?: NestedEnumCompanyTypeWithAggregatesFilter<$PrismaModel> | $Enums.CompanyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompanyTypeFilter<$PrismaModel>
    _max?: NestedEnumCompanyTypeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumSubscriptionPlanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPlan | EnumSubscriptionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionPlan[]
    notIn?: $Enums.SubscriptionPlan[]
    not?: NestedEnumSubscriptionPlanWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionPlan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionPlanFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionPlanFilter<$PrismaModel>
  }

  export type EnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[]
    notIn?: $Enums.SubscriptionStatus[]
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type EnumBillingCycleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingCycle | EnumBillingCycleFieldRefInput<$PrismaModel>
    in?: $Enums.BillingCycle[]
    notIn?: $Enums.BillingCycle[]
    not?: NestedEnumBillingCycleWithAggregatesFilter<$PrismaModel> | $Enums.BillingCycle
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBillingCycleFilter<$PrismaModel>
    _max?: NestedEnumBillingCycleFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type OrderNullableScalarRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type SampleNullableScalarRelationFilter = {
    is?: SampleWhereInput | null
    isNot?: SampleWhereInput | null
  }

  export type CompanyNullableScalarRelationFilter = {
    is?: CompanyWhereInput | null
    isNot?: CompanyWhereInput | null
  }

  export type MessageOrderByRelevanceInput = {
    fields: MessageOrderByRelevanceFieldEnum | MessageOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    isRead?: SortOrder
    type?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type MessageAvgOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    companyId?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    isRead?: SortOrder
    type?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    isRead?: SortOrder
    type?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type MessageSumOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    companyId?: SortOrder
  }

  export type EnumProductionStageFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStage | EnumProductionStageFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStage[]
    notIn?: $Enums.ProductionStage[]
    not?: NestedEnumProductionStageFilter<$PrismaModel> | $Enums.ProductionStage
  }

  export type EnumProductionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStatus | EnumProductionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStatus[]
    notIn?: $Enums.ProductionStatus[]
    not?: NestedEnumProductionStatusFilter<$PrismaModel> | $Enums.ProductionStatus
  }

  export type WorkshopNullableScalarRelationFilter = {
    is?: WorkshopWhereInput | null
    isNot?: WorkshopWhereInput | null
  }

  export type ProductionStageUpdateListRelationFilter = {
    every?: ProductionStageUpdateWhereInput
    some?: ProductionStageUpdateWhereInput
    none?: ProductionStageUpdateWhereInput
  }

  export type QualityControlListRelationFilter = {
    every?: QualityControlWhereInput
    some?: QualityControlWhereInput
    none?: QualityControlWhereInput
  }

  export type ProductionRevisionListRelationFilter = {
    every?: ProductionRevisionWhereInput
    some?: ProductionRevisionWhereInput
    none?: ProductionRevisionWhereInput
  }

  export type RevisionListRelationFilter = {
    every?: RevisionWhereInput
    some?: RevisionWhereInput
    none?: RevisionWhereInput
  }

  export type TaskListRelationFilter = {
    every?: TaskWhereInput
    some?: TaskWhereInput
    none?: TaskWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type ProductionStageUpdateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QualityControlOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductionRevisionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RevisionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductionTrackingOrderByRelevanceInput = {
    fields: ProductionTrackingOrderByRelevanceFieldEnum | ProductionTrackingOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ProductionTrackingCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    currentStage?: SortOrder
    overallStatus?: SortOrder
    progress?: SortOrder
    estimatedStartDate?: SortOrder
    estimatedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
    sewingWorkshopId?: SortOrder
    packagingWorkshopId?: SortOrder
  }

  export type ProductionTrackingAvgOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    progress?: SortOrder
    companyId?: SortOrder
    sewingWorkshopId?: SortOrder
    packagingWorkshopId?: SortOrder
  }

  export type ProductionTrackingMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    currentStage?: SortOrder
    overallStatus?: SortOrder
    progress?: SortOrder
    estimatedStartDate?: SortOrder
    estimatedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
    sewingWorkshopId?: SortOrder
    packagingWorkshopId?: SortOrder
  }

  export type ProductionTrackingMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    currentStage?: SortOrder
    overallStatus?: SortOrder
    progress?: SortOrder
    estimatedStartDate?: SortOrder
    estimatedEndDate?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
    sewingWorkshopId?: SortOrder
    packagingWorkshopId?: SortOrder
  }

  export type ProductionTrackingSumOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    progress?: SortOrder
    companyId?: SortOrder
    sewingWorkshopId?: SortOrder
    packagingWorkshopId?: SortOrder
  }

  export type EnumProductionStageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStage | EnumProductionStageFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStage[]
    notIn?: $Enums.ProductionStage[]
    not?: NestedEnumProductionStageWithAggregatesFilter<$PrismaModel> | $Enums.ProductionStage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductionStageFilter<$PrismaModel>
    _max?: NestedEnumProductionStageFilter<$PrismaModel>
  }

  export type EnumProductionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStatus | EnumProductionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStatus[]
    notIn?: $Enums.ProductionStatus[]
    not?: NestedEnumProductionStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductionStatusFilter<$PrismaModel>
    _max?: NestedEnumProductionStatusFilter<$PrismaModel>
  }

  export type ProductionTrackingNullableScalarRelationFilter = {
    is?: ProductionTrackingWhereInput | null
    isNot?: ProductionTrackingWhereInput | null
  }

  export type RevisionOrderByRelevanceInput = {
    fields: RevisionOrderByRelevanceFieldEnum | RevisionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RevisionCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    revisionNumber?: SortOrder
    requestMessage?: SortOrder
    responseMessage?: SortOrder
    status?: SortOrder
    requestedAt?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RevisionAvgOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    revisionNumber?: SortOrder
  }

  export type RevisionMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    revisionNumber?: SortOrder
    requestMessage?: SortOrder
    responseMessage?: SortOrder
    status?: SortOrder
    requestedAt?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RevisionMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    revisionNumber?: SortOrder
    requestMessage?: SortOrder
    responseMessage?: SortOrder
    status?: SortOrder
    requestedAt?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RevisionSumOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    revisionNumber?: SortOrder
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type EnumDepartmentNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Department | EnumDepartmentFieldRefInput<$PrismaModel> | null
    in?: $Enums.Department[] | null
    notIn?: $Enums.Department[] | null
    not?: NestedEnumDepartmentNullableFilter<$PrismaModel> | $Enums.Department | null
  }

  export type CompanyListRelationFilter = {
    every?: CompanyWhereInput
    some?: CompanyWhereInput
    none?: CompanyWhereInput
  }

  export type QuestionListRelationFilter = {
    every?: QuestionWhereInput
    some?: QuestionWhereInput
    none?: QuestionWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type SampleProductionListRelationFilter = {
    every?: SampleProductionWhereInput
    some?: SampleProductionWhereInput
    none?: SampleProductionWhereInput
  }

  export type OrderProductionListRelationFilter = {
    every?: OrderProductionWhereInput
    some?: OrderProductionWhereInput
    none?: OrderProductionWhereInput
  }

  export type WorkshopListRelationFilter = {
    every?: WorkshopWhereInput
    some?: WorkshopWhereInput
    none?: WorkshopWhereInput
  }

  export type UserFavoriteCollectionListRelationFilter = {
    every?: UserFavoriteCollectionWhereInput
    some?: UserFavoriteCollectionWhereInput
    none?: UserFavoriteCollectionWhereInput
  }

  export type CompanyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QuestionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SampleProductionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderProductionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WorkshopOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserFavoriteCollectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    companyId?: SortOrder
    role?: SortOrder
    isCompanyOwner?: SortOrder
    department?: SortOrder
    jobTitle?: SortOrder
    avatar?: SortOrder
    bio?: SortOrder
    socialLinks?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    permissions?: SortOrder
    isActive?: SortOrder
    isPendingApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    companyId?: SortOrder
    role?: SortOrder
    isCompanyOwner?: SortOrder
    department?: SortOrder
    jobTitle?: SortOrder
    avatar?: SortOrder
    bio?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    isActive?: SortOrder
    isPendingApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    companyId?: SortOrder
    role?: SortOrder
    isCompanyOwner?: SortOrder
    department?: SortOrder
    jobTitle?: SortOrder
    avatar?: SortOrder
    bio?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    isActive?: SortOrder
    isPendingApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type EnumDepartmentNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Department | EnumDepartmentFieldRefInput<$PrismaModel> | null
    in?: $Enums.Department[] | null
    notIn?: $Enums.Department[] | null
    not?: NestedEnumDepartmentNullableWithAggregatesFilter<$PrismaModel> | $Enums.Department | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDepartmentNullableFilter<$PrismaModel>
    _max?: NestedEnumDepartmentNullableFilter<$PrismaModel>
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type CategoryOrderByRelevanceInput = {
    fields: CategoryOrderByRelevanceFieldEnum | CategoryOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CategoryCompanyIdParentCategoryIdNameCompoundUniqueInput = {
    companyId: number
    parentCategoryId: number
    name: string
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    authorId?: SortOrder
    parentCategoryId?: SortOrder
    companyId?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    parentCategoryId?: SortOrder
    companyId?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    authorId?: SortOrder
    parentCategoryId?: SortOrder
    companyId?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    authorId?: SortOrder
    parentCategoryId?: SortOrder
    companyId?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    parentCategoryId?: SortOrder
    companyId?: SortOrder
  }

  export type EnumSeasonNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Season | EnumSeasonFieldRefInput<$PrismaModel> | null
    in?: $Enums.Season[] | null
    notIn?: $Enums.Season[] | null
    not?: NestedEnumSeasonNullableFilter<$PrismaModel> | $Enums.Season | null
  }

  export type EnumGenderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | null
    notIn?: $Enums.Gender[] | null
    not?: NestedEnumGenderNullableFilter<$PrismaModel> | $Enums.Gender | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type CollectionOrderByRelevanceInput = {
    fields: CollectionOrderByRelevanceFieldEnum | CollectionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CollectionCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    modelCode?: SortOrder
    season?: SortOrder
    gender?: SortOrder
    fit?: SortOrder
    trend?: SortOrder
    colors?: SortOrder
    sizeGroups?: SortOrder
    sizeRange?: SortOrder
    measurementChart?: SortOrder
    fabricComposition?: SortOrder
    accessories?: SortOrder
    images?: SortOrder
    techPack?: SortOrder
    moq?: SortOrder
    targetPrice?: SortOrder
    targetLeadTime?: SortOrder
    notes?: SortOrder
    likesCount?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrder
    price?: SortOrder
    sku?: SortOrder
    stock?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    slug?: SortOrder
    productionSchedule?: SortOrder
    categoryId?: SortOrder
    authorId?: SortOrder
    companyId?: SortOrder
  }

  export type CollectionAvgOrderByAggregateInput = {
    id?: SortOrder
    moq?: SortOrder
    targetPrice?: SortOrder
    targetLeadTime?: SortOrder
    likesCount?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    categoryId?: SortOrder
    authorId?: SortOrder
    companyId?: SortOrder
  }

  export type CollectionMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    modelCode?: SortOrder
    season?: SortOrder
    gender?: SortOrder
    fit?: SortOrder
    trend?: SortOrder
    colors?: SortOrder
    sizeGroups?: SortOrder
    sizeRange?: SortOrder
    measurementChart?: SortOrder
    fabricComposition?: SortOrder
    accessories?: SortOrder
    images?: SortOrder
    techPack?: SortOrder
    moq?: SortOrder
    targetPrice?: SortOrder
    targetLeadTime?: SortOrder
    notes?: SortOrder
    likesCount?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrder
    price?: SortOrder
    sku?: SortOrder
    stock?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    slug?: SortOrder
    categoryId?: SortOrder
    authorId?: SortOrder
    companyId?: SortOrder
  }

  export type CollectionMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    modelCode?: SortOrder
    season?: SortOrder
    gender?: SortOrder
    fit?: SortOrder
    trend?: SortOrder
    colors?: SortOrder
    sizeGroups?: SortOrder
    sizeRange?: SortOrder
    measurementChart?: SortOrder
    fabricComposition?: SortOrder
    accessories?: SortOrder
    images?: SortOrder
    techPack?: SortOrder
    moq?: SortOrder
    targetPrice?: SortOrder
    targetLeadTime?: SortOrder
    notes?: SortOrder
    likesCount?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrder
    price?: SortOrder
    sku?: SortOrder
    stock?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    slug?: SortOrder
    categoryId?: SortOrder
    authorId?: SortOrder
    companyId?: SortOrder
  }

  export type CollectionSumOrderByAggregateInput = {
    id?: SortOrder
    moq?: SortOrder
    targetPrice?: SortOrder
    targetLeadTime?: SortOrder
    likesCount?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    categoryId?: SortOrder
    authorId?: SortOrder
    companyId?: SortOrder
  }

  export type EnumSeasonNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Season | EnumSeasonFieldRefInput<$PrismaModel> | null
    in?: $Enums.Season[] | null
    notIn?: $Enums.Season[] | null
    not?: NestedEnumSeasonNullableWithAggregatesFilter<$PrismaModel> | $Enums.Season | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSeasonNullableFilter<$PrismaModel>
    _max?: NestedEnumSeasonNullableFilter<$PrismaModel>
  }

  export type EnumGenderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | null
    notIn?: $Enums.Gender[] | null
    not?: NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel> | $Enums.Gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type CollectionScalarRelationFilter = {
    is?: CollectionWhereInput
    isNot?: CollectionWhereInput
  }

  export type UserFavoriteCollectionUserIdCollectionIdCompoundUniqueInput = {
    userId: number
    collectionId: number
  }

  export type UserFavoriteCollectionCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    collectionId?: SortOrder
  }

  export type UserFavoriteCollectionAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    collectionId?: SortOrder
  }

  export type UserFavoriteCollectionMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    collectionId?: SortOrder
  }

  export type UserFavoriteCollectionMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    collectionId?: SortOrder
  }

  export type UserFavoriteCollectionSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    collectionId?: SortOrder
  }

  export type EnumSampleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleType | EnumSampleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SampleType[]
    notIn?: $Enums.SampleType[]
    not?: NestedEnumSampleTypeFilter<$PrismaModel> | $Enums.SampleType
  }

  export type EnumSampleStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleStatus | EnumSampleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SampleStatus[]
    notIn?: $Enums.SampleStatus[]
    not?: NestedEnumSampleStatusFilter<$PrismaModel> | $Enums.SampleStatus
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type CollectionNullableScalarRelationFilter = {
    is?: CollectionWhereInput | null
    isNot?: CollectionWhereInput | null
  }

  export type AIAnalysisNullableScalarRelationFilter = {
    is?: AIAnalysisWhereInput | null
    isNot?: AIAnalysisWhereInput | null
  }

  export type SampleOrderByRelevanceInput = {
    fields: SampleOrderByRelevanceFieldEnum | SampleOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SampleCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sampleNumber?: SortOrder
    sampleType?: SortOrder
    status?: SortOrder
    customerNote?: SortOrder
    manufacturerResponse?: SortOrder
    customDesignImages?: SortOrder
    revisionRequests?: SortOrder
    originalCollectionId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    images?: SortOrder
    aiGenerated?: SortOrder
    aiPrompt?: SortOrder
    aiSketchUrl?: SortOrder
    unitPrice?: SortOrder
    productionDays?: SortOrder
    estimatedProductionDate?: SortOrder
    actualProductionDate?: SortOrder
    shippingDate?: SortOrder
    deliveryAddress?: SortOrder
    cargoTrackingNumber?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    customerQuoteNote?: SortOrder
    customerQuoteType?: SortOrder
    customerQuoteSentAt?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrder
  }

  export type SampleAvgOrderByAggregateInput = {
    id?: SortOrder
    originalCollectionId?: SortOrder
    unitPrice?: SortOrder
    productionDays?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
  }

  export type SampleMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sampleNumber?: SortOrder
    sampleType?: SortOrder
    status?: SortOrder
    customerNote?: SortOrder
    manufacturerResponse?: SortOrder
    customDesignImages?: SortOrder
    revisionRequests?: SortOrder
    originalCollectionId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    images?: SortOrder
    aiGenerated?: SortOrder
    aiPrompt?: SortOrder
    aiSketchUrl?: SortOrder
    unitPrice?: SortOrder
    productionDays?: SortOrder
    estimatedProductionDate?: SortOrder
    actualProductionDate?: SortOrder
    shippingDate?: SortOrder
    deliveryAddress?: SortOrder
    cargoTrackingNumber?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    customerQuoteNote?: SortOrder
    customerQuoteType?: SortOrder
    customerQuoteSentAt?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrder
  }

  export type SampleMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sampleNumber?: SortOrder
    sampleType?: SortOrder
    status?: SortOrder
    customerNote?: SortOrder
    manufacturerResponse?: SortOrder
    customDesignImages?: SortOrder
    revisionRequests?: SortOrder
    originalCollectionId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    images?: SortOrder
    aiGenerated?: SortOrder
    aiPrompt?: SortOrder
    aiSketchUrl?: SortOrder
    unitPrice?: SortOrder
    productionDays?: SortOrder
    estimatedProductionDate?: SortOrder
    actualProductionDate?: SortOrder
    shippingDate?: SortOrder
    deliveryAddress?: SortOrder
    cargoTrackingNumber?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    customerQuoteNote?: SortOrder
    customerQuoteType?: SortOrder
    customerQuoteSentAt?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    lastViewedAt?: SortOrder
  }

  export type SampleSumOrderByAggregateInput = {
    id?: SortOrder
    originalCollectionId?: SortOrder
    unitPrice?: SortOrder
    productionDays?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
  }

  export type EnumSampleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleType | EnumSampleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SampleType[]
    notIn?: $Enums.SampleType[]
    not?: NestedEnumSampleTypeWithAggregatesFilter<$PrismaModel> | $Enums.SampleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSampleTypeFilter<$PrismaModel>
    _max?: NestedEnumSampleTypeFilter<$PrismaModel>
  }

  export type EnumSampleStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleStatus | EnumSampleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SampleStatus[]
    notIn?: $Enums.SampleStatus[]
    not?: NestedEnumSampleStatusWithAggregatesFilter<$PrismaModel> | $Enums.SampleStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSampleStatusFilter<$PrismaModel>
    _max?: NestedEnumSampleStatusFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type SampleScalarRelationFilter = {
    is?: SampleWhereInput
    isNot?: SampleWhereInput
  }

  export type AIAnalysisOrderByRelevanceInput = {
    fields: AIAnalysisOrderByRelevanceFieldEnum | AIAnalysisOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AIAnalysisCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detectedProduct?: SortOrder
    detectedColor?: SortOrder
    detectedFabric?: SortOrder
    detectedPattern?: SortOrder
    detectedGender?: SortOrder
    detectedClassification?: SortOrder
    detectedAccessories?: SortOrder
    technicalDescription?: SortOrder
    qualityAnalysis?: SortOrder
    qualityScore?: SortOrder
    costAnalysis?: SortOrder
    estimatedCostMin?: SortOrder
    estimatedCostMax?: SortOrder
    suggestedMinOrder?: SortOrder
    trendAnalysis?: SortOrder
    trendScore?: SortOrder
    targetMarket?: SortOrder
    salesPotential?: SortOrder
    designSuggestions?: SortOrder
    designStyle?: SortOrder
    designFocus?: SortOrder
    sampleId?: SortOrder
  }

  export type AIAnalysisAvgOrderByAggregateInput = {
    id?: SortOrder
    qualityScore?: SortOrder
    estimatedCostMin?: SortOrder
    estimatedCostMax?: SortOrder
    suggestedMinOrder?: SortOrder
    trendScore?: SortOrder
    sampleId?: SortOrder
  }

  export type AIAnalysisMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detectedProduct?: SortOrder
    detectedColor?: SortOrder
    detectedFabric?: SortOrder
    detectedPattern?: SortOrder
    detectedGender?: SortOrder
    detectedClassification?: SortOrder
    detectedAccessories?: SortOrder
    technicalDescription?: SortOrder
    qualityAnalysis?: SortOrder
    qualityScore?: SortOrder
    costAnalysis?: SortOrder
    estimatedCostMin?: SortOrder
    estimatedCostMax?: SortOrder
    suggestedMinOrder?: SortOrder
    trendAnalysis?: SortOrder
    trendScore?: SortOrder
    targetMarket?: SortOrder
    salesPotential?: SortOrder
    designSuggestions?: SortOrder
    designStyle?: SortOrder
    designFocus?: SortOrder
    sampleId?: SortOrder
  }

  export type AIAnalysisMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    detectedProduct?: SortOrder
    detectedColor?: SortOrder
    detectedFabric?: SortOrder
    detectedPattern?: SortOrder
    detectedGender?: SortOrder
    detectedClassification?: SortOrder
    detectedAccessories?: SortOrder
    technicalDescription?: SortOrder
    qualityAnalysis?: SortOrder
    qualityScore?: SortOrder
    costAnalysis?: SortOrder
    estimatedCostMin?: SortOrder
    estimatedCostMax?: SortOrder
    suggestedMinOrder?: SortOrder
    trendAnalysis?: SortOrder
    trendScore?: SortOrder
    targetMarket?: SortOrder
    salesPotential?: SortOrder
    designSuggestions?: SortOrder
    designStyle?: SortOrder
    designFocus?: SortOrder
    sampleId?: SortOrder
  }

  export type AIAnalysisSumOrderByAggregateInput = {
    id?: SortOrder
    qualityScore?: SortOrder
    estimatedCostMin?: SortOrder
    estimatedCostMax?: SortOrder
    suggestedMinOrder?: SortOrder
    trendScore?: SortOrder
    sampleId?: SortOrder
  }

  export type SampleProductionOrderByRelevanceInput = {
    fields: SampleProductionOrderByRelevanceFieldEnum | SampleProductionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SampleProductionCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrder
    estimatedDays?: SortOrder
    actualDate?: SortOrder
    sampleId?: SortOrder
    updatedById?: SortOrder
  }

  export type SampleProductionAvgOrderByAggregateInput = {
    id?: SortOrder
    estimatedDays?: SortOrder
    sampleId?: SortOrder
    updatedById?: SortOrder
  }

  export type SampleProductionMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrder
    estimatedDays?: SortOrder
    actualDate?: SortOrder
    sampleId?: SortOrder
    updatedById?: SortOrder
  }

  export type SampleProductionMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrder
    estimatedDays?: SortOrder
    actualDate?: SortOrder
    sampleId?: SortOrder
    updatedById?: SortOrder
  }

  export type SampleProductionSumOrderByAggregateInput = {
    id?: SortOrder
    estimatedDays?: SortOrder
    sampleId?: SortOrder
    updatedById?: SortOrder
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type OrderOrderByRelevanceInput = {
    fields: OrderOrderByRelevanceFieldEnum | OrderOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orderNumber?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    customerNote?: SortOrder
    manufacturerResponse?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    customerQuoteNote?: SortOrder
    customerQuoteType?: SortOrder
    customerQuoteSentAt?: SortOrder
    productionDays?: SortOrder
    estimatedProductionDate?: SortOrder
    actualProductionStart?: SortOrder
    actualProductionEnd?: SortOrder
    shippingDate?: SortOrder
    deliveryAddress?: SortOrder
    cargoTrackingNumber?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    productionDays?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orderNumber?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    customerNote?: SortOrder
    manufacturerResponse?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    customerQuoteNote?: SortOrder
    customerQuoteType?: SortOrder
    customerQuoteSentAt?: SortOrder
    productionDays?: SortOrder
    estimatedProductionDate?: SortOrder
    actualProductionStart?: SortOrder
    actualProductionEnd?: SortOrder
    shippingDate?: SortOrder
    deliveryAddress?: SortOrder
    cargoTrackingNumber?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orderNumber?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    status?: SortOrder
    customerNote?: SortOrder
    manufacturerResponse?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    customerQuoteNote?: SortOrder
    customerQuoteType?: SortOrder
    customerQuoteSentAt?: SortOrder
    productionDays?: SortOrder
    estimatedProductionDate?: SortOrder
    actualProductionStart?: SortOrder
    actualProductionEnd?: SortOrder
    shippingDate?: SortOrder
    deliveryAddress?: SortOrder
    cargoTrackingNumber?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    customerQuotedPrice?: SortOrder
    customerQuoteDays?: SortOrder
    productionDays?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
    companyId?: SortOrder
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type OrderScalarRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderProductionOrderByRelevanceInput = {
    fields: OrderProductionOrderByRelevanceFieldEnum | OrderProductionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type OrderProductionCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrder
    estimatedDays?: SortOrder
    actualDate?: SortOrder
    orderId?: SortOrder
    updatedById?: SortOrder
  }

  export type OrderProductionAvgOrderByAggregateInput = {
    id?: SortOrder
    estimatedDays?: SortOrder
    orderId?: SortOrder
    updatedById?: SortOrder
  }

  export type OrderProductionMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrder
    estimatedDays?: SortOrder
    actualDate?: SortOrder
    orderId?: SortOrder
    updatedById?: SortOrder
  }

  export type OrderProductionMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    status?: SortOrder
    note?: SortOrder
    estimatedDays?: SortOrder
    actualDate?: SortOrder
    orderId?: SortOrder
    updatedById?: SortOrder
  }

  export type OrderProductionSumOrderByAggregateInput = {
    id?: SortOrder
    estimatedDays?: SortOrder
    orderId?: SortOrder
    updatedById?: SortOrder
  }

  export type QuestionOrderByRelevanceInput = {
    fields: QuestionOrderByRelevanceFieldEnum | QuestionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type QuestionCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    isAnswered?: SortOrder
    isPublic?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
  }

  export type QuestionAvgOrderByAggregateInput = {
    id?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
  }

  export type QuestionMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    isAnswered?: SortOrder
    isPublic?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
  }

  export type QuestionMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    isAnswered?: SortOrder
    isPublic?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
  }

  export type QuestionSumOrderByAggregateInput = {
    id?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
    manufactureId?: SortOrder
  }

  export type ReviewOrderByRelevanceInput = {
    fields: ReviewOrderByRelevanceFieldEnum | ReviewOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    isApproved?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    isApproved?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    isApproved?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    collectionId?: SortOrder
    customerId?: SortOrder
  }

  export type FileOrderByRelevanceInput = {
    fields: FileOrderByRelevanceFieldEnum | FileOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FileCountOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    path?: SortOrder
    size?: SortOrder
    mimetype?: SortOrder
    encoding?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FileAvgOrderByAggregateInput = {
    size?: SortOrder
  }

  export type FileMaxOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    path?: SortOrder
    size?: SortOrder
    mimetype?: SortOrder
    encoding?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FileMinOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    path?: SortOrder
    size?: SortOrder
    mimetype?: SortOrder
    encoding?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FileSumOrderByAggregateInput = {
    size?: SortOrder
  }

  export type EnumStageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.StageStatus | EnumStageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StageStatus[]
    notIn?: $Enums.StageStatus[]
    not?: NestedEnumStageStatusFilter<$PrismaModel> | $Enums.StageStatus
  }

  export type ProductionTrackingScalarRelationFilter = {
    is?: ProductionTrackingWhereInput
    isNot?: ProductionTrackingWhereInput
  }

  export type ProductionStageUpdateOrderByRelevanceInput = {
    fields: ProductionStageUpdateOrderByRelevanceFieldEnum | ProductionStageUpdateOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ProductionStageUpdateCountOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    stage?: SortOrder
    status?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    estimatedDays?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    isRevision?: SortOrder
    delayReason?: SortOrder
    extraDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductionStageUpdateAvgOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    estimatedDays?: SortOrder
    extraDays?: SortOrder
  }

  export type ProductionStageUpdateMaxOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    stage?: SortOrder
    status?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    estimatedDays?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    isRevision?: SortOrder
    delayReason?: SortOrder
    extraDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductionStageUpdateMinOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    stage?: SortOrder
    status?: SortOrder
    actualStartDate?: SortOrder
    actualEndDate?: SortOrder
    estimatedDays?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    isRevision?: SortOrder
    delayReason?: SortOrder
    extraDays?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductionStageUpdateSumOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    estimatedDays?: SortOrder
    extraDays?: SortOrder
  }

  export type EnumStageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StageStatus | EnumStageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StageStatus[]
    notIn?: $Enums.StageStatus[]
    not?: NestedEnumStageStatusWithAggregatesFilter<$PrismaModel> | $Enums.StageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStageStatusFilter<$PrismaModel>
    _max?: NestedEnumStageStatusFilter<$PrismaModel>
  }

  export type EnumQualityResultFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityResult | EnumQualityResultFieldRefInput<$PrismaModel>
    in?: $Enums.QualityResult[]
    notIn?: $Enums.QualityResult[]
    not?: NestedEnumQualityResultFilter<$PrismaModel> | $Enums.QualityResult
  }

  export type QualityControlOrderByRelevanceInput = {
    fields: QualityControlOrderByRelevanceFieldEnum | QualityControlOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type QualityControlCountOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    inspectorId?: SortOrder
    checkDate?: SortOrder
    result?: SortOrder
    score?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    fabricDefects?: SortOrder
    sewingDefects?: SortOrder
    measureDefects?: SortOrder
    finishingDefects?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualityControlAvgOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    inspectorId?: SortOrder
    score?: SortOrder
  }

  export type QualityControlMaxOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    inspectorId?: SortOrder
    checkDate?: SortOrder
    result?: SortOrder
    score?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    fabricDefects?: SortOrder
    sewingDefects?: SortOrder
    measureDefects?: SortOrder
    finishingDefects?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualityControlMinOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    inspectorId?: SortOrder
    checkDate?: SortOrder
    result?: SortOrder
    score?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    fabricDefects?: SortOrder
    sewingDefects?: SortOrder
    measureDefects?: SortOrder
    finishingDefects?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualityControlSumOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    inspectorId?: SortOrder
    score?: SortOrder
  }

  export type EnumQualityResultWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityResult | EnumQualityResultFieldRefInput<$PrismaModel>
    in?: $Enums.QualityResult[]
    notIn?: $Enums.QualityResult[]
    not?: NestedEnumQualityResultWithAggregatesFilter<$PrismaModel> | $Enums.QualityResult
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumQualityResultFilter<$PrismaModel>
    _max?: NestedEnumQualityResultFilter<$PrismaModel>
  }

  export type EnumWorkshopTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkshopType | EnumWorkshopTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WorkshopType[]
    notIn?: $Enums.WorkshopType[]
    not?: NestedEnumWorkshopTypeFilter<$PrismaModel> | $Enums.WorkshopType
  }

  export type WorkshopOrderByRelevanceInput = {
    fields: WorkshopOrderByRelevanceFieldEnum | WorkshopOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type WorkshopCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    capacity?: SortOrder
    location?: SortOrder
    isActive?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkshopAvgOrderByAggregateInput = {
    id?: SortOrder
    capacity?: SortOrder
    ownerId?: SortOrder
  }

  export type WorkshopMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    capacity?: SortOrder
    location?: SortOrder
    isActive?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkshopMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    capacity?: SortOrder
    location?: SortOrder
    isActive?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkshopSumOrderByAggregateInput = {
    id?: SortOrder
    capacity?: SortOrder
    ownerId?: SortOrder
  }

  export type EnumWorkshopTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkshopType | EnumWorkshopTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WorkshopType[]
    notIn?: $Enums.WorkshopType[]
    not?: NestedEnumWorkshopTypeWithAggregatesFilter<$PrismaModel> | $Enums.WorkshopType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWorkshopTypeFilter<$PrismaModel>
    _max?: NestedEnumWorkshopTypeFilter<$PrismaModel>
  }

  export type CompanyScalarRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type ColorOrderByRelevanceInput = {
    fields: ColorOrderByRelevanceFieldEnum | ColorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ColorCompanyIdNameCompoundUniqueInput = {
    companyId: number
    name: string
  }

  export type ColorCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    hexCode?: SortOrder
    imageUrl?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ColorAvgOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type ColorMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    hexCode?: SortOrder
    imageUrl?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ColorMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    hexCode?: SortOrder
    imageUrl?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ColorSumOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type FabricOrderByRelevanceInput = {
    fields: FabricOrderByRelevanceFieldEnum | FabricOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FabricCompanyIdCodeCompoundUniqueInput = {
    companyId: number
    code: string
  }

  export type FabricCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    composition?: SortOrder
    weight?: SortOrder
    width?: SortOrder
    supplier?: SortOrder
    price?: SortOrder
    minOrder?: SortOrder
    leadTime?: SortOrder
    imageUrl?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FabricAvgOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    width?: SortOrder
    price?: SortOrder
    minOrder?: SortOrder
    leadTime?: SortOrder
    companyId?: SortOrder
  }

  export type FabricMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    composition?: SortOrder
    weight?: SortOrder
    width?: SortOrder
    supplier?: SortOrder
    price?: SortOrder
    minOrder?: SortOrder
    leadTime?: SortOrder
    imageUrl?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FabricMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    composition?: SortOrder
    weight?: SortOrder
    width?: SortOrder
    supplier?: SortOrder
    price?: SortOrder
    minOrder?: SortOrder
    leadTime?: SortOrder
    imageUrl?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FabricSumOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    width?: SortOrder
    price?: SortOrder
    minOrder?: SortOrder
    leadTime?: SortOrder
    companyId?: SortOrder
  }

  export type SizeGroupOrderByRelevanceInput = {
    fields: SizeGroupOrderByRelevanceFieldEnum | SizeGroupOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SizeGroupCompanyIdNameCompoundUniqueInput = {
    companyId: number
    name: string
  }

  export type SizeGroupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    sizes?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SizeGroupAvgOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type SizeGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    sizes?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SizeGroupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    sizes?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SizeGroupSumOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type SeasonItemOrderByRelevanceInput = {
    fields: SeasonItemOrderByRelevanceFieldEnum | SeasonItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SeasonItemCompanyIdNameCompoundUniqueInput = {
    companyId: number
    name: string
  }

  export type SeasonItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    fullName?: SortOrder
    year?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeasonItemAvgOrderByAggregateInput = {
    id?: SortOrder
    year?: SortOrder
    companyId?: SortOrder
  }

  export type SeasonItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    fullName?: SortOrder
    year?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeasonItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    fullName?: SortOrder
    year?: SortOrder
    type?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeasonItemSumOrderByAggregateInput = {
    id?: SortOrder
    year?: SortOrder
    companyId?: SortOrder
  }

  export type FitItemOrderByRelevanceInput = {
    fields: FitItemOrderByRelevanceFieldEnum | FitItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FitItemCompanyIdNameCompoundUniqueInput = {
    companyId: number
    name: string
  }

  export type FitItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FitItemAvgOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type FitItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FitItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FitItemSumOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type EnumCertificationCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.CertificationCategory | EnumCertificationCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CertificationCategory[]
    notIn?: $Enums.CertificationCategory[]
    not?: NestedEnumCertificationCategoryFilter<$PrismaModel> | $Enums.CertificationCategory
  }

  export type CertificationOrderByRelevanceInput = {
    fields: CertificationOrderByRelevanceFieldEnum | CertificationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CertificationCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    issuer?: SortOrder
    validFrom?: SortOrder
    validUntil?: SortOrder
    certificateNumber?: SortOrder
    certificateFile?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
  }

  export type CertificationAvgOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type CertificationMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    issuer?: SortOrder
    validFrom?: SortOrder
    validUntil?: SortOrder
    certificateNumber?: SortOrder
    certificateFile?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
  }

  export type CertificationMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    code?: SortOrder
    category?: SortOrder
    issuer?: SortOrder
    validFrom?: SortOrder
    validUntil?: SortOrder
    certificateNumber?: SortOrder
    certificateFile?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
  }

  export type CertificationSumOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type EnumCertificationCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CertificationCategory | EnumCertificationCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CertificationCategory[]
    notIn?: $Enums.CertificationCategory[]
    not?: NestedEnumCertificationCategoryWithAggregatesFilter<$PrismaModel> | $Enums.CertificationCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCertificationCategoryFilter<$PrismaModel>
    _max?: NestedEnumCertificationCategoryFilter<$PrismaModel>
  }

  export type ProductionRevisionOrderByRelevanceInput = {
    fields: ProductionRevisionOrderByRelevanceFieldEnum | ProductionRevisionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ProductionRevisionCountOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    reason?: SortOrder
    description?: SortOrder
    extraDays?: SortOrder
    extraCost?: SortOrder
    isApproved?: SortOrder
    requestedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductionRevisionAvgOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    extraDays?: SortOrder
    extraCost?: SortOrder
    requestedById?: SortOrder
  }

  export type ProductionRevisionMaxOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    reason?: SortOrder
    description?: SortOrder
    extraDays?: SortOrder
    extraCost?: SortOrder
    isApproved?: SortOrder
    requestedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductionRevisionMinOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    reason?: SortOrder
    description?: SortOrder
    extraDays?: SortOrder
    extraCost?: SortOrder
    isApproved?: SortOrder
    requestedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductionRevisionSumOrderByAggregateInput = {
    id?: SortOrder
    productionId?: SortOrder
    extraDays?: SortOrder
    extraCost?: SortOrder
    requestedById?: SortOrder
  }

  export type EnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[]
    notIn?: $Enums.NotificationType[]
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NotificationOrderByRelevanceInput = {
    fields: NotificationOrderByRelevanceFieldEnum | NotificationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    link?: SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    link?: SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    link?: SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    sampleId?: SortOrder
    productionTrackingId?: SortOrder
  }

  export type EnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[]
    notIn?: $Enums.NotificationType[]
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type EnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[]
    notIn?: $Enums.TaskStatus[]
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type EnumTaskPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[]
    notIn?: $Enums.TaskPriority[]
    not?: NestedEnumTaskPriorityFilter<$PrismaModel> | $Enums.TaskPriority
  }

  export type EnumTaskTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[]
    notIn?: $Enums.TaskType[]
    not?: NestedEnumTaskTypeFilter<$PrismaModel> | $Enums.TaskType
  }

  export type TaskOrderByRelevanceInput = {
    fields: TaskOrderByRelevanceFieldEnum | TaskOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TaskCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    type?: SortOrder
    relatedStatus?: SortOrder
    targetStatus?: SortOrder
    entityType?: SortOrder
    productionStage?: SortOrder
    userId?: SortOrder
    assignedToId?: SortOrder
    collectionId?: SortOrder
    sampleId?: SortOrder
    orderId?: SortOrder
    productionTrackingId?: SortOrder
    dueDate?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    notes?: SortOrder
    assignedBy?: SortOrder
    actionData?: SortOrder
  }

  export type TaskAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    assignedToId?: SortOrder
    collectionId?: SortOrder
    sampleId?: SortOrder
    orderId?: SortOrder
    productionTrackingId?: SortOrder
    assignedBy?: SortOrder
  }

  export type TaskMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    type?: SortOrder
    relatedStatus?: SortOrder
    targetStatus?: SortOrder
    entityType?: SortOrder
    productionStage?: SortOrder
    userId?: SortOrder
    assignedToId?: SortOrder
    collectionId?: SortOrder
    sampleId?: SortOrder
    orderId?: SortOrder
    productionTrackingId?: SortOrder
    dueDate?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    notes?: SortOrder
    assignedBy?: SortOrder
  }

  export type TaskMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    type?: SortOrder
    relatedStatus?: SortOrder
    targetStatus?: SortOrder
    entityType?: SortOrder
    productionStage?: SortOrder
    userId?: SortOrder
    assignedToId?: SortOrder
    collectionId?: SortOrder
    sampleId?: SortOrder
    orderId?: SortOrder
    productionTrackingId?: SortOrder
    dueDate?: SortOrder
    completedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    notes?: SortOrder
    assignedBy?: SortOrder
  }

  export type TaskSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    assignedToId?: SortOrder
    collectionId?: SortOrder
    sampleId?: SortOrder
    orderId?: SortOrder
    productionTrackingId?: SortOrder
    assignedBy?: SortOrder
  }

  export type EnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[]
    notIn?: $Enums.TaskStatus[]
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type EnumTaskPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[]
    notIn?: $Enums.TaskPriority[]
    not?: NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel> | $Enums.TaskPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskPriorityFilter<$PrismaModel>
    _max?: NestedEnumTaskPriorityFilter<$PrismaModel>
  }

  export type EnumTaskTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[]
    notIn?: $Enums.TaskType[]
    not?: NestedEnumTaskTypeWithAggregatesFilter<$PrismaModel> | $Enums.TaskType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskTypeFilter<$PrismaModel>
    _max?: NestedEnumTaskTypeFilter<$PrismaModel>
  }

  export type UserCreateNestedOneWithoutOwnedCompaniesInput = {
    create?: XOR<UserCreateWithoutOwnedCompaniesInput, UserUncheckedCreateWithoutOwnedCompaniesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedCompaniesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCompanyInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CategoryCreateWithoutCompanyInput, CategoryUncheckedCreateWithoutCompanyInput> | CategoryCreateWithoutCompanyInput[] | CategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCompanyInput | CategoryCreateOrConnectWithoutCompanyInput[]
    createMany?: CategoryCreateManyCompanyInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CollectionCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CollectionCreateWithoutCompanyInput, CollectionUncheckedCreateWithoutCompanyInput> | CollectionCreateWithoutCompanyInput[] | CollectionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCompanyInput | CollectionCreateOrConnectWithoutCompanyInput[]
    createMany?: CollectionCreateManyCompanyInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type SampleCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SampleCreateWithoutCompanyInput, SampleUncheckedCreateWithoutCompanyInput> | SampleCreateWithoutCompanyInput[] | SampleUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCompanyInput | SampleCreateOrConnectWithoutCompanyInput[]
    createMany?: SampleCreateManyCompanyInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutCompanyInput = {
    create?: XOR<OrderCreateWithoutCompanyInput, OrderUncheckedCreateWithoutCompanyInput> | OrderCreateWithoutCompanyInput[] | OrderUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCompanyInput | OrderCreateOrConnectWithoutCompanyInput[]
    createMany?: OrderCreateManyCompanyInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ProductionTrackingCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ProductionTrackingCreateWithoutCompanyInput, ProductionTrackingUncheckedCreateWithoutCompanyInput> | ProductionTrackingCreateWithoutCompanyInput[] | ProductionTrackingUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutCompanyInput | ProductionTrackingCreateOrConnectWithoutCompanyInput[]
    createMany?: ProductionTrackingCreateManyCompanyInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MessageCreateWithoutCompanyInput, MessageUncheckedCreateWithoutCompanyInput> | MessageCreateWithoutCompanyInput[] | MessageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutCompanyInput | MessageCreateOrConnectWithoutCompanyInput[]
    createMany?: MessageCreateManyCompanyInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type ColorCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ColorCreateWithoutCompanyInput, ColorUncheckedCreateWithoutCompanyInput> | ColorCreateWithoutCompanyInput[] | ColorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ColorCreateOrConnectWithoutCompanyInput | ColorCreateOrConnectWithoutCompanyInput[]
    createMany?: ColorCreateManyCompanyInputEnvelope
    connect?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
  }

  export type FabricCreateNestedManyWithoutCompanyInput = {
    create?: XOR<FabricCreateWithoutCompanyInput, FabricUncheckedCreateWithoutCompanyInput> | FabricCreateWithoutCompanyInput[] | FabricUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FabricCreateOrConnectWithoutCompanyInput | FabricCreateOrConnectWithoutCompanyInput[]
    createMany?: FabricCreateManyCompanyInputEnvelope
    connect?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
  }

  export type SizeGroupCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SizeGroupCreateWithoutCompanyInput, SizeGroupUncheckedCreateWithoutCompanyInput> | SizeGroupCreateWithoutCompanyInput[] | SizeGroupUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SizeGroupCreateOrConnectWithoutCompanyInput | SizeGroupCreateOrConnectWithoutCompanyInput[]
    createMany?: SizeGroupCreateManyCompanyInputEnvelope
    connect?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
  }

  export type SeasonItemCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SeasonItemCreateWithoutCompanyInput, SeasonItemUncheckedCreateWithoutCompanyInput> | SeasonItemCreateWithoutCompanyInput[] | SeasonItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SeasonItemCreateOrConnectWithoutCompanyInput | SeasonItemCreateOrConnectWithoutCompanyInput[]
    createMany?: SeasonItemCreateManyCompanyInputEnvelope
    connect?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
  }

  export type FitItemCreateNestedManyWithoutCompanyInput = {
    create?: XOR<FitItemCreateWithoutCompanyInput, FitItemUncheckedCreateWithoutCompanyInput> | FitItemCreateWithoutCompanyInput[] | FitItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FitItemCreateOrConnectWithoutCompanyInput | FitItemCreateOrConnectWithoutCompanyInput[]
    createMany?: FitItemCreateManyCompanyInputEnvelope
    connect?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
  }

  export type CertificationCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CertificationCreateWithoutCompanyInput, CertificationUncheckedCreateWithoutCompanyInput> | CertificationCreateWithoutCompanyInput[] | CertificationUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCompanyInput | CertificationCreateOrConnectWithoutCompanyInput[]
    createMany?: CertificationCreateManyCompanyInputEnvelope
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CategoryCreateWithoutCompanyInput, CategoryUncheckedCreateWithoutCompanyInput> | CategoryCreateWithoutCompanyInput[] | CategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCompanyInput | CategoryCreateOrConnectWithoutCompanyInput[]
    createMany?: CategoryCreateManyCompanyInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CollectionUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CollectionCreateWithoutCompanyInput, CollectionUncheckedCreateWithoutCompanyInput> | CollectionCreateWithoutCompanyInput[] | CollectionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCompanyInput | CollectionCreateOrConnectWithoutCompanyInput[]
    createMany?: CollectionCreateManyCompanyInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type SampleUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SampleCreateWithoutCompanyInput, SampleUncheckedCreateWithoutCompanyInput> | SampleCreateWithoutCompanyInput[] | SampleUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCompanyInput | SampleCreateOrConnectWithoutCompanyInput[]
    createMany?: SampleCreateManyCompanyInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<OrderCreateWithoutCompanyInput, OrderUncheckedCreateWithoutCompanyInput> | OrderCreateWithoutCompanyInput[] | OrderUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCompanyInput | OrderCreateOrConnectWithoutCompanyInput[]
    createMany?: OrderCreateManyCompanyInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ProductionTrackingCreateWithoutCompanyInput, ProductionTrackingUncheckedCreateWithoutCompanyInput> | ProductionTrackingCreateWithoutCompanyInput[] | ProductionTrackingUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutCompanyInput | ProductionTrackingCreateOrConnectWithoutCompanyInput[]
    createMany?: ProductionTrackingCreateManyCompanyInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MessageCreateWithoutCompanyInput, MessageUncheckedCreateWithoutCompanyInput> | MessageCreateWithoutCompanyInput[] | MessageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutCompanyInput | MessageCreateOrConnectWithoutCompanyInput[]
    createMany?: MessageCreateManyCompanyInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type ColorUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ColorCreateWithoutCompanyInput, ColorUncheckedCreateWithoutCompanyInput> | ColorCreateWithoutCompanyInput[] | ColorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ColorCreateOrConnectWithoutCompanyInput | ColorCreateOrConnectWithoutCompanyInput[]
    createMany?: ColorCreateManyCompanyInputEnvelope
    connect?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
  }

  export type FabricUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<FabricCreateWithoutCompanyInput, FabricUncheckedCreateWithoutCompanyInput> | FabricCreateWithoutCompanyInput[] | FabricUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FabricCreateOrConnectWithoutCompanyInput | FabricCreateOrConnectWithoutCompanyInput[]
    createMany?: FabricCreateManyCompanyInputEnvelope
    connect?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
  }

  export type SizeGroupUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SizeGroupCreateWithoutCompanyInput, SizeGroupUncheckedCreateWithoutCompanyInput> | SizeGroupCreateWithoutCompanyInput[] | SizeGroupUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SizeGroupCreateOrConnectWithoutCompanyInput | SizeGroupCreateOrConnectWithoutCompanyInput[]
    createMany?: SizeGroupCreateManyCompanyInputEnvelope
    connect?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
  }

  export type SeasonItemUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SeasonItemCreateWithoutCompanyInput, SeasonItemUncheckedCreateWithoutCompanyInput> | SeasonItemCreateWithoutCompanyInput[] | SeasonItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SeasonItemCreateOrConnectWithoutCompanyInput | SeasonItemCreateOrConnectWithoutCompanyInput[]
    createMany?: SeasonItemCreateManyCompanyInputEnvelope
    connect?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
  }

  export type FitItemUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<FitItemCreateWithoutCompanyInput, FitItemUncheckedCreateWithoutCompanyInput> | FitItemCreateWithoutCompanyInput[] | FitItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FitItemCreateOrConnectWithoutCompanyInput | FitItemCreateOrConnectWithoutCompanyInput[]
    createMany?: FitItemCreateManyCompanyInputEnvelope
    connect?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
  }

  export type CertificationUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CertificationCreateWithoutCompanyInput, CertificationUncheckedCreateWithoutCompanyInput> | CertificationCreateWithoutCompanyInput[] | CertificationUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCompanyInput | CertificationCreateOrConnectWithoutCompanyInput[]
    createMany?: CertificationCreateManyCompanyInputEnvelope
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumCompanyTypeFieldUpdateOperationsInput = {
    set?: $Enums.CompanyType
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumSubscriptionPlanFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionPlan
  }

  export type EnumSubscriptionStatusFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionStatus
  }

  export type EnumBillingCycleFieldUpdateOperationsInput = {
    set?: $Enums.BillingCycle
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateOneWithoutOwnedCompaniesNestedInput = {
    create?: XOR<UserCreateWithoutOwnedCompaniesInput, UserUncheckedCreateWithoutOwnedCompaniesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedCompaniesInput
    upsert?: UserUpsertWithoutOwnedCompaniesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedCompaniesInput, UserUpdateWithoutOwnedCompaniesInput>, UserUncheckedUpdateWithoutOwnedCompaniesInput>
  }

  export type UserUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCompanyInput | UserUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCompanyInput | UserUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCompanyInput | UserUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CategoryCreateWithoutCompanyInput, CategoryUncheckedCreateWithoutCompanyInput> | CategoryCreateWithoutCompanyInput[] | CategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCompanyInput | CategoryCreateOrConnectWithoutCompanyInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCompanyInput | CategoryUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CategoryCreateManyCompanyInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCompanyInput | CategoryUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCompanyInput | CategoryUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CollectionUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CollectionCreateWithoutCompanyInput, CollectionUncheckedCreateWithoutCompanyInput> | CollectionCreateWithoutCompanyInput[] | CollectionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCompanyInput | CollectionCreateOrConnectWithoutCompanyInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutCompanyInput | CollectionUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CollectionCreateManyCompanyInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutCompanyInput | CollectionUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutCompanyInput | CollectionUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type SampleUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SampleCreateWithoutCompanyInput, SampleUncheckedCreateWithoutCompanyInput> | SampleCreateWithoutCompanyInput[] | SampleUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCompanyInput | SampleCreateOrConnectWithoutCompanyInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutCompanyInput | SampleUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SampleCreateManyCompanyInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutCompanyInput | SampleUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutCompanyInput | SampleUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<OrderCreateWithoutCompanyInput, OrderUncheckedCreateWithoutCompanyInput> | OrderCreateWithoutCompanyInput[] | OrderUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCompanyInput | OrderCreateOrConnectWithoutCompanyInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCompanyInput | OrderUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: OrderCreateManyCompanyInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCompanyInput | OrderUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCompanyInput | OrderUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ProductionTrackingUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutCompanyInput, ProductionTrackingUncheckedCreateWithoutCompanyInput> | ProductionTrackingCreateWithoutCompanyInput[] | ProductionTrackingUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutCompanyInput | ProductionTrackingCreateOrConnectWithoutCompanyInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutCompanyInput | ProductionTrackingUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ProductionTrackingCreateManyCompanyInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutCompanyInput | ProductionTrackingUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutCompanyInput | ProductionTrackingUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MessageCreateWithoutCompanyInput, MessageUncheckedCreateWithoutCompanyInput> | MessageCreateWithoutCompanyInput[] | MessageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutCompanyInput | MessageCreateOrConnectWithoutCompanyInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutCompanyInput | MessageUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MessageCreateManyCompanyInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutCompanyInput | MessageUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutCompanyInput | MessageUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ColorUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ColorCreateWithoutCompanyInput, ColorUncheckedCreateWithoutCompanyInput> | ColorCreateWithoutCompanyInput[] | ColorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ColorCreateOrConnectWithoutCompanyInput | ColorCreateOrConnectWithoutCompanyInput[]
    upsert?: ColorUpsertWithWhereUniqueWithoutCompanyInput | ColorUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ColorCreateManyCompanyInputEnvelope
    set?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    disconnect?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    delete?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    connect?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    update?: ColorUpdateWithWhereUniqueWithoutCompanyInput | ColorUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ColorUpdateManyWithWhereWithoutCompanyInput | ColorUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ColorScalarWhereInput | ColorScalarWhereInput[]
  }

  export type FabricUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<FabricCreateWithoutCompanyInput, FabricUncheckedCreateWithoutCompanyInput> | FabricCreateWithoutCompanyInput[] | FabricUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FabricCreateOrConnectWithoutCompanyInput | FabricCreateOrConnectWithoutCompanyInput[]
    upsert?: FabricUpsertWithWhereUniqueWithoutCompanyInput | FabricUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: FabricCreateManyCompanyInputEnvelope
    set?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    disconnect?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    delete?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    connect?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    update?: FabricUpdateWithWhereUniqueWithoutCompanyInput | FabricUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: FabricUpdateManyWithWhereWithoutCompanyInput | FabricUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: FabricScalarWhereInput | FabricScalarWhereInput[]
  }

  export type SizeGroupUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SizeGroupCreateWithoutCompanyInput, SizeGroupUncheckedCreateWithoutCompanyInput> | SizeGroupCreateWithoutCompanyInput[] | SizeGroupUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SizeGroupCreateOrConnectWithoutCompanyInput | SizeGroupCreateOrConnectWithoutCompanyInput[]
    upsert?: SizeGroupUpsertWithWhereUniqueWithoutCompanyInput | SizeGroupUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SizeGroupCreateManyCompanyInputEnvelope
    set?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    disconnect?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    delete?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    connect?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    update?: SizeGroupUpdateWithWhereUniqueWithoutCompanyInput | SizeGroupUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SizeGroupUpdateManyWithWhereWithoutCompanyInput | SizeGroupUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SizeGroupScalarWhereInput | SizeGroupScalarWhereInput[]
  }

  export type SeasonItemUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SeasonItemCreateWithoutCompanyInput, SeasonItemUncheckedCreateWithoutCompanyInput> | SeasonItemCreateWithoutCompanyInput[] | SeasonItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SeasonItemCreateOrConnectWithoutCompanyInput | SeasonItemCreateOrConnectWithoutCompanyInput[]
    upsert?: SeasonItemUpsertWithWhereUniqueWithoutCompanyInput | SeasonItemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SeasonItemCreateManyCompanyInputEnvelope
    set?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    disconnect?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    delete?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    connect?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    update?: SeasonItemUpdateWithWhereUniqueWithoutCompanyInput | SeasonItemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SeasonItemUpdateManyWithWhereWithoutCompanyInput | SeasonItemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SeasonItemScalarWhereInput | SeasonItemScalarWhereInput[]
  }

  export type FitItemUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<FitItemCreateWithoutCompanyInput, FitItemUncheckedCreateWithoutCompanyInput> | FitItemCreateWithoutCompanyInput[] | FitItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FitItemCreateOrConnectWithoutCompanyInput | FitItemCreateOrConnectWithoutCompanyInput[]
    upsert?: FitItemUpsertWithWhereUniqueWithoutCompanyInput | FitItemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: FitItemCreateManyCompanyInputEnvelope
    set?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    disconnect?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    delete?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    connect?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    update?: FitItemUpdateWithWhereUniqueWithoutCompanyInput | FitItemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: FitItemUpdateManyWithWhereWithoutCompanyInput | FitItemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: FitItemScalarWhereInput | FitItemScalarWhereInput[]
  }

  export type CertificationUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CertificationCreateWithoutCompanyInput, CertificationUncheckedCreateWithoutCompanyInput> | CertificationCreateWithoutCompanyInput[] | CertificationUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCompanyInput | CertificationCreateOrConnectWithoutCompanyInput[]
    upsert?: CertificationUpsertWithWhereUniqueWithoutCompanyInput | CertificationUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CertificationCreateManyCompanyInputEnvelope
    set?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    disconnect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    delete?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    update?: CertificationUpdateWithWhereUniqueWithoutCompanyInput | CertificationUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CertificationUpdateManyWithWhereWithoutCompanyInput | CertificationUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CertificationScalarWhereInput | CertificationScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCompanyInput | UserUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCompanyInput | UserUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCompanyInput | UserUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CategoryCreateWithoutCompanyInput, CategoryUncheckedCreateWithoutCompanyInput> | CategoryCreateWithoutCompanyInput[] | CategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCompanyInput | CategoryCreateOrConnectWithoutCompanyInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCompanyInput | CategoryUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CategoryCreateManyCompanyInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCompanyInput | CategoryUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCompanyInput | CategoryUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CollectionUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CollectionCreateWithoutCompanyInput, CollectionUncheckedCreateWithoutCompanyInput> | CollectionCreateWithoutCompanyInput[] | CollectionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCompanyInput | CollectionCreateOrConnectWithoutCompanyInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutCompanyInput | CollectionUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CollectionCreateManyCompanyInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutCompanyInput | CollectionUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutCompanyInput | CollectionUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type SampleUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SampleCreateWithoutCompanyInput, SampleUncheckedCreateWithoutCompanyInput> | SampleCreateWithoutCompanyInput[] | SampleUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCompanyInput | SampleCreateOrConnectWithoutCompanyInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutCompanyInput | SampleUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SampleCreateManyCompanyInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutCompanyInput | SampleUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutCompanyInput | SampleUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<OrderCreateWithoutCompanyInput, OrderUncheckedCreateWithoutCompanyInput> | OrderCreateWithoutCompanyInput[] | OrderUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCompanyInput | OrderCreateOrConnectWithoutCompanyInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCompanyInput | OrderUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: OrderCreateManyCompanyInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCompanyInput | OrderUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCompanyInput | OrderUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutCompanyInput, ProductionTrackingUncheckedCreateWithoutCompanyInput> | ProductionTrackingCreateWithoutCompanyInput[] | ProductionTrackingUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutCompanyInput | ProductionTrackingCreateOrConnectWithoutCompanyInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutCompanyInput | ProductionTrackingUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ProductionTrackingCreateManyCompanyInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutCompanyInput | ProductionTrackingUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutCompanyInput | ProductionTrackingUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MessageCreateWithoutCompanyInput, MessageUncheckedCreateWithoutCompanyInput> | MessageCreateWithoutCompanyInput[] | MessageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutCompanyInput | MessageCreateOrConnectWithoutCompanyInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutCompanyInput | MessageUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MessageCreateManyCompanyInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutCompanyInput | MessageUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutCompanyInput | MessageUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ColorUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ColorCreateWithoutCompanyInput, ColorUncheckedCreateWithoutCompanyInput> | ColorCreateWithoutCompanyInput[] | ColorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ColorCreateOrConnectWithoutCompanyInput | ColorCreateOrConnectWithoutCompanyInput[]
    upsert?: ColorUpsertWithWhereUniqueWithoutCompanyInput | ColorUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ColorCreateManyCompanyInputEnvelope
    set?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    disconnect?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    delete?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    connect?: ColorWhereUniqueInput | ColorWhereUniqueInput[]
    update?: ColorUpdateWithWhereUniqueWithoutCompanyInput | ColorUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ColorUpdateManyWithWhereWithoutCompanyInput | ColorUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ColorScalarWhereInput | ColorScalarWhereInput[]
  }

  export type FabricUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<FabricCreateWithoutCompanyInput, FabricUncheckedCreateWithoutCompanyInput> | FabricCreateWithoutCompanyInput[] | FabricUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FabricCreateOrConnectWithoutCompanyInput | FabricCreateOrConnectWithoutCompanyInput[]
    upsert?: FabricUpsertWithWhereUniqueWithoutCompanyInput | FabricUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: FabricCreateManyCompanyInputEnvelope
    set?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    disconnect?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    delete?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    connect?: FabricWhereUniqueInput | FabricWhereUniqueInput[]
    update?: FabricUpdateWithWhereUniqueWithoutCompanyInput | FabricUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: FabricUpdateManyWithWhereWithoutCompanyInput | FabricUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: FabricScalarWhereInput | FabricScalarWhereInput[]
  }

  export type SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SizeGroupCreateWithoutCompanyInput, SizeGroupUncheckedCreateWithoutCompanyInput> | SizeGroupCreateWithoutCompanyInput[] | SizeGroupUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SizeGroupCreateOrConnectWithoutCompanyInput | SizeGroupCreateOrConnectWithoutCompanyInput[]
    upsert?: SizeGroupUpsertWithWhereUniqueWithoutCompanyInput | SizeGroupUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SizeGroupCreateManyCompanyInputEnvelope
    set?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    disconnect?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    delete?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    connect?: SizeGroupWhereUniqueInput | SizeGroupWhereUniqueInput[]
    update?: SizeGroupUpdateWithWhereUniqueWithoutCompanyInput | SizeGroupUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SizeGroupUpdateManyWithWhereWithoutCompanyInput | SizeGroupUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SizeGroupScalarWhereInput | SizeGroupScalarWhereInput[]
  }

  export type SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SeasonItemCreateWithoutCompanyInput, SeasonItemUncheckedCreateWithoutCompanyInput> | SeasonItemCreateWithoutCompanyInput[] | SeasonItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SeasonItemCreateOrConnectWithoutCompanyInput | SeasonItemCreateOrConnectWithoutCompanyInput[]
    upsert?: SeasonItemUpsertWithWhereUniqueWithoutCompanyInput | SeasonItemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SeasonItemCreateManyCompanyInputEnvelope
    set?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    disconnect?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    delete?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    connect?: SeasonItemWhereUniqueInput | SeasonItemWhereUniqueInput[]
    update?: SeasonItemUpdateWithWhereUniqueWithoutCompanyInput | SeasonItemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SeasonItemUpdateManyWithWhereWithoutCompanyInput | SeasonItemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SeasonItemScalarWhereInput | SeasonItemScalarWhereInput[]
  }

  export type FitItemUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<FitItemCreateWithoutCompanyInput, FitItemUncheckedCreateWithoutCompanyInput> | FitItemCreateWithoutCompanyInput[] | FitItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FitItemCreateOrConnectWithoutCompanyInput | FitItemCreateOrConnectWithoutCompanyInput[]
    upsert?: FitItemUpsertWithWhereUniqueWithoutCompanyInput | FitItemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: FitItemCreateManyCompanyInputEnvelope
    set?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    disconnect?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    delete?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    connect?: FitItemWhereUniqueInput | FitItemWhereUniqueInput[]
    update?: FitItemUpdateWithWhereUniqueWithoutCompanyInput | FitItemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: FitItemUpdateManyWithWhereWithoutCompanyInput | FitItemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: FitItemScalarWhereInput | FitItemScalarWhereInput[]
  }

  export type CertificationUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CertificationCreateWithoutCompanyInput, CertificationUncheckedCreateWithoutCompanyInput> | CertificationCreateWithoutCompanyInput[] | CertificationUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCompanyInput | CertificationCreateOrConnectWithoutCompanyInput[]
    upsert?: CertificationUpsertWithWhereUniqueWithoutCompanyInput | CertificationUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CertificationCreateManyCompanyInputEnvelope
    set?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    disconnect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    delete?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    update?: CertificationUpdateWithWhereUniqueWithoutCompanyInput | CertificationUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CertificationUpdateManyWithWhereWithoutCompanyInput | CertificationUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CertificationScalarWhereInput | CertificationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSentMessagesInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReceivedMessagesInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutMessagesInput = {
    create?: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutMessagesInput
    connect?: OrderWhereUniqueInput
  }

  export type SampleCreateNestedOneWithoutMessagesInput = {
    create?: XOR<SampleCreateWithoutMessagesInput, SampleUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: SampleCreateOrConnectWithoutMessagesInput
    connect?: SampleWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutMessagesInput = {
    create?: XOR<CompanyCreateWithoutMessagesInput, CompanyUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMessagesInput
    connect?: CompanyWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSentMessagesNestedInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    upsert?: UserUpsertWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentMessagesInput, UserUpdateWithoutSentMessagesInput>, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateOneWithoutReceivedMessagesNestedInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    upsert?: UserUpsertWithoutReceivedMessagesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedMessagesInput, UserUpdateWithoutReceivedMessagesInput>, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type OrderUpdateOneWithoutMessagesNestedInput = {
    create?: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutMessagesInput
    upsert?: OrderUpsertWithoutMessagesInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutMessagesInput, OrderUpdateWithoutMessagesInput>, OrderUncheckedUpdateWithoutMessagesInput>
  }

  export type SampleUpdateOneWithoutMessagesNestedInput = {
    create?: XOR<SampleCreateWithoutMessagesInput, SampleUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: SampleCreateOrConnectWithoutMessagesInput
    upsert?: SampleUpsertWithoutMessagesInput
    disconnect?: SampleWhereInput | boolean
    delete?: SampleWhereInput | boolean
    connect?: SampleWhereUniqueInput
    update?: XOR<XOR<SampleUpdateToOneWithWhereWithoutMessagesInput, SampleUpdateWithoutMessagesInput>, SampleUncheckedUpdateWithoutMessagesInput>
  }

  export type CompanyUpdateOneWithoutMessagesNestedInput = {
    create?: XOR<CompanyCreateWithoutMessagesInput, CompanyUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMessagesInput
    upsert?: CompanyUpsertWithoutMessagesInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMessagesInput, CompanyUpdateWithoutMessagesInput>, CompanyUncheckedUpdateWithoutMessagesInput>
  }

  export type OrderCreateNestedOneWithoutProductionTrackingInput = {
    create?: XOR<OrderCreateWithoutProductionTrackingInput, OrderUncheckedCreateWithoutProductionTrackingInput>
    connectOrCreate?: OrderCreateOrConnectWithoutProductionTrackingInput
    connect?: OrderWhereUniqueInput
  }

  export type SampleCreateNestedOneWithoutProductionTrackingInput = {
    create?: XOR<SampleCreateWithoutProductionTrackingInput, SampleUncheckedCreateWithoutProductionTrackingInput>
    connectOrCreate?: SampleCreateOrConnectWithoutProductionTrackingInput
    connect?: SampleWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutProductionTrackingInput = {
    create?: XOR<CompanyCreateWithoutProductionTrackingInput, CompanyUncheckedCreateWithoutProductionTrackingInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutProductionTrackingInput
    connect?: CompanyWhereUniqueInput
  }

  export type WorkshopCreateNestedOneWithoutSewingProductionsInput = {
    create?: XOR<WorkshopCreateWithoutSewingProductionsInput, WorkshopUncheckedCreateWithoutSewingProductionsInput>
    connectOrCreate?: WorkshopCreateOrConnectWithoutSewingProductionsInput
    connect?: WorkshopWhereUniqueInput
  }

  export type WorkshopCreateNestedOneWithoutPackagingProductionsInput = {
    create?: XOR<WorkshopCreateWithoutPackagingProductionsInput, WorkshopUncheckedCreateWithoutPackagingProductionsInput>
    connectOrCreate?: WorkshopCreateOrConnectWithoutPackagingProductionsInput
    connect?: WorkshopWhereUniqueInput
  }

  export type ProductionStageUpdateCreateNestedManyWithoutProductionInput = {
    create?: XOR<ProductionStageUpdateCreateWithoutProductionInput, ProductionStageUpdateUncheckedCreateWithoutProductionInput> | ProductionStageUpdateCreateWithoutProductionInput[] | ProductionStageUpdateUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionStageUpdateCreateOrConnectWithoutProductionInput | ProductionStageUpdateCreateOrConnectWithoutProductionInput[]
    createMany?: ProductionStageUpdateCreateManyProductionInputEnvelope
    connect?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
  }

  export type QualityControlCreateNestedManyWithoutProductionInput = {
    create?: XOR<QualityControlCreateWithoutProductionInput, QualityControlUncheckedCreateWithoutProductionInput> | QualityControlCreateWithoutProductionInput[] | QualityControlUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutProductionInput | QualityControlCreateOrConnectWithoutProductionInput[]
    createMany?: QualityControlCreateManyProductionInputEnvelope
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
  }

  export type ProductionRevisionCreateNestedManyWithoutProductionInput = {
    create?: XOR<ProductionRevisionCreateWithoutProductionInput, ProductionRevisionUncheckedCreateWithoutProductionInput> | ProductionRevisionCreateWithoutProductionInput[] | ProductionRevisionUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutProductionInput | ProductionRevisionCreateOrConnectWithoutProductionInput[]
    createMany?: ProductionRevisionCreateManyProductionInputEnvelope
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
  }

  export type RevisionCreateNestedManyWithoutProductionTrackingInput = {
    create?: XOR<RevisionCreateWithoutProductionTrackingInput, RevisionUncheckedCreateWithoutProductionTrackingInput> | RevisionCreateWithoutProductionTrackingInput[] | RevisionUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutProductionTrackingInput | RevisionCreateOrConnectWithoutProductionTrackingInput[]
    createMany?: RevisionCreateManyProductionTrackingInputEnvelope
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutProductionTrackingInput = {
    create?: XOR<TaskCreateWithoutProductionTrackingInput, TaskUncheckedCreateWithoutProductionTrackingInput> | TaskCreateWithoutProductionTrackingInput[] | TaskUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutProductionTrackingInput | TaskCreateOrConnectWithoutProductionTrackingInput[]
    createMany?: TaskCreateManyProductionTrackingInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutProductionTrackingInput = {
    create?: XOR<NotificationCreateWithoutProductionTrackingInput, NotificationUncheckedCreateWithoutProductionTrackingInput> | NotificationCreateWithoutProductionTrackingInput[] | NotificationUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutProductionTrackingInput | NotificationCreateOrConnectWithoutProductionTrackingInput[]
    createMany?: NotificationCreateManyProductionTrackingInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput = {
    create?: XOR<ProductionStageUpdateCreateWithoutProductionInput, ProductionStageUpdateUncheckedCreateWithoutProductionInput> | ProductionStageUpdateCreateWithoutProductionInput[] | ProductionStageUpdateUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionStageUpdateCreateOrConnectWithoutProductionInput | ProductionStageUpdateCreateOrConnectWithoutProductionInput[]
    createMany?: ProductionStageUpdateCreateManyProductionInputEnvelope
    connect?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
  }

  export type QualityControlUncheckedCreateNestedManyWithoutProductionInput = {
    create?: XOR<QualityControlCreateWithoutProductionInput, QualityControlUncheckedCreateWithoutProductionInput> | QualityControlCreateWithoutProductionInput[] | QualityControlUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutProductionInput | QualityControlCreateOrConnectWithoutProductionInput[]
    createMany?: QualityControlCreateManyProductionInputEnvelope
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
  }

  export type ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput = {
    create?: XOR<ProductionRevisionCreateWithoutProductionInput, ProductionRevisionUncheckedCreateWithoutProductionInput> | ProductionRevisionCreateWithoutProductionInput[] | ProductionRevisionUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutProductionInput | ProductionRevisionCreateOrConnectWithoutProductionInput[]
    createMany?: ProductionRevisionCreateManyProductionInputEnvelope
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
  }

  export type RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput = {
    create?: XOR<RevisionCreateWithoutProductionTrackingInput, RevisionUncheckedCreateWithoutProductionTrackingInput> | RevisionCreateWithoutProductionTrackingInput[] | RevisionUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutProductionTrackingInput | RevisionCreateOrConnectWithoutProductionTrackingInput[]
    createMany?: RevisionCreateManyProductionTrackingInputEnvelope
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutProductionTrackingInput = {
    create?: XOR<TaskCreateWithoutProductionTrackingInput, TaskUncheckedCreateWithoutProductionTrackingInput> | TaskCreateWithoutProductionTrackingInput[] | TaskUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutProductionTrackingInput | TaskCreateOrConnectWithoutProductionTrackingInput[]
    createMany?: TaskCreateManyProductionTrackingInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput = {
    create?: XOR<NotificationCreateWithoutProductionTrackingInput, NotificationUncheckedCreateWithoutProductionTrackingInput> | NotificationCreateWithoutProductionTrackingInput[] | NotificationUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutProductionTrackingInput | NotificationCreateOrConnectWithoutProductionTrackingInput[]
    createMany?: NotificationCreateManyProductionTrackingInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumProductionStageFieldUpdateOperationsInput = {
    set?: $Enums.ProductionStage
  }

  export type EnumProductionStatusFieldUpdateOperationsInput = {
    set?: $Enums.ProductionStatus
  }

  export type OrderUpdateOneWithoutProductionTrackingNestedInput = {
    create?: XOR<OrderCreateWithoutProductionTrackingInput, OrderUncheckedCreateWithoutProductionTrackingInput>
    connectOrCreate?: OrderCreateOrConnectWithoutProductionTrackingInput
    upsert?: OrderUpsertWithoutProductionTrackingInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutProductionTrackingInput, OrderUpdateWithoutProductionTrackingInput>, OrderUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type SampleUpdateOneWithoutProductionTrackingNestedInput = {
    create?: XOR<SampleCreateWithoutProductionTrackingInput, SampleUncheckedCreateWithoutProductionTrackingInput>
    connectOrCreate?: SampleCreateOrConnectWithoutProductionTrackingInput
    upsert?: SampleUpsertWithoutProductionTrackingInput
    disconnect?: SampleWhereInput | boolean
    delete?: SampleWhereInput | boolean
    connect?: SampleWhereUniqueInput
    update?: XOR<XOR<SampleUpdateToOneWithWhereWithoutProductionTrackingInput, SampleUpdateWithoutProductionTrackingInput>, SampleUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type CompanyUpdateOneWithoutProductionTrackingNestedInput = {
    create?: XOR<CompanyCreateWithoutProductionTrackingInput, CompanyUncheckedCreateWithoutProductionTrackingInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutProductionTrackingInput
    upsert?: CompanyUpsertWithoutProductionTrackingInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutProductionTrackingInput, CompanyUpdateWithoutProductionTrackingInput>, CompanyUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type WorkshopUpdateOneWithoutSewingProductionsNestedInput = {
    create?: XOR<WorkshopCreateWithoutSewingProductionsInput, WorkshopUncheckedCreateWithoutSewingProductionsInput>
    connectOrCreate?: WorkshopCreateOrConnectWithoutSewingProductionsInput
    upsert?: WorkshopUpsertWithoutSewingProductionsInput
    disconnect?: WorkshopWhereInput | boolean
    delete?: WorkshopWhereInput | boolean
    connect?: WorkshopWhereUniqueInput
    update?: XOR<XOR<WorkshopUpdateToOneWithWhereWithoutSewingProductionsInput, WorkshopUpdateWithoutSewingProductionsInput>, WorkshopUncheckedUpdateWithoutSewingProductionsInput>
  }

  export type WorkshopUpdateOneWithoutPackagingProductionsNestedInput = {
    create?: XOR<WorkshopCreateWithoutPackagingProductionsInput, WorkshopUncheckedCreateWithoutPackagingProductionsInput>
    connectOrCreate?: WorkshopCreateOrConnectWithoutPackagingProductionsInput
    upsert?: WorkshopUpsertWithoutPackagingProductionsInput
    disconnect?: WorkshopWhereInput | boolean
    delete?: WorkshopWhereInput | boolean
    connect?: WorkshopWhereUniqueInput
    update?: XOR<XOR<WorkshopUpdateToOneWithWhereWithoutPackagingProductionsInput, WorkshopUpdateWithoutPackagingProductionsInput>, WorkshopUncheckedUpdateWithoutPackagingProductionsInput>
  }

  export type ProductionStageUpdateUpdateManyWithoutProductionNestedInput = {
    create?: XOR<ProductionStageUpdateCreateWithoutProductionInput, ProductionStageUpdateUncheckedCreateWithoutProductionInput> | ProductionStageUpdateCreateWithoutProductionInput[] | ProductionStageUpdateUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionStageUpdateCreateOrConnectWithoutProductionInput | ProductionStageUpdateCreateOrConnectWithoutProductionInput[]
    upsert?: ProductionStageUpdateUpsertWithWhereUniqueWithoutProductionInput | ProductionStageUpdateUpsertWithWhereUniqueWithoutProductionInput[]
    createMany?: ProductionStageUpdateCreateManyProductionInputEnvelope
    set?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    disconnect?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    delete?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    connect?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    update?: ProductionStageUpdateUpdateWithWhereUniqueWithoutProductionInput | ProductionStageUpdateUpdateWithWhereUniqueWithoutProductionInput[]
    updateMany?: ProductionStageUpdateUpdateManyWithWhereWithoutProductionInput | ProductionStageUpdateUpdateManyWithWhereWithoutProductionInput[]
    deleteMany?: ProductionStageUpdateScalarWhereInput | ProductionStageUpdateScalarWhereInput[]
  }

  export type QualityControlUpdateManyWithoutProductionNestedInput = {
    create?: XOR<QualityControlCreateWithoutProductionInput, QualityControlUncheckedCreateWithoutProductionInput> | QualityControlCreateWithoutProductionInput[] | QualityControlUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutProductionInput | QualityControlCreateOrConnectWithoutProductionInput[]
    upsert?: QualityControlUpsertWithWhereUniqueWithoutProductionInput | QualityControlUpsertWithWhereUniqueWithoutProductionInput[]
    createMany?: QualityControlCreateManyProductionInputEnvelope
    set?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    disconnect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    delete?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    update?: QualityControlUpdateWithWhereUniqueWithoutProductionInput | QualityControlUpdateWithWhereUniqueWithoutProductionInput[]
    updateMany?: QualityControlUpdateManyWithWhereWithoutProductionInput | QualityControlUpdateManyWithWhereWithoutProductionInput[]
    deleteMany?: QualityControlScalarWhereInput | QualityControlScalarWhereInput[]
  }

  export type ProductionRevisionUpdateManyWithoutProductionNestedInput = {
    create?: XOR<ProductionRevisionCreateWithoutProductionInput, ProductionRevisionUncheckedCreateWithoutProductionInput> | ProductionRevisionCreateWithoutProductionInput[] | ProductionRevisionUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutProductionInput | ProductionRevisionCreateOrConnectWithoutProductionInput[]
    upsert?: ProductionRevisionUpsertWithWhereUniqueWithoutProductionInput | ProductionRevisionUpsertWithWhereUniqueWithoutProductionInput[]
    createMany?: ProductionRevisionCreateManyProductionInputEnvelope
    set?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    disconnect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    delete?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    update?: ProductionRevisionUpdateWithWhereUniqueWithoutProductionInput | ProductionRevisionUpdateWithWhereUniqueWithoutProductionInput[]
    updateMany?: ProductionRevisionUpdateManyWithWhereWithoutProductionInput | ProductionRevisionUpdateManyWithWhereWithoutProductionInput[]
    deleteMany?: ProductionRevisionScalarWhereInput | ProductionRevisionScalarWhereInput[]
  }

  export type RevisionUpdateManyWithoutProductionTrackingNestedInput = {
    create?: XOR<RevisionCreateWithoutProductionTrackingInput, RevisionUncheckedCreateWithoutProductionTrackingInput> | RevisionCreateWithoutProductionTrackingInput[] | RevisionUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutProductionTrackingInput | RevisionCreateOrConnectWithoutProductionTrackingInput[]
    upsert?: RevisionUpsertWithWhereUniqueWithoutProductionTrackingInput | RevisionUpsertWithWhereUniqueWithoutProductionTrackingInput[]
    createMany?: RevisionCreateManyProductionTrackingInputEnvelope
    set?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    disconnect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    delete?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    update?: RevisionUpdateWithWhereUniqueWithoutProductionTrackingInput | RevisionUpdateWithWhereUniqueWithoutProductionTrackingInput[]
    updateMany?: RevisionUpdateManyWithWhereWithoutProductionTrackingInput | RevisionUpdateManyWithWhereWithoutProductionTrackingInput[]
    deleteMany?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutProductionTrackingNestedInput = {
    create?: XOR<TaskCreateWithoutProductionTrackingInput, TaskUncheckedCreateWithoutProductionTrackingInput> | TaskCreateWithoutProductionTrackingInput[] | TaskUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutProductionTrackingInput | TaskCreateOrConnectWithoutProductionTrackingInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutProductionTrackingInput | TaskUpsertWithWhereUniqueWithoutProductionTrackingInput[]
    createMany?: TaskCreateManyProductionTrackingInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutProductionTrackingInput | TaskUpdateWithWhereUniqueWithoutProductionTrackingInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutProductionTrackingInput | TaskUpdateManyWithWhereWithoutProductionTrackingInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutProductionTrackingNestedInput = {
    create?: XOR<NotificationCreateWithoutProductionTrackingInput, NotificationUncheckedCreateWithoutProductionTrackingInput> | NotificationCreateWithoutProductionTrackingInput[] | NotificationUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutProductionTrackingInput | NotificationCreateOrConnectWithoutProductionTrackingInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutProductionTrackingInput | NotificationUpsertWithWhereUniqueWithoutProductionTrackingInput[]
    createMany?: NotificationCreateManyProductionTrackingInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutProductionTrackingInput | NotificationUpdateWithWhereUniqueWithoutProductionTrackingInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutProductionTrackingInput | NotificationUpdateManyWithWhereWithoutProductionTrackingInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput = {
    create?: XOR<ProductionStageUpdateCreateWithoutProductionInput, ProductionStageUpdateUncheckedCreateWithoutProductionInput> | ProductionStageUpdateCreateWithoutProductionInput[] | ProductionStageUpdateUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionStageUpdateCreateOrConnectWithoutProductionInput | ProductionStageUpdateCreateOrConnectWithoutProductionInput[]
    upsert?: ProductionStageUpdateUpsertWithWhereUniqueWithoutProductionInput | ProductionStageUpdateUpsertWithWhereUniqueWithoutProductionInput[]
    createMany?: ProductionStageUpdateCreateManyProductionInputEnvelope
    set?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    disconnect?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    delete?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    connect?: ProductionStageUpdateWhereUniqueInput | ProductionStageUpdateWhereUniqueInput[]
    update?: ProductionStageUpdateUpdateWithWhereUniqueWithoutProductionInput | ProductionStageUpdateUpdateWithWhereUniqueWithoutProductionInput[]
    updateMany?: ProductionStageUpdateUpdateManyWithWhereWithoutProductionInput | ProductionStageUpdateUpdateManyWithWhereWithoutProductionInput[]
    deleteMany?: ProductionStageUpdateScalarWhereInput | ProductionStageUpdateScalarWhereInput[]
  }

  export type QualityControlUncheckedUpdateManyWithoutProductionNestedInput = {
    create?: XOR<QualityControlCreateWithoutProductionInput, QualityControlUncheckedCreateWithoutProductionInput> | QualityControlCreateWithoutProductionInput[] | QualityControlUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutProductionInput | QualityControlCreateOrConnectWithoutProductionInput[]
    upsert?: QualityControlUpsertWithWhereUniqueWithoutProductionInput | QualityControlUpsertWithWhereUniqueWithoutProductionInput[]
    createMany?: QualityControlCreateManyProductionInputEnvelope
    set?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    disconnect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    delete?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    update?: QualityControlUpdateWithWhereUniqueWithoutProductionInput | QualityControlUpdateWithWhereUniqueWithoutProductionInput[]
    updateMany?: QualityControlUpdateManyWithWhereWithoutProductionInput | QualityControlUpdateManyWithWhereWithoutProductionInput[]
    deleteMany?: QualityControlScalarWhereInput | QualityControlScalarWhereInput[]
  }

  export type ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput = {
    create?: XOR<ProductionRevisionCreateWithoutProductionInput, ProductionRevisionUncheckedCreateWithoutProductionInput> | ProductionRevisionCreateWithoutProductionInput[] | ProductionRevisionUncheckedCreateWithoutProductionInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutProductionInput | ProductionRevisionCreateOrConnectWithoutProductionInput[]
    upsert?: ProductionRevisionUpsertWithWhereUniqueWithoutProductionInput | ProductionRevisionUpsertWithWhereUniqueWithoutProductionInput[]
    createMany?: ProductionRevisionCreateManyProductionInputEnvelope
    set?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    disconnect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    delete?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    update?: ProductionRevisionUpdateWithWhereUniqueWithoutProductionInput | ProductionRevisionUpdateWithWhereUniqueWithoutProductionInput[]
    updateMany?: ProductionRevisionUpdateManyWithWhereWithoutProductionInput | ProductionRevisionUpdateManyWithWhereWithoutProductionInput[]
    deleteMany?: ProductionRevisionScalarWhereInput | ProductionRevisionScalarWhereInput[]
  }

  export type RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput = {
    create?: XOR<RevisionCreateWithoutProductionTrackingInput, RevisionUncheckedCreateWithoutProductionTrackingInput> | RevisionCreateWithoutProductionTrackingInput[] | RevisionUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutProductionTrackingInput | RevisionCreateOrConnectWithoutProductionTrackingInput[]
    upsert?: RevisionUpsertWithWhereUniqueWithoutProductionTrackingInput | RevisionUpsertWithWhereUniqueWithoutProductionTrackingInput[]
    createMany?: RevisionCreateManyProductionTrackingInputEnvelope
    set?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    disconnect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    delete?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    update?: RevisionUpdateWithWhereUniqueWithoutProductionTrackingInput | RevisionUpdateWithWhereUniqueWithoutProductionTrackingInput[]
    updateMany?: RevisionUpdateManyWithWhereWithoutProductionTrackingInput | RevisionUpdateManyWithWhereWithoutProductionTrackingInput[]
    deleteMany?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput = {
    create?: XOR<TaskCreateWithoutProductionTrackingInput, TaskUncheckedCreateWithoutProductionTrackingInput> | TaskCreateWithoutProductionTrackingInput[] | TaskUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutProductionTrackingInput | TaskCreateOrConnectWithoutProductionTrackingInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutProductionTrackingInput | TaskUpsertWithWhereUniqueWithoutProductionTrackingInput[]
    createMany?: TaskCreateManyProductionTrackingInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutProductionTrackingInput | TaskUpdateWithWhereUniqueWithoutProductionTrackingInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutProductionTrackingInput | TaskUpdateManyWithWhereWithoutProductionTrackingInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput = {
    create?: XOR<NotificationCreateWithoutProductionTrackingInput, NotificationUncheckedCreateWithoutProductionTrackingInput> | NotificationCreateWithoutProductionTrackingInput[] | NotificationUncheckedCreateWithoutProductionTrackingInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutProductionTrackingInput | NotificationCreateOrConnectWithoutProductionTrackingInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutProductionTrackingInput | NotificationUpsertWithWhereUniqueWithoutProductionTrackingInput[]
    createMany?: NotificationCreateManyProductionTrackingInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutProductionTrackingInput | NotificationUpdateWithWhereUniqueWithoutProductionTrackingInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutProductionTrackingInput | NotificationUpdateManyWithWhereWithoutProductionTrackingInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutRevisionsInput = {
    create?: XOR<OrderCreateWithoutRevisionsInput, OrderUncheckedCreateWithoutRevisionsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutRevisionsInput
    connect?: OrderWhereUniqueInput
  }

  export type SampleCreateNestedOneWithoutRevisionsInput = {
    create?: XOR<SampleCreateWithoutRevisionsInput, SampleUncheckedCreateWithoutRevisionsInput>
    connectOrCreate?: SampleCreateOrConnectWithoutRevisionsInput
    connect?: SampleWhereUniqueInput
  }

  export type ProductionTrackingCreateNestedOneWithoutRevisionsInput = {
    create?: XOR<ProductionTrackingCreateWithoutRevisionsInput, ProductionTrackingUncheckedCreateWithoutRevisionsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutRevisionsInput
    connect?: ProductionTrackingWhereUniqueInput
  }

  export type OrderUpdateOneWithoutRevisionsNestedInput = {
    create?: XOR<OrderCreateWithoutRevisionsInput, OrderUncheckedCreateWithoutRevisionsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutRevisionsInput
    upsert?: OrderUpsertWithoutRevisionsInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutRevisionsInput, OrderUpdateWithoutRevisionsInput>, OrderUncheckedUpdateWithoutRevisionsInput>
  }

  export type SampleUpdateOneWithoutRevisionsNestedInput = {
    create?: XOR<SampleCreateWithoutRevisionsInput, SampleUncheckedCreateWithoutRevisionsInput>
    connectOrCreate?: SampleCreateOrConnectWithoutRevisionsInput
    upsert?: SampleUpsertWithoutRevisionsInput
    disconnect?: SampleWhereInput | boolean
    delete?: SampleWhereInput | boolean
    connect?: SampleWhereUniqueInput
    update?: XOR<XOR<SampleUpdateToOneWithWhereWithoutRevisionsInput, SampleUpdateWithoutRevisionsInput>, SampleUncheckedUpdateWithoutRevisionsInput>
  }

  export type ProductionTrackingUpdateOneWithoutRevisionsNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutRevisionsInput, ProductionTrackingUncheckedCreateWithoutRevisionsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutRevisionsInput
    upsert?: ProductionTrackingUpsertWithoutRevisionsInput
    disconnect?: ProductionTrackingWhereInput | boolean
    delete?: ProductionTrackingWhereInput | boolean
    connect?: ProductionTrackingWhereUniqueInput
    update?: XOR<XOR<ProductionTrackingUpdateToOneWithWhereWithoutRevisionsInput, ProductionTrackingUpdateWithoutRevisionsInput>, ProductionTrackingUncheckedUpdateWithoutRevisionsInput>
  }

  export type CompanyCreateNestedOneWithoutEmployeesInput = {
    create?: XOR<CompanyCreateWithoutEmployeesInput, CompanyUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutEmployeesInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyCreateNestedManyWithoutOwnerInput = {
    create?: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput> | CompanyCreateWithoutOwnerInput[] | CompanyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutOwnerInput | CompanyCreateOrConnectWithoutOwnerInput[]
    createMany?: CompanyCreateManyOwnerInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CategoryCreateWithoutAuthorInput, CategoryUncheckedCreateWithoutAuthorInput> | CategoryCreateWithoutAuthorInput[] | CategoryUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutAuthorInput | CategoryCreateOrConnectWithoutAuthorInput[]
    createMany?: CategoryCreateManyAuthorInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CollectionCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CollectionCreateWithoutAuthorInput, CollectionUncheckedCreateWithoutAuthorInput> | CollectionCreateWithoutAuthorInput[] | CollectionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutAuthorInput | CollectionCreateOrConnectWithoutAuthorInput[]
    createMany?: CollectionCreateManyAuthorInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type SampleCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SampleCreateWithoutCustomerInput, SampleUncheckedCreateWithoutCustomerInput> | SampleCreateWithoutCustomerInput[] | SampleUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCustomerInput | SampleCreateOrConnectWithoutCustomerInput[]
    createMany?: SampleCreateManyCustomerInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type QuestionCreateNestedManyWithoutCustomerInput = {
    create?: XOR<QuestionCreateWithoutCustomerInput, QuestionUncheckedCreateWithoutCustomerInput> | QuestionCreateWithoutCustomerInput[] | QuestionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCustomerInput | QuestionCreateOrConnectWithoutCustomerInput[]
    createMany?: QuestionCreateManyCustomerInputEnvelope
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutCustomerInput = {
    create?: XOR<ReviewCreateWithoutCustomerInput, ReviewUncheckedCreateWithoutCustomerInput> | ReviewCreateWithoutCustomerInput[] | ReviewUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerInput | ReviewCreateOrConnectWithoutCustomerInput[]
    createMany?: ReviewCreateManyCustomerInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type SampleCreateNestedManyWithoutManufactureInput = {
    create?: XOR<SampleCreateWithoutManufactureInput, SampleUncheckedCreateWithoutManufactureInput> | SampleCreateWithoutManufactureInput[] | SampleUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutManufactureInput | SampleCreateOrConnectWithoutManufactureInput[]
    createMany?: SampleCreateManyManufactureInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutManufactureInput = {
    create?: XOR<OrderCreateWithoutManufactureInput, OrderUncheckedCreateWithoutManufactureInput> | OrderCreateWithoutManufactureInput[] | OrderUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutManufactureInput | OrderCreateOrConnectWithoutManufactureInput[]
    createMany?: OrderCreateManyManufactureInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type QuestionCreateNestedManyWithoutManufactureInput = {
    create?: XOR<QuestionCreateWithoutManufactureInput, QuestionUncheckedCreateWithoutManufactureInput> | QuestionCreateWithoutManufactureInput[] | QuestionUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutManufactureInput | QuestionCreateOrConnectWithoutManufactureInput[]
    createMany?: QuestionCreateManyManufactureInputEnvelope
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
  }

  export type SampleProductionCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SampleProductionCreateWithoutUpdatedByInput, SampleProductionUncheckedCreateWithoutUpdatedByInput> | SampleProductionCreateWithoutUpdatedByInput[] | SampleProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutUpdatedByInput | SampleProductionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SampleProductionCreateManyUpdatedByInputEnvelope
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
  }

  export type OrderProductionCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<OrderProductionCreateWithoutUpdatedByInput, OrderProductionUncheckedCreateWithoutUpdatedByInput> | OrderProductionCreateWithoutUpdatedByInput[] | OrderProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutUpdatedByInput | OrderProductionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: OrderProductionCreateManyUpdatedByInputEnvelope
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
  }

  export type QualityControlCreateNestedManyWithoutInspectorInput = {
    create?: XOR<QualityControlCreateWithoutInspectorInput, QualityControlUncheckedCreateWithoutInspectorInput> | QualityControlCreateWithoutInspectorInput[] | QualityControlUncheckedCreateWithoutInspectorInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutInspectorInput | QualityControlCreateOrConnectWithoutInspectorInput[]
    createMany?: QualityControlCreateManyInspectorInputEnvelope
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
  }

  export type WorkshopCreateNestedManyWithoutOwnerInput = {
    create?: XOR<WorkshopCreateWithoutOwnerInput, WorkshopUncheckedCreateWithoutOwnerInput> | WorkshopCreateWithoutOwnerInput[] | WorkshopUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: WorkshopCreateOrConnectWithoutOwnerInput | WorkshopCreateOrConnectWithoutOwnerInput[]
    createMany?: WorkshopCreateManyOwnerInputEnvelope
    connect?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
  }

  export type ProductionRevisionCreateNestedManyWithoutRequestedByInput = {
    create?: XOR<ProductionRevisionCreateWithoutRequestedByInput, ProductionRevisionUncheckedCreateWithoutRequestedByInput> | ProductionRevisionCreateWithoutRequestedByInput[] | ProductionRevisionUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutRequestedByInput | ProductionRevisionCreateOrConnectWithoutRequestedByInput[]
    createMany?: ProductionRevisionCreateManyRequestedByInputEnvelope
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
  }

  export type UserFavoriteCollectionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutUserInput, UserFavoriteCollectionUncheckedCreateWithoutUserInput> | UserFavoriteCollectionCreateWithoutUserInput[] | UserFavoriteCollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutUserInput | UserFavoriteCollectionCreateOrConnectWithoutUserInput[]
    createMany?: UserFavoriteCollectionCreateManyUserInputEnvelope
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutUserInput = {
    create?: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput> | TaskCreateWithoutUserInput[] | TaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUserInput | TaskCreateOrConnectWithoutUserInput[]
    createMany?: TaskCreateManyUserInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<TaskCreateWithoutAssignedToInput, TaskUncheckedCreateWithoutAssignedToInput> | TaskCreateWithoutAssignedToInput[] | TaskUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssignedToInput | TaskCreateOrConnectWithoutAssignedToInput[]
    createMany?: TaskCreateManyAssignedToInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type CompanyUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput> | CompanyCreateWithoutOwnerInput[] | CompanyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutOwnerInput | CompanyCreateOrConnectWithoutOwnerInput[]
    createMany?: CompanyCreateManyOwnerInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CategoryCreateWithoutAuthorInput, CategoryUncheckedCreateWithoutAuthorInput> | CategoryCreateWithoutAuthorInput[] | CategoryUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutAuthorInput | CategoryCreateOrConnectWithoutAuthorInput[]
    createMany?: CategoryCreateManyAuthorInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CollectionUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CollectionCreateWithoutAuthorInput, CollectionUncheckedCreateWithoutAuthorInput> | CollectionCreateWithoutAuthorInput[] | CollectionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutAuthorInput | CollectionCreateOrConnectWithoutAuthorInput[]
    createMany?: CollectionCreateManyAuthorInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type SampleUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SampleCreateWithoutCustomerInput, SampleUncheckedCreateWithoutCustomerInput> | SampleCreateWithoutCustomerInput[] | SampleUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCustomerInput | SampleCreateOrConnectWithoutCustomerInput[]
    createMany?: SampleCreateManyCustomerInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type QuestionUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<QuestionCreateWithoutCustomerInput, QuestionUncheckedCreateWithoutCustomerInput> | QuestionCreateWithoutCustomerInput[] | QuestionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCustomerInput | QuestionCreateOrConnectWithoutCustomerInput[]
    createMany?: QuestionCreateManyCustomerInputEnvelope
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<ReviewCreateWithoutCustomerInput, ReviewUncheckedCreateWithoutCustomerInput> | ReviewCreateWithoutCustomerInput[] | ReviewUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerInput | ReviewCreateOrConnectWithoutCustomerInput[]
    createMany?: ReviewCreateManyCustomerInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type SampleUncheckedCreateNestedManyWithoutManufactureInput = {
    create?: XOR<SampleCreateWithoutManufactureInput, SampleUncheckedCreateWithoutManufactureInput> | SampleCreateWithoutManufactureInput[] | SampleUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutManufactureInput | SampleCreateOrConnectWithoutManufactureInput[]
    createMany?: SampleCreateManyManufactureInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutManufactureInput = {
    create?: XOR<OrderCreateWithoutManufactureInput, OrderUncheckedCreateWithoutManufactureInput> | OrderCreateWithoutManufactureInput[] | OrderUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutManufactureInput | OrderCreateOrConnectWithoutManufactureInput[]
    createMany?: OrderCreateManyManufactureInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type QuestionUncheckedCreateNestedManyWithoutManufactureInput = {
    create?: XOR<QuestionCreateWithoutManufactureInput, QuestionUncheckedCreateWithoutManufactureInput> | QuestionCreateWithoutManufactureInput[] | QuestionUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutManufactureInput | QuestionCreateOrConnectWithoutManufactureInput[]
    createMany?: QuestionCreateManyManufactureInputEnvelope
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
  }

  export type SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SampleProductionCreateWithoutUpdatedByInput, SampleProductionUncheckedCreateWithoutUpdatedByInput> | SampleProductionCreateWithoutUpdatedByInput[] | SampleProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutUpdatedByInput | SampleProductionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SampleProductionCreateManyUpdatedByInputEnvelope
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
  }

  export type OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<OrderProductionCreateWithoutUpdatedByInput, OrderProductionUncheckedCreateWithoutUpdatedByInput> | OrderProductionCreateWithoutUpdatedByInput[] | OrderProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutUpdatedByInput | OrderProductionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: OrderProductionCreateManyUpdatedByInputEnvelope
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
  }

  export type QualityControlUncheckedCreateNestedManyWithoutInspectorInput = {
    create?: XOR<QualityControlCreateWithoutInspectorInput, QualityControlUncheckedCreateWithoutInspectorInput> | QualityControlCreateWithoutInspectorInput[] | QualityControlUncheckedCreateWithoutInspectorInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutInspectorInput | QualityControlCreateOrConnectWithoutInspectorInput[]
    createMany?: QualityControlCreateManyInspectorInputEnvelope
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
  }

  export type WorkshopUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<WorkshopCreateWithoutOwnerInput, WorkshopUncheckedCreateWithoutOwnerInput> | WorkshopCreateWithoutOwnerInput[] | WorkshopUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: WorkshopCreateOrConnectWithoutOwnerInput | WorkshopCreateOrConnectWithoutOwnerInput[]
    createMany?: WorkshopCreateManyOwnerInputEnvelope
    connect?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
  }

  export type ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput = {
    create?: XOR<ProductionRevisionCreateWithoutRequestedByInput, ProductionRevisionUncheckedCreateWithoutRequestedByInput> | ProductionRevisionCreateWithoutRequestedByInput[] | ProductionRevisionUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutRequestedByInput | ProductionRevisionCreateOrConnectWithoutRequestedByInput[]
    createMany?: ProductionRevisionCreateManyRequestedByInputEnvelope
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
  }

  export type UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutUserInput, UserFavoriteCollectionUncheckedCreateWithoutUserInput> | UserFavoriteCollectionCreateWithoutUserInput[] | UserFavoriteCollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutUserInput | UserFavoriteCollectionCreateOrConnectWithoutUserInput[]
    createMany?: UserFavoriteCollectionCreateManyUserInputEnvelope
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput> | TaskCreateWithoutUserInput[] | TaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUserInput | TaskCreateOrConnectWithoutUserInput[]
    createMany?: TaskCreateManyUserInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<TaskCreateWithoutAssignedToInput, TaskUncheckedCreateWithoutAssignedToInput> | TaskCreateWithoutAssignedToInput[] | TaskUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssignedToInput | TaskCreateOrConnectWithoutAssignedToInput[]
    createMany?: TaskCreateManyAssignedToInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type NullableEnumDepartmentFieldUpdateOperationsInput = {
    set?: $Enums.Department | null
  }

  export type CompanyUpdateOneWithoutEmployeesNestedInput = {
    create?: XOR<CompanyCreateWithoutEmployeesInput, CompanyUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutEmployeesInput
    upsert?: CompanyUpsertWithoutEmployeesInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutEmployeesInput, CompanyUpdateWithoutEmployeesInput>, CompanyUncheckedUpdateWithoutEmployeesInput>
  }

  export type CompanyUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput> | CompanyCreateWithoutOwnerInput[] | CompanyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutOwnerInput | CompanyCreateOrConnectWithoutOwnerInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutOwnerInput | CompanyUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: CompanyCreateManyOwnerInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutOwnerInput | CompanyUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutOwnerInput | CompanyUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CategoryCreateWithoutAuthorInput, CategoryUncheckedCreateWithoutAuthorInput> | CategoryCreateWithoutAuthorInput[] | CategoryUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutAuthorInput | CategoryCreateOrConnectWithoutAuthorInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutAuthorInput | CategoryUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CategoryCreateManyAuthorInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutAuthorInput | CategoryUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutAuthorInput | CategoryUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CollectionUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CollectionCreateWithoutAuthorInput, CollectionUncheckedCreateWithoutAuthorInput> | CollectionCreateWithoutAuthorInput[] | CollectionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutAuthorInput | CollectionCreateOrConnectWithoutAuthorInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutAuthorInput | CollectionUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CollectionCreateManyAuthorInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutAuthorInput | CollectionUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutAuthorInput | CollectionUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type SampleUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SampleCreateWithoutCustomerInput, SampleUncheckedCreateWithoutCustomerInput> | SampleCreateWithoutCustomerInput[] | SampleUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCustomerInput | SampleCreateOrConnectWithoutCustomerInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutCustomerInput | SampleUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SampleCreateManyCustomerInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutCustomerInput | SampleUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutCustomerInput | SampleUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type QuestionUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<QuestionCreateWithoutCustomerInput, QuestionUncheckedCreateWithoutCustomerInput> | QuestionCreateWithoutCustomerInput[] | QuestionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCustomerInput | QuestionCreateOrConnectWithoutCustomerInput[]
    upsert?: QuestionUpsertWithWhereUniqueWithoutCustomerInput | QuestionUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: QuestionCreateManyCustomerInputEnvelope
    set?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    disconnect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    delete?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    update?: QuestionUpdateWithWhereUniqueWithoutCustomerInput | QuestionUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: QuestionUpdateManyWithWhereWithoutCustomerInput | QuestionUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<ReviewCreateWithoutCustomerInput, ReviewUncheckedCreateWithoutCustomerInput> | ReviewCreateWithoutCustomerInput[] | ReviewUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerInput | ReviewCreateOrConnectWithoutCustomerInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCustomerInput | ReviewUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: ReviewCreateManyCustomerInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCustomerInput | ReviewUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCustomerInput | ReviewUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type SampleUpdateManyWithoutManufactureNestedInput = {
    create?: XOR<SampleCreateWithoutManufactureInput, SampleUncheckedCreateWithoutManufactureInput> | SampleCreateWithoutManufactureInput[] | SampleUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutManufactureInput | SampleCreateOrConnectWithoutManufactureInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutManufactureInput | SampleUpsertWithWhereUniqueWithoutManufactureInput[]
    createMany?: SampleCreateManyManufactureInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutManufactureInput | SampleUpdateWithWhereUniqueWithoutManufactureInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutManufactureInput | SampleUpdateManyWithWhereWithoutManufactureInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutManufactureNestedInput = {
    create?: XOR<OrderCreateWithoutManufactureInput, OrderUncheckedCreateWithoutManufactureInput> | OrderCreateWithoutManufactureInput[] | OrderUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutManufactureInput | OrderCreateOrConnectWithoutManufactureInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutManufactureInput | OrderUpsertWithWhereUniqueWithoutManufactureInput[]
    createMany?: OrderCreateManyManufactureInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutManufactureInput | OrderUpdateWithWhereUniqueWithoutManufactureInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutManufactureInput | OrderUpdateManyWithWhereWithoutManufactureInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type QuestionUpdateManyWithoutManufactureNestedInput = {
    create?: XOR<QuestionCreateWithoutManufactureInput, QuestionUncheckedCreateWithoutManufactureInput> | QuestionCreateWithoutManufactureInput[] | QuestionUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutManufactureInput | QuestionCreateOrConnectWithoutManufactureInput[]
    upsert?: QuestionUpsertWithWhereUniqueWithoutManufactureInput | QuestionUpsertWithWhereUniqueWithoutManufactureInput[]
    createMany?: QuestionCreateManyManufactureInputEnvelope
    set?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    disconnect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    delete?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    update?: QuestionUpdateWithWhereUniqueWithoutManufactureInput | QuestionUpdateWithWhereUniqueWithoutManufactureInput[]
    updateMany?: QuestionUpdateManyWithWhereWithoutManufactureInput | QuestionUpdateManyWithWhereWithoutManufactureInput[]
    deleteMany?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
  }

  export type SampleProductionUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SampleProductionCreateWithoutUpdatedByInput, SampleProductionUncheckedCreateWithoutUpdatedByInput> | SampleProductionCreateWithoutUpdatedByInput[] | SampleProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutUpdatedByInput | SampleProductionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SampleProductionUpsertWithWhereUniqueWithoutUpdatedByInput | SampleProductionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SampleProductionCreateManyUpdatedByInputEnvelope
    set?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    disconnect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    delete?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    update?: SampleProductionUpdateWithWhereUniqueWithoutUpdatedByInput | SampleProductionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SampleProductionUpdateManyWithWhereWithoutUpdatedByInput | SampleProductionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SampleProductionScalarWhereInput | SampleProductionScalarWhereInput[]
  }

  export type OrderProductionUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<OrderProductionCreateWithoutUpdatedByInput, OrderProductionUncheckedCreateWithoutUpdatedByInput> | OrderProductionCreateWithoutUpdatedByInput[] | OrderProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutUpdatedByInput | OrderProductionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: OrderProductionUpsertWithWhereUniqueWithoutUpdatedByInput | OrderProductionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: OrderProductionCreateManyUpdatedByInputEnvelope
    set?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    disconnect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    delete?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    update?: OrderProductionUpdateWithWhereUniqueWithoutUpdatedByInput | OrderProductionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: OrderProductionUpdateManyWithWhereWithoutUpdatedByInput | OrderProductionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: OrderProductionScalarWhereInput | OrderProductionScalarWhereInput[]
  }

  export type QualityControlUpdateManyWithoutInspectorNestedInput = {
    create?: XOR<QualityControlCreateWithoutInspectorInput, QualityControlUncheckedCreateWithoutInspectorInput> | QualityControlCreateWithoutInspectorInput[] | QualityControlUncheckedCreateWithoutInspectorInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutInspectorInput | QualityControlCreateOrConnectWithoutInspectorInput[]
    upsert?: QualityControlUpsertWithWhereUniqueWithoutInspectorInput | QualityControlUpsertWithWhereUniqueWithoutInspectorInput[]
    createMany?: QualityControlCreateManyInspectorInputEnvelope
    set?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    disconnect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    delete?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    update?: QualityControlUpdateWithWhereUniqueWithoutInspectorInput | QualityControlUpdateWithWhereUniqueWithoutInspectorInput[]
    updateMany?: QualityControlUpdateManyWithWhereWithoutInspectorInput | QualityControlUpdateManyWithWhereWithoutInspectorInput[]
    deleteMany?: QualityControlScalarWhereInput | QualityControlScalarWhereInput[]
  }

  export type WorkshopUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<WorkshopCreateWithoutOwnerInput, WorkshopUncheckedCreateWithoutOwnerInput> | WorkshopCreateWithoutOwnerInput[] | WorkshopUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: WorkshopCreateOrConnectWithoutOwnerInput | WorkshopCreateOrConnectWithoutOwnerInput[]
    upsert?: WorkshopUpsertWithWhereUniqueWithoutOwnerInput | WorkshopUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: WorkshopCreateManyOwnerInputEnvelope
    set?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    disconnect?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    delete?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    connect?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    update?: WorkshopUpdateWithWhereUniqueWithoutOwnerInput | WorkshopUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: WorkshopUpdateManyWithWhereWithoutOwnerInput | WorkshopUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: WorkshopScalarWhereInput | WorkshopScalarWhereInput[]
  }

  export type ProductionRevisionUpdateManyWithoutRequestedByNestedInput = {
    create?: XOR<ProductionRevisionCreateWithoutRequestedByInput, ProductionRevisionUncheckedCreateWithoutRequestedByInput> | ProductionRevisionCreateWithoutRequestedByInput[] | ProductionRevisionUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutRequestedByInput | ProductionRevisionCreateOrConnectWithoutRequestedByInput[]
    upsert?: ProductionRevisionUpsertWithWhereUniqueWithoutRequestedByInput | ProductionRevisionUpsertWithWhereUniqueWithoutRequestedByInput[]
    createMany?: ProductionRevisionCreateManyRequestedByInputEnvelope
    set?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    disconnect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    delete?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    update?: ProductionRevisionUpdateWithWhereUniqueWithoutRequestedByInput | ProductionRevisionUpdateWithWhereUniqueWithoutRequestedByInput[]
    updateMany?: ProductionRevisionUpdateManyWithWhereWithoutRequestedByInput | ProductionRevisionUpdateManyWithWhereWithoutRequestedByInput[]
    deleteMany?: ProductionRevisionScalarWhereInput | ProductionRevisionScalarWhereInput[]
  }

  export type UserFavoriteCollectionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutUserInput, UserFavoriteCollectionUncheckedCreateWithoutUserInput> | UserFavoriteCollectionCreateWithoutUserInput[] | UserFavoriteCollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutUserInput | UserFavoriteCollectionCreateOrConnectWithoutUserInput[]
    upsert?: UserFavoriteCollectionUpsertWithWhereUniqueWithoutUserInput | UserFavoriteCollectionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserFavoriteCollectionCreateManyUserInputEnvelope
    set?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    disconnect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    delete?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    update?: UserFavoriteCollectionUpdateWithWhereUniqueWithoutUserInput | UserFavoriteCollectionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserFavoriteCollectionUpdateManyWithWhereWithoutUserInput | UserFavoriteCollectionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserFavoriteCollectionScalarWhereInput | UserFavoriteCollectionScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutUserNestedInput = {
    create?: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput> | TaskCreateWithoutUserInput[] | TaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUserInput | TaskCreateOrConnectWithoutUserInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutUserInput | TaskUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TaskCreateManyUserInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutUserInput | TaskUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutUserInput | TaskUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<TaskCreateWithoutAssignedToInput, TaskUncheckedCreateWithoutAssignedToInput> | TaskCreateWithoutAssignedToInput[] | TaskUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssignedToInput | TaskCreateOrConnectWithoutAssignedToInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssignedToInput | TaskUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: TaskCreateManyAssignedToInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssignedToInput | TaskUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssignedToInput | TaskUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type CompanyUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput> | CompanyCreateWithoutOwnerInput[] | CompanyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutOwnerInput | CompanyCreateOrConnectWithoutOwnerInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutOwnerInput | CompanyUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: CompanyCreateManyOwnerInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutOwnerInput | CompanyUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutOwnerInput | CompanyUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CategoryCreateWithoutAuthorInput, CategoryUncheckedCreateWithoutAuthorInput> | CategoryCreateWithoutAuthorInput[] | CategoryUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutAuthorInput | CategoryCreateOrConnectWithoutAuthorInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutAuthorInput | CategoryUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CategoryCreateManyAuthorInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutAuthorInput | CategoryUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutAuthorInput | CategoryUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CollectionUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CollectionCreateWithoutAuthorInput, CollectionUncheckedCreateWithoutAuthorInput> | CollectionCreateWithoutAuthorInput[] | CollectionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutAuthorInput | CollectionCreateOrConnectWithoutAuthorInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutAuthorInput | CollectionUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CollectionCreateManyAuthorInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutAuthorInput | CollectionUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutAuthorInput | CollectionUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type SampleUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SampleCreateWithoutCustomerInput, SampleUncheckedCreateWithoutCustomerInput> | SampleCreateWithoutCustomerInput[] | SampleUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCustomerInput | SampleCreateOrConnectWithoutCustomerInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutCustomerInput | SampleUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SampleCreateManyCustomerInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutCustomerInput | SampleUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutCustomerInput | SampleUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type QuestionUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<QuestionCreateWithoutCustomerInput, QuestionUncheckedCreateWithoutCustomerInput> | QuestionCreateWithoutCustomerInput[] | QuestionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCustomerInput | QuestionCreateOrConnectWithoutCustomerInput[]
    upsert?: QuestionUpsertWithWhereUniqueWithoutCustomerInput | QuestionUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: QuestionCreateManyCustomerInputEnvelope
    set?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    disconnect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    delete?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    update?: QuestionUpdateWithWhereUniqueWithoutCustomerInput | QuestionUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: QuestionUpdateManyWithWhereWithoutCustomerInput | QuestionUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<ReviewCreateWithoutCustomerInput, ReviewUncheckedCreateWithoutCustomerInput> | ReviewCreateWithoutCustomerInput[] | ReviewUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerInput | ReviewCreateOrConnectWithoutCustomerInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCustomerInput | ReviewUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: ReviewCreateManyCustomerInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCustomerInput | ReviewUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCustomerInput | ReviewUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type SampleUncheckedUpdateManyWithoutManufactureNestedInput = {
    create?: XOR<SampleCreateWithoutManufactureInput, SampleUncheckedCreateWithoutManufactureInput> | SampleCreateWithoutManufactureInput[] | SampleUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutManufactureInput | SampleCreateOrConnectWithoutManufactureInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutManufactureInput | SampleUpsertWithWhereUniqueWithoutManufactureInput[]
    createMany?: SampleCreateManyManufactureInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutManufactureInput | SampleUpdateWithWhereUniqueWithoutManufactureInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutManufactureInput | SampleUpdateManyWithWhereWithoutManufactureInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutManufactureNestedInput = {
    create?: XOR<OrderCreateWithoutManufactureInput, OrderUncheckedCreateWithoutManufactureInput> | OrderCreateWithoutManufactureInput[] | OrderUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutManufactureInput | OrderCreateOrConnectWithoutManufactureInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutManufactureInput | OrderUpsertWithWhereUniqueWithoutManufactureInput[]
    createMany?: OrderCreateManyManufactureInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutManufactureInput | OrderUpdateWithWhereUniqueWithoutManufactureInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutManufactureInput | OrderUpdateManyWithWhereWithoutManufactureInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type QuestionUncheckedUpdateManyWithoutManufactureNestedInput = {
    create?: XOR<QuestionCreateWithoutManufactureInput, QuestionUncheckedCreateWithoutManufactureInput> | QuestionCreateWithoutManufactureInput[] | QuestionUncheckedCreateWithoutManufactureInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutManufactureInput | QuestionCreateOrConnectWithoutManufactureInput[]
    upsert?: QuestionUpsertWithWhereUniqueWithoutManufactureInput | QuestionUpsertWithWhereUniqueWithoutManufactureInput[]
    createMany?: QuestionCreateManyManufactureInputEnvelope
    set?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    disconnect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    delete?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    update?: QuestionUpdateWithWhereUniqueWithoutManufactureInput | QuestionUpdateWithWhereUniqueWithoutManufactureInput[]
    updateMany?: QuestionUpdateManyWithWhereWithoutManufactureInput | QuestionUpdateManyWithWhereWithoutManufactureInput[]
    deleteMany?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
  }

  export type SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SampleProductionCreateWithoutUpdatedByInput, SampleProductionUncheckedCreateWithoutUpdatedByInput> | SampleProductionCreateWithoutUpdatedByInput[] | SampleProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutUpdatedByInput | SampleProductionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SampleProductionUpsertWithWhereUniqueWithoutUpdatedByInput | SampleProductionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SampleProductionCreateManyUpdatedByInputEnvelope
    set?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    disconnect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    delete?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    update?: SampleProductionUpdateWithWhereUniqueWithoutUpdatedByInput | SampleProductionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SampleProductionUpdateManyWithWhereWithoutUpdatedByInput | SampleProductionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SampleProductionScalarWhereInput | SampleProductionScalarWhereInput[]
  }

  export type OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<OrderProductionCreateWithoutUpdatedByInput, OrderProductionUncheckedCreateWithoutUpdatedByInput> | OrderProductionCreateWithoutUpdatedByInput[] | OrderProductionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutUpdatedByInput | OrderProductionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: OrderProductionUpsertWithWhereUniqueWithoutUpdatedByInput | OrderProductionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: OrderProductionCreateManyUpdatedByInputEnvelope
    set?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    disconnect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    delete?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    update?: OrderProductionUpdateWithWhereUniqueWithoutUpdatedByInput | OrderProductionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: OrderProductionUpdateManyWithWhereWithoutUpdatedByInput | OrderProductionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: OrderProductionScalarWhereInput | OrderProductionScalarWhereInput[]
  }

  export type QualityControlUncheckedUpdateManyWithoutInspectorNestedInput = {
    create?: XOR<QualityControlCreateWithoutInspectorInput, QualityControlUncheckedCreateWithoutInspectorInput> | QualityControlCreateWithoutInspectorInput[] | QualityControlUncheckedCreateWithoutInspectorInput[]
    connectOrCreate?: QualityControlCreateOrConnectWithoutInspectorInput | QualityControlCreateOrConnectWithoutInspectorInput[]
    upsert?: QualityControlUpsertWithWhereUniqueWithoutInspectorInput | QualityControlUpsertWithWhereUniqueWithoutInspectorInput[]
    createMany?: QualityControlCreateManyInspectorInputEnvelope
    set?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    disconnect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    delete?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    connect?: QualityControlWhereUniqueInput | QualityControlWhereUniqueInput[]
    update?: QualityControlUpdateWithWhereUniqueWithoutInspectorInput | QualityControlUpdateWithWhereUniqueWithoutInspectorInput[]
    updateMany?: QualityControlUpdateManyWithWhereWithoutInspectorInput | QualityControlUpdateManyWithWhereWithoutInspectorInput[]
    deleteMany?: QualityControlScalarWhereInput | QualityControlScalarWhereInput[]
  }

  export type WorkshopUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<WorkshopCreateWithoutOwnerInput, WorkshopUncheckedCreateWithoutOwnerInput> | WorkshopCreateWithoutOwnerInput[] | WorkshopUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: WorkshopCreateOrConnectWithoutOwnerInput | WorkshopCreateOrConnectWithoutOwnerInput[]
    upsert?: WorkshopUpsertWithWhereUniqueWithoutOwnerInput | WorkshopUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: WorkshopCreateManyOwnerInputEnvelope
    set?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    disconnect?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    delete?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    connect?: WorkshopWhereUniqueInput | WorkshopWhereUniqueInput[]
    update?: WorkshopUpdateWithWhereUniqueWithoutOwnerInput | WorkshopUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: WorkshopUpdateManyWithWhereWithoutOwnerInput | WorkshopUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: WorkshopScalarWhereInput | WorkshopScalarWhereInput[]
  }

  export type ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput = {
    create?: XOR<ProductionRevisionCreateWithoutRequestedByInput, ProductionRevisionUncheckedCreateWithoutRequestedByInput> | ProductionRevisionCreateWithoutRequestedByInput[] | ProductionRevisionUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: ProductionRevisionCreateOrConnectWithoutRequestedByInput | ProductionRevisionCreateOrConnectWithoutRequestedByInput[]
    upsert?: ProductionRevisionUpsertWithWhereUniqueWithoutRequestedByInput | ProductionRevisionUpsertWithWhereUniqueWithoutRequestedByInput[]
    createMany?: ProductionRevisionCreateManyRequestedByInputEnvelope
    set?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    disconnect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    delete?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    connect?: ProductionRevisionWhereUniqueInput | ProductionRevisionWhereUniqueInput[]
    update?: ProductionRevisionUpdateWithWhereUniqueWithoutRequestedByInput | ProductionRevisionUpdateWithWhereUniqueWithoutRequestedByInput[]
    updateMany?: ProductionRevisionUpdateManyWithWhereWithoutRequestedByInput | ProductionRevisionUpdateManyWithWhereWithoutRequestedByInput[]
    deleteMany?: ProductionRevisionScalarWhereInput | ProductionRevisionScalarWhereInput[]
  }

  export type UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutUserInput, UserFavoriteCollectionUncheckedCreateWithoutUserInput> | UserFavoriteCollectionCreateWithoutUserInput[] | UserFavoriteCollectionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutUserInput | UserFavoriteCollectionCreateOrConnectWithoutUserInput[]
    upsert?: UserFavoriteCollectionUpsertWithWhereUniqueWithoutUserInput | UserFavoriteCollectionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserFavoriteCollectionCreateManyUserInputEnvelope
    set?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    disconnect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    delete?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    update?: UserFavoriteCollectionUpdateWithWhereUniqueWithoutUserInput | UserFavoriteCollectionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserFavoriteCollectionUpdateManyWithWhereWithoutUserInput | UserFavoriteCollectionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserFavoriteCollectionScalarWhereInput | UserFavoriteCollectionScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput> | TaskCreateWithoutUserInput[] | TaskUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUserInput | TaskCreateOrConnectWithoutUserInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutUserInput | TaskUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TaskCreateManyUserInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutUserInput | TaskUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutUserInput | TaskUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<TaskCreateWithoutAssignedToInput, TaskUncheckedCreateWithoutAssignedToInput> | TaskCreateWithoutAssignedToInput[] | TaskUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssignedToInput | TaskCreateOrConnectWithoutAssignedToInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssignedToInput | TaskUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: TaskCreateManyAssignedToInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssignedToInput | TaskUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssignedToInput | TaskUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCategoriesInput = {
    create?: XOR<UserCreateWithoutCategoriesInput, UserUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategoriesInput
    connect?: UserWhereUniqueInput
  }

  export type CollectionCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CollectionCreateWithoutCategoryInput, CollectionUncheckedCreateWithoutCategoryInput> | CollectionCreateWithoutCategoryInput[] | CollectionUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCategoryInput | CollectionCreateOrConnectWithoutCategoryInput[]
    createMany?: CollectionCreateManyCategoryInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutParentCategoryInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedOneWithoutSubCategoriesInput = {
    create?: XOR<CategoryCreateWithoutSubCategoriesInput, CategoryUncheckedCreateWithoutSubCategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutSubCategoriesInput
    connect?: CategoryWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutCategoriesInput = {
    create?: XOR<CompanyCreateWithoutCategoriesInput, CompanyUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCategoriesInput
    connect?: CompanyWhereUniqueInput
  }

  export type CollectionUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CollectionCreateWithoutCategoryInput, CollectionUncheckedCreateWithoutCategoryInput> | CollectionCreateWithoutCategoryInput[] | CollectionUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCategoryInput | CollectionCreateOrConnectWithoutCategoryInput[]
    createMany?: CollectionCreateManyCategoryInputEnvelope
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutParentCategoryInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutCategoriesNestedInput = {
    create?: XOR<UserCreateWithoutCategoriesInput, UserUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategoriesInput
    upsert?: UserUpsertWithoutCategoriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCategoriesInput, UserUpdateWithoutCategoriesInput>, UserUncheckedUpdateWithoutCategoriesInput>
  }

  export type CollectionUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CollectionCreateWithoutCategoryInput, CollectionUncheckedCreateWithoutCategoryInput> | CollectionCreateWithoutCategoryInput[] | CollectionUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCategoryInput | CollectionCreateOrConnectWithoutCategoryInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutCategoryInput | CollectionUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CollectionCreateManyCategoryInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutCategoryInput | CollectionUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutCategoryInput | CollectionUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutParentCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentCategoryInput | CategoryUpsertWithWhereUniqueWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentCategoryInput | CategoryUpdateWithWhereUniqueWithoutParentCategoryInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentCategoryInput | CategoryUpdateManyWithWhereWithoutParentCategoryInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateOneWithoutSubCategoriesNestedInput = {
    create?: XOR<CategoryCreateWithoutSubCategoriesInput, CategoryUncheckedCreateWithoutSubCategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutSubCategoriesInput
    upsert?: CategoryUpsertWithoutSubCategoriesInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutSubCategoriesInput, CategoryUpdateWithoutSubCategoriesInput>, CategoryUncheckedUpdateWithoutSubCategoriesInput>
  }

  export type CompanyUpdateOneWithoutCategoriesNestedInput = {
    create?: XOR<CompanyCreateWithoutCategoriesInput, CompanyUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCategoriesInput
    upsert?: CompanyUpsertWithoutCategoriesInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutCategoriesInput, CompanyUpdateWithoutCategoriesInput>, CompanyUncheckedUpdateWithoutCategoriesInput>
  }

  export type CollectionUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CollectionCreateWithoutCategoryInput, CollectionUncheckedCreateWithoutCategoryInput> | CollectionCreateWithoutCategoryInput[] | CollectionUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCategoryInput | CollectionCreateOrConnectWithoutCategoryInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutCategoryInput | CollectionUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CollectionCreateManyCategoryInputEnvelope
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutCategoryInput | CollectionUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutCategoryInput | CollectionUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentCategoryInput | CategoryUpsertWithWhereUniqueWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentCategoryInput | CategoryUpdateWithWhereUniqueWithoutParentCategoryInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentCategoryInput | CategoryUpdateManyWithWhereWithoutParentCategoryInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CertificationCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<CertificationCreateWithoutCollectionsInput, CertificationUncheckedCreateWithoutCollectionsInput> | CertificationCreateWithoutCollectionsInput[] | CertificationUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCollectionsInput | CertificationCreateOrConnectWithoutCollectionsInput[]
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
  }

  export type UserFavoriteCollectionCreateNestedManyWithoutCollectionInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutCollectionInput, UserFavoriteCollectionUncheckedCreateWithoutCollectionInput> | UserFavoriteCollectionCreateWithoutCollectionInput[] | UserFavoriteCollectionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutCollectionInput | UserFavoriteCollectionCreateOrConnectWithoutCollectionInput[]
    createMany?: UserFavoriteCollectionCreateManyCollectionInputEnvelope
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
  }

  export type CategoryCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<CategoryCreateWithoutCollectionsInput, CategoryUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutCollectionsInput
    connect?: CategoryWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    connect?: UserWhereUniqueInput
  }

  export type SampleCreateNestedManyWithoutCollectionInput = {
    create?: XOR<SampleCreateWithoutCollectionInput, SampleUncheckedCreateWithoutCollectionInput> | SampleCreateWithoutCollectionInput[] | SampleUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCollectionInput | SampleCreateOrConnectWithoutCollectionInput[]
    createMany?: SampleCreateManyCollectionInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type SampleCreateNestedManyWithoutOriginalCollectionInput = {
    create?: XOR<SampleCreateWithoutOriginalCollectionInput, SampleUncheckedCreateWithoutOriginalCollectionInput> | SampleCreateWithoutOriginalCollectionInput[] | SampleUncheckedCreateWithoutOriginalCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutOriginalCollectionInput | SampleCreateOrConnectWithoutOriginalCollectionInput[]
    createMany?: SampleCreateManyOriginalCollectionInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutCollectionInput = {
    create?: XOR<OrderCreateWithoutCollectionInput, OrderUncheckedCreateWithoutCollectionInput> | OrderCreateWithoutCollectionInput[] | OrderUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCollectionInput | OrderCreateOrConnectWithoutCollectionInput[]
    createMany?: OrderCreateManyCollectionInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type QuestionCreateNestedManyWithoutCollectionInput = {
    create?: XOR<QuestionCreateWithoutCollectionInput, QuestionUncheckedCreateWithoutCollectionInput> | QuestionCreateWithoutCollectionInput[] | QuestionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCollectionInput | QuestionCreateOrConnectWithoutCollectionInput[]
    createMany?: QuestionCreateManyCollectionInputEnvelope
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutCollectionInput = {
    create?: XOR<ReviewCreateWithoutCollectionInput, ReviewUncheckedCreateWithoutCollectionInput> | ReviewCreateWithoutCollectionInput[] | ReviewUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCollectionInput | ReviewCreateOrConnectWithoutCollectionInput[]
    createMany?: ReviewCreateManyCollectionInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutCollectionInput = {
    create?: XOR<TaskCreateWithoutCollectionInput, TaskUncheckedCreateWithoutCollectionInput> | TaskCreateWithoutCollectionInput[] | TaskUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCollectionInput | TaskCreateOrConnectWithoutCollectionInput[]
    createMany?: TaskCreateManyCollectionInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type CompanyCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<CompanyCreateWithoutCollectionsInput, CompanyUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCollectionsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CertificationUncheckedCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<CertificationCreateWithoutCollectionsInput, CertificationUncheckedCreateWithoutCollectionsInput> | CertificationCreateWithoutCollectionsInput[] | CertificationUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCollectionsInput | CertificationCreateOrConnectWithoutCollectionsInput[]
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
  }

  export type UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutCollectionInput, UserFavoriteCollectionUncheckedCreateWithoutCollectionInput> | UserFavoriteCollectionCreateWithoutCollectionInput[] | UserFavoriteCollectionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutCollectionInput | UserFavoriteCollectionCreateOrConnectWithoutCollectionInput[]
    createMany?: UserFavoriteCollectionCreateManyCollectionInputEnvelope
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
  }

  export type SampleUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<SampleCreateWithoutCollectionInput, SampleUncheckedCreateWithoutCollectionInput> | SampleCreateWithoutCollectionInput[] | SampleUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCollectionInput | SampleCreateOrConnectWithoutCollectionInput[]
    createMany?: SampleCreateManyCollectionInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput = {
    create?: XOR<SampleCreateWithoutOriginalCollectionInput, SampleUncheckedCreateWithoutOriginalCollectionInput> | SampleCreateWithoutOriginalCollectionInput[] | SampleUncheckedCreateWithoutOriginalCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutOriginalCollectionInput | SampleCreateOrConnectWithoutOriginalCollectionInput[]
    createMany?: SampleCreateManyOriginalCollectionInputEnvelope
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<OrderCreateWithoutCollectionInput, OrderUncheckedCreateWithoutCollectionInput> | OrderCreateWithoutCollectionInput[] | OrderUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCollectionInput | OrderCreateOrConnectWithoutCollectionInput[]
    createMany?: OrderCreateManyCollectionInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type QuestionUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<QuestionCreateWithoutCollectionInput, QuestionUncheckedCreateWithoutCollectionInput> | QuestionCreateWithoutCollectionInput[] | QuestionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCollectionInput | QuestionCreateOrConnectWithoutCollectionInput[]
    createMany?: QuestionCreateManyCollectionInputEnvelope
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<ReviewCreateWithoutCollectionInput, ReviewUncheckedCreateWithoutCollectionInput> | ReviewCreateWithoutCollectionInput[] | ReviewUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCollectionInput | ReviewCreateOrConnectWithoutCollectionInput[]
    createMany?: ReviewCreateManyCollectionInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutCollectionInput = {
    create?: XOR<TaskCreateWithoutCollectionInput, TaskUncheckedCreateWithoutCollectionInput> | TaskCreateWithoutCollectionInput[] | TaskUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCollectionInput | TaskCreateOrConnectWithoutCollectionInput[]
    createMany?: TaskCreateManyCollectionInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NullableEnumSeasonFieldUpdateOperationsInput = {
    set?: $Enums.Season | null
  }

  export type NullableEnumGenderFieldUpdateOperationsInput = {
    set?: $Enums.Gender | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CertificationUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<CertificationCreateWithoutCollectionsInput, CertificationUncheckedCreateWithoutCollectionsInput> | CertificationCreateWithoutCollectionsInput[] | CertificationUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCollectionsInput | CertificationCreateOrConnectWithoutCollectionsInput[]
    upsert?: CertificationUpsertWithWhereUniqueWithoutCollectionsInput | CertificationUpsertWithWhereUniqueWithoutCollectionsInput[]
    set?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    disconnect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    delete?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    update?: CertificationUpdateWithWhereUniqueWithoutCollectionsInput | CertificationUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: CertificationUpdateManyWithWhereWithoutCollectionsInput | CertificationUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: CertificationScalarWhereInput | CertificationScalarWhereInput[]
  }

  export type UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutCollectionInput, UserFavoriteCollectionUncheckedCreateWithoutCollectionInput> | UserFavoriteCollectionCreateWithoutCollectionInput[] | UserFavoriteCollectionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutCollectionInput | UserFavoriteCollectionCreateOrConnectWithoutCollectionInput[]
    upsert?: UserFavoriteCollectionUpsertWithWhereUniqueWithoutCollectionInput | UserFavoriteCollectionUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: UserFavoriteCollectionCreateManyCollectionInputEnvelope
    set?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    disconnect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    delete?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    update?: UserFavoriteCollectionUpdateWithWhereUniqueWithoutCollectionInput | UserFavoriteCollectionUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: UserFavoriteCollectionUpdateManyWithWhereWithoutCollectionInput | UserFavoriteCollectionUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: UserFavoriteCollectionScalarWhereInput | UserFavoriteCollectionScalarWhereInput[]
  }

  export type CategoryUpdateOneWithoutCollectionsNestedInput = {
    create?: XOR<CategoryCreateWithoutCollectionsInput, CategoryUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutCollectionsInput
    upsert?: CategoryUpsertWithoutCollectionsInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutCollectionsInput, CategoryUpdateWithoutCollectionsInput>, CategoryUncheckedUpdateWithoutCollectionsInput>
  }

  export type UserUpdateOneWithoutCollectionsNestedInput = {
    create?: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollectionsInput
    upsert?: UserUpsertWithoutCollectionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCollectionsInput, UserUpdateWithoutCollectionsInput>, UserUncheckedUpdateWithoutCollectionsInput>
  }

  export type SampleUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<SampleCreateWithoutCollectionInput, SampleUncheckedCreateWithoutCollectionInput> | SampleCreateWithoutCollectionInput[] | SampleUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCollectionInput | SampleCreateOrConnectWithoutCollectionInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutCollectionInput | SampleUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: SampleCreateManyCollectionInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutCollectionInput | SampleUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutCollectionInput | SampleUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type SampleUpdateManyWithoutOriginalCollectionNestedInput = {
    create?: XOR<SampleCreateWithoutOriginalCollectionInput, SampleUncheckedCreateWithoutOriginalCollectionInput> | SampleCreateWithoutOriginalCollectionInput[] | SampleUncheckedCreateWithoutOriginalCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutOriginalCollectionInput | SampleCreateOrConnectWithoutOriginalCollectionInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutOriginalCollectionInput | SampleUpsertWithWhereUniqueWithoutOriginalCollectionInput[]
    createMany?: SampleCreateManyOriginalCollectionInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutOriginalCollectionInput | SampleUpdateWithWhereUniqueWithoutOriginalCollectionInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutOriginalCollectionInput | SampleUpdateManyWithWhereWithoutOriginalCollectionInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<OrderCreateWithoutCollectionInput, OrderUncheckedCreateWithoutCollectionInput> | OrderCreateWithoutCollectionInput[] | OrderUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCollectionInput | OrderCreateOrConnectWithoutCollectionInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCollectionInput | OrderUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: OrderCreateManyCollectionInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCollectionInput | OrderUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCollectionInput | OrderUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type QuestionUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<QuestionCreateWithoutCollectionInput, QuestionUncheckedCreateWithoutCollectionInput> | QuestionCreateWithoutCollectionInput[] | QuestionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCollectionInput | QuestionCreateOrConnectWithoutCollectionInput[]
    upsert?: QuestionUpsertWithWhereUniqueWithoutCollectionInput | QuestionUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: QuestionCreateManyCollectionInputEnvelope
    set?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    disconnect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    delete?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    update?: QuestionUpdateWithWhereUniqueWithoutCollectionInput | QuestionUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: QuestionUpdateManyWithWhereWithoutCollectionInput | QuestionUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<ReviewCreateWithoutCollectionInput, ReviewUncheckedCreateWithoutCollectionInput> | ReviewCreateWithoutCollectionInput[] | ReviewUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCollectionInput | ReviewCreateOrConnectWithoutCollectionInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCollectionInput | ReviewUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: ReviewCreateManyCollectionInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCollectionInput | ReviewUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCollectionInput | ReviewUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<TaskCreateWithoutCollectionInput, TaskUncheckedCreateWithoutCollectionInput> | TaskCreateWithoutCollectionInput[] | TaskUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCollectionInput | TaskCreateOrConnectWithoutCollectionInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCollectionInput | TaskUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: TaskCreateManyCollectionInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCollectionInput | TaskUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCollectionInput | TaskUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type CompanyUpdateOneWithoutCollectionsNestedInput = {
    create?: XOR<CompanyCreateWithoutCollectionsInput, CompanyUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCollectionsInput
    upsert?: CompanyUpsertWithoutCollectionsInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutCollectionsInput, CompanyUpdateWithoutCollectionsInput>, CompanyUncheckedUpdateWithoutCollectionsInput>
  }

  export type CertificationUncheckedUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<CertificationCreateWithoutCollectionsInput, CertificationUncheckedCreateWithoutCollectionsInput> | CertificationCreateWithoutCollectionsInput[] | CertificationUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: CertificationCreateOrConnectWithoutCollectionsInput | CertificationCreateOrConnectWithoutCollectionsInput[]
    upsert?: CertificationUpsertWithWhereUniqueWithoutCollectionsInput | CertificationUpsertWithWhereUniqueWithoutCollectionsInput[]
    set?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    disconnect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    delete?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    connect?: CertificationWhereUniqueInput | CertificationWhereUniqueInput[]
    update?: CertificationUpdateWithWhereUniqueWithoutCollectionsInput | CertificationUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: CertificationUpdateManyWithWhereWithoutCollectionsInput | CertificationUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: CertificationScalarWhereInput | CertificationScalarWhereInput[]
  }

  export type UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<UserFavoriteCollectionCreateWithoutCollectionInput, UserFavoriteCollectionUncheckedCreateWithoutCollectionInput> | UserFavoriteCollectionCreateWithoutCollectionInput[] | UserFavoriteCollectionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: UserFavoriteCollectionCreateOrConnectWithoutCollectionInput | UserFavoriteCollectionCreateOrConnectWithoutCollectionInput[]
    upsert?: UserFavoriteCollectionUpsertWithWhereUniqueWithoutCollectionInput | UserFavoriteCollectionUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: UserFavoriteCollectionCreateManyCollectionInputEnvelope
    set?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    disconnect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    delete?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    connect?: UserFavoriteCollectionWhereUniqueInput | UserFavoriteCollectionWhereUniqueInput[]
    update?: UserFavoriteCollectionUpdateWithWhereUniqueWithoutCollectionInput | UserFavoriteCollectionUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: UserFavoriteCollectionUpdateManyWithWhereWithoutCollectionInput | UserFavoriteCollectionUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: UserFavoriteCollectionScalarWhereInput | UserFavoriteCollectionScalarWhereInput[]
  }

  export type SampleUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<SampleCreateWithoutCollectionInput, SampleUncheckedCreateWithoutCollectionInput> | SampleCreateWithoutCollectionInput[] | SampleUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutCollectionInput | SampleCreateOrConnectWithoutCollectionInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutCollectionInput | SampleUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: SampleCreateManyCollectionInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutCollectionInput | SampleUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutCollectionInput | SampleUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput = {
    create?: XOR<SampleCreateWithoutOriginalCollectionInput, SampleUncheckedCreateWithoutOriginalCollectionInput> | SampleCreateWithoutOriginalCollectionInput[] | SampleUncheckedCreateWithoutOriginalCollectionInput[]
    connectOrCreate?: SampleCreateOrConnectWithoutOriginalCollectionInput | SampleCreateOrConnectWithoutOriginalCollectionInput[]
    upsert?: SampleUpsertWithWhereUniqueWithoutOriginalCollectionInput | SampleUpsertWithWhereUniqueWithoutOriginalCollectionInput[]
    createMany?: SampleCreateManyOriginalCollectionInputEnvelope
    set?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    disconnect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    delete?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    connect?: SampleWhereUniqueInput | SampleWhereUniqueInput[]
    update?: SampleUpdateWithWhereUniqueWithoutOriginalCollectionInput | SampleUpdateWithWhereUniqueWithoutOriginalCollectionInput[]
    updateMany?: SampleUpdateManyWithWhereWithoutOriginalCollectionInput | SampleUpdateManyWithWhereWithoutOriginalCollectionInput[]
    deleteMany?: SampleScalarWhereInput | SampleScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<OrderCreateWithoutCollectionInput, OrderUncheckedCreateWithoutCollectionInput> | OrderCreateWithoutCollectionInput[] | OrderUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCollectionInput | OrderCreateOrConnectWithoutCollectionInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCollectionInput | OrderUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: OrderCreateManyCollectionInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCollectionInput | OrderUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCollectionInput | OrderUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type QuestionUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<QuestionCreateWithoutCollectionInput, QuestionUncheckedCreateWithoutCollectionInput> | QuestionCreateWithoutCollectionInput[] | QuestionUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: QuestionCreateOrConnectWithoutCollectionInput | QuestionCreateOrConnectWithoutCollectionInput[]
    upsert?: QuestionUpsertWithWhereUniqueWithoutCollectionInput | QuestionUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: QuestionCreateManyCollectionInputEnvelope
    set?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    disconnect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    delete?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    connect?: QuestionWhereUniqueInput | QuestionWhereUniqueInput[]
    update?: QuestionUpdateWithWhereUniqueWithoutCollectionInput | QuestionUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: QuestionUpdateManyWithWhereWithoutCollectionInput | QuestionUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<ReviewCreateWithoutCollectionInput, ReviewUncheckedCreateWithoutCollectionInput> | ReviewCreateWithoutCollectionInput[] | ReviewUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCollectionInput | ReviewCreateOrConnectWithoutCollectionInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCollectionInput | ReviewUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: ReviewCreateManyCollectionInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCollectionInput | ReviewUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCollectionInput | ReviewUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutCollectionNestedInput = {
    create?: XOR<TaskCreateWithoutCollectionInput, TaskUncheckedCreateWithoutCollectionInput> | TaskCreateWithoutCollectionInput[] | TaskUncheckedCreateWithoutCollectionInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCollectionInput | TaskCreateOrConnectWithoutCollectionInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCollectionInput | TaskUpsertWithWhereUniqueWithoutCollectionInput[]
    createMany?: TaskCreateManyCollectionInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCollectionInput | TaskUpdateWithWhereUniqueWithoutCollectionInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCollectionInput | TaskUpdateManyWithWhereWithoutCollectionInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutFavoriteCollectionsInput = {
    create?: XOR<UserCreateWithoutFavoriteCollectionsInput, UserUncheckedCreateWithoutFavoriteCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoriteCollectionsInput
    connect?: UserWhereUniqueInput
  }

  export type CollectionCreateNestedOneWithoutFavoritedByInput = {
    create?: XOR<CollectionCreateWithoutFavoritedByInput, CollectionUncheckedCreateWithoutFavoritedByInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutFavoritedByInput
    connect?: CollectionWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutFavoriteCollectionsNestedInput = {
    create?: XOR<UserCreateWithoutFavoriteCollectionsInput, UserUncheckedCreateWithoutFavoriteCollectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoriteCollectionsInput
    upsert?: UserUpsertWithoutFavoriteCollectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavoriteCollectionsInput, UserUpdateWithoutFavoriteCollectionsInput>, UserUncheckedUpdateWithoutFavoriteCollectionsInput>
  }

  export type CollectionUpdateOneRequiredWithoutFavoritedByNestedInput = {
    create?: XOR<CollectionCreateWithoutFavoritedByInput, CollectionUncheckedCreateWithoutFavoritedByInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutFavoritedByInput
    upsert?: CollectionUpsertWithoutFavoritedByInput
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutFavoritedByInput, CollectionUpdateWithoutFavoritedByInput>, CollectionUncheckedUpdateWithoutFavoritedByInput>
  }

  export type CollectionCreateNestedOneWithoutSamplesInput = {
    create?: XOR<CollectionCreateWithoutSamplesInput, CollectionUncheckedCreateWithoutSamplesInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutSamplesInput
    connect?: CollectionWhereUniqueInput
  }

  export type CollectionCreateNestedOneWithoutRevisedSamplesInput = {
    create?: XOR<CollectionCreateWithoutRevisedSamplesInput, CollectionUncheckedCreateWithoutRevisedSamplesInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutRevisedSamplesInput
    connect?: CollectionWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCustomerSamplesInput = {
    create?: XOR<UserCreateWithoutCustomerSamplesInput, UserUncheckedCreateWithoutCustomerSamplesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerSamplesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutManufactureSamplesInput = {
    create?: XOR<UserCreateWithoutManufactureSamplesInput, UserUncheckedCreateWithoutManufactureSamplesInput>
    connectOrCreate?: UserCreateOrConnectWithoutManufactureSamplesInput
    connect?: UserWhereUniqueInput
  }

  export type SampleProductionCreateNestedManyWithoutSampleInput = {
    create?: XOR<SampleProductionCreateWithoutSampleInput, SampleProductionUncheckedCreateWithoutSampleInput> | SampleProductionCreateWithoutSampleInput[] | SampleProductionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutSampleInput | SampleProductionCreateOrConnectWithoutSampleInput[]
    createMany?: SampleProductionCreateManySampleInputEnvelope
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
  }

  export type ProductionTrackingCreateNestedManyWithoutSampleInput = {
    create?: XOR<ProductionTrackingCreateWithoutSampleInput, ProductionTrackingUncheckedCreateWithoutSampleInput> | ProductionTrackingCreateWithoutSampleInput[] | ProductionTrackingUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSampleInput | ProductionTrackingCreateOrConnectWithoutSampleInput[]
    createMany?: ProductionTrackingCreateManySampleInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type RevisionCreateNestedManyWithoutSampleInput = {
    create?: XOR<RevisionCreateWithoutSampleInput, RevisionUncheckedCreateWithoutSampleInput> | RevisionCreateWithoutSampleInput[] | RevisionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutSampleInput | RevisionCreateOrConnectWithoutSampleInput[]
    createMany?: RevisionCreateManySampleInputEnvelope
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSampleInput = {
    create?: XOR<MessageCreateWithoutSampleInput, MessageUncheckedCreateWithoutSampleInput> | MessageCreateWithoutSampleInput[] | MessageUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSampleInput | MessageCreateOrConnectWithoutSampleInput[]
    createMany?: MessageCreateManySampleInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type CompanyCreateNestedOneWithoutSamplesInput = {
    create?: XOR<CompanyCreateWithoutSamplesInput, CompanyUncheckedCreateWithoutSamplesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSamplesInput
    connect?: CompanyWhereUniqueInput
  }

  export type AIAnalysisCreateNestedOneWithoutSampleInput = {
    create?: XOR<AIAnalysisCreateWithoutSampleInput, AIAnalysisUncheckedCreateWithoutSampleInput>
    connectOrCreate?: AIAnalysisCreateOrConnectWithoutSampleInput
    connect?: AIAnalysisWhereUniqueInput
  }

  export type TaskCreateNestedManyWithoutSampleInput = {
    create?: XOR<TaskCreateWithoutSampleInput, TaskUncheckedCreateWithoutSampleInput> | TaskCreateWithoutSampleInput[] | TaskUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutSampleInput | TaskCreateOrConnectWithoutSampleInput[]
    createMany?: TaskCreateManySampleInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutSampleInput = {
    create?: XOR<NotificationCreateWithoutSampleInput, NotificationUncheckedCreateWithoutSampleInput> | NotificationCreateWithoutSampleInput[] | NotificationUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSampleInput | NotificationCreateOrConnectWithoutSampleInput[]
    createMany?: NotificationCreateManySampleInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type SampleProductionUncheckedCreateNestedManyWithoutSampleInput = {
    create?: XOR<SampleProductionCreateWithoutSampleInput, SampleProductionUncheckedCreateWithoutSampleInput> | SampleProductionCreateWithoutSampleInput[] | SampleProductionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutSampleInput | SampleProductionCreateOrConnectWithoutSampleInput[]
    createMany?: SampleProductionCreateManySampleInputEnvelope
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
  }

  export type ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput = {
    create?: XOR<ProductionTrackingCreateWithoutSampleInput, ProductionTrackingUncheckedCreateWithoutSampleInput> | ProductionTrackingCreateWithoutSampleInput[] | ProductionTrackingUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSampleInput | ProductionTrackingCreateOrConnectWithoutSampleInput[]
    createMany?: ProductionTrackingCreateManySampleInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type RevisionUncheckedCreateNestedManyWithoutSampleInput = {
    create?: XOR<RevisionCreateWithoutSampleInput, RevisionUncheckedCreateWithoutSampleInput> | RevisionCreateWithoutSampleInput[] | RevisionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutSampleInput | RevisionCreateOrConnectWithoutSampleInput[]
    createMany?: RevisionCreateManySampleInputEnvelope
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSampleInput = {
    create?: XOR<MessageCreateWithoutSampleInput, MessageUncheckedCreateWithoutSampleInput> | MessageCreateWithoutSampleInput[] | MessageUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSampleInput | MessageCreateOrConnectWithoutSampleInput[]
    createMany?: MessageCreateManySampleInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type AIAnalysisUncheckedCreateNestedOneWithoutSampleInput = {
    create?: XOR<AIAnalysisCreateWithoutSampleInput, AIAnalysisUncheckedCreateWithoutSampleInput>
    connectOrCreate?: AIAnalysisCreateOrConnectWithoutSampleInput
    connect?: AIAnalysisWhereUniqueInput
  }

  export type TaskUncheckedCreateNestedManyWithoutSampleInput = {
    create?: XOR<TaskCreateWithoutSampleInput, TaskUncheckedCreateWithoutSampleInput> | TaskCreateWithoutSampleInput[] | TaskUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutSampleInput | TaskCreateOrConnectWithoutSampleInput[]
    createMany?: TaskCreateManySampleInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutSampleInput = {
    create?: XOR<NotificationCreateWithoutSampleInput, NotificationUncheckedCreateWithoutSampleInput> | NotificationCreateWithoutSampleInput[] | NotificationUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSampleInput | NotificationCreateOrConnectWithoutSampleInput[]
    createMany?: NotificationCreateManySampleInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumSampleTypeFieldUpdateOperationsInput = {
    set?: $Enums.SampleType
  }

  export type EnumSampleStatusFieldUpdateOperationsInput = {
    set?: $Enums.SampleStatus
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type CollectionUpdateOneWithoutSamplesNestedInput = {
    create?: XOR<CollectionCreateWithoutSamplesInput, CollectionUncheckedCreateWithoutSamplesInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutSamplesInput
    upsert?: CollectionUpsertWithoutSamplesInput
    disconnect?: CollectionWhereInput | boolean
    delete?: CollectionWhereInput | boolean
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutSamplesInput, CollectionUpdateWithoutSamplesInput>, CollectionUncheckedUpdateWithoutSamplesInput>
  }

  export type CollectionUpdateOneWithoutRevisedSamplesNestedInput = {
    create?: XOR<CollectionCreateWithoutRevisedSamplesInput, CollectionUncheckedCreateWithoutRevisedSamplesInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutRevisedSamplesInput
    upsert?: CollectionUpsertWithoutRevisedSamplesInput
    disconnect?: CollectionWhereInput | boolean
    delete?: CollectionWhereInput | boolean
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutRevisedSamplesInput, CollectionUpdateWithoutRevisedSamplesInput>, CollectionUncheckedUpdateWithoutRevisedSamplesInput>
  }

  export type UserUpdateOneRequiredWithoutCustomerSamplesNestedInput = {
    create?: XOR<UserCreateWithoutCustomerSamplesInput, UserUncheckedCreateWithoutCustomerSamplesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerSamplesInput
    upsert?: UserUpsertWithoutCustomerSamplesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerSamplesInput, UserUpdateWithoutCustomerSamplesInput>, UserUncheckedUpdateWithoutCustomerSamplesInput>
  }

  export type UserUpdateOneRequiredWithoutManufactureSamplesNestedInput = {
    create?: XOR<UserCreateWithoutManufactureSamplesInput, UserUncheckedCreateWithoutManufactureSamplesInput>
    connectOrCreate?: UserCreateOrConnectWithoutManufactureSamplesInput
    upsert?: UserUpsertWithoutManufactureSamplesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutManufactureSamplesInput, UserUpdateWithoutManufactureSamplesInput>, UserUncheckedUpdateWithoutManufactureSamplesInput>
  }

  export type SampleProductionUpdateManyWithoutSampleNestedInput = {
    create?: XOR<SampleProductionCreateWithoutSampleInput, SampleProductionUncheckedCreateWithoutSampleInput> | SampleProductionCreateWithoutSampleInput[] | SampleProductionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutSampleInput | SampleProductionCreateOrConnectWithoutSampleInput[]
    upsert?: SampleProductionUpsertWithWhereUniqueWithoutSampleInput | SampleProductionUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: SampleProductionCreateManySampleInputEnvelope
    set?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    disconnect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    delete?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    update?: SampleProductionUpdateWithWhereUniqueWithoutSampleInput | SampleProductionUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: SampleProductionUpdateManyWithWhereWithoutSampleInput | SampleProductionUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: SampleProductionScalarWhereInput | SampleProductionScalarWhereInput[]
  }

  export type ProductionTrackingUpdateManyWithoutSampleNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutSampleInput, ProductionTrackingUncheckedCreateWithoutSampleInput> | ProductionTrackingCreateWithoutSampleInput[] | ProductionTrackingUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSampleInput | ProductionTrackingCreateOrConnectWithoutSampleInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutSampleInput | ProductionTrackingUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: ProductionTrackingCreateManySampleInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutSampleInput | ProductionTrackingUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutSampleInput | ProductionTrackingUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type RevisionUpdateManyWithoutSampleNestedInput = {
    create?: XOR<RevisionCreateWithoutSampleInput, RevisionUncheckedCreateWithoutSampleInput> | RevisionCreateWithoutSampleInput[] | RevisionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutSampleInput | RevisionCreateOrConnectWithoutSampleInput[]
    upsert?: RevisionUpsertWithWhereUniqueWithoutSampleInput | RevisionUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: RevisionCreateManySampleInputEnvelope
    set?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    disconnect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    delete?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    update?: RevisionUpdateWithWhereUniqueWithoutSampleInput | RevisionUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: RevisionUpdateManyWithWhereWithoutSampleInput | RevisionUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSampleNestedInput = {
    create?: XOR<MessageCreateWithoutSampleInput, MessageUncheckedCreateWithoutSampleInput> | MessageCreateWithoutSampleInput[] | MessageUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSampleInput | MessageCreateOrConnectWithoutSampleInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSampleInput | MessageUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: MessageCreateManySampleInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSampleInput | MessageUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSampleInput | MessageUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type CompanyUpdateOneWithoutSamplesNestedInput = {
    create?: XOR<CompanyCreateWithoutSamplesInput, CompanyUncheckedCreateWithoutSamplesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSamplesInput
    upsert?: CompanyUpsertWithoutSamplesInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutSamplesInput, CompanyUpdateWithoutSamplesInput>, CompanyUncheckedUpdateWithoutSamplesInput>
  }

  export type AIAnalysisUpdateOneWithoutSampleNestedInput = {
    create?: XOR<AIAnalysisCreateWithoutSampleInput, AIAnalysisUncheckedCreateWithoutSampleInput>
    connectOrCreate?: AIAnalysisCreateOrConnectWithoutSampleInput
    upsert?: AIAnalysisUpsertWithoutSampleInput
    disconnect?: AIAnalysisWhereInput | boolean
    delete?: AIAnalysisWhereInput | boolean
    connect?: AIAnalysisWhereUniqueInput
    update?: XOR<XOR<AIAnalysisUpdateToOneWithWhereWithoutSampleInput, AIAnalysisUpdateWithoutSampleInput>, AIAnalysisUncheckedUpdateWithoutSampleInput>
  }

  export type TaskUpdateManyWithoutSampleNestedInput = {
    create?: XOR<TaskCreateWithoutSampleInput, TaskUncheckedCreateWithoutSampleInput> | TaskCreateWithoutSampleInput[] | TaskUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutSampleInput | TaskCreateOrConnectWithoutSampleInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutSampleInput | TaskUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: TaskCreateManySampleInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutSampleInput | TaskUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutSampleInput | TaskUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutSampleNestedInput = {
    create?: XOR<NotificationCreateWithoutSampleInput, NotificationUncheckedCreateWithoutSampleInput> | NotificationCreateWithoutSampleInput[] | NotificationUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSampleInput | NotificationCreateOrConnectWithoutSampleInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSampleInput | NotificationUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: NotificationCreateManySampleInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSampleInput | NotificationUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSampleInput | NotificationUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type SampleProductionUncheckedUpdateManyWithoutSampleNestedInput = {
    create?: XOR<SampleProductionCreateWithoutSampleInput, SampleProductionUncheckedCreateWithoutSampleInput> | SampleProductionCreateWithoutSampleInput[] | SampleProductionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: SampleProductionCreateOrConnectWithoutSampleInput | SampleProductionCreateOrConnectWithoutSampleInput[]
    upsert?: SampleProductionUpsertWithWhereUniqueWithoutSampleInput | SampleProductionUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: SampleProductionCreateManySampleInputEnvelope
    set?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    disconnect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    delete?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    connect?: SampleProductionWhereUniqueInput | SampleProductionWhereUniqueInput[]
    update?: SampleProductionUpdateWithWhereUniqueWithoutSampleInput | SampleProductionUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: SampleProductionUpdateManyWithWhereWithoutSampleInput | SampleProductionUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: SampleProductionScalarWhereInput | SampleProductionScalarWhereInput[]
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutSampleInput, ProductionTrackingUncheckedCreateWithoutSampleInput> | ProductionTrackingCreateWithoutSampleInput[] | ProductionTrackingUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSampleInput | ProductionTrackingCreateOrConnectWithoutSampleInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutSampleInput | ProductionTrackingUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: ProductionTrackingCreateManySampleInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutSampleInput | ProductionTrackingUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutSampleInput | ProductionTrackingUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type RevisionUncheckedUpdateManyWithoutSampleNestedInput = {
    create?: XOR<RevisionCreateWithoutSampleInput, RevisionUncheckedCreateWithoutSampleInput> | RevisionCreateWithoutSampleInput[] | RevisionUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutSampleInput | RevisionCreateOrConnectWithoutSampleInput[]
    upsert?: RevisionUpsertWithWhereUniqueWithoutSampleInput | RevisionUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: RevisionCreateManySampleInputEnvelope
    set?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    disconnect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    delete?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    update?: RevisionUpdateWithWhereUniqueWithoutSampleInput | RevisionUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: RevisionUpdateManyWithWhereWithoutSampleInput | RevisionUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSampleNestedInput = {
    create?: XOR<MessageCreateWithoutSampleInput, MessageUncheckedCreateWithoutSampleInput> | MessageCreateWithoutSampleInput[] | MessageUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSampleInput | MessageCreateOrConnectWithoutSampleInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSampleInput | MessageUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: MessageCreateManySampleInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSampleInput | MessageUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSampleInput | MessageUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput = {
    create?: XOR<AIAnalysisCreateWithoutSampleInput, AIAnalysisUncheckedCreateWithoutSampleInput>
    connectOrCreate?: AIAnalysisCreateOrConnectWithoutSampleInput
    upsert?: AIAnalysisUpsertWithoutSampleInput
    disconnect?: AIAnalysisWhereInput | boolean
    delete?: AIAnalysisWhereInput | boolean
    connect?: AIAnalysisWhereUniqueInput
    update?: XOR<XOR<AIAnalysisUpdateToOneWithWhereWithoutSampleInput, AIAnalysisUpdateWithoutSampleInput>, AIAnalysisUncheckedUpdateWithoutSampleInput>
  }

  export type TaskUncheckedUpdateManyWithoutSampleNestedInput = {
    create?: XOR<TaskCreateWithoutSampleInput, TaskUncheckedCreateWithoutSampleInput> | TaskCreateWithoutSampleInput[] | TaskUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutSampleInput | TaskCreateOrConnectWithoutSampleInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutSampleInput | TaskUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: TaskCreateManySampleInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutSampleInput | TaskUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutSampleInput | TaskUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutSampleNestedInput = {
    create?: XOR<NotificationCreateWithoutSampleInput, NotificationUncheckedCreateWithoutSampleInput> | NotificationCreateWithoutSampleInput[] | NotificationUncheckedCreateWithoutSampleInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSampleInput | NotificationCreateOrConnectWithoutSampleInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSampleInput | NotificationUpsertWithWhereUniqueWithoutSampleInput[]
    createMany?: NotificationCreateManySampleInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSampleInput | NotificationUpdateWithWhereUniqueWithoutSampleInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSampleInput | NotificationUpdateManyWithWhereWithoutSampleInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type SampleCreateNestedOneWithoutAiAnalysisInput = {
    create?: XOR<SampleCreateWithoutAiAnalysisInput, SampleUncheckedCreateWithoutAiAnalysisInput>
    connectOrCreate?: SampleCreateOrConnectWithoutAiAnalysisInput
    connect?: SampleWhereUniqueInput
  }

  export type SampleUpdateOneRequiredWithoutAiAnalysisNestedInput = {
    create?: XOR<SampleCreateWithoutAiAnalysisInput, SampleUncheckedCreateWithoutAiAnalysisInput>
    connectOrCreate?: SampleCreateOrConnectWithoutAiAnalysisInput
    upsert?: SampleUpsertWithoutAiAnalysisInput
    connect?: SampleWhereUniqueInput
    update?: XOR<XOR<SampleUpdateToOneWithWhereWithoutAiAnalysisInput, SampleUpdateWithoutAiAnalysisInput>, SampleUncheckedUpdateWithoutAiAnalysisInput>
  }

  export type SampleCreateNestedOneWithoutProductionHistoryInput = {
    create?: XOR<SampleCreateWithoutProductionHistoryInput, SampleUncheckedCreateWithoutProductionHistoryInput>
    connectOrCreate?: SampleCreateOrConnectWithoutProductionHistoryInput
    connect?: SampleWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSampleProductionUpdatesInput = {
    create?: XOR<UserCreateWithoutSampleProductionUpdatesInput, UserUncheckedCreateWithoutSampleProductionUpdatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSampleProductionUpdatesInput
    connect?: UserWhereUniqueInput
  }

  export type SampleUpdateOneRequiredWithoutProductionHistoryNestedInput = {
    create?: XOR<SampleCreateWithoutProductionHistoryInput, SampleUncheckedCreateWithoutProductionHistoryInput>
    connectOrCreate?: SampleCreateOrConnectWithoutProductionHistoryInput
    upsert?: SampleUpsertWithoutProductionHistoryInput
    connect?: SampleWhereUniqueInput
    update?: XOR<XOR<SampleUpdateToOneWithWhereWithoutProductionHistoryInput, SampleUpdateWithoutProductionHistoryInput>, SampleUncheckedUpdateWithoutProductionHistoryInput>
  }

  export type UserUpdateOneRequiredWithoutSampleProductionUpdatesNestedInput = {
    create?: XOR<UserCreateWithoutSampleProductionUpdatesInput, UserUncheckedCreateWithoutSampleProductionUpdatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSampleProductionUpdatesInput
    upsert?: UserUpsertWithoutSampleProductionUpdatesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSampleProductionUpdatesInput, UserUpdateWithoutSampleProductionUpdatesInput>, UserUncheckedUpdateWithoutSampleProductionUpdatesInput>
  }

  export type CollectionCreateNestedOneWithoutOrdersInput = {
    create?: XOR<CollectionCreateWithoutOrdersInput, CollectionUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutOrdersInput
    connect?: CollectionWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCustomerOrdersInput = {
    create?: XOR<UserCreateWithoutCustomerOrdersInput, UserUncheckedCreateWithoutCustomerOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutManufactureOrdersInput = {
    create?: XOR<UserCreateWithoutManufactureOrdersInput, UserUncheckedCreateWithoutManufactureOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutManufactureOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type OrderProductionCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderProductionCreateWithoutOrderInput, OrderProductionUncheckedCreateWithoutOrderInput> | OrderProductionCreateWithoutOrderInput[] | OrderProductionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutOrderInput | OrderProductionCreateOrConnectWithoutOrderInput[]
    createMany?: OrderProductionCreateManyOrderInputEnvelope
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
  }

  export type ProductionTrackingCreateNestedManyWithoutOrderInput = {
    create?: XOR<ProductionTrackingCreateWithoutOrderInput, ProductionTrackingUncheckedCreateWithoutOrderInput> | ProductionTrackingCreateWithoutOrderInput[] | ProductionTrackingUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutOrderInput | ProductionTrackingCreateOrConnectWithoutOrderInput[]
    createMany?: ProductionTrackingCreateManyOrderInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type RevisionCreateNestedManyWithoutOrderInput = {
    create?: XOR<RevisionCreateWithoutOrderInput, RevisionUncheckedCreateWithoutOrderInput> | RevisionCreateWithoutOrderInput[] | RevisionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutOrderInput | RevisionCreateOrConnectWithoutOrderInput[]
    createMany?: RevisionCreateManyOrderInputEnvelope
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutOrderInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type CompanyCreateNestedOneWithoutOrdersInput = {
    create?: XOR<CompanyCreateWithoutOrdersInput, CompanyUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutOrdersInput
    connect?: CompanyWhereUniqueInput
  }

  export type TaskCreateNestedManyWithoutOrderInput = {
    create?: XOR<TaskCreateWithoutOrderInput, TaskUncheckedCreateWithoutOrderInput> | TaskCreateWithoutOrderInput[] | TaskUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrderInput | TaskCreateOrConnectWithoutOrderInput[]
    createMany?: TaskCreateManyOrderInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutOrderInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type OrderProductionUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderProductionCreateWithoutOrderInput, OrderProductionUncheckedCreateWithoutOrderInput> | OrderProductionCreateWithoutOrderInput[] | OrderProductionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutOrderInput | OrderProductionCreateOrConnectWithoutOrderInput[]
    createMany?: OrderProductionCreateManyOrderInputEnvelope
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
  }

  export type ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<ProductionTrackingCreateWithoutOrderInput, ProductionTrackingUncheckedCreateWithoutOrderInput> | ProductionTrackingCreateWithoutOrderInput[] | ProductionTrackingUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutOrderInput | ProductionTrackingCreateOrConnectWithoutOrderInput[]
    createMany?: ProductionTrackingCreateManyOrderInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type RevisionUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<RevisionCreateWithoutOrderInput, RevisionUncheckedCreateWithoutOrderInput> | RevisionCreateWithoutOrderInput[] | RevisionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutOrderInput | RevisionCreateOrConnectWithoutOrderInput[]
    createMany?: RevisionCreateManyOrderInputEnvelope
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<TaskCreateWithoutOrderInput, TaskUncheckedCreateWithoutOrderInput> | TaskCreateWithoutOrderInput[] | TaskUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrderInput | TaskCreateOrConnectWithoutOrderInput[]
    createMany?: TaskCreateManyOrderInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type CollectionUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<CollectionCreateWithoutOrdersInput, CollectionUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutOrdersInput
    upsert?: CollectionUpsertWithoutOrdersInput
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutOrdersInput, CollectionUpdateWithoutOrdersInput>, CollectionUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateOneRequiredWithoutCustomerOrdersNestedInput = {
    create?: XOR<UserCreateWithoutCustomerOrdersInput, UserUncheckedCreateWithoutCustomerOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerOrdersInput
    upsert?: UserUpsertWithoutCustomerOrdersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerOrdersInput, UserUpdateWithoutCustomerOrdersInput>, UserUncheckedUpdateWithoutCustomerOrdersInput>
  }

  export type UserUpdateOneRequiredWithoutManufactureOrdersNestedInput = {
    create?: XOR<UserCreateWithoutManufactureOrdersInput, UserUncheckedCreateWithoutManufactureOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutManufactureOrdersInput
    upsert?: UserUpsertWithoutManufactureOrdersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutManufactureOrdersInput, UserUpdateWithoutManufactureOrdersInput>, UserUncheckedUpdateWithoutManufactureOrdersInput>
  }

  export type OrderProductionUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderProductionCreateWithoutOrderInput, OrderProductionUncheckedCreateWithoutOrderInput> | OrderProductionCreateWithoutOrderInput[] | OrderProductionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutOrderInput | OrderProductionCreateOrConnectWithoutOrderInput[]
    upsert?: OrderProductionUpsertWithWhereUniqueWithoutOrderInput | OrderProductionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderProductionCreateManyOrderInputEnvelope
    set?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    disconnect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    delete?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    update?: OrderProductionUpdateWithWhereUniqueWithoutOrderInput | OrderProductionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderProductionUpdateManyWithWhereWithoutOrderInput | OrderProductionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderProductionScalarWhereInput | OrderProductionScalarWhereInput[]
  }

  export type ProductionTrackingUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutOrderInput, ProductionTrackingUncheckedCreateWithoutOrderInput> | ProductionTrackingCreateWithoutOrderInput[] | ProductionTrackingUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutOrderInput | ProductionTrackingCreateOrConnectWithoutOrderInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutOrderInput | ProductionTrackingUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ProductionTrackingCreateManyOrderInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutOrderInput | ProductionTrackingUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutOrderInput | ProductionTrackingUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type RevisionUpdateManyWithoutOrderNestedInput = {
    create?: XOR<RevisionCreateWithoutOrderInput, RevisionUncheckedCreateWithoutOrderInput> | RevisionCreateWithoutOrderInput[] | RevisionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutOrderInput | RevisionCreateOrConnectWithoutOrderInput[]
    upsert?: RevisionUpsertWithWhereUniqueWithoutOrderInput | RevisionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: RevisionCreateManyOrderInputEnvelope
    set?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    disconnect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    delete?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    update?: RevisionUpdateWithWhereUniqueWithoutOrderInput | RevisionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: RevisionUpdateManyWithWhereWithoutOrderInput | RevisionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutOrderNestedInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutOrderInput | MessageUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutOrderInput | MessageUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutOrderInput | MessageUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type CompanyUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<CompanyCreateWithoutOrdersInput, CompanyUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutOrdersInput
    upsert?: CompanyUpsertWithoutOrdersInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutOrdersInput, CompanyUpdateWithoutOrdersInput>, CompanyUncheckedUpdateWithoutOrdersInput>
  }

  export type TaskUpdateManyWithoutOrderNestedInput = {
    create?: XOR<TaskCreateWithoutOrderInput, TaskUncheckedCreateWithoutOrderInput> | TaskCreateWithoutOrderInput[] | TaskUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrderInput | TaskCreateOrConnectWithoutOrderInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutOrderInput | TaskUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: TaskCreateManyOrderInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutOrderInput | TaskUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutOrderInput | TaskUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutOrderNestedInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutOrderInput | NotificationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutOrderInput | NotificationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutOrderInput | NotificationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type OrderProductionUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderProductionCreateWithoutOrderInput, OrderProductionUncheckedCreateWithoutOrderInput> | OrderProductionCreateWithoutOrderInput[] | OrderProductionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderProductionCreateOrConnectWithoutOrderInput | OrderProductionCreateOrConnectWithoutOrderInput[]
    upsert?: OrderProductionUpsertWithWhereUniqueWithoutOrderInput | OrderProductionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderProductionCreateManyOrderInputEnvelope
    set?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    disconnect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    delete?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    connect?: OrderProductionWhereUniqueInput | OrderProductionWhereUniqueInput[]
    update?: OrderProductionUpdateWithWhereUniqueWithoutOrderInput | OrderProductionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderProductionUpdateManyWithWhereWithoutOrderInput | OrderProductionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderProductionScalarWhereInput | OrderProductionScalarWhereInput[]
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutOrderInput, ProductionTrackingUncheckedCreateWithoutOrderInput> | ProductionTrackingCreateWithoutOrderInput[] | ProductionTrackingUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutOrderInput | ProductionTrackingCreateOrConnectWithoutOrderInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutOrderInput | ProductionTrackingUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ProductionTrackingCreateManyOrderInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutOrderInput | ProductionTrackingUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutOrderInput | ProductionTrackingUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type RevisionUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<RevisionCreateWithoutOrderInput, RevisionUncheckedCreateWithoutOrderInput> | RevisionCreateWithoutOrderInput[] | RevisionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: RevisionCreateOrConnectWithoutOrderInput | RevisionCreateOrConnectWithoutOrderInput[]
    upsert?: RevisionUpsertWithWhereUniqueWithoutOrderInput | RevisionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: RevisionCreateManyOrderInputEnvelope
    set?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    disconnect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    delete?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    connect?: RevisionWhereUniqueInput | RevisionWhereUniqueInput[]
    update?: RevisionUpdateWithWhereUniqueWithoutOrderInput | RevisionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: RevisionUpdateManyWithWhereWithoutOrderInput | RevisionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutOrderInput | MessageUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutOrderInput | MessageUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutOrderInput | MessageUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<TaskCreateWithoutOrderInput, TaskUncheckedCreateWithoutOrderInput> | TaskCreateWithoutOrderInput[] | TaskUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrderInput | TaskCreateOrConnectWithoutOrderInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutOrderInput | TaskUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: TaskCreateManyOrderInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutOrderInput | TaskUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutOrderInput | TaskUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutOrderInput | NotificationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutOrderInput | NotificationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutOrderInput | NotificationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutProductionHistoryInput = {
    create?: XOR<OrderCreateWithoutProductionHistoryInput, OrderUncheckedCreateWithoutProductionHistoryInput>
    connectOrCreate?: OrderCreateOrConnectWithoutProductionHistoryInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrderProductionUpdatesInput = {
    create?: XOR<UserCreateWithoutOrderProductionUpdatesInput, UserUncheckedCreateWithoutOrderProductionUpdatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderProductionUpdatesInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutProductionHistoryNestedInput = {
    create?: XOR<OrderCreateWithoutProductionHistoryInput, OrderUncheckedCreateWithoutProductionHistoryInput>
    connectOrCreate?: OrderCreateOrConnectWithoutProductionHistoryInput
    upsert?: OrderUpsertWithoutProductionHistoryInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutProductionHistoryInput, OrderUpdateWithoutProductionHistoryInput>, OrderUncheckedUpdateWithoutProductionHistoryInput>
  }

  export type UserUpdateOneRequiredWithoutOrderProductionUpdatesNestedInput = {
    create?: XOR<UserCreateWithoutOrderProductionUpdatesInput, UserUncheckedCreateWithoutOrderProductionUpdatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderProductionUpdatesInput
    upsert?: UserUpsertWithoutOrderProductionUpdatesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrderProductionUpdatesInput, UserUpdateWithoutOrderProductionUpdatesInput>, UserUncheckedUpdateWithoutOrderProductionUpdatesInput>
  }

  export type CollectionCreateNestedOneWithoutQuestionsInput = {
    create?: XOR<CollectionCreateWithoutQuestionsInput, CollectionUncheckedCreateWithoutQuestionsInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutQuestionsInput
    connect?: CollectionWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCustomerQuestionsInput = {
    create?: XOR<UserCreateWithoutCustomerQuestionsInput, UserUncheckedCreateWithoutCustomerQuestionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerQuestionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutManufactureQuestionsInput = {
    create?: XOR<UserCreateWithoutManufactureQuestionsInput, UserUncheckedCreateWithoutManufactureQuestionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutManufactureQuestionsInput
    connect?: UserWhereUniqueInput
  }

  export type CollectionUpdateOneRequiredWithoutQuestionsNestedInput = {
    create?: XOR<CollectionCreateWithoutQuestionsInput, CollectionUncheckedCreateWithoutQuestionsInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutQuestionsInput
    upsert?: CollectionUpsertWithoutQuestionsInput
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutQuestionsInput, CollectionUpdateWithoutQuestionsInput>, CollectionUncheckedUpdateWithoutQuestionsInput>
  }

  export type UserUpdateOneRequiredWithoutCustomerQuestionsNestedInput = {
    create?: XOR<UserCreateWithoutCustomerQuestionsInput, UserUncheckedCreateWithoutCustomerQuestionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerQuestionsInput
    upsert?: UserUpsertWithoutCustomerQuestionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerQuestionsInput, UserUpdateWithoutCustomerQuestionsInput>, UserUncheckedUpdateWithoutCustomerQuestionsInput>
  }

  export type UserUpdateOneRequiredWithoutManufactureQuestionsNestedInput = {
    create?: XOR<UserCreateWithoutManufactureQuestionsInput, UserUncheckedCreateWithoutManufactureQuestionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutManufactureQuestionsInput
    upsert?: UserUpsertWithoutManufactureQuestionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutManufactureQuestionsInput, UserUpdateWithoutManufactureQuestionsInput>, UserUncheckedUpdateWithoutManufactureQuestionsInput>
  }

  export type CollectionCreateNestedOneWithoutReviewsInput = {
    create?: XOR<CollectionCreateWithoutReviewsInput, CollectionUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutReviewsInput
    connect?: CollectionWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCustomerReviewsInput = {
    create?: XOR<UserCreateWithoutCustomerReviewsInput, UserUncheckedCreateWithoutCustomerReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type CollectionUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<CollectionCreateWithoutReviewsInput, CollectionUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutReviewsInput
    upsert?: CollectionUpsertWithoutReviewsInput
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutReviewsInput, CollectionUpdateWithoutReviewsInput>, CollectionUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateOneRequiredWithoutCustomerReviewsNestedInput = {
    create?: XOR<UserCreateWithoutCustomerReviewsInput, UserUncheckedCreateWithoutCustomerReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerReviewsInput
    upsert?: UserUpsertWithoutCustomerReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerReviewsInput, UserUpdateWithoutCustomerReviewsInput>, UserUncheckedUpdateWithoutCustomerReviewsInput>
  }

  export type ProductionTrackingCreateNestedOneWithoutStageUpdatesInput = {
    create?: XOR<ProductionTrackingCreateWithoutStageUpdatesInput, ProductionTrackingUncheckedCreateWithoutStageUpdatesInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutStageUpdatesInput
    connect?: ProductionTrackingWhereUniqueInput
  }

  export type EnumStageStatusFieldUpdateOperationsInput = {
    set?: $Enums.StageStatus
  }

  export type ProductionTrackingUpdateOneRequiredWithoutStageUpdatesNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutStageUpdatesInput, ProductionTrackingUncheckedCreateWithoutStageUpdatesInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutStageUpdatesInput
    upsert?: ProductionTrackingUpsertWithoutStageUpdatesInput
    connect?: ProductionTrackingWhereUniqueInput
    update?: XOR<XOR<ProductionTrackingUpdateToOneWithWhereWithoutStageUpdatesInput, ProductionTrackingUpdateWithoutStageUpdatesInput>, ProductionTrackingUncheckedUpdateWithoutStageUpdatesInput>
  }

  export type ProductionTrackingCreateNestedOneWithoutQualityControlsInput = {
    create?: XOR<ProductionTrackingCreateWithoutQualityControlsInput, ProductionTrackingUncheckedCreateWithoutQualityControlsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutQualityControlsInput
    connect?: ProductionTrackingWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutQualityInspectionsInput = {
    create?: XOR<UserCreateWithoutQualityInspectionsInput, UserUncheckedCreateWithoutQualityInspectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualityInspectionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumQualityResultFieldUpdateOperationsInput = {
    set?: $Enums.QualityResult
  }

  export type ProductionTrackingUpdateOneRequiredWithoutQualityControlsNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutQualityControlsInput, ProductionTrackingUncheckedCreateWithoutQualityControlsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutQualityControlsInput
    upsert?: ProductionTrackingUpsertWithoutQualityControlsInput
    connect?: ProductionTrackingWhereUniqueInput
    update?: XOR<XOR<ProductionTrackingUpdateToOneWithWhereWithoutQualityControlsInput, ProductionTrackingUpdateWithoutQualityControlsInput>, ProductionTrackingUncheckedUpdateWithoutQualityControlsInput>
  }

  export type UserUpdateOneRequiredWithoutQualityInspectionsNestedInput = {
    create?: XOR<UserCreateWithoutQualityInspectionsInput, UserUncheckedCreateWithoutQualityInspectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualityInspectionsInput
    upsert?: UserUpsertWithoutQualityInspectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutQualityInspectionsInput, UserUpdateWithoutQualityInspectionsInput>, UserUncheckedUpdateWithoutQualityInspectionsInput>
  }

  export type UserCreateNestedOneWithoutOwnedWorkshopsInput = {
    create?: XOR<UserCreateWithoutOwnedWorkshopsInput, UserUncheckedCreateWithoutOwnedWorkshopsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedWorkshopsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductionTrackingCreateNestedManyWithoutSewingWorkshopInput = {
    create?: XOR<ProductionTrackingCreateWithoutSewingWorkshopInput, ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput> | ProductionTrackingCreateWithoutSewingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput | ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput[]
    createMany?: ProductionTrackingCreateManySewingWorkshopInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type ProductionTrackingCreateNestedManyWithoutPackagingWorkshopInput = {
    create?: XOR<ProductionTrackingCreateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput> | ProductionTrackingCreateWithoutPackagingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput | ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput[]
    createMany?: ProductionTrackingCreateManyPackagingWorkshopInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type ProductionTrackingUncheckedCreateNestedManyWithoutSewingWorkshopInput = {
    create?: XOR<ProductionTrackingCreateWithoutSewingWorkshopInput, ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput> | ProductionTrackingCreateWithoutSewingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput | ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput[]
    createMany?: ProductionTrackingCreateManySewingWorkshopInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type ProductionTrackingUncheckedCreateNestedManyWithoutPackagingWorkshopInput = {
    create?: XOR<ProductionTrackingCreateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput> | ProductionTrackingCreateWithoutPackagingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput | ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput[]
    createMany?: ProductionTrackingCreateManyPackagingWorkshopInputEnvelope
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
  }

  export type EnumWorkshopTypeFieldUpdateOperationsInput = {
    set?: $Enums.WorkshopType
  }

  export type UserUpdateOneRequiredWithoutOwnedWorkshopsNestedInput = {
    create?: XOR<UserCreateWithoutOwnedWorkshopsInput, UserUncheckedCreateWithoutOwnedWorkshopsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedWorkshopsInput
    upsert?: UserUpsertWithoutOwnedWorkshopsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedWorkshopsInput, UserUpdateWithoutOwnedWorkshopsInput>, UserUncheckedUpdateWithoutOwnedWorkshopsInput>
  }

  export type ProductionTrackingUpdateManyWithoutSewingWorkshopNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutSewingWorkshopInput, ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput> | ProductionTrackingCreateWithoutSewingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput | ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutSewingWorkshopInput | ProductionTrackingUpsertWithWhereUniqueWithoutSewingWorkshopInput[]
    createMany?: ProductionTrackingCreateManySewingWorkshopInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutSewingWorkshopInput | ProductionTrackingUpdateWithWhereUniqueWithoutSewingWorkshopInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutSewingWorkshopInput | ProductionTrackingUpdateManyWithWhereWithoutSewingWorkshopInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type ProductionTrackingUpdateManyWithoutPackagingWorkshopNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput> | ProductionTrackingCreateWithoutPackagingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput | ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutPackagingWorkshopInput | ProductionTrackingUpsertWithWhereUniqueWithoutPackagingWorkshopInput[]
    createMany?: ProductionTrackingCreateManyPackagingWorkshopInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutPackagingWorkshopInput | ProductionTrackingUpdateWithWhereUniqueWithoutPackagingWorkshopInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutPackagingWorkshopInput | ProductionTrackingUpdateManyWithWhereWithoutPackagingWorkshopInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutSewingWorkshopNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutSewingWorkshopInput, ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput> | ProductionTrackingCreateWithoutSewingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput | ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutSewingWorkshopInput | ProductionTrackingUpsertWithWhereUniqueWithoutSewingWorkshopInput[]
    createMany?: ProductionTrackingCreateManySewingWorkshopInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutSewingWorkshopInput | ProductionTrackingUpdateWithWhereUniqueWithoutSewingWorkshopInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutSewingWorkshopInput | ProductionTrackingUpdateManyWithWhereWithoutSewingWorkshopInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutPackagingWorkshopNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput> | ProductionTrackingCreateWithoutPackagingWorkshopInput[] | ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput[]
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput | ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput[]
    upsert?: ProductionTrackingUpsertWithWhereUniqueWithoutPackagingWorkshopInput | ProductionTrackingUpsertWithWhereUniqueWithoutPackagingWorkshopInput[]
    createMany?: ProductionTrackingCreateManyPackagingWorkshopInputEnvelope
    set?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    disconnect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    delete?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    connect?: ProductionTrackingWhereUniqueInput | ProductionTrackingWhereUniqueInput[]
    update?: ProductionTrackingUpdateWithWhereUniqueWithoutPackagingWorkshopInput | ProductionTrackingUpdateWithWhereUniqueWithoutPackagingWorkshopInput[]
    updateMany?: ProductionTrackingUpdateManyWithWhereWithoutPackagingWorkshopInput | ProductionTrackingUpdateManyWithWhereWithoutPackagingWorkshopInput[]
    deleteMany?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutColorsInput = {
    create?: XOR<CompanyCreateWithoutColorsInput, CompanyUncheckedCreateWithoutColorsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutColorsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutColorsNestedInput = {
    create?: XOR<CompanyCreateWithoutColorsInput, CompanyUncheckedCreateWithoutColorsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutColorsInput
    upsert?: CompanyUpsertWithoutColorsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutColorsInput, CompanyUpdateWithoutColorsInput>, CompanyUncheckedUpdateWithoutColorsInput>
  }

  export type CompanyCreateNestedOneWithoutFabricsInput = {
    create?: XOR<CompanyCreateWithoutFabricsInput, CompanyUncheckedCreateWithoutFabricsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutFabricsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutFabricsNestedInput = {
    create?: XOR<CompanyCreateWithoutFabricsInput, CompanyUncheckedCreateWithoutFabricsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutFabricsInput
    upsert?: CompanyUpsertWithoutFabricsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutFabricsInput, CompanyUpdateWithoutFabricsInput>, CompanyUncheckedUpdateWithoutFabricsInput>
  }

  export type CompanyCreateNestedOneWithoutSizeGroupsInput = {
    create?: XOR<CompanyCreateWithoutSizeGroupsInput, CompanyUncheckedCreateWithoutSizeGroupsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSizeGroupsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutSizeGroupsNestedInput = {
    create?: XOR<CompanyCreateWithoutSizeGroupsInput, CompanyUncheckedCreateWithoutSizeGroupsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSizeGroupsInput
    upsert?: CompanyUpsertWithoutSizeGroupsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutSizeGroupsInput, CompanyUpdateWithoutSizeGroupsInput>, CompanyUncheckedUpdateWithoutSizeGroupsInput>
  }

  export type CompanyCreateNestedOneWithoutSeasonsInput = {
    create?: XOR<CompanyCreateWithoutSeasonsInput, CompanyUncheckedCreateWithoutSeasonsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSeasonsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutSeasonsNestedInput = {
    create?: XOR<CompanyCreateWithoutSeasonsInput, CompanyUncheckedCreateWithoutSeasonsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSeasonsInput
    upsert?: CompanyUpsertWithoutSeasonsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutSeasonsInput, CompanyUpdateWithoutSeasonsInput>, CompanyUncheckedUpdateWithoutSeasonsInput>
  }

  export type CompanyCreateNestedOneWithoutFitsInput = {
    create?: XOR<CompanyCreateWithoutFitsInput, CompanyUncheckedCreateWithoutFitsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutFitsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutFitsNestedInput = {
    create?: XOR<CompanyCreateWithoutFitsInput, CompanyUncheckedCreateWithoutFitsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutFitsInput
    upsert?: CompanyUpsertWithoutFitsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutFitsInput, CompanyUpdateWithoutFitsInput>, CompanyUncheckedUpdateWithoutFitsInput>
  }

  export type CompanyCreateNestedOneWithoutCertificationsInput = {
    create?: XOR<CompanyCreateWithoutCertificationsInput, CompanyUncheckedCreateWithoutCertificationsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCertificationsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CollectionCreateNestedManyWithoutCertificationsInput = {
    create?: XOR<CollectionCreateWithoutCertificationsInput, CollectionUncheckedCreateWithoutCertificationsInput> | CollectionCreateWithoutCertificationsInput[] | CollectionUncheckedCreateWithoutCertificationsInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCertificationsInput | CollectionCreateOrConnectWithoutCertificationsInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type CollectionUncheckedCreateNestedManyWithoutCertificationsInput = {
    create?: XOR<CollectionCreateWithoutCertificationsInput, CollectionUncheckedCreateWithoutCertificationsInput> | CollectionCreateWithoutCertificationsInput[] | CollectionUncheckedCreateWithoutCertificationsInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCertificationsInput | CollectionCreateOrConnectWithoutCertificationsInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
  }

  export type EnumCertificationCategoryFieldUpdateOperationsInput = {
    set?: $Enums.CertificationCategory
  }

  export type CompanyUpdateOneRequiredWithoutCertificationsNestedInput = {
    create?: XOR<CompanyCreateWithoutCertificationsInput, CompanyUncheckedCreateWithoutCertificationsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCertificationsInput
    upsert?: CompanyUpsertWithoutCertificationsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutCertificationsInput, CompanyUpdateWithoutCertificationsInput>, CompanyUncheckedUpdateWithoutCertificationsInput>
  }

  export type CollectionUpdateManyWithoutCertificationsNestedInput = {
    create?: XOR<CollectionCreateWithoutCertificationsInput, CollectionUncheckedCreateWithoutCertificationsInput> | CollectionCreateWithoutCertificationsInput[] | CollectionUncheckedCreateWithoutCertificationsInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCertificationsInput | CollectionCreateOrConnectWithoutCertificationsInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutCertificationsInput | CollectionUpsertWithWhereUniqueWithoutCertificationsInput[]
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutCertificationsInput | CollectionUpdateWithWhereUniqueWithoutCertificationsInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutCertificationsInput | CollectionUpdateManyWithWhereWithoutCertificationsInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type CollectionUncheckedUpdateManyWithoutCertificationsNestedInput = {
    create?: XOR<CollectionCreateWithoutCertificationsInput, CollectionUncheckedCreateWithoutCertificationsInput> | CollectionCreateWithoutCertificationsInput[] | CollectionUncheckedCreateWithoutCertificationsInput[]
    connectOrCreate?: CollectionCreateOrConnectWithoutCertificationsInput | CollectionCreateOrConnectWithoutCertificationsInput[]
    upsert?: CollectionUpsertWithWhereUniqueWithoutCertificationsInput | CollectionUpsertWithWhereUniqueWithoutCertificationsInput[]
    set?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    disconnect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    delete?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    connect?: CollectionWhereUniqueInput | CollectionWhereUniqueInput[]
    update?: CollectionUpdateWithWhereUniqueWithoutCertificationsInput | CollectionUpdateWithWhereUniqueWithoutCertificationsInput[]
    updateMany?: CollectionUpdateManyWithWhereWithoutCertificationsInput | CollectionUpdateManyWithWhereWithoutCertificationsInput[]
    deleteMany?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
  }

  export type ProductionTrackingCreateNestedOneWithoutProductionRevisionsInput = {
    create?: XOR<ProductionTrackingCreateWithoutProductionRevisionsInput, ProductionTrackingUncheckedCreateWithoutProductionRevisionsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutProductionRevisionsInput
    connect?: ProductionTrackingWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRevisionRequestsInput = {
    create?: XOR<UserCreateWithoutRevisionRequestsInput, UserUncheckedCreateWithoutRevisionRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRevisionRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductionTrackingUpdateOneRequiredWithoutProductionRevisionsNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutProductionRevisionsInput, ProductionTrackingUncheckedCreateWithoutProductionRevisionsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutProductionRevisionsInput
    upsert?: ProductionTrackingUpsertWithoutProductionRevisionsInput
    connect?: ProductionTrackingWhereUniqueInput
    update?: XOR<XOR<ProductionTrackingUpdateToOneWithWhereWithoutProductionRevisionsInput, ProductionTrackingUpdateWithoutProductionRevisionsInput>, ProductionTrackingUncheckedUpdateWithoutProductionRevisionsInput>
  }

  export type UserUpdateOneRequiredWithoutRevisionRequestsNestedInput = {
    create?: XOR<UserCreateWithoutRevisionRequestsInput, UserUncheckedCreateWithoutRevisionRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRevisionRequestsInput
    upsert?: UserUpsertWithoutRevisionRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRevisionRequestsInput, UserUpdateWithoutRevisionRequestsInput>, UserUncheckedUpdateWithoutRevisionRequestsInput>
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutNotificationsInput
    connect?: OrderWhereUniqueInput
  }

  export type SampleCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<SampleCreateWithoutNotificationsInput, SampleUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: SampleCreateOrConnectWithoutNotificationsInput
    connect?: SampleWhereUniqueInput
  }

  export type ProductionTrackingCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<ProductionTrackingCreateWithoutNotificationsInput, ProductionTrackingUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutNotificationsInput
    connect?: ProductionTrackingWhereUniqueInput
  }

  export type EnumNotificationTypeFieldUpdateOperationsInput = {
    set?: $Enums.NotificationType
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type OrderUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutNotificationsInput
    upsert?: OrderUpsertWithoutNotificationsInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutNotificationsInput, OrderUpdateWithoutNotificationsInput>, OrderUncheckedUpdateWithoutNotificationsInput>
  }

  export type SampleUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<SampleCreateWithoutNotificationsInput, SampleUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: SampleCreateOrConnectWithoutNotificationsInput
    upsert?: SampleUpsertWithoutNotificationsInput
    disconnect?: SampleWhereInput | boolean
    delete?: SampleWhereInput | boolean
    connect?: SampleWhereUniqueInput
    update?: XOR<XOR<SampleUpdateToOneWithWhereWithoutNotificationsInput, SampleUpdateWithoutNotificationsInput>, SampleUncheckedUpdateWithoutNotificationsInput>
  }

  export type ProductionTrackingUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutNotificationsInput, ProductionTrackingUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutNotificationsInput
    upsert?: ProductionTrackingUpsertWithoutNotificationsInput
    disconnect?: ProductionTrackingWhereInput | boolean
    delete?: ProductionTrackingWhereInput | boolean
    connect?: ProductionTrackingWhereUniqueInput
    update?: XOR<XOR<ProductionTrackingUpdateToOneWithWhereWithoutNotificationsInput, ProductionTrackingUpdateWithoutNotificationsInput>, ProductionTrackingUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserCreateNestedOneWithoutTasksInput = {
    create?: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutTasksInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAssignedTasksInput = {
    create?: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedTasksInput
    connect?: UserWhereUniqueInput
  }

  export type CollectionCreateNestedOneWithoutTasksInput = {
    create?: XOR<CollectionCreateWithoutTasksInput, CollectionUncheckedCreateWithoutTasksInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutTasksInput
    connect?: CollectionWhereUniqueInput
  }

  export type SampleCreateNestedOneWithoutTasksInput = {
    create?: XOR<SampleCreateWithoutTasksInput, SampleUncheckedCreateWithoutTasksInput>
    connectOrCreate?: SampleCreateOrConnectWithoutTasksInput
    connect?: SampleWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutTasksInput = {
    create?: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
    connectOrCreate?: OrderCreateOrConnectWithoutTasksInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductionTrackingCreateNestedOneWithoutTasksInput = {
    create?: XOR<ProductionTrackingCreateWithoutTasksInput, ProductionTrackingUncheckedCreateWithoutTasksInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutTasksInput
    connect?: ProductionTrackingWhereUniqueInput
  }

  export type EnumTaskStatusFieldUpdateOperationsInput = {
    set?: $Enums.TaskStatus
  }

  export type EnumTaskPriorityFieldUpdateOperationsInput = {
    set?: $Enums.TaskPriority
  }

  export type EnumTaskTypeFieldUpdateOperationsInput = {
    set?: $Enums.TaskType
  }

  export type UserUpdateOneRequiredWithoutTasksNestedInput = {
    create?: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutTasksInput
    upsert?: UserUpsertWithoutTasksInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTasksInput, UserUpdateWithoutTasksInput>, UserUncheckedUpdateWithoutTasksInput>
  }

  export type UserUpdateOneWithoutAssignedTasksNestedInput = {
    create?: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedTasksInput
    upsert?: UserUpsertWithoutAssignedTasksInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAssignedTasksInput, UserUpdateWithoutAssignedTasksInput>, UserUncheckedUpdateWithoutAssignedTasksInput>
  }

  export type CollectionUpdateOneWithoutTasksNestedInput = {
    create?: XOR<CollectionCreateWithoutTasksInput, CollectionUncheckedCreateWithoutTasksInput>
    connectOrCreate?: CollectionCreateOrConnectWithoutTasksInput
    upsert?: CollectionUpsertWithoutTasksInput
    disconnect?: CollectionWhereInput | boolean
    delete?: CollectionWhereInput | boolean
    connect?: CollectionWhereUniqueInput
    update?: XOR<XOR<CollectionUpdateToOneWithWhereWithoutTasksInput, CollectionUpdateWithoutTasksInput>, CollectionUncheckedUpdateWithoutTasksInput>
  }

  export type SampleUpdateOneWithoutTasksNestedInput = {
    create?: XOR<SampleCreateWithoutTasksInput, SampleUncheckedCreateWithoutTasksInput>
    connectOrCreate?: SampleCreateOrConnectWithoutTasksInput
    upsert?: SampleUpsertWithoutTasksInput
    disconnect?: SampleWhereInput | boolean
    delete?: SampleWhereInput | boolean
    connect?: SampleWhereUniqueInput
    update?: XOR<XOR<SampleUpdateToOneWithWhereWithoutTasksInput, SampleUpdateWithoutTasksInput>, SampleUncheckedUpdateWithoutTasksInput>
  }

  export type OrderUpdateOneWithoutTasksNestedInput = {
    create?: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
    connectOrCreate?: OrderCreateOrConnectWithoutTasksInput
    upsert?: OrderUpsertWithoutTasksInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutTasksInput, OrderUpdateWithoutTasksInput>, OrderUncheckedUpdateWithoutTasksInput>
  }

  export type ProductionTrackingUpdateOneWithoutTasksNestedInput = {
    create?: XOR<ProductionTrackingCreateWithoutTasksInput, ProductionTrackingUncheckedCreateWithoutTasksInput>
    connectOrCreate?: ProductionTrackingCreateOrConnectWithoutTasksInput
    upsert?: ProductionTrackingUpsertWithoutTasksInput
    disconnect?: ProductionTrackingWhereInput | boolean
    delete?: ProductionTrackingWhereInput | boolean
    connect?: ProductionTrackingWhereUniqueInput
    update?: XOR<XOR<ProductionTrackingUpdateToOneWithWhereWithoutTasksInput, ProductionTrackingUpdateWithoutTasksInput>, ProductionTrackingUncheckedUpdateWithoutTasksInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumCompanyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[]
    notIn?: $Enums.CompanyType[]
    not?: NestedEnumCompanyTypeFilter<$PrismaModel> | $Enums.CompanyType
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumSubscriptionPlanFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPlan | EnumSubscriptionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionPlan[]
    notIn?: $Enums.SubscriptionPlan[]
    not?: NestedEnumSubscriptionPlanFilter<$PrismaModel> | $Enums.SubscriptionPlan
  }

  export type NestedEnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[]
    notIn?: $Enums.SubscriptionStatus[]
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type NestedEnumBillingCycleFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingCycle | EnumBillingCycleFieldRefInput<$PrismaModel>
    in?: $Enums.BillingCycle[]
    notIn?: $Enums.BillingCycle[]
    not?: NestedEnumBillingCycleFilter<$PrismaModel> | $Enums.BillingCycle
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumCompanyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[]
    notIn?: $Enums.CompanyType[]
    not?: NestedEnumCompanyTypeWithAggregatesFilter<$PrismaModel> | $Enums.CompanyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompanyTypeFilter<$PrismaModel>
    _max?: NestedEnumCompanyTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumSubscriptionPlanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPlan | EnumSubscriptionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionPlan[]
    notIn?: $Enums.SubscriptionPlan[]
    not?: NestedEnumSubscriptionPlanWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionPlan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionPlanFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionPlanFilter<$PrismaModel>
  }

  export type NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[]
    notIn?: $Enums.SubscriptionStatus[]
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type NestedEnumBillingCycleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingCycle | EnumBillingCycleFieldRefInput<$PrismaModel>
    in?: $Enums.BillingCycle[]
    notIn?: $Enums.BillingCycle[]
    not?: NestedEnumBillingCycleWithAggregatesFilter<$PrismaModel> | $Enums.BillingCycle
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBillingCycleFilter<$PrismaModel>
    _max?: NestedEnumBillingCycleFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumProductionStageFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStage | EnumProductionStageFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStage[]
    notIn?: $Enums.ProductionStage[]
    not?: NestedEnumProductionStageFilter<$PrismaModel> | $Enums.ProductionStage
  }

  export type NestedEnumProductionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStatus | EnumProductionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStatus[]
    notIn?: $Enums.ProductionStatus[]
    not?: NestedEnumProductionStatusFilter<$PrismaModel> | $Enums.ProductionStatus
  }

  export type NestedEnumProductionStageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStage | EnumProductionStageFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStage[]
    notIn?: $Enums.ProductionStage[]
    not?: NestedEnumProductionStageWithAggregatesFilter<$PrismaModel> | $Enums.ProductionStage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductionStageFilter<$PrismaModel>
    _max?: NestedEnumProductionStageFilter<$PrismaModel>
  }

  export type NestedEnumProductionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductionStatus | EnumProductionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductionStatus[]
    notIn?: $Enums.ProductionStatus[]
    not?: NestedEnumProductionStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductionStatusFilter<$PrismaModel>
    _max?: NestedEnumProductionStatusFilter<$PrismaModel>
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedEnumDepartmentNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Department | EnumDepartmentFieldRefInput<$PrismaModel> | null
    in?: $Enums.Department[] | null
    notIn?: $Enums.Department[] | null
    not?: NestedEnumDepartmentNullableFilter<$PrismaModel> | $Enums.Department | null
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedEnumDepartmentNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Department | EnumDepartmentFieldRefInput<$PrismaModel> | null
    in?: $Enums.Department[] | null
    notIn?: $Enums.Department[] | null
    not?: NestedEnumDepartmentNullableWithAggregatesFilter<$PrismaModel> | $Enums.Department | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDepartmentNullableFilter<$PrismaModel>
    _max?: NestedEnumDepartmentNullableFilter<$PrismaModel>
  }

  export type NestedEnumSeasonNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Season | EnumSeasonFieldRefInput<$PrismaModel> | null
    in?: $Enums.Season[] | null
    notIn?: $Enums.Season[] | null
    not?: NestedEnumSeasonNullableFilter<$PrismaModel> | $Enums.Season | null
  }

  export type NestedEnumGenderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | null
    notIn?: $Enums.Gender[] | null
    not?: NestedEnumGenderNullableFilter<$PrismaModel> | $Enums.Gender | null
  }

  export type NestedEnumSeasonNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Season | EnumSeasonFieldRefInput<$PrismaModel> | null
    in?: $Enums.Season[] | null
    notIn?: $Enums.Season[] | null
    not?: NestedEnumSeasonNullableWithAggregatesFilter<$PrismaModel> | $Enums.Season | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSeasonNullableFilter<$PrismaModel>
    _max?: NestedEnumSeasonNullableFilter<$PrismaModel>
  }

  export type NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | null
    notIn?: $Enums.Gender[] | null
    not?: NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel> | $Enums.Gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumSampleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleType | EnumSampleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SampleType[]
    notIn?: $Enums.SampleType[]
    not?: NestedEnumSampleTypeFilter<$PrismaModel> | $Enums.SampleType
  }

  export type NestedEnumSampleStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleStatus | EnumSampleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SampleStatus[]
    notIn?: $Enums.SampleStatus[]
    not?: NestedEnumSampleStatusFilter<$PrismaModel> | $Enums.SampleStatus
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumSampleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleType | EnumSampleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SampleType[]
    notIn?: $Enums.SampleType[]
    not?: NestedEnumSampleTypeWithAggregatesFilter<$PrismaModel> | $Enums.SampleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSampleTypeFilter<$PrismaModel>
    _max?: NestedEnumSampleTypeFilter<$PrismaModel>
  }

  export type NestedEnumSampleStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SampleStatus | EnumSampleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SampleStatus[]
    notIn?: $Enums.SampleStatus[]
    not?: NestedEnumSampleStatusWithAggregatesFilter<$PrismaModel> | $Enums.SampleStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSampleStatusFilter<$PrismaModel>
    _max?: NestedEnumSampleStatusFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumStageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.StageStatus | EnumStageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StageStatus[]
    notIn?: $Enums.StageStatus[]
    not?: NestedEnumStageStatusFilter<$PrismaModel> | $Enums.StageStatus
  }

  export type NestedEnumStageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StageStatus | EnumStageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StageStatus[]
    notIn?: $Enums.StageStatus[]
    not?: NestedEnumStageStatusWithAggregatesFilter<$PrismaModel> | $Enums.StageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStageStatusFilter<$PrismaModel>
    _max?: NestedEnumStageStatusFilter<$PrismaModel>
  }

  export type NestedEnumQualityResultFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityResult | EnumQualityResultFieldRefInput<$PrismaModel>
    in?: $Enums.QualityResult[]
    notIn?: $Enums.QualityResult[]
    not?: NestedEnumQualityResultFilter<$PrismaModel> | $Enums.QualityResult
  }

  export type NestedEnumQualityResultWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.QualityResult | EnumQualityResultFieldRefInput<$PrismaModel>
    in?: $Enums.QualityResult[]
    notIn?: $Enums.QualityResult[]
    not?: NestedEnumQualityResultWithAggregatesFilter<$PrismaModel> | $Enums.QualityResult
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumQualityResultFilter<$PrismaModel>
    _max?: NestedEnumQualityResultFilter<$PrismaModel>
  }

  export type NestedEnumWorkshopTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkshopType | EnumWorkshopTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WorkshopType[]
    notIn?: $Enums.WorkshopType[]
    not?: NestedEnumWorkshopTypeFilter<$PrismaModel> | $Enums.WorkshopType
  }

  export type NestedEnumWorkshopTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkshopType | EnumWorkshopTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WorkshopType[]
    notIn?: $Enums.WorkshopType[]
    not?: NestedEnumWorkshopTypeWithAggregatesFilter<$PrismaModel> | $Enums.WorkshopType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWorkshopTypeFilter<$PrismaModel>
    _max?: NestedEnumWorkshopTypeFilter<$PrismaModel>
  }

  export type NestedEnumCertificationCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.CertificationCategory | EnumCertificationCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CertificationCategory[]
    notIn?: $Enums.CertificationCategory[]
    not?: NestedEnumCertificationCategoryFilter<$PrismaModel> | $Enums.CertificationCategory
  }

  export type NestedEnumCertificationCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CertificationCategory | EnumCertificationCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CertificationCategory[]
    notIn?: $Enums.CertificationCategory[]
    not?: NestedEnumCertificationCategoryWithAggregatesFilter<$PrismaModel> | $Enums.CertificationCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCertificationCategoryFilter<$PrismaModel>
    _max?: NestedEnumCertificationCategoryFilter<$PrismaModel>
  }

  export type NestedEnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[]
    notIn?: $Enums.NotificationType[]
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[]
    notIn?: $Enums.NotificationType[]
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type NestedEnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[]
    notIn?: $Enums.TaskStatus[]
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type NestedEnumTaskPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[]
    notIn?: $Enums.TaskPriority[]
    not?: NestedEnumTaskPriorityFilter<$PrismaModel> | $Enums.TaskPriority
  }

  export type NestedEnumTaskTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[]
    notIn?: $Enums.TaskType[]
    not?: NestedEnumTaskTypeFilter<$PrismaModel> | $Enums.TaskType
  }

  export type NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[]
    notIn?: $Enums.TaskStatus[]
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[]
    notIn?: $Enums.TaskPriority[]
    not?: NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel> | $Enums.TaskPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskPriorityFilter<$PrismaModel>
    _max?: NestedEnumTaskPriorityFilter<$PrismaModel>
  }

  export type NestedEnumTaskTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[]
    notIn?: $Enums.TaskType[]
    not?: NestedEnumTaskTypeWithAggregatesFilter<$PrismaModel> | $Enums.TaskType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskTypeFilter<$PrismaModel>
    _max?: NestedEnumTaskTypeFilter<$PrismaModel>
  }

  export type UserCreateWithoutOwnedCompaniesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutOwnedCompaniesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutOwnedCompaniesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedCompaniesInput, UserUncheckedCreateWithoutOwnedCompaniesInput>
  }

  export type UserCreateWithoutCompanyInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutCompanyInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutCompanyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput>
  }

  export type UserCreateManyCompanyInputEnvelope = {
    data: UserCreateManyCompanyInput | UserCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutCompanyInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    author?: UserCreateNestedOneWithoutCategoriesInput
    collections?: CollectionCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    parentCategory?: CategoryCreateNestedOneWithoutSubCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    parentCategoryId?: number | null
    collections?: CollectionUncheckedCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCompanyInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCompanyInput, CategoryUncheckedCreateWithoutCompanyInput>
  }

  export type CategoryCreateManyCompanyInputEnvelope = {
    data: CategoryCreateManyCompanyInput | CategoryCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type CollectionCreateWithoutCompanyInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
  }

  export type CollectionUncheckedCreateWithoutCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutCompanyInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutCompanyInput, CollectionUncheckedCreateWithoutCompanyInput>
  }

  export type CollectionCreateManyCompanyInputEnvelope = {
    data: CollectionCreateManyCompanyInput | CollectionCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type SampleCreateWithoutCompanyInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutCompanyInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutCompanyInput, SampleUncheckedCreateWithoutCompanyInput>
  }

  export type SampleCreateManyCompanyInputEnvelope = {
    data: SampleCreateManyCompanyInput | SampleCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutCompanyInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCompanyInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCompanyInput, OrderUncheckedCreateWithoutCompanyInput>
  }

  export type OrderCreateManyCompanyInputEnvelope = {
    data: OrderCreateManyCompanyInput | OrderCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type ProductionTrackingCreateWithoutCompanyInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutCompanyInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutCompanyInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutCompanyInput, ProductionTrackingUncheckedCreateWithoutCompanyInput>
  }

  export type ProductionTrackingCreateManyCompanyInputEnvelope = {
    data: ProductionTrackingCreateManyCompanyInput | ProductionTrackingCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutCompanyInput = {
    content: string
    isRead?: boolean
    type?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
    order?: OrderCreateNestedOneWithoutMessagesInput
    sample?: SampleCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutCompanyInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutCompanyInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutCompanyInput, MessageUncheckedCreateWithoutCompanyInput>
  }

  export type MessageCreateManyCompanyInputEnvelope = {
    data: MessageCreateManyCompanyInput | MessageCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type ColorCreateWithoutCompanyInput = {
    name: string
    code?: string | null
    hexCode?: string | null
    imageUrl?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ColorUncheckedCreateWithoutCompanyInput = {
    id?: number
    name: string
    code?: string | null
    hexCode?: string | null
    imageUrl?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ColorCreateOrConnectWithoutCompanyInput = {
    where: ColorWhereUniqueInput
    create: XOR<ColorCreateWithoutCompanyInput, ColorUncheckedCreateWithoutCompanyInput>
  }

  export type ColorCreateManyCompanyInputEnvelope = {
    data: ColorCreateManyCompanyInput | ColorCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type FabricCreateWithoutCompanyInput = {
    name: string
    code?: string | null
    composition: string
    weight?: number | null
    width?: number | null
    supplier?: string | null
    price?: number | null
    minOrder?: number | null
    leadTime?: number | null
    imageUrl?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FabricUncheckedCreateWithoutCompanyInput = {
    id?: number
    name: string
    code?: string | null
    composition: string
    weight?: number | null
    width?: number | null
    supplier?: string | null
    price?: number | null
    minOrder?: number | null
    leadTime?: number | null
    imageUrl?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FabricCreateOrConnectWithoutCompanyInput = {
    where: FabricWhereUniqueInput
    create: XOR<FabricCreateWithoutCompanyInput, FabricUncheckedCreateWithoutCompanyInput>
  }

  export type FabricCreateManyCompanyInputEnvelope = {
    data: FabricCreateManyCompanyInput | FabricCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type SizeGroupCreateWithoutCompanyInput = {
    name: string
    category?: string | null
    sizes: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SizeGroupUncheckedCreateWithoutCompanyInput = {
    id?: number
    name: string
    category?: string | null
    sizes: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SizeGroupCreateOrConnectWithoutCompanyInput = {
    where: SizeGroupWhereUniqueInput
    create: XOR<SizeGroupCreateWithoutCompanyInput, SizeGroupUncheckedCreateWithoutCompanyInput>
  }

  export type SizeGroupCreateManyCompanyInputEnvelope = {
    data: SizeGroupCreateManyCompanyInput | SizeGroupCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type SeasonItemCreateWithoutCompanyInput = {
    name: string
    fullName: string
    year: number
    type: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeasonItemUncheckedCreateWithoutCompanyInput = {
    id?: number
    name: string
    fullName: string
    year: number
    type: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeasonItemCreateOrConnectWithoutCompanyInput = {
    where: SeasonItemWhereUniqueInput
    create: XOR<SeasonItemCreateWithoutCompanyInput, SeasonItemUncheckedCreateWithoutCompanyInput>
  }

  export type SeasonItemCreateManyCompanyInputEnvelope = {
    data: SeasonItemCreateManyCompanyInput | SeasonItemCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type FitItemCreateWithoutCompanyInput = {
    name: string
    code?: string | null
    category?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FitItemUncheckedCreateWithoutCompanyInput = {
    id?: number
    name: string
    code?: string | null
    category?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FitItemCreateOrConnectWithoutCompanyInput = {
    where: FitItemWhereUniqueInput
    create: XOR<FitItemCreateWithoutCompanyInput, FitItemUncheckedCreateWithoutCompanyInput>
  }

  export type FitItemCreateManyCompanyInputEnvelope = {
    data: FitItemCreateManyCompanyInput | FitItemCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type CertificationCreateWithoutCompanyInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
    collections?: CollectionCreateNestedManyWithoutCertificationsInput
  }

  export type CertificationUncheckedCreateWithoutCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
    collections?: CollectionUncheckedCreateNestedManyWithoutCertificationsInput
  }

  export type CertificationCreateOrConnectWithoutCompanyInput = {
    where: CertificationWhereUniqueInput
    create: XOR<CertificationCreateWithoutCompanyInput, CertificationUncheckedCreateWithoutCompanyInput>
  }

  export type CertificationCreateManyCompanyInputEnvelope = {
    data: CertificationCreateManyCompanyInput | CertificationCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOwnedCompaniesInput = {
    update: XOR<UserUpdateWithoutOwnedCompaniesInput, UserUncheckedUpdateWithoutOwnedCompaniesInput>
    create: XOR<UserCreateWithoutOwnedCompaniesInput, UserUncheckedCreateWithoutOwnedCompaniesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedCompaniesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedCompaniesInput, UserUncheckedUpdateWithoutOwnedCompaniesInput>
  }

  export type UserUpdateWithoutOwnedCompaniesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedCompaniesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCompanyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCompanyInput, UserUncheckedUpdateWithoutCompanyInput>
    create: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCompanyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCompanyInput, UserUncheckedUpdateWithoutCompanyInput>
  }

  export type UserUpdateManyWithWhereWithoutCompanyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCompanyInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    username?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    companyId?: IntNullableFilter<"User"> | number | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    isCompanyOwner?: BoolFilter<"User"> | boolean
    department?: EnumDepartmentNullableFilter<"User"> | $Enums.Department | null
    jobTitle?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    socialLinks?: JsonNullableFilter<"User">
    emailNotifications?: BoolFilter<"User"> | boolean
    pushNotifications?: BoolFilter<"User"> | boolean
    language?: StringFilter<"User"> | string
    timezone?: StringFilter<"User"> | string
    permissions?: JsonNullableFilter<"User">
    isActive?: BoolFilter<"User"> | boolean
    isPendingApproval?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type CategoryUpsertWithWhereUniqueWithoutCompanyInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutCompanyInput, CategoryUncheckedUpdateWithoutCompanyInput>
    create: XOR<CategoryCreateWithoutCompanyInput, CategoryUncheckedCreateWithoutCompanyInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutCompanyInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutCompanyInput, CategoryUncheckedUpdateWithoutCompanyInput>
  }

  export type CategoryUpdateManyWithWhereWithoutCompanyInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutCompanyInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: IntFilter<"Category"> | number
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    authorId?: IntNullableFilter<"Category"> | number | null
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    companyId?: IntNullableFilter<"Category"> | number | null
  }

  export type CollectionUpsertWithWhereUniqueWithoutCompanyInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutCompanyInput, CollectionUncheckedUpdateWithoutCompanyInput>
    create: XOR<CollectionCreateWithoutCompanyInput, CollectionUncheckedCreateWithoutCompanyInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutCompanyInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutCompanyInput, CollectionUncheckedUpdateWithoutCompanyInput>
  }

  export type CollectionUpdateManyWithWhereWithoutCompanyInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutCompanyInput>
  }

  export type CollectionScalarWhereInput = {
    AND?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
    OR?: CollectionScalarWhereInput[]
    NOT?: CollectionScalarWhereInput | CollectionScalarWhereInput[]
    id?: IntFilter<"Collection"> | number
    createdAt?: DateTimeFilter<"Collection"> | Date | string
    updatedAt?: DateTimeFilter<"Collection"> | Date | string
    name?: StringFilter<"Collection"> | string
    description?: StringNullableFilter<"Collection"> | string | null
    modelCode?: StringFilter<"Collection"> | string
    season?: EnumSeasonNullableFilter<"Collection"> | $Enums.Season | null
    gender?: EnumGenderNullableFilter<"Collection"> | $Enums.Gender | null
    fit?: StringNullableFilter<"Collection"> | string | null
    trend?: StringNullableFilter<"Collection"> | string | null
    colors?: StringNullableFilter<"Collection"> | string | null
    sizeGroups?: StringNullableFilter<"Collection"> | string | null
    sizeRange?: StringNullableFilter<"Collection"> | string | null
    measurementChart?: StringNullableFilter<"Collection"> | string | null
    fabricComposition?: StringNullableFilter<"Collection"> | string | null
    accessories?: StringNullableFilter<"Collection"> | string | null
    images?: StringNullableFilter<"Collection"> | string | null
    techPack?: StringNullableFilter<"Collection"> | string | null
    moq?: IntNullableFilter<"Collection"> | number | null
    targetPrice?: FloatNullableFilter<"Collection"> | number | null
    targetLeadTime?: IntNullableFilter<"Collection"> | number | null
    notes?: StringNullableFilter<"Collection"> | string | null
    likesCount?: IntFilter<"Collection"> | number
    viewCount?: IntFilter<"Collection"> | number
    shareCount?: IntFilter<"Collection"> | number
    lastViewedAt?: DateTimeNullableFilter<"Collection"> | Date | string | null
    price?: FloatFilter<"Collection"> | number
    sku?: StringNullableFilter<"Collection"> | string | null
    stock?: IntFilter<"Collection"> | number
    isActive?: BoolFilter<"Collection"> | boolean
    isFeatured?: BoolFilter<"Collection"> | boolean
    slug?: StringNullableFilter<"Collection"> | string | null
    productionSchedule?: JsonNullableFilter<"Collection">
    categoryId?: IntNullableFilter<"Collection"> | number | null
    authorId?: IntNullableFilter<"Collection"> | number | null
    companyId?: IntNullableFilter<"Collection"> | number | null
  }

  export type SampleUpsertWithWhereUniqueWithoutCompanyInput = {
    where: SampleWhereUniqueInput
    update: XOR<SampleUpdateWithoutCompanyInput, SampleUncheckedUpdateWithoutCompanyInput>
    create: XOR<SampleCreateWithoutCompanyInput, SampleUncheckedCreateWithoutCompanyInput>
  }

  export type SampleUpdateWithWhereUniqueWithoutCompanyInput = {
    where: SampleWhereUniqueInput
    data: XOR<SampleUpdateWithoutCompanyInput, SampleUncheckedUpdateWithoutCompanyInput>
  }

  export type SampleUpdateManyWithWhereWithoutCompanyInput = {
    where: SampleScalarWhereInput
    data: XOR<SampleUpdateManyMutationInput, SampleUncheckedUpdateManyWithoutCompanyInput>
  }

  export type SampleScalarWhereInput = {
    AND?: SampleScalarWhereInput | SampleScalarWhereInput[]
    OR?: SampleScalarWhereInput[]
    NOT?: SampleScalarWhereInput | SampleScalarWhereInput[]
    id?: IntFilter<"Sample"> | number
    createdAt?: DateTimeFilter<"Sample"> | Date | string
    updatedAt?: DateTimeFilter<"Sample"> | Date | string
    sampleNumber?: StringFilter<"Sample"> | string
    sampleType?: EnumSampleTypeFilter<"Sample"> | $Enums.SampleType
    status?: EnumSampleStatusFilter<"Sample"> | $Enums.SampleStatus
    customerNote?: StringNullableFilter<"Sample"> | string | null
    manufacturerResponse?: StringNullableFilter<"Sample"> | string | null
    customDesignImages?: StringNullableFilter<"Sample"> | string | null
    revisionRequests?: StringNullableFilter<"Sample"> | string | null
    originalCollectionId?: IntNullableFilter<"Sample"> | number | null
    name?: StringNullableFilter<"Sample"> | string | null
    description?: StringNullableFilter<"Sample"> | string | null
    images?: StringNullableFilter<"Sample"> | string | null
    aiGenerated?: BoolNullableFilter<"Sample"> | boolean | null
    aiPrompt?: StringNullableFilter<"Sample"> | string | null
    aiSketchUrl?: StringNullableFilter<"Sample"> | string | null
    unitPrice?: FloatNullableFilter<"Sample"> | number | null
    productionDays?: IntNullableFilter<"Sample"> | number | null
    estimatedProductionDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    actualProductionDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    shippingDate?: DateTimeNullableFilter<"Sample"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"Sample"> | string | null
    cargoTrackingNumber?: StringNullableFilter<"Sample"> | string | null
    customerQuotedPrice?: FloatNullableFilter<"Sample"> | number | null
    customerQuoteDays?: IntNullableFilter<"Sample"> | number | null
    customerQuoteNote?: StringNullableFilter<"Sample"> | string | null
    customerQuoteType?: StringNullableFilter<"Sample"> | string | null
    customerQuoteSentAt?: DateTimeNullableFilter<"Sample"> | Date | string | null
    collectionId?: IntNullableFilter<"Sample"> | number | null
    customerId?: IntFilter<"Sample"> | number
    manufactureId?: IntFilter<"Sample"> | number
    companyId?: IntNullableFilter<"Sample"> | number | null
    viewCount?: IntFilter<"Sample"> | number
    shareCount?: IntFilter<"Sample"> | number
    lastViewedAt?: DateTimeNullableFilter<"Sample"> | Date | string | null
  }

  export type OrderUpsertWithWhereUniqueWithoutCompanyInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCompanyInput, OrderUncheckedUpdateWithoutCompanyInput>
    create: XOR<OrderCreateWithoutCompanyInput, OrderUncheckedCreateWithoutCompanyInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCompanyInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCompanyInput, OrderUncheckedUpdateWithoutCompanyInput>
  }

  export type OrderUpdateManyWithWhereWithoutCompanyInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCompanyInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: IntFilter<"Order"> | number
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    orderNumber?: StringFilter<"Order"> | string
    quantity?: IntFilter<"Order"> | number
    unitPrice?: FloatFilter<"Order"> | number
    totalPrice?: FloatFilter<"Order"> | number
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    customerNote?: StringNullableFilter<"Order"> | string | null
    manufacturerResponse?: StringNullableFilter<"Order"> | string | null
    customerQuotedPrice?: FloatNullableFilter<"Order"> | number | null
    customerQuoteDays?: IntNullableFilter<"Order"> | number | null
    customerQuoteNote?: StringNullableFilter<"Order"> | string | null
    customerQuoteType?: StringNullableFilter<"Order"> | string | null
    customerQuoteSentAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    productionDays?: IntNullableFilter<"Order"> | number | null
    estimatedProductionDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    actualProductionStart?: DateTimeNullableFilter<"Order"> | Date | string | null
    actualProductionEnd?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingDate?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryAddress?: StringNullableFilter<"Order"> | string | null
    cargoTrackingNumber?: StringNullableFilter<"Order"> | string | null
    collectionId?: IntFilter<"Order"> | number
    customerId?: IntFilter<"Order"> | number
    manufactureId?: IntFilter<"Order"> | number
    companyId?: IntNullableFilter<"Order"> | number | null
  }

  export type ProductionTrackingUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ProductionTrackingWhereUniqueInput
    update: XOR<ProductionTrackingUpdateWithoutCompanyInput, ProductionTrackingUncheckedUpdateWithoutCompanyInput>
    create: XOR<ProductionTrackingCreateWithoutCompanyInput, ProductionTrackingUncheckedCreateWithoutCompanyInput>
  }

  export type ProductionTrackingUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ProductionTrackingWhereUniqueInput
    data: XOR<ProductionTrackingUpdateWithoutCompanyInput, ProductionTrackingUncheckedUpdateWithoutCompanyInput>
  }

  export type ProductionTrackingUpdateManyWithWhereWithoutCompanyInput = {
    where: ProductionTrackingScalarWhereInput
    data: XOR<ProductionTrackingUpdateManyMutationInput, ProductionTrackingUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ProductionTrackingScalarWhereInput = {
    AND?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
    OR?: ProductionTrackingScalarWhereInput[]
    NOT?: ProductionTrackingScalarWhereInput | ProductionTrackingScalarWhereInput[]
    id?: IntFilter<"ProductionTracking"> | number
    orderId?: IntNullableFilter<"ProductionTracking"> | number | null
    sampleId?: IntNullableFilter<"ProductionTracking"> | number | null
    currentStage?: EnumProductionStageFilter<"ProductionTracking"> | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFilter<"ProductionTracking"> | $Enums.ProductionStatus
    progress?: IntFilter<"ProductionTracking"> | number
    estimatedStartDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    estimatedEndDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    actualStartDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"ProductionTracking"> | Date | string | null
    notes?: StringNullableFilter<"ProductionTracking"> | string | null
    createdAt?: DateTimeFilter<"ProductionTracking"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionTracking"> | Date | string
    companyId?: IntNullableFilter<"ProductionTracking"> | number | null
    sewingWorkshopId?: IntNullableFilter<"ProductionTracking"> | number | null
    packagingWorkshopId?: IntNullableFilter<"ProductionTracking"> | number | null
  }

  export type MessageUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutCompanyInput, MessageUncheckedUpdateWithoutCompanyInput>
    create: XOR<MessageCreateWithoutCompanyInput, MessageUncheckedCreateWithoutCompanyInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutCompanyInput, MessageUncheckedUpdateWithoutCompanyInput>
  }

  export type MessageUpdateManyWithWhereWithoutCompanyInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: IntFilter<"Message"> | number
    content?: StringFilter<"Message"> | string
    senderId?: IntFilter<"Message"> | number
    receiverId?: IntNullableFilter<"Message"> | number | null
    isRead?: BoolFilter<"Message"> | boolean
    type?: StringFilter<"Message"> | string
    orderId?: IntNullableFilter<"Message"> | number | null
    sampleId?: IntNullableFilter<"Message"> | number | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    companyId?: IntNullableFilter<"Message"> | number | null
  }

  export type ColorUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ColorWhereUniqueInput
    update: XOR<ColorUpdateWithoutCompanyInput, ColorUncheckedUpdateWithoutCompanyInput>
    create: XOR<ColorCreateWithoutCompanyInput, ColorUncheckedCreateWithoutCompanyInput>
  }

  export type ColorUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ColorWhereUniqueInput
    data: XOR<ColorUpdateWithoutCompanyInput, ColorUncheckedUpdateWithoutCompanyInput>
  }

  export type ColorUpdateManyWithWhereWithoutCompanyInput = {
    where: ColorScalarWhereInput
    data: XOR<ColorUpdateManyMutationInput, ColorUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ColorScalarWhereInput = {
    AND?: ColorScalarWhereInput | ColorScalarWhereInput[]
    OR?: ColorScalarWhereInput[]
    NOT?: ColorScalarWhereInput | ColorScalarWhereInput[]
    id?: IntFilter<"Color"> | number
    name?: StringFilter<"Color"> | string
    code?: StringNullableFilter<"Color"> | string | null
    hexCode?: StringNullableFilter<"Color"> | string | null
    imageUrl?: StringNullableFilter<"Color"> | string | null
    isActive?: BoolFilter<"Color"> | boolean
    companyId?: IntFilter<"Color"> | number
    createdAt?: DateTimeFilter<"Color"> | Date | string
    updatedAt?: DateTimeFilter<"Color"> | Date | string
  }

  export type FabricUpsertWithWhereUniqueWithoutCompanyInput = {
    where: FabricWhereUniqueInput
    update: XOR<FabricUpdateWithoutCompanyInput, FabricUncheckedUpdateWithoutCompanyInput>
    create: XOR<FabricCreateWithoutCompanyInput, FabricUncheckedCreateWithoutCompanyInput>
  }

  export type FabricUpdateWithWhereUniqueWithoutCompanyInput = {
    where: FabricWhereUniqueInput
    data: XOR<FabricUpdateWithoutCompanyInput, FabricUncheckedUpdateWithoutCompanyInput>
  }

  export type FabricUpdateManyWithWhereWithoutCompanyInput = {
    where: FabricScalarWhereInput
    data: XOR<FabricUpdateManyMutationInput, FabricUncheckedUpdateManyWithoutCompanyInput>
  }

  export type FabricScalarWhereInput = {
    AND?: FabricScalarWhereInput | FabricScalarWhereInput[]
    OR?: FabricScalarWhereInput[]
    NOT?: FabricScalarWhereInput | FabricScalarWhereInput[]
    id?: IntFilter<"Fabric"> | number
    name?: StringFilter<"Fabric"> | string
    code?: StringNullableFilter<"Fabric"> | string | null
    composition?: StringFilter<"Fabric"> | string
    weight?: IntNullableFilter<"Fabric"> | number | null
    width?: IntNullableFilter<"Fabric"> | number | null
    supplier?: StringNullableFilter<"Fabric"> | string | null
    price?: FloatNullableFilter<"Fabric"> | number | null
    minOrder?: IntNullableFilter<"Fabric"> | number | null
    leadTime?: IntNullableFilter<"Fabric"> | number | null
    imageUrl?: StringNullableFilter<"Fabric"> | string | null
    description?: StringNullableFilter<"Fabric"> | string | null
    isActive?: BoolFilter<"Fabric"> | boolean
    companyId?: IntFilter<"Fabric"> | number
    createdAt?: DateTimeFilter<"Fabric"> | Date | string
    updatedAt?: DateTimeFilter<"Fabric"> | Date | string
  }

  export type SizeGroupUpsertWithWhereUniqueWithoutCompanyInput = {
    where: SizeGroupWhereUniqueInput
    update: XOR<SizeGroupUpdateWithoutCompanyInput, SizeGroupUncheckedUpdateWithoutCompanyInput>
    create: XOR<SizeGroupCreateWithoutCompanyInput, SizeGroupUncheckedCreateWithoutCompanyInput>
  }

  export type SizeGroupUpdateWithWhereUniqueWithoutCompanyInput = {
    where: SizeGroupWhereUniqueInput
    data: XOR<SizeGroupUpdateWithoutCompanyInput, SizeGroupUncheckedUpdateWithoutCompanyInput>
  }

  export type SizeGroupUpdateManyWithWhereWithoutCompanyInput = {
    where: SizeGroupScalarWhereInput
    data: XOR<SizeGroupUpdateManyMutationInput, SizeGroupUncheckedUpdateManyWithoutCompanyInput>
  }

  export type SizeGroupScalarWhereInput = {
    AND?: SizeGroupScalarWhereInput | SizeGroupScalarWhereInput[]
    OR?: SizeGroupScalarWhereInput[]
    NOT?: SizeGroupScalarWhereInput | SizeGroupScalarWhereInput[]
    id?: IntFilter<"SizeGroup"> | number
    name?: StringFilter<"SizeGroup"> | string
    category?: StringNullableFilter<"SizeGroup"> | string | null
    sizes?: StringFilter<"SizeGroup"> | string
    description?: StringNullableFilter<"SizeGroup"> | string | null
    isActive?: BoolFilter<"SizeGroup"> | boolean
    companyId?: IntFilter<"SizeGroup"> | number
    createdAt?: DateTimeFilter<"SizeGroup"> | Date | string
    updatedAt?: DateTimeFilter<"SizeGroup"> | Date | string
  }

  export type SeasonItemUpsertWithWhereUniqueWithoutCompanyInput = {
    where: SeasonItemWhereUniqueInput
    update: XOR<SeasonItemUpdateWithoutCompanyInput, SeasonItemUncheckedUpdateWithoutCompanyInput>
    create: XOR<SeasonItemCreateWithoutCompanyInput, SeasonItemUncheckedCreateWithoutCompanyInput>
  }

  export type SeasonItemUpdateWithWhereUniqueWithoutCompanyInput = {
    where: SeasonItemWhereUniqueInput
    data: XOR<SeasonItemUpdateWithoutCompanyInput, SeasonItemUncheckedUpdateWithoutCompanyInput>
  }

  export type SeasonItemUpdateManyWithWhereWithoutCompanyInput = {
    where: SeasonItemScalarWhereInput
    data: XOR<SeasonItemUpdateManyMutationInput, SeasonItemUncheckedUpdateManyWithoutCompanyInput>
  }

  export type SeasonItemScalarWhereInput = {
    AND?: SeasonItemScalarWhereInput | SeasonItemScalarWhereInput[]
    OR?: SeasonItemScalarWhereInput[]
    NOT?: SeasonItemScalarWhereInput | SeasonItemScalarWhereInput[]
    id?: IntFilter<"SeasonItem"> | number
    name?: StringFilter<"SeasonItem"> | string
    fullName?: StringFilter<"SeasonItem"> | string
    year?: IntFilter<"SeasonItem"> | number
    type?: StringFilter<"SeasonItem"> | string
    startDate?: DateTimeNullableFilter<"SeasonItem"> | Date | string | null
    endDate?: DateTimeNullableFilter<"SeasonItem"> | Date | string | null
    description?: StringNullableFilter<"SeasonItem"> | string | null
    isActive?: BoolFilter<"SeasonItem"> | boolean
    companyId?: IntFilter<"SeasonItem"> | number
    createdAt?: DateTimeFilter<"SeasonItem"> | Date | string
    updatedAt?: DateTimeFilter<"SeasonItem"> | Date | string
  }

  export type FitItemUpsertWithWhereUniqueWithoutCompanyInput = {
    where: FitItemWhereUniqueInput
    update: XOR<FitItemUpdateWithoutCompanyInput, FitItemUncheckedUpdateWithoutCompanyInput>
    create: XOR<FitItemCreateWithoutCompanyInput, FitItemUncheckedCreateWithoutCompanyInput>
  }

  export type FitItemUpdateWithWhereUniqueWithoutCompanyInput = {
    where: FitItemWhereUniqueInput
    data: XOR<FitItemUpdateWithoutCompanyInput, FitItemUncheckedUpdateWithoutCompanyInput>
  }

  export type FitItemUpdateManyWithWhereWithoutCompanyInput = {
    where: FitItemScalarWhereInput
    data: XOR<FitItemUpdateManyMutationInput, FitItemUncheckedUpdateManyWithoutCompanyInput>
  }

  export type FitItemScalarWhereInput = {
    AND?: FitItemScalarWhereInput | FitItemScalarWhereInput[]
    OR?: FitItemScalarWhereInput[]
    NOT?: FitItemScalarWhereInput | FitItemScalarWhereInput[]
    id?: IntFilter<"FitItem"> | number
    name?: StringFilter<"FitItem"> | string
    code?: StringNullableFilter<"FitItem"> | string | null
    category?: StringNullableFilter<"FitItem"> | string | null
    description?: StringNullableFilter<"FitItem"> | string | null
    isActive?: BoolFilter<"FitItem"> | boolean
    companyId?: IntFilter<"FitItem"> | number
    createdAt?: DateTimeFilter<"FitItem"> | Date | string
    updatedAt?: DateTimeFilter<"FitItem"> | Date | string
  }

  export type CertificationUpsertWithWhereUniqueWithoutCompanyInput = {
    where: CertificationWhereUniqueInput
    update: XOR<CertificationUpdateWithoutCompanyInput, CertificationUncheckedUpdateWithoutCompanyInput>
    create: XOR<CertificationCreateWithoutCompanyInput, CertificationUncheckedCreateWithoutCompanyInput>
  }

  export type CertificationUpdateWithWhereUniqueWithoutCompanyInput = {
    where: CertificationWhereUniqueInput
    data: XOR<CertificationUpdateWithoutCompanyInput, CertificationUncheckedUpdateWithoutCompanyInput>
  }

  export type CertificationUpdateManyWithWhereWithoutCompanyInput = {
    where: CertificationScalarWhereInput
    data: XOR<CertificationUpdateManyMutationInput, CertificationUncheckedUpdateManyWithoutCompanyInput>
  }

  export type CertificationScalarWhereInput = {
    AND?: CertificationScalarWhereInput | CertificationScalarWhereInput[]
    OR?: CertificationScalarWhereInput[]
    NOT?: CertificationScalarWhereInput | CertificationScalarWhereInput[]
    id?: IntFilter<"Certification"> | number
    createdAt?: DateTimeFilter<"Certification"> | Date | string
    updatedAt?: DateTimeFilter<"Certification"> | Date | string
    name?: StringFilter<"Certification"> | string
    code?: StringNullableFilter<"Certification"> | string | null
    category?: EnumCertificationCategoryFilter<"Certification"> | $Enums.CertificationCategory
    issuer?: StringNullableFilter<"Certification"> | string | null
    validFrom?: DateTimeNullableFilter<"Certification"> | Date | string | null
    validUntil?: DateTimeNullableFilter<"Certification"> | Date | string | null
    certificateNumber?: StringNullableFilter<"Certification"> | string | null
    certificateFile?: StringNullableFilter<"Certification"> | string | null
    description?: StringNullableFilter<"Certification"> | string | null
    isActive?: BoolFilter<"Certification"> | boolean
    companyId?: IntFilter<"Certification"> | number
  }

  export type UserCreateWithoutSentMessagesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutSentMessagesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutSentMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
  }

  export type UserCreateWithoutReceivedMessagesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutReceivedMessagesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutReceivedMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
  }

  export type OrderCreateWithoutMessagesInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutMessagesInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutMessagesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
  }

  export type SampleCreateWithoutMessagesInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutMessagesInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutMessagesInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutMessagesInput, SampleUncheckedCreateWithoutMessagesInput>
  }

  export type CompanyCreateWithoutMessagesInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMessagesInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMessagesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMessagesInput, CompanyUncheckedCreateWithoutMessagesInput>
  }

  export type UserUpsertWithoutSentMessagesInput = {
    update: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateWithoutSentMessagesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutSentMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUpsertWithoutReceivedMessagesInput = {
    update: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserUpdateWithoutReceivedMessagesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type OrderUpsertWithoutMessagesInput = {
    update: XOR<OrderUpdateWithoutMessagesInput, OrderUncheckedUpdateWithoutMessagesInput>
    create: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutMessagesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutMessagesInput, OrderUncheckedUpdateWithoutMessagesInput>
  }

  export type OrderUpdateWithoutMessagesInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type SampleUpsertWithoutMessagesInput = {
    update: XOR<SampleUpdateWithoutMessagesInput, SampleUncheckedUpdateWithoutMessagesInput>
    create: XOR<SampleCreateWithoutMessagesInput, SampleUncheckedCreateWithoutMessagesInput>
    where?: SampleWhereInput
  }

  export type SampleUpdateToOneWithWhereWithoutMessagesInput = {
    where?: SampleWhereInput
    data: XOR<SampleUpdateWithoutMessagesInput, SampleUncheckedUpdateWithoutMessagesInput>
  }

  export type SampleUpdateWithoutMessagesInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type CompanyUpsertWithoutMessagesInput = {
    update: XOR<CompanyUpdateWithoutMessagesInput, CompanyUncheckedUpdateWithoutMessagesInput>
    create: XOR<CompanyCreateWithoutMessagesInput, CompanyUncheckedCreateWithoutMessagesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMessagesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMessagesInput, CompanyUncheckedUpdateWithoutMessagesInput>
  }

  export type CompanyUpdateWithoutMessagesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type OrderCreateWithoutProductionTrackingInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutProductionTrackingInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutProductionTrackingInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutProductionTrackingInput, OrderUncheckedCreateWithoutProductionTrackingInput>
  }

  export type SampleCreateWithoutProductionTrackingInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutProductionTrackingInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutProductionTrackingInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutProductionTrackingInput, SampleUncheckedCreateWithoutProductionTrackingInput>
  }

  export type CompanyCreateWithoutProductionTrackingInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutProductionTrackingInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutProductionTrackingInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutProductionTrackingInput, CompanyUncheckedCreateWithoutProductionTrackingInput>
  }

  export type WorkshopCreateWithoutSewingProductionsInput = {
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    owner: UserCreateNestedOneWithoutOwnedWorkshopsInput
    packagingProductions?: ProductionTrackingCreateNestedManyWithoutPackagingWorkshopInput
  }

  export type WorkshopUncheckedCreateWithoutSewingProductionsInput = {
    id?: number
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    ownerId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    packagingProductions?: ProductionTrackingUncheckedCreateNestedManyWithoutPackagingWorkshopInput
  }

  export type WorkshopCreateOrConnectWithoutSewingProductionsInput = {
    where: WorkshopWhereUniqueInput
    create: XOR<WorkshopCreateWithoutSewingProductionsInput, WorkshopUncheckedCreateWithoutSewingProductionsInput>
  }

  export type WorkshopCreateWithoutPackagingProductionsInput = {
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    owner: UserCreateNestedOneWithoutOwnedWorkshopsInput
    sewingProductions?: ProductionTrackingCreateNestedManyWithoutSewingWorkshopInput
  }

  export type WorkshopUncheckedCreateWithoutPackagingProductionsInput = {
    id?: number
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    ownerId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sewingProductions?: ProductionTrackingUncheckedCreateNestedManyWithoutSewingWorkshopInput
  }

  export type WorkshopCreateOrConnectWithoutPackagingProductionsInput = {
    where: WorkshopWhereUniqueInput
    create: XOR<WorkshopCreateWithoutPackagingProductionsInput, WorkshopUncheckedCreateWithoutPackagingProductionsInput>
  }

  export type ProductionStageUpdateCreateWithoutProductionInput = {
    stage: $Enums.ProductionStage
    status?: $Enums.StageStatus
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    estimatedDays?: number | null
    notes?: string | null
    photos?: string | null
    isRevision?: boolean
    delayReason?: string | null
    extraDays?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionStageUpdateUncheckedCreateWithoutProductionInput = {
    id?: number
    stage: $Enums.ProductionStage
    status?: $Enums.StageStatus
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    estimatedDays?: number | null
    notes?: string | null
    photos?: string | null
    isRevision?: boolean
    delayReason?: string | null
    extraDays?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionStageUpdateCreateOrConnectWithoutProductionInput = {
    where: ProductionStageUpdateWhereUniqueInput
    create: XOR<ProductionStageUpdateCreateWithoutProductionInput, ProductionStageUpdateUncheckedCreateWithoutProductionInput>
  }

  export type ProductionStageUpdateCreateManyProductionInputEnvelope = {
    data: ProductionStageUpdateCreateManyProductionInput | ProductionStageUpdateCreateManyProductionInput[]
    skipDuplicates?: boolean
  }

  export type QualityControlCreateWithoutProductionInput = {
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    inspector: UserCreateNestedOneWithoutQualityInspectionsInput
  }

  export type QualityControlUncheckedCreateWithoutProductionInput = {
    id?: number
    inspectorId: number
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualityControlCreateOrConnectWithoutProductionInput = {
    where: QualityControlWhereUniqueInput
    create: XOR<QualityControlCreateWithoutProductionInput, QualityControlUncheckedCreateWithoutProductionInput>
  }

  export type QualityControlCreateManyProductionInputEnvelope = {
    data: QualityControlCreateManyProductionInput | QualityControlCreateManyProductionInput[]
    skipDuplicates?: boolean
  }

  export type ProductionRevisionCreateWithoutProductionInput = {
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    requestedBy: UserCreateNestedOneWithoutRevisionRequestsInput
  }

  export type ProductionRevisionUncheckedCreateWithoutProductionInput = {
    id?: number
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    requestedById: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionRevisionCreateOrConnectWithoutProductionInput = {
    where: ProductionRevisionWhereUniqueInput
    create: XOR<ProductionRevisionCreateWithoutProductionInput, ProductionRevisionUncheckedCreateWithoutProductionInput>
  }

  export type ProductionRevisionCreateManyProductionInputEnvelope = {
    data: ProductionRevisionCreateManyProductionInput | ProductionRevisionCreateManyProductionInput[]
    skipDuplicates?: boolean
  }

  export type RevisionCreateWithoutProductionTrackingInput = {
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutRevisionsInput
    sample?: SampleCreateNestedOneWithoutRevisionsInput
  }

  export type RevisionUncheckedCreateWithoutProductionTrackingInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RevisionCreateOrConnectWithoutProductionTrackingInput = {
    where: RevisionWhereUniqueInput
    create: XOR<RevisionCreateWithoutProductionTrackingInput, RevisionUncheckedCreateWithoutProductionTrackingInput>
  }

  export type RevisionCreateManyProductionTrackingInputEnvelope = {
    data: RevisionCreateManyProductionTrackingInput | RevisionCreateManyProductionTrackingInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutProductionTrackingInput = {
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutTasksInput
    assignedTo?: UserCreateNestedOneWithoutAssignedTasksInput
    collection?: CollectionCreateNestedOneWithoutTasksInput
    sample?: SampleCreateNestedOneWithoutTasksInput
    order?: OrderCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutProductionTrackingInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateOrConnectWithoutProductionTrackingInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutProductionTrackingInput, TaskUncheckedCreateWithoutProductionTrackingInput>
  }

  export type TaskCreateManyProductionTrackingInputEnvelope = {
    data: TaskCreateManyProductionTrackingInput | TaskCreateManyProductionTrackingInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutProductionTrackingInput = {
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
    order?: OrderCreateNestedOneWithoutNotificationsInput
    sample?: SampleCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutProductionTrackingInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutProductionTrackingInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutProductionTrackingInput, NotificationUncheckedCreateWithoutProductionTrackingInput>
  }

  export type NotificationCreateManyProductionTrackingInputEnvelope = {
    data: NotificationCreateManyProductionTrackingInput | NotificationCreateManyProductionTrackingInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithoutProductionTrackingInput = {
    update: XOR<OrderUpdateWithoutProductionTrackingInput, OrderUncheckedUpdateWithoutProductionTrackingInput>
    create: XOR<OrderCreateWithoutProductionTrackingInput, OrderUncheckedCreateWithoutProductionTrackingInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutProductionTrackingInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutProductionTrackingInput, OrderUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type OrderUpdateWithoutProductionTrackingInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type SampleUpsertWithoutProductionTrackingInput = {
    update: XOR<SampleUpdateWithoutProductionTrackingInput, SampleUncheckedUpdateWithoutProductionTrackingInput>
    create: XOR<SampleCreateWithoutProductionTrackingInput, SampleUncheckedCreateWithoutProductionTrackingInput>
    where?: SampleWhereInput
  }

  export type SampleUpdateToOneWithWhereWithoutProductionTrackingInput = {
    where?: SampleWhereInput
    data: XOR<SampleUpdateWithoutProductionTrackingInput, SampleUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type SampleUpdateWithoutProductionTrackingInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type CompanyUpsertWithoutProductionTrackingInput = {
    update: XOR<CompanyUpdateWithoutProductionTrackingInput, CompanyUncheckedUpdateWithoutProductionTrackingInput>
    create: XOR<CompanyCreateWithoutProductionTrackingInput, CompanyUncheckedCreateWithoutProductionTrackingInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutProductionTrackingInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutProductionTrackingInput, CompanyUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type CompanyUpdateWithoutProductionTrackingInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type WorkshopUpsertWithoutSewingProductionsInput = {
    update: XOR<WorkshopUpdateWithoutSewingProductionsInput, WorkshopUncheckedUpdateWithoutSewingProductionsInput>
    create: XOR<WorkshopCreateWithoutSewingProductionsInput, WorkshopUncheckedCreateWithoutSewingProductionsInput>
    where?: WorkshopWhereInput
  }

  export type WorkshopUpdateToOneWithWhereWithoutSewingProductionsInput = {
    where?: WorkshopWhereInput
    data: XOR<WorkshopUpdateWithoutSewingProductionsInput, WorkshopUncheckedUpdateWithoutSewingProductionsInput>
  }

  export type WorkshopUpdateWithoutSewingProductionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneRequiredWithoutOwnedWorkshopsNestedInput
    packagingProductions?: ProductionTrackingUpdateManyWithoutPackagingWorkshopNestedInput
  }

  export type WorkshopUncheckedUpdateWithoutSewingProductionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    ownerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    packagingProductions?: ProductionTrackingUncheckedUpdateManyWithoutPackagingWorkshopNestedInput
  }

  export type WorkshopUpsertWithoutPackagingProductionsInput = {
    update: XOR<WorkshopUpdateWithoutPackagingProductionsInput, WorkshopUncheckedUpdateWithoutPackagingProductionsInput>
    create: XOR<WorkshopCreateWithoutPackagingProductionsInput, WorkshopUncheckedCreateWithoutPackagingProductionsInput>
    where?: WorkshopWhereInput
  }

  export type WorkshopUpdateToOneWithWhereWithoutPackagingProductionsInput = {
    where?: WorkshopWhereInput
    data: XOR<WorkshopUpdateWithoutPackagingProductionsInput, WorkshopUncheckedUpdateWithoutPackagingProductionsInput>
  }

  export type WorkshopUpdateWithoutPackagingProductionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneRequiredWithoutOwnedWorkshopsNestedInput
    sewingProductions?: ProductionTrackingUpdateManyWithoutSewingWorkshopNestedInput
  }

  export type WorkshopUncheckedUpdateWithoutPackagingProductionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    ownerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sewingProductions?: ProductionTrackingUncheckedUpdateManyWithoutSewingWorkshopNestedInput
  }

  export type ProductionStageUpdateUpsertWithWhereUniqueWithoutProductionInput = {
    where: ProductionStageUpdateWhereUniqueInput
    update: XOR<ProductionStageUpdateUpdateWithoutProductionInput, ProductionStageUpdateUncheckedUpdateWithoutProductionInput>
    create: XOR<ProductionStageUpdateCreateWithoutProductionInput, ProductionStageUpdateUncheckedCreateWithoutProductionInput>
  }

  export type ProductionStageUpdateUpdateWithWhereUniqueWithoutProductionInput = {
    where: ProductionStageUpdateWhereUniqueInput
    data: XOR<ProductionStageUpdateUpdateWithoutProductionInput, ProductionStageUpdateUncheckedUpdateWithoutProductionInput>
  }

  export type ProductionStageUpdateUpdateManyWithWhereWithoutProductionInput = {
    where: ProductionStageUpdateScalarWhereInput
    data: XOR<ProductionStageUpdateUpdateManyMutationInput, ProductionStageUpdateUncheckedUpdateManyWithoutProductionInput>
  }

  export type ProductionStageUpdateScalarWhereInput = {
    AND?: ProductionStageUpdateScalarWhereInput | ProductionStageUpdateScalarWhereInput[]
    OR?: ProductionStageUpdateScalarWhereInput[]
    NOT?: ProductionStageUpdateScalarWhereInput | ProductionStageUpdateScalarWhereInput[]
    id?: IntFilter<"ProductionStageUpdate"> | number
    productionId?: IntFilter<"ProductionStageUpdate"> | number
    stage?: EnumProductionStageFilter<"ProductionStageUpdate"> | $Enums.ProductionStage
    status?: EnumStageStatusFilter<"ProductionStageUpdate"> | $Enums.StageStatus
    actualStartDate?: DateTimeNullableFilter<"ProductionStageUpdate"> | Date | string | null
    actualEndDate?: DateTimeNullableFilter<"ProductionStageUpdate"> | Date | string | null
    estimatedDays?: IntNullableFilter<"ProductionStageUpdate"> | number | null
    notes?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    photos?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    isRevision?: BoolFilter<"ProductionStageUpdate"> | boolean
    delayReason?: StringNullableFilter<"ProductionStageUpdate"> | string | null
    extraDays?: IntFilter<"ProductionStageUpdate"> | number
    createdAt?: DateTimeFilter<"ProductionStageUpdate"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionStageUpdate"> | Date | string
  }

  export type QualityControlUpsertWithWhereUniqueWithoutProductionInput = {
    where: QualityControlWhereUniqueInput
    update: XOR<QualityControlUpdateWithoutProductionInput, QualityControlUncheckedUpdateWithoutProductionInput>
    create: XOR<QualityControlCreateWithoutProductionInput, QualityControlUncheckedCreateWithoutProductionInput>
  }

  export type QualityControlUpdateWithWhereUniqueWithoutProductionInput = {
    where: QualityControlWhereUniqueInput
    data: XOR<QualityControlUpdateWithoutProductionInput, QualityControlUncheckedUpdateWithoutProductionInput>
  }

  export type QualityControlUpdateManyWithWhereWithoutProductionInput = {
    where: QualityControlScalarWhereInput
    data: XOR<QualityControlUpdateManyMutationInput, QualityControlUncheckedUpdateManyWithoutProductionInput>
  }

  export type QualityControlScalarWhereInput = {
    AND?: QualityControlScalarWhereInput | QualityControlScalarWhereInput[]
    OR?: QualityControlScalarWhereInput[]
    NOT?: QualityControlScalarWhereInput | QualityControlScalarWhereInput[]
    id?: IntFilter<"QualityControl"> | number
    productionId?: IntFilter<"QualityControl"> | number
    inspectorId?: IntFilter<"QualityControl"> | number
    checkDate?: DateTimeFilter<"QualityControl"> | Date | string
    result?: EnumQualityResultFilter<"QualityControl"> | $Enums.QualityResult
    score?: IntNullableFilter<"QualityControl"> | number | null
    notes?: StringNullableFilter<"QualityControl"> | string | null
    photos?: StringNullableFilter<"QualityControl"> | string | null
    fabricDefects?: BoolFilter<"QualityControl"> | boolean
    sewingDefects?: BoolFilter<"QualityControl"> | boolean
    measureDefects?: BoolFilter<"QualityControl"> | boolean
    finishingDefects?: BoolFilter<"QualityControl"> | boolean
    createdAt?: DateTimeFilter<"QualityControl"> | Date | string
    updatedAt?: DateTimeFilter<"QualityControl"> | Date | string
  }

  export type ProductionRevisionUpsertWithWhereUniqueWithoutProductionInput = {
    where: ProductionRevisionWhereUniqueInput
    update: XOR<ProductionRevisionUpdateWithoutProductionInput, ProductionRevisionUncheckedUpdateWithoutProductionInput>
    create: XOR<ProductionRevisionCreateWithoutProductionInput, ProductionRevisionUncheckedCreateWithoutProductionInput>
  }

  export type ProductionRevisionUpdateWithWhereUniqueWithoutProductionInput = {
    where: ProductionRevisionWhereUniqueInput
    data: XOR<ProductionRevisionUpdateWithoutProductionInput, ProductionRevisionUncheckedUpdateWithoutProductionInput>
  }

  export type ProductionRevisionUpdateManyWithWhereWithoutProductionInput = {
    where: ProductionRevisionScalarWhereInput
    data: XOR<ProductionRevisionUpdateManyMutationInput, ProductionRevisionUncheckedUpdateManyWithoutProductionInput>
  }

  export type ProductionRevisionScalarWhereInput = {
    AND?: ProductionRevisionScalarWhereInput | ProductionRevisionScalarWhereInput[]
    OR?: ProductionRevisionScalarWhereInput[]
    NOT?: ProductionRevisionScalarWhereInput | ProductionRevisionScalarWhereInput[]
    id?: IntFilter<"ProductionRevision"> | number
    productionId?: IntFilter<"ProductionRevision"> | number
    reason?: StringFilter<"ProductionRevision"> | string
    description?: StringNullableFilter<"ProductionRevision"> | string | null
    extraDays?: IntFilter<"ProductionRevision"> | number
    extraCost?: FloatFilter<"ProductionRevision"> | number
    isApproved?: BoolFilter<"ProductionRevision"> | boolean
    requestedById?: IntFilter<"ProductionRevision"> | number
    createdAt?: DateTimeFilter<"ProductionRevision"> | Date | string
    updatedAt?: DateTimeFilter<"ProductionRevision"> | Date | string
  }

  export type RevisionUpsertWithWhereUniqueWithoutProductionTrackingInput = {
    where: RevisionWhereUniqueInput
    update: XOR<RevisionUpdateWithoutProductionTrackingInput, RevisionUncheckedUpdateWithoutProductionTrackingInput>
    create: XOR<RevisionCreateWithoutProductionTrackingInput, RevisionUncheckedCreateWithoutProductionTrackingInput>
  }

  export type RevisionUpdateWithWhereUniqueWithoutProductionTrackingInput = {
    where: RevisionWhereUniqueInput
    data: XOR<RevisionUpdateWithoutProductionTrackingInput, RevisionUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type RevisionUpdateManyWithWhereWithoutProductionTrackingInput = {
    where: RevisionScalarWhereInput
    data: XOR<RevisionUpdateManyMutationInput, RevisionUncheckedUpdateManyWithoutProductionTrackingInput>
  }

  export type RevisionScalarWhereInput = {
    AND?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
    OR?: RevisionScalarWhereInput[]
    NOT?: RevisionScalarWhereInput | RevisionScalarWhereInput[]
    id?: IntFilter<"Revision"> | number
    orderId?: IntNullableFilter<"Revision"> | number | null
    sampleId?: IntNullableFilter<"Revision"> | number | null
    productionTrackingId?: IntNullableFilter<"Revision"> | number | null
    revisionNumber?: IntFilter<"Revision"> | number
    requestMessage?: StringNullableFilter<"Revision"> | string | null
    responseMessage?: StringNullableFilter<"Revision"> | string | null
    status?: StringFilter<"Revision"> | string
    requestedAt?: DateTimeFilter<"Revision"> | Date | string
    completedAt?: DateTimeNullableFilter<"Revision"> | Date | string | null
    createdAt?: DateTimeFilter<"Revision"> | Date | string
    updatedAt?: DateTimeFilter<"Revision"> | Date | string
  }

  export type TaskUpsertWithWhereUniqueWithoutProductionTrackingInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutProductionTrackingInput, TaskUncheckedUpdateWithoutProductionTrackingInput>
    create: XOR<TaskCreateWithoutProductionTrackingInput, TaskUncheckedCreateWithoutProductionTrackingInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutProductionTrackingInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutProductionTrackingInput, TaskUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type TaskUpdateManyWithWhereWithoutProductionTrackingInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutProductionTrackingInput>
  }

  export type TaskScalarWhereInput = {
    AND?: TaskScalarWhereInput | TaskScalarWhereInput[]
    OR?: TaskScalarWhereInput[]
    NOT?: TaskScalarWhereInput | TaskScalarWhereInput[]
    id?: IntFilter<"Task"> | number
    title?: StringFilter<"Task"> | string
    description?: StringNullableFilter<"Task"> | string | null
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"Task"> | $Enums.TaskPriority
    type?: EnumTaskTypeFilter<"Task"> | $Enums.TaskType
    relatedStatus?: StringNullableFilter<"Task"> | string | null
    targetStatus?: StringNullableFilter<"Task"> | string | null
    entityType?: StringNullableFilter<"Task"> | string | null
    productionStage?: StringNullableFilter<"Task"> | string | null
    userId?: IntFilter<"Task"> | number
    assignedToId?: IntNullableFilter<"Task"> | number | null
    collectionId?: IntNullableFilter<"Task"> | number | null
    sampleId?: IntNullableFilter<"Task"> | number | null
    orderId?: IntNullableFilter<"Task"> | number | null
    productionTrackingId?: IntNullableFilter<"Task"> | number | null
    dueDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    notes?: StringNullableFilter<"Task"> | string | null
    assignedBy?: IntNullableFilter<"Task"> | number | null
    actionData?: JsonNullableFilter<"Task">
  }

  export type NotificationUpsertWithWhereUniqueWithoutProductionTrackingInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutProductionTrackingInput, NotificationUncheckedUpdateWithoutProductionTrackingInput>
    create: XOR<NotificationCreateWithoutProductionTrackingInput, NotificationUncheckedCreateWithoutProductionTrackingInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutProductionTrackingInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutProductionTrackingInput, NotificationUncheckedUpdateWithoutProductionTrackingInput>
  }

  export type NotificationUpdateManyWithWhereWithoutProductionTrackingInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutProductionTrackingInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: IntFilter<"Notification"> | number
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    link?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    userId?: IntFilter<"Notification"> | number
    orderId?: IntNullableFilter<"Notification"> | number | null
    sampleId?: IntNullableFilter<"Notification"> | number | null
    productionTrackingId?: IntNullableFilter<"Notification"> | number | null
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type OrderCreateWithoutRevisionsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutRevisionsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutRevisionsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutRevisionsInput, OrderUncheckedCreateWithoutRevisionsInput>
  }

  export type SampleCreateWithoutRevisionsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutRevisionsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutRevisionsInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutRevisionsInput, SampleUncheckedCreateWithoutRevisionsInput>
  }

  export type ProductionTrackingCreateWithoutRevisionsInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutRevisionsInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutRevisionsInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutRevisionsInput, ProductionTrackingUncheckedCreateWithoutRevisionsInput>
  }

  export type OrderUpsertWithoutRevisionsInput = {
    update: XOR<OrderUpdateWithoutRevisionsInput, OrderUncheckedUpdateWithoutRevisionsInput>
    create: XOR<OrderCreateWithoutRevisionsInput, OrderUncheckedCreateWithoutRevisionsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutRevisionsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutRevisionsInput, OrderUncheckedUpdateWithoutRevisionsInput>
  }

  export type OrderUpdateWithoutRevisionsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutRevisionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type SampleUpsertWithoutRevisionsInput = {
    update: XOR<SampleUpdateWithoutRevisionsInput, SampleUncheckedUpdateWithoutRevisionsInput>
    create: XOR<SampleCreateWithoutRevisionsInput, SampleUncheckedCreateWithoutRevisionsInput>
    where?: SampleWhereInput
  }

  export type SampleUpdateToOneWithWhereWithoutRevisionsInput = {
    where?: SampleWhereInput
    data: XOR<SampleUpdateWithoutRevisionsInput, SampleUncheckedUpdateWithoutRevisionsInput>
  }

  export type SampleUpdateWithoutRevisionsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutRevisionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type ProductionTrackingUpsertWithoutRevisionsInput = {
    update: XOR<ProductionTrackingUpdateWithoutRevisionsInput, ProductionTrackingUncheckedUpdateWithoutRevisionsInput>
    create: XOR<ProductionTrackingCreateWithoutRevisionsInput, ProductionTrackingUncheckedCreateWithoutRevisionsInput>
    where?: ProductionTrackingWhereInput
  }

  export type ProductionTrackingUpdateToOneWithWhereWithoutRevisionsInput = {
    where?: ProductionTrackingWhereInput
    data: XOR<ProductionTrackingUpdateWithoutRevisionsInput, ProductionTrackingUncheckedUpdateWithoutRevisionsInput>
  }

  export type ProductionTrackingUpdateWithoutRevisionsInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutRevisionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type CompanyCreateWithoutEmployeesInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutEmployeesInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutEmployeesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutEmployeesInput, CompanyUncheckedCreateWithoutEmployeesInput>
  }

  export type CompanyCreateWithoutOwnerInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutOwnerInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutOwnerInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput>
  }

  export type CompanyCreateManyOwnerInputEnvelope = {
    data: CompanyCreateManyOwnerInput | CompanyCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSenderInput = {
    content: string
    isRead?: boolean
    type?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
    order?: OrderCreateNestedOneWithoutMessagesInput
    sample?: SampleCreateNestedOneWithoutMessagesInput
    company?: CompanyCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: number
    content: string
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutReceiverInput = {
    content: string
    isRead?: boolean
    type?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
    order?: OrderCreateNestedOneWithoutMessagesInput
    sample?: SampleCreateNestedOneWithoutMessagesInput
    company?: CompanyCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutReceiverInput = {
    id?: number
    content: string
    senderId: number
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type MessageCreateOrConnectWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageCreateManyReceiverInputEnvelope = {
    data: MessageCreateManyReceiverInput | MessageCreateManyReceiverInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutAuthorInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    collections?: CollectionCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    parentCategory?: CategoryCreateNestedOneWithoutSubCategoriesInput
    company?: CompanyCreateNestedOneWithoutCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutAuthorInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    parentCategoryId?: number | null
    companyId?: number | null
    collections?: CollectionUncheckedCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
  }

  export type CategoryCreateOrConnectWithoutAuthorInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutAuthorInput, CategoryUncheckedCreateWithoutAuthorInput>
  }

  export type CategoryCreateManyAuthorInputEnvelope = {
    data: CategoryCreateManyAuthorInput | CategoryCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type CollectionCreateWithoutAuthorInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutAuthorInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutAuthorInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutAuthorInput, CollectionUncheckedCreateWithoutAuthorInput>
  }

  export type CollectionCreateManyAuthorInputEnvelope = {
    data: CollectionCreateManyAuthorInput | CollectionCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type SampleCreateWithoutCustomerInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutCustomerInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutCustomerInput, SampleUncheckedCreateWithoutCustomerInput>
  }

  export type SampleCreateManyCustomerInputEnvelope = {
    data: SampleCreateManyCustomerInput | SampleCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutCustomerInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderCreateManyCustomerInputEnvelope = {
    data: OrderCreateManyCustomerInput | OrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type QuestionCreateWithoutCustomerInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collection: CollectionCreateNestedOneWithoutQuestionsInput
    manufacture: UserCreateNestedOneWithoutManufactureQuestionsInput
  }

  export type QuestionUncheckedCreateWithoutCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collectionId: number
    manufactureId: number
  }

  export type QuestionCreateOrConnectWithoutCustomerInput = {
    where: QuestionWhereUniqueInput
    create: XOR<QuestionCreateWithoutCustomerInput, QuestionUncheckedCreateWithoutCustomerInput>
  }

  export type QuestionCreateManyCustomerInputEnvelope = {
    data: QuestionCreateManyCustomerInput | QuestionCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutCustomerInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    collection: CollectionCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    collectionId: number
  }

  export type ReviewCreateOrConnectWithoutCustomerInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutCustomerInput, ReviewUncheckedCreateWithoutCustomerInput>
  }

  export type ReviewCreateManyCustomerInputEnvelope = {
    data: ReviewCreateManyCustomerInput | ReviewCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type SampleCreateWithoutManufactureInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutManufactureInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutManufactureInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutManufactureInput, SampleUncheckedCreateWithoutManufactureInput>
  }

  export type SampleCreateManyManufactureInputEnvelope = {
    data: SampleCreateManyManufactureInput | SampleCreateManyManufactureInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutManufactureInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutManufactureInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutManufactureInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutManufactureInput, OrderUncheckedCreateWithoutManufactureInput>
  }

  export type OrderCreateManyManufactureInputEnvelope = {
    data: OrderCreateManyManufactureInput | OrderCreateManyManufactureInput[]
    skipDuplicates?: boolean
  }

  export type QuestionCreateWithoutManufactureInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collection: CollectionCreateNestedOneWithoutQuestionsInput
    customer: UserCreateNestedOneWithoutCustomerQuestionsInput
  }

  export type QuestionUncheckedCreateWithoutManufactureInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collectionId: number
    customerId: number
  }

  export type QuestionCreateOrConnectWithoutManufactureInput = {
    where: QuestionWhereUniqueInput
    create: XOR<QuestionCreateWithoutManufactureInput, QuestionUncheckedCreateWithoutManufactureInput>
  }

  export type QuestionCreateManyManufactureInputEnvelope = {
    data: QuestionCreateManyManufactureInput | QuestionCreateManyManufactureInput[]
    skipDuplicates?: boolean
  }

  export type SampleProductionCreateWithoutUpdatedByInput = {
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    sample: SampleCreateNestedOneWithoutProductionHistoryInput
  }

  export type SampleProductionUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    sampleId: number
  }

  export type SampleProductionCreateOrConnectWithoutUpdatedByInput = {
    where: SampleProductionWhereUniqueInput
    create: XOR<SampleProductionCreateWithoutUpdatedByInput, SampleProductionUncheckedCreateWithoutUpdatedByInput>
  }

  export type SampleProductionCreateManyUpdatedByInputEnvelope = {
    data: SampleProductionCreateManyUpdatedByInput | SampleProductionCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type OrderProductionCreateWithoutUpdatedByInput = {
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    order: OrderCreateNestedOneWithoutProductionHistoryInput
  }

  export type OrderProductionUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    orderId: number
  }

  export type OrderProductionCreateOrConnectWithoutUpdatedByInput = {
    where: OrderProductionWhereUniqueInput
    create: XOR<OrderProductionCreateWithoutUpdatedByInput, OrderProductionUncheckedCreateWithoutUpdatedByInput>
  }

  export type OrderProductionCreateManyUpdatedByInputEnvelope = {
    data: OrderProductionCreateManyUpdatedByInput | OrderProductionCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type QualityControlCreateWithoutInspectorInput = {
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    production: ProductionTrackingCreateNestedOneWithoutQualityControlsInput
  }

  export type QualityControlUncheckedCreateWithoutInspectorInput = {
    id?: number
    productionId: number
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualityControlCreateOrConnectWithoutInspectorInput = {
    where: QualityControlWhereUniqueInput
    create: XOR<QualityControlCreateWithoutInspectorInput, QualityControlUncheckedCreateWithoutInspectorInput>
  }

  export type QualityControlCreateManyInspectorInputEnvelope = {
    data: QualityControlCreateManyInspectorInput | QualityControlCreateManyInspectorInput[]
    skipDuplicates?: boolean
  }

  export type WorkshopCreateWithoutOwnerInput = {
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sewingProductions?: ProductionTrackingCreateNestedManyWithoutSewingWorkshopInput
    packagingProductions?: ProductionTrackingCreateNestedManyWithoutPackagingWorkshopInput
  }

  export type WorkshopUncheckedCreateWithoutOwnerInput = {
    id?: number
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sewingProductions?: ProductionTrackingUncheckedCreateNestedManyWithoutSewingWorkshopInput
    packagingProductions?: ProductionTrackingUncheckedCreateNestedManyWithoutPackagingWorkshopInput
  }

  export type WorkshopCreateOrConnectWithoutOwnerInput = {
    where: WorkshopWhereUniqueInput
    create: XOR<WorkshopCreateWithoutOwnerInput, WorkshopUncheckedCreateWithoutOwnerInput>
  }

  export type WorkshopCreateManyOwnerInputEnvelope = {
    data: WorkshopCreateManyOwnerInput | WorkshopCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type ProductionRevisionCreateWithoutRequestedByInput = {
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    production: ProductionTrackingCreateNestedOneWithoutProductionRevisionsInput
  }

  export type ProductionRevisionUncheckedCreateWithoutRequestedByInput = {
    id?: number
    productionId: number
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionRevisionCreateOrConnectWithoutRequestedByInput = {
    where: ProductionRevisionWhereUniqueInput
    create: XOR<ProductionRevisionCreateWithoutRequestedByInput, ProductionRevisionUncheckedCreateWithoutRequestedByInput>
  }

  export type ProductionRevisionCreateManyRequestedByInputEnvelope = {
    data: ProductionRevisionCreateManyRequestedByInput | ProductionRevisionCreateManyRequestedByInput[]
    skipDuplicates?: boolean
  }

  export type UserFavoriteCollectionCreateWithoutUserInput = {
    createdAt?: Date | string
    collection: CollectionCreateNestedOneWithoutFavoritedByInput
  }

  export type UserFavoriteCollectionUncheckedCreateWithoutUserInput = {
    id?: number
    createdAt?: Date | string
    collectionId: number
  }

  export type UserFavoriteCollectionCreateOrConnectWithoutUserInput = {
    where: UserFavoriteCollectionWhereUniqueInput
    create: XOR<UserFavoriteCollectionCreateWithoutUserInput, UserFavoriteCollectionUncheckedCreateWithoutUserInput>
  }

  export type UserFavoriteCollectionCreateManyUserInputEnvelope = {
    data: UserFavoriteCollectionCreateManyUserInput | UserFavoriteCollectionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutNotificationsInput
    sample?: SampleCreateNestedOneWithoutNotificationsInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    orderId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutUserInput = {
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    assignedTo?: UserCreateNestedOneWithoutAssignedTasksInput
    collection?: CollectionCreateNestedOneWithoutTasksInput
    sample?: SampleCreateNestedOneWithoutTasksInput
    order?: OrderCreateNestedOneWithoutTasksInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutUserInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateOrConnectWithoutUserInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput>
  }

  export type TaskCreateManyUserInputEnvelope = {
    data: TaskCreateManyUserInput | TaskCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutAssignedToInput = {
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutTasksInput
    collection?: CollectionCreateNestedOneWithoutTasksInput
    sample?: SampleCreateNestedOneWithoutTasksInput
    order?: OrderCreateNestedOneWithoutTasksInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutAssignedToInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateOrConnectWithoutAssignedToInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutAssignedToInput, TaskUncheckedCreateWithoutAssignedToInput>
  }

  export type TaskCreateManyAssignedToInputEnvelope = {
    data: TaskCreateManyAssignedToInput | TaskCreateManyAssignedToInput[]
    skipDuplicates?: boolean
  }

  export type CompanyUpsertWithoutEmployeesInput = {
    update: XOR<CompanyUpdateWithoutEmployeesInput, CompanyUncheckedUpdateWithoutEmployeesInput>
    create: XOR<CompanyCreateWithoutEmployeesInput, CompanyUncheckedCreateWithoutEmployeesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutEmployeesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutEmployeesInput, CompanyUncheckedUpdateWithoutEmployeesInput>
  }

  export type CompanyUpdateWithoutEmployeesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutEmployeesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUpsertWithWhereUniqueWithoutOwnerInput = {
    where: CompanyWhereUniqueInput
    update: XOR<CompanyUpdateWithoutOwnerInput, CompanyUncheckedUpdateWithoutOwnerInput>
    create: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput>
  }

  export type CompanyUpdateWithWhereUniqueWithoutOwnerInput = {
    where: CompanyWhereUniqueInput
    data: XOR<CompanyUpdateWithoutOwnerInput, CompanyUncheckedUpdateWithoutOwnerInput>
  }

  export type CompanyUpdateManyWithWhereWithoutOwnerInput = {
    where: CompanyScalarWhereInput
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyWithoutOwnerInput>
  }

  export type CompanyScalarWhereInput = {
    AND?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    OR?: CompanyScalarWhereInput[]
    NOT?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    id?: IntFilter<"Company"> | number
    name?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    location?: StringNullableFilter<"Company"> | string | null
    website?: StringNullableFilter<"Company"> | string | null
    type?: EnumCompanyTypeFilter<"Company"> | $Enums.CompanyType
    description?: StringNullableFilter<"Company"> | string | null
    ownerId?: IntNullableFilter<"Company"> | number | null
    isActive?: BoolFilter<"Company"> | boolean
    settings?: JsonNullableFilter<"Company">
    logo?: StringNullableFilter<"Company"> | string | null
    coverImage?: StringNullableFilter<"Company"> | string | null
    brandColors?: JsonNullableFilter<"Company">
    socialLinks?: JsonNullableFilter<"Company">
    isPublicProfile?: BoolFilter<"Company"> | boolean
    profileSlug?: StringNullableFilter<"Company"> | string | null
    subscriptionPlan?: EnumSubscriptionPlanFilter<"Company"> | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFilter<"Company"> | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFilter<"Company"> | $Enums.BillingCycle
    maxUsers?: IntFilter<"Company"> | number
    maxSamples?: IntFilter<"Company"> | number
    maxOrders?: IntFilter<"Company"> | number
    maxCollections?: IntFilter<"Company"> | number
    maxStorageGB?: FloatFilter<"Company"> | number
    currentUsers?: IntFilter<"Company"> | number
    currentSamples?: IntFilter<"Company"> | number
    currentOrders?: IntFilter<"Company"> | number
    currentCollections?: IntFilter<"Company"> | number
    currentStorageGB?: FloatFilter<"Company"> | number
    trialStartedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    trialEndsAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    billingEmail?: StringNullableFilter<"Company"> | string | null
    taxId?: StringNullableFilter<"Company"> | string | null
    billingAddress?: StringNullableFilter<"Company"> | string | null
    subscriptionStartedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    currentPeriodStart?: DateTimeNullableFilter<"Company"> | Date | string | null
    currentPeriodEnd?: DateTimeNullableFilter<"Company"> | Date | string | null
    cancelAtPeriodEnd?: BoolFilter<"Company"> | boolean
    cancelledAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    defaultView?: StringNullableFilter<"Company"> | string | null
    enabledModules?: JsonNullableFilter<"Company">
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
  }

  export type MessageUpdateManyWithWhereWithoutReceiverInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutReceiverInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutAuthorInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutAuthorInput, CategoryUncheckedUpdateWithoutAuthorInput>
    create: XOR<CategoryCreateWithoutAuthorInput, CategoryUncheckedCreateWithoutAuthorInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutAuthorInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutAuthorInput, CategoryUncheckedUpdateWithoutAuthorInput>
  }

  export type CategoryUpdateManyWithWhereWithoutAuthorInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutAuthorInput>
  }

  export type CollectionUpsertWithWhereUniqueWithoutAuthorInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutAuthorInput, CollectionUncheckedUpdateWithoutAuthorInput>
    create: XOR<CollectionCreateWithoutAuthorInput, CollectionUncheckedCreateWithoutAuthorInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutAuthorInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutAuthorInput, CollectionUncheckedUpdateWithoutAuthorInput>
  }

  export type CollectionUpdateManyWithWhereWithoutAuthorInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutAuthorInput>
  }

  export type SampleUpsertWithWhereUniqueWithoutCustomerInput = {
    where: SampleWhereUniqueInput
    update: XOR<SampleUpdateWithoutCustomerInput, SampleUncheckedUpdateWithoutCustomerInput>
    create: XOR<SampleCreateWithoutCustomerInput, SampleUncheckedCreateWithoutCustomerInput>
  }

  export type SampleUpdateWithWhereUniqueWithoutCustomerInput = {
    where: SampleWhereUniqueInput
    data: XOR<SampleUpdateWithoutCustomerInput, SampleUncheckedUpdateWithoutCustomerInput>
  }

  export type SampleUpdateManyWithWhereWithoutCustomerInput = {
    where: SampleScalarWhereInput
    data: XOR<SampleUpdateManyMutationInput, SampleUncheckedUpdateManyWithoutCustomerInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
  }

  export type OrderUpdateManyWithWhereWithoutCustomerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type QuestionUpsertWithWhereUniqueWithoutCustomerInput = {
    where: QuestionWhereUniqueInput
    update: XOR<QuestionUpdateWithoutCustomerInput, QuestionUncheckedUpdateWithoutCustomerInput>
    create: XOR<QuestionCreateWithoutCustomerInput, QuestionUncheckedCreateWithoutCustomerInput>
  }

  export type QuestionUpdateWithWhereUniqueWithoutCustomerInput = {
    where: QuestionWhereUniqueInput
    data: XOR<QuestionUpdateWithoutCustomerInput, QuestionUncheckedUpdateWithoutCustomerInput>
  }

  export type QuestionUpdateManyWithWhereWithoutCustomerInput = {
    where: QuestionScalarWhereInput
    data: XOR<QuestionUpdateManyMutationInput, QuestionUncheckedUpdateManyWithoutCustomerInput>
  }

  export type QuestionScalarWhereInput = {
    AND?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
    OR?: QuestionScalarWhereInput[]
    NOT?: QuestionScalarWhereInput | QuestionScalarWhereInput[]
    id?: IntFilter<"Question"> | number
    createdAt?: DateTimeFilter<"Question"> | Date | string
    updatedAt?: DateTimeFilter<"Question"> | Date | string
    question?: StringFilter<"Question"> | string
    answer?: StringNullableFilter<"Question"> | string | null
    isAnswered?: BoolFilter<"Question"> | boolean
    isPublic?: BoolFilter<"Question"> | boolean
    collectionId?: IntFilter<"Question"> | number
    customerId?: IntFilter<"Question"> | number
    manufactureId?: IntFilter<"Question"> | number
  }

  export type ReviewUpsertWithWhereUniqueWithoutCustomerInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutCustomerInput, ReviewUncheckedUpdateWithoutCustomerInput>
    create: XOR<ReviewCreateWithoutCustomerInput, ReviewUncheckedCreateWithoutCustomerInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutCustomerInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutCustomerInput, ReviewUncheckedUpdateWithoutCustomerInput>
  }

  export type ReviewUpdateManyWithWhereWithoutCustomerInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutCustomerInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    rating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    isApproved?: BoolFilter<"Review"> | boolean
    collectionId?: IntFilter<"Review"> | number
    customerId?: IntFilter<"Review"> | number
  }

  export type SampleUpsertWithWhereUniqueWithoutManufactureInput = {
    where: SampleWhereUniqueInput
    update: XOR<SampleUpdateWithoutManufactureInput, SampleUncheckedUpdateWithoutManufactureInput>
    create: XOR<SampleCreateWithoutManufactureInput, SampleUncheckedCreateWithoutManufactureInput>
  }

  export type SampleUpdateWithWhereUniqueWithoutManufactureInput = {
    where: SampleWhereUniqueInput
    data: XOR<SampleUpdateWithoutManufactureInput, SampleUncheckedUpdateWithoutManufactureInput>
  }

  export type SampleUpdateManyWithWhereWithoutManufactureInput = {
    where: SampleScalarWhereInput
    data: XOR<SampleUpdateManyMutationInput, SampleUncheckedUpdateManyWithoutManufactureInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutManufactureInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutManufactureInput, OrderUncheckedUpdateWithoutManufactureInput>
    create: XOR<OrderCreateWithoutManufactureInput, OrderUncheckedCreateWithoutManufactureInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutManufactureInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutManufactureInput, OrderUncheckedUpdateWithoutManufactureInput>
  }

  export type OrderUpdateManyWithWhereWithoutManufactureInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutManufactureInput>
  }

  export type QuestionUpsertWithWhereUniqueWithoutManufactureInput = {
    where: QuestionWhereUniqueInput
    update: XOR<QuestionUpdateWithoutManufactureInput, QuestionUncheckedUpdateWithoutManufactureInput>
    create: XOR<QuestionCreateWithoutManufactureInput, QuestionUncheckedCreateWithoutManufactureInput>
  }

  export type QuestionUpdateWithWhereUniqueWithoutManufactureInput = {
    where: QuestionWhereUniqueInput
    data: XOR<QuestionUpdateWithoutManufactureInput, QuestionUncheckedUpdateWithoutManufactureInput>
  }

  export type QuestionUpdateManyWithWhereWithoutManufactureInput = {
    where: QuestionScalarWhereInput
    data: XOR<QuestionUpdateManyMutationInput, QuestionUncheckedUpdateManyWithoutManufactureInput>
  }

  export type SampleProductionUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: SampleProductionWhereUniqueInput
    update: XOR<SampleProductionUpdateWithoutUpdatedByInput, SampleProductionUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<SampleProductionCreateWithoutUpdatedByInput, SampleProductionUncheckedCreateWithoutUpdatedByInput>
  }

  export type SampleProductionUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: SampleProductionWhereUniqueInput
    data: XOR<SampleProductionUpdateWithoutUpdatedByInput, SampleProductionUncheckedUpdateWithoutUpdatedByInput>
  }

  export type SampleProductionUpdateManyWithWhereWithoutUpdatedByInput = {
    where: SampleProductionScalarWhereInput
    data: XOR<SampleProductionUpdateManyMutationInput, SampleProductionUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type SampleProductionScalarWhereInput = {
    AND?: SampleProductionScalarWhereInput | SampleProductionScalarWhereInput[]
    OR?: SampleProductionScalarWhereInput[]
    NOT?: SampleProductionScalarWhereInput | SampleProductionScalarWhereInput[]
    id?: IntFilter<"SampleProduction"> | number
    createdAt?: DateTimeFilter<"SampleProduction"> | Date | string
    status?: EnumSampleStatusFilter<"SampleProduction"> | $Enums.SampleStatus
    note?: StringNullableFilter<"SampleProduction"> | string | null
    estimatedDays?: IntNullableFilter<"SampleProduction"> | number | null
    actualDate?: DateTimeNullableFilter<"SampleProduction"> | Date | string | null
    sampleId?: IntFilter<"SampleProduction"> | number
    updatedById?: IntFilter<"SampleProduction"> | number
  }

  export type OrderProductionUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: OrderProductionWhereUniqueInput
    update: XOR<OrderProductionUpdateWithoutUpdatedByInput, OrderProductionUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<OrderProductionCreateWithoutUpdatedByInput, OrderProductionUncheckedCreateWithoutUpdatedByInput>
  }

  export type OrderProductionUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: OrderProductionWhereUniqueInput
    data: XOR<OrderProductionUpdateWithoutUpdatedByInput, OrderProductionUncheckedUpdateWithoutUpdatedByInput>
  }

  export type OrderProductionUpdateManyWithWhereWithoutUpdatedByInput = {
    where: OrderProductionScalarWhereInput
    data: XOR<OrderProductionUpdateManyMutationInput, OrderProductionUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type OrderProductionScalarWhereInput = {
    AND?: OrderProductionScalarWhereInput | OrderProductionScalarWhereInput[]
    OR?: OrderProductionScalarWhereInput[]
    NOT?: OrderProductionScalarWhereInput | OrderProductionScalarWhereInput[]
    id?: IntFilter<"OrderProduction"> | number
    createdAt?: DateTimeFilter<"OrderProduction"> | Date | string
    status?: EnumOrderStatusFilter<"OrderProduction"> | $Enums.OrderStatus
    note?: StringNullableFilter<"OrderProduction"> | string | null
    estimatedDays?: IntNullableFilter<"OrderProduction"> | number | null
    actualDate?: DateTimeNullableFilter<"OrderProduction"> | Date | string | null
    orderId?: IntFilter<"OrderProduction"> | number
    updatedById?: IntFilter<"OrderProduction"> | number
  }

  export type QualityControlUpsertWithWhereUniqueWithoutInspectorInput = {
    where: QualityControlWhereUniqueInput
    update: XOR<QualityControlUpdateWithoutInspectorInput, QualityControlUncheckedUpdateWithoutInspectorInput>
    create: XOR<QualityControlCreateWithoutInspectorInput, QualityControlUncheckedCreateWithoutInspectorInput>
  }

  export type QualityControlUpdateWithWhereUniqueWithoutInspectorInput = {
    where: QualityControlWhereUniqueInput
    data: XOR<QualityControlUpdateWithoutInspectorInput, QualityControlUncheckedUpdateWithoutInspectorInput>
  }

  export type QualityControlUpdateManyWithWhereWithoutInspectorInput = {
    where: QualityControlScalarWhereInput
    data: XOR<QualityControlUpdateManyMutationInput, QualityControlUncheckedUpdateManyWithoutInspectorInput>
  }

  export type WorkshopUpsertWithWhereUniqueWithoutOwnerInput = {
    where: WorkshopWhereUniqueInput
    update: XOR<WorkshopUpdateWithoutOwnerInput, WorkshopUncheckedUpdateWithoutOwnerInput>
    create: XOR<WorkshopCreateWithoutOwnerInput, WorkshopUncheckedCreateWithoutOwnerInput>
  }

  export type WorkshopUpdateWithWhereUniqueWithoutOwnerInput = {
    where: WorkshopWhereUniqueInput
    data: XOR<WorkshopUpdateWithoutOwnerInput, WorkshopUncheckedUpdateWithoutOwnerInput>
  }

  export type WorkshopUpdateManyWithWhereWithoutOwnerInput = {
    where: WorkshopScalarWhereInput
    data: XOR<WorkshopUpdateManyMutationInput, WorkshopUncheckedUpdateManyWithoutOwnerInput>
  }

  export type WorkshopScalarWhereInput = {
    AND?: WorkshopScalarWhereInput | WorkshopScalarWhereInput[]
    OR?: WorkshopScalarWhereInput[]
    NOT?: WorkshopScalarWhereInput | WorkshopScalarWhereInput[]
    id?: IntFilter<"Workshop"> | number
    name?: StringFilter<"Workshop"> | string
    type?: EnumWorkshopTypeFilter<"Workshop"> | $Enums.WorkshopType
    capacity?: IntNullableFilter<"Workshop"> | number | null
    location?: StringNullableFilter<"Workshop"> | string | null
    isActive?: BoolFilter<"Workshop"> | boolean
    ownerId?: IntFilter<"Workshop"> | number
    createdAt?: DateTimeFilter<"Workshop"> | Date | string
    updatedAt?: DateTimeFilter<"Workshop"> | Date | string
  }

  export type ProductionRevisionUpsertWithWhereUniqueWithoutRequestedByInput = {
    where: ProductionRevisionWhereUniqueInput
    update: XOR<ProductionRevisionUpdateWithoutRequestedByInput, ProductionRevisionUncheckedUpdateWithoutRequestedByInput>
    create: XOR<ProductionRevisionCreateWithoutRequestedByInput, ProductionRevisionUncheckedCreateWithoutRequestedByInput>
  }

  export type ProductionRevisionUpdateWithWhereUniqueWithoutRequestedByInput = {
    where: ProductionRevisionWhereUniqueInput
    data: XOR<ProductionRevisionUpdateWithoutRequestedByInput, ProductionRevisionUncheckedUpdateWithoutRequestedByInput>
  }

  export type ProductionRevisionUpdateManyWithWhereWithoutRequestedByInput = {
    where: ProductionRevisionScalarWhereInput
    data: XOR<ProductionRevisionUpdateManyMutationInput, ProductionRevisionUncheckedUpdateManyWithoutRequestedByInput>
  }

  export type UserFavoriteCollectionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserFavoriteCollectionWhereUniqueInput
    update: XOR<UserFavoriteCollectionUpdateWithoutUserInput, UserFavoriteCollectionUncheckedUpdateWithoutUserInput>
    create: XOR<UserFavoriteCollectionCreateWithoutUserInput, UserFavoriteCollectionUncheckedCreateWithoutUserInput>
  }

  export type UserFavoriteCollectionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserFavoriteCollectionWhereUniqueInput
    data: XOR<UserFavoriteCollectionUpdateWithoutUserInput, UserFavoriteCollectionUncheckedUpdateWithoutUserInput>
  }

  export type UserFavoriteCollectionUpdateManyWithWhereWithoutUserInput = {
    where: UserFavoriteCollectionScalarWhereInput
    data: XOR<UserFavoriteCollectionUpdateManyMutationInput, UserFavoriteCollectionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserFavoriteCollectionScalarWhereInput = {
    AND?: UserFavoriteCollectionScalarWhereInput | UserFavoriteCollectionScalarWhereInput[]
    OR?: UserFavoriteCollectionScalarWhereInput[]
    NOT?: UserFavoriteCollectionScalarWhereInput | UserFavoriteCollectionScalarWhereInput[]
    id?: IntFilter<"UserFavoriteCollection"> | number
    createdAt?: DateTimeFilter<"UserFavoriteCollection"> | Date | string
    userId?: IntFilter<"UserFavoriteCollection"> | number
    collectionId?: IntFilter<"UserFavoriteCollection"> | number
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutUserInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutUserInput, TaskUncheckedUpdateWithoutUserInput>
    create: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutUserInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutUserInput, TaskUncheckedUpdateWithoutUserInput>
  }

  export type TaskUpdateManyWithWhereWithoutUserInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutUserInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutAssignedToInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutAssignedToInput, TaskUncheckedUpdateWithoutAssignedToInput>
    create: XOR<TaskCreateWithoutAssignedToInput, TaskUncheckedCreateWithoutAssignedToInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutAssignedToInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutAssignedToInput, TaskUncheckedUpdateWithoutAssignedToInput>
  }

  export type TaskUpdateManyWithWhereWithoutAssignedToInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutAssignedToInput>
  }

  export type UserCreateWithoutCategoriesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutCategoriesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutCategoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCategoriesInput, UserUncheckedCreateWithoutCategoriesInput>
  }

  export type CollectionCreateWithoutCategoryInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutCategoryInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutCategoryInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutCategoryInput, CollectionUncheckedCreateWithoutCategoryInput>
  }

  export type CollectionCreateManyCategoryInputEnvelope = {
    data: CollectionCreateManyCategoryInput | CollectionCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutParentCategoryInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    author?: UserCreateNestedOneWithoutCategoriesInput
    collections?: CollectionCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    company?: CompanyCreateNestedOneWithoutCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutParentCategoryInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    companyId?: number | null
    collections?: CollectionUncheckedCreateNestedManyWithoutCategoryInput
    subCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
  }

  export type CategoryCreateOrConnectWithoutParentCategoryInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput>
  }

  export type CategoryCreateManyParentCategoryInputEnvelope = {
    data: CategoryCreateManyParentCategoryInput | CategoryCreateManyParentCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutSubCategoriesInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    author?: UserCreateNestedOneWithoutCategoriesInput
    collections?: CollectionCreateNestedManyWithoutCategoryInput
    parentCategory?: CategoryCreateNestedOneWithoutSubCategoriesInput
    company?: CompanyCreateNestedOneWithoutCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutSubCategoriesInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    parentCategoryId?: number | null
    companyId?: number | null
    collections?: CollectionUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutSubCategoriesInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutSubCategoriesInput, CategoryUncheckedCreateWithoutSubCategoriesInput>
  }

  export type CompanyCreateWithoutCategoriesInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutCategoriesInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutCategoriesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutCategoriesInput, CompanyUncheckedCreateWithoutCategoriesInput>
  }

  export type UserUpsertWithoutCategoriesInput = {
    update: XOR<UserUpdateWithoutCategoriesInput, UserUncheckedUpdateWithoutCategoriesInput>
    create: XOR<UserCreateWithoutCategoriesInput, UserUncheckedCreateWithoutCategoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCategoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCategoriesInput, UserUncheckedUpdateWithoutCategoriesInput>
  }

  export type UserUpdateWithoutCategoriesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type CollectionUpsertWithWhereUniqueWithoutCategoryInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutCategoryInput, CollectionUncheckedUpdateWithoutCategoryInput>
    create: XOR<CollectionCreateWithoutCategoryInput, CollectionUncheckedCreateWithoutCategoryInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutCategoryInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutCategoryInput, CollectionUncheckedUpdateWithoutCategoryInput>
  }

  export type CollectionUpdateManyWithWhereWithoutCategoryInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutCategoryInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutParentCategoryInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutParentCategoryInput, CategoryUncheckedUpdateWithoutParentCategoryInput>
    create: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutParentCategoryInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutParentCategoryInput, CategoryUncheckedUpdateWithoutParentCategoryInput>
  }

  export type CategoryUpdateManyWithWhereWithoutParentCategoryInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutParentCategoryInput>
  }

  export type CategoryUpsertWithoutSubCategoriesInput = {
    update: XOR<CategoryUpdateWithoutSubCategoriesInput, CategoryUncheckedUpdateWithoutSubCategoriesInput>
    create: XOR<CategoryCreateWithoutSubCategoriesInput, CategoryUncheckedCreateWithoutSubCategoriesInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutSubCategoriesInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutSubCategoriesInput, CategoryUncheckedUpdateWithoutSubCategoriesInput>
  }

  export type CategoryUpdateWithoutSubCategoriesInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    author?: UserUpdateOneWithoutCategoriesNestedInput
    collections?: CollectionUpdateManyWithoutCategoryNestedInput
    parentCategory?: CategoryUpdateOneWithoutSubCategoriesNestedInput
    company?: CompanyUpdateOneWithoutCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutSubCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    collections?: CollectionUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CompanyUpsertWithoutCategoriesInput = {
    update: XOR<CompanyUpdateWithoutCategoriesInput, CompanyUncheckedUpdateWithoutCategoriesInput>
    create: XOR<CompanyCreateWithoutCategoriesInput, CompanyUncheckedCreateWithoutCategoriesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutCategoriesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutCategoriesInput, CompanyUncheckedUpdateWithoutCategoriesInput>
  }

  export type CompanyUpdateWithoutCategoriesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CertificationCreateWithoutCollectionsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
    company: CompanyCreateNestedOneWithoutCertificationsInput
  }

  export type CertificationUncheckedCreateWithoutCollectionsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
    companyId: number
  }

  export type CertificationCreateOrConnectWithoutCollectionsInput = {
    where: CertificationWhereUniqueInput
    create: XOR<CertificationCreateWithoutCollectionsInput, CertificationUncheckedCreateWithoutCollectionsInput>
  }

  export type UserFavoriteCollectionCreateWithoutCollectionInput = {
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutFavoriteCollectionsInput
  }

  export type UserFavoriteCollectionUncheckedCreateWithoutCollectionInput = {
    id?: number
    createdAt?: Date | string
    userId: number
  }

  export type UserFavoriteCollectionCreateOrConnectWithoutCollectionInput = {
    where: UserFavoriteCollectionWhereUniqueInput
    create: XOR<UserFavoriteCollectionCreateWithoutCollectionInput, UserFavoriteCollectionUncheckedCreateWithoutCollectionInput>
  }

  export type UserFavoriteCollectionCreateManyCollectionInputEnvelope = {
    data: UserFavoriteCollectionCreateManyCollectionInput | UserFavoriteCollectionCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutCollectionsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    author?: UserCreateNestedOneWithoutCategoriesInput
    subCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    parentCategory?: CategoryCreateNestedOneWithoutSubCategoriesInput
    company?: CompanyCreateNestedOneWithoutCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutCollectionsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    parentCategoryId?: number | null
    companyId?: number | null
    subCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCollectionsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCollectionsInput, CategoryUncheckedCreateWithoutCollectionsInput>
  }

  export type UserCreateWithoutCollectionsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutCollectionsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutCollectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
  }

  export type SampleCreateWithoutCollectionInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutCollectionInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutCollectionInput, SampleUncheckedCreateWithoutCollectionInput>
  }

  export type SampleCreateManyCollectionInputEnvelope = {
    data: SampleCreateManyCollectionInput | SampleCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type SampleCreateWithoutOriginalCollectionInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutOriginalCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutOriginalCollectionInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutOriginalCollectionInput, SampleUncheckedCreateWithoutOriginalCollectionInput>
  }

  export type SampleCreateManyOriginalCollectionInputEnvelope = {
    data: SampleCreateManyOriginalCollectionInput | SampleCreateManyOriginalCollectionInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutCollectionInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCollectionInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCollectionInput, OrderUncheckedCreateWithoutCollectionInput>
  }

  export type OrderCreateManyCollectionInputEnvelope = {
    data: OrderCreateManyCollectionInput | OrderCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type QuestionCreateWithoutCollectionInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    customer: UserCreateNestedOneWithoutCustomerQuestionsInput
    manufacture: UserCreateNestedOneWithoutManufactureQuestionsInput
  }

  export type QuestionUncheckedCreateWithoutCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    customerId: number
    manufactureId: number
  }

  export type QuestionCreateOrConnectWithoutCollectionInput = {
    where: QuestionWhereUniqueInput
    create: XOR<QuestionCreateWithoutCollectionInput, QuestionUncheckedCreateWithoutCollectionInput>
  }

  export type QuestionCreateManyCollectionInputEnvelope = {
    data: QuestionCreateManyCollectionInput | QuestionCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutCollectionInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    customer: UserCreateNestedOneWithoutCustomerReviewsInput
  }

  export type ReviewUncheckedCreateWithoutCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    customerId: number
  }

  export type ReviewCreateOrConnectWithoutCollectionInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutCollectionInput, ReviewUncheckedCreateWithoutCollectionInput>
  }

  export type ReviewCreateManyCollectionInputEnvelope = {
    data: ReviewCreateManyCollectionInput | ReviewCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutCollectionInput = {
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutTasksInput
    assignedTo?: UserCreateNestedOneWithoutAssignedTasksInput
    sample?: SampleCreateNestedOneWithoutTasksInput
    order?: OrderCreateNestedOneWithoutTasksInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutCollectionInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateOrConnectWithoutCollectionInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutCollectionInput, TaskUncheckedCreateWithoutCollectionInput>
  }

  export type TaskCreateManyCollectionInputEnvelope = {
    data: TaskCreateManyCollectionInput | TaskCreateManyCollectionInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutCollectionsInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutCollectionsInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutCollectionsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutCollectionsInput, CompanyUncheckedCreateWithoutCollectionsInput>
  }

  export type CertificationUpsertWithWhereUniqueWithoutCollectionsInput = {
    where: CertificationWhereUniqueInput
    update: XOR<CertificationUpdateWithoutCollectionsInput, CertificationUncheckedUpdateWithoutCollectionsInput>
    create: XOR<CertificationCreateWithoutCollectionsInput, CertificationUncheckedCreateWithoutCollectionsInput>
  }

  export type CertificationUpdateWithWhereUniqueWithoutCollectionsInput = {
    where: CertificationWhereUniqueInput
    data: XOR<CertificationUpdateWithoutCollectionsInput, CertificationUncheckedUpdateWithoutCollectionsInput>
  }

  export type CertificationUpdateManyWithWhereWithoutCollectionsInput = {
    where: CertificationScalarWhereInput
    data: XOR<CertificationUpdateManyMutationInput, CertificationUncheckedUpdateManyWithoutCollectionsInput>
  }

  export type UserFavoriteCollectionUpsertWithWhereUniqueWithoutCollectionInput = {
    where: UserFavoriteCollectionWhereUniqueInput
    update: XOR<UserFavoriteCollectionUpdateWithoutCollectionInput, UserFavoriteCollectionUncheckedUpdateWithoutCollectionInput>
    create: XOR<UserFavoriteCollectionCreateWithoutCollectionInput, UserFavoriteCollectionUncheckedCreateWithoutCollectionInput>
  }

  export type UserFavoriteCollectionUpdateWithWhereUniqueWithoutCollectionInput = {
    where: UserFavoriteCollectionWhereUniqueInput
    data: XOR<UserFavoriteCollectionUpdateWithoutCollectionInput, UserFavoriteCollectionUncheckedUpdateWithoutCollectionInput>
  }

  export type UserFavoriteCollectionUpdateManyWithWhereWithoutCollectionInput = {
    where: UserFavoriteCollectionScalarWhereInput
    data: XOR<UserFavoriteCollectionUpdateManyMutationInput, UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionInput>
  }

  export type CategoryUpsertWithoutCollectionsInput = {
    update: XOR<CategoryUpdateWithoutCollectionsInput, CategoryUncheckedUpdateWithoutCollectionsInput>
    create: XOR<CategoryCreateWithoutCollectionsInput, CategoryUncheckedCreateWithoutCollectionsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutCollectionsInput, CategoryUncheckedUpdateWithoutCollectionsInput>
  }

  export type CategoryUpdateWithoutCollectionsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    author?: UserUpdateOneWithoutCategoriesNestedInput
    subCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    parentCategory?: CategoryUpdateOneWithoutSubCategoriesNestedInput
    company?: CompanyUpdateOneWithoutCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCollectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    subCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
  }

  export type UserUpsertWithoutCollectionsInput = {
    update: XOR<UserUpdateWithoutCollectionsInput, UserUncheckedUpdateWithoutCollectionsInput>
    create: XOR<UserCreateWithoutCollectionsInput, UserUncheckedCreateWithoutCollectionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCollectionsInput, UserUncheckedUpdateWithoutCollectionsInput>
  }

  export type UserUpdateWithoutCollectionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutCollectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type SampleUpsertWithWhereUniqueWithoutCollectionInput = {
    where: SampleWhereUniqueInput
    update: XOR<SampleUpdateWithoutCollectionInput, SampleUncheckedUpdateWithoutCollectionInput>
    create: XOR<SampleCreateWithoutCollectionInput, SampleUncheckedCreateWithoutCollectionInput>
  }

  export type SampleUpdateWithWhereUniqueWithoutCollectionInput = {
    where: SampleWhereUniqueInput
    data: XOR<SampleUpdateWithoutCollectionInput, SampleUncheckedUpdateWithoutCollectionInput>
  }

  export type SampleUpdateManyWithWhereWithoutCollectionInput = {
    where: SampleScalarWhereInput
    data: XOR<SampleUpdateManyMutationInput, SampleUncheckedUpdateManyWithoutCollectionInput>
  }

  export type SampleUpsertWithWhereUniqueWithoutOriginalCollectionInput = {
    where: SampleWhereUniqueInput
    update: XOR<SampleUpdateWithoutOriginalCollectionInput, SampleUncheckedUpdateWithoutOriginalCollectionInput>
    create: XOR<SampleCreateWithoutOriginalCollectionInput, SampleUncheckedCreateWithoutOriginalCollectionInput>
  }

  export type SampleUpdateWithWhereUniqueWithoutOriginalCollectionInput = {
    where: SampleWhereUniqueInput
    data: XOR<SampleUpdateWithoutOriginalCollectionInput, SampleUncheckedUpdateWithoutOriginalCollectionInput>
  }

  export type SampleUpdateManyWithWhereWithoutOriginalCollectionInput = {
    where: SampleScalarWhereInput
    data: XOR<SampleUpdateManyMutationInput, SampleUncheckedUpdateManyWithoutOriginalCollectionInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutCollectionInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCollectionInput, OrderUncheckedUpdateWithoutCollectionInput>
    create: XOR<OrderCreateWithoutCollectionInput, OrderUncheckedCreateWithoutCollectionInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCollectionInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCollectionInput, OrderUncheckedUpdateWithoutCollectionInput>
  }

  export type OrderUpdateManyWithWhereWithoutCollectionInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCollectionInput>
  }

  export type QuestionUpsertWithWhereUniqueWithoutCollectionInput = {
    where: QuestionWhereUniqueInput
    update: XOR<QuestionUpdateWithoutCollectionInput, QuestionUncheckedUpdateWithoutCollectionInput>
    create: XOR<QuestionCreateWithoutCollectionInput, QuestionUncheckedCreateWithoutCollectionInput>
  }

  export type QuestionUpdateWithWhereUniqueWithoutCollectionInput = {
    where: QuestionWhereUniqueInput
    data: XOR<QuestionUpdateWithoutCollectionInput, QuestionUncheckedUpdateWithoutCollectionInput>
  }

  export type QuestionUpdateManyWithWhereWithoutCollectionInput = {
    where: QuestionScalarWhereInput
    data: XOR<QuestionUpdateManyMutationInput, QuestionUncheckedUpdateManyWithoutCollectionInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutCollectionInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutCollectionInput, ReviewUncheckedUpdateWithoutCollectionInput>
    create: XOR<ReviewCreateWithoutCollectionInput, ReviewUncheckedCreateWithoutCollectionInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutCollectionInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutCollectionInput, ReviewUncheckedUpdateWithoutCollectionInput>
  }

  export type ReviewUpdateManyWithWhereWithoutCollectionInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutCollectionInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutCollectionInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutCollectionInput, TaskUncheckedUpdateWithoutCollectionInput>
    create: XOR<TaskCreateWithoutCollectionInput, TaskUncheckedCreateWithoutCollectionInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutCollectionInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutCollectionInput, TaskUncheckedUpdateWithoutCollectionInput>
  }

  export type TaskUpdateManyWithWhereWithoutCollectionInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutCollectionInput>
  }

  export type CompanyUpsertWithoutCollectionsInput = {
    update: XOR<CompanyUpdateWithoutCollectionsInput, CompanyUncheckedUpdateWithoutCollectionsInput>
    create: XOR<CompanyCreateWithoutCollectionsInput, CompanyUncheckedCreateWithoutCollectionsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutCollectionsInput, CompanyUncheckedUpdateWithoutCollectionsInput>
  }

  export type CompanyUpdateWithoutCollectionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutCollectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type UserCreateWithoutFavoriteCollectionsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutFavoriteCollectionsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutFavoriteCollectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavoriteCollectionsInput, UserUncheckedCreateWithoutFavoriteCollectionsInput>
  }

  export type CollectionCreateWithoutFavoritedByInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutFavoritedByInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutFavoritedByInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutFavoritedByInput, CollectionUncheckedCreateWithoutFavoritedByInput>
  }

  export type UserUpsertWithoutFavoriteCollectionsInput = {
    update: XOR<UserUpdateWithoutFavoriteCollectionsInput, UserUncheckedUpdateWithoutFavoriteCollectionsInput>
    create: XOR<UserCreateWithoutFavoriteCollectionsInput, UserUncheckedCreateWithoutFavoriteCollectionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavoriteCollectionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavoriteCollectionsInput, UserUncheckedUpdateWithoutFavoriteCollectionsInput>
  }

  export type UserUpdateWithoutFavoriteCollectionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutFavoriteCollectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type CollectionUpsertWithoutFavoritedByInput = {
    update: XOR<CollectionUpdateWithoutFavoritedByInput, CollectionUncheckedUpdateWithoutFavoritedByInput>
    create: XOR<CollectionCreateWithoutFavoritedByInput, CollectionUncheckedCreateWithoutFavoritedByInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutFavoritedByInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutFavoritedByInput, CollectionUncheckedUpdateWithoutFavoritedByInput>
  }

  export type CollectionUpdateWithoutFavoritedByInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutFavoritedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionCreateWithoutSamplesInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutSamplesInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutSamplesInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutSamplesInput, CollectionUncheckedCreateWithoutSamplesInput>
  }

  export type CollectionCreateWithoutRevisedSamplesInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutRevisedSamplesInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutRevisedSamplesInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutRevisedSamplesInput, CollectionUncheckedCreateWithoutRevisedSamplesInput>
  }

  export type UserCreateWithoutCustomerSamplesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutCustomerSamplesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutCustomerSamplesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerSamplesInput, UserUncheckedCreateWithoutCustomerSamplesInput>
  }

  export type UserCreateWithoutManufactureSamplesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutManufactureSamplesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutManufactureSamplesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutManufactureSamplesInput, UserUncheckedCreateWithoutManufactureSamplesInput>
  }

  export type SampleProductionCreateWithoutSampleInput = {
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    updatedBy: UserCreateNestedOneWithoutSampleProductionUpdatesInput
  }

  export type SampleProductionUncheckedCreateWithoutSampleInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    updatedById: number
  }

  export type SampleProductionCreateOrConnectWithoutSampleInput = {
    where: SampleProductionWhereUniqueInput
    create: XOR<SampleProductionCreateWithoutSampleInput, SampleProductionUncheckedCreateWithoutSampleInput>
  }

  export type SampleProductionCreateManySampleInputEnvelope = {
    data: SampleProductionCreateManySampleInput | SampleProductionCreateManySampleInput[]
    skipDuplicates?: boolean
  }

  export type ProductionTrackingCreateWithoutSampleInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutSampleInput = {
    id?: number
    orderId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutSampleInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutSampleInput, ProductionTrackingUncheckedCreateWithoutSampleInput>
  }

  export type ProductionTrackingCreateManySampleInputEnvelope = {
    data: ProductionTrackingCreateManySampleInput | ProductionTrackingCreateManySampleInput[]
    skipDuplicates?: boolean
  }

  export type RevisionCreateWithoutSampleInput = {
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutRevisionsInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutRevisionsInput
  }

  export type RevisionUncheckedCreateWithoutSampleInput = {
    id?: number
    orderId?: number | null
    productionTrackingId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RevisionCreateOrConnectWithoutSampleInput = {
    where: RevisionWhereUniqueInput
    create: XOR<RevisionCreateWithoutSampleInput, RevisionUncheckedCreateWithoutSampleInput>
  }

  export type RevisionCreateManySampleInputEnvelope = {
    data: RevisionCreateManySampleInput | RevisionCreateManySampleInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSampleInput = {
    content: string
    isRead?: boolean
    type?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
    order?: OrderCreateNestedOneWithoutMessagesInput
    company?: CompanyCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutSampleInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type MessageCreateOrConnectWithoutSampleInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSampleInput, MessageUncheckedCreateWithoutSampleInput>
  }

  export type MessageCreateManySampleInputEnvelope = {
    data: MessageCreateManySampleInput | MessageCreateManySampleInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutSamplesInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutSamplesInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutSamplesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutSamplesInput, CompanyUncheckedCreateWithoutSamplesInput>
  }

  export type AIAnalysisCreateWithoutSampleInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    detectedProduct?: string | null
    detectedColor?: string | null
    detectedFabric?: string | null
    detectedPattern?: string | null
    detectedGender?: string | null
    detectedClassification?: string | null
    detectedAccessories?: string | null
    technicalDescription?: string | null
    qualityAnalysis?: string | null
    qualityScore?: number | null
    costAnalysis?: string | null
    estimatedCostMin?: number | null
    estimatedCostMax?: number | null
    suggestedMinOrder?: number | null
    trendAnalysis?: string | null
    trendScore?: number | null
    targetMarket?: string | null
    salesPotential?: string | null
    designSuggestions?: string | null
    designStyle?: string | null
    designFocus?: string | null
  }

  export type AIAnalysisUncheckedCreateWithoutSampleInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    detectedProduct?: string | null
    detectedColor?: string | null
    detectedFabric?: string | null
    detectedPattern?: string | null
    detectedGender?: string | null
    detectedClassification?: string | null
    detectedAccessories?: string | null
    technicalDescription?: string | null
    qualityAnalysis?: string | null
    qualityScore?: number | null
    costAnalysis?: string | null
    estimatedCostMin?: number | null
    estimatedCostMax?: number | null
    suggestedMinOrder?: number | null
    trendAnalysis?: string | null
    trendScore?: number | null
    targetMarket?: string | null
    salesPotential?: string | null
    designSuggestions?: string | null
    designStyle?: string | null
    designFocus?: string | null
  }

  export type AIAnalysisCreateOrConnectWithoutSampleInput = {
    where: AIAnalysisWhereUniqueInput
    create: XOR<AIAnalysisCreateWithoutSampleInput, AIAnalysisUncheckedCreateWithoutSampleInput>
  }

  export type TaskCreateWithoutSampleInput = {
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutTasksInput
    assignedTo?: UserCreateNestedOneWithoutAssignedTasksInput
    collection?: CollectionCreateNestedOneWithoutTasksInput
    order?: OrderCreateNestedOneWithoutTasksInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutSampleInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateOrConnectWithoutSampleInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutSampleInput, TaskUncheckedCreateWithoutSampleInput>
  }

  export type TaskCreateManySampleInputEnvelope = {
    data: TaskCreateManySampleInput | TaskCreateManySampleInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutSampleInput = {
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
    order?: OrderCreateNestedOneWithoutNotificationsInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutSampleInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    orderId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutSampleInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutSampleInput, NotificationUncheckedCreateWithoutSampleInput>
  }

  export type NotificationCreateManySampleInputEnvelope = {
    data: NotificationCreateManySampleInput | NotificationCreateManySampleInput[]
    skipDuplicates?: boolean
  }

  export type CollectionUpsertWithoutSamplesInput = {
    update: XOR<CollectionUpdateWithoutSamplesInput, CollectionUncheckedUpdateWithoutSamplesInput>
    create: XOR<CollectionCreateWithoutSamplesInput, CollectionUncheckedCreateWithoutSamplesInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutSamplesInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutSamplesInput, CollectionUncheckedUpdateWithoutSamplesInput>
  }

  export type CollectionUpdateWithoutSamplesInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutSamplesInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUpsertWithoutRevisedSamplesInput = {
    update: XOR<CollectionUpdateWithoutRevisedSamplesInput, CollectionUncheckedUpdateWithoutRevisedSamplesInput>
    create: XOR<CollectionCreateWithoutRevisedSamplesInput, CollectionUncheckedCreateWithoutRevisedSamplesInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutRevisedSamplesInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutRevisedSamplesInput, CollectionUncheckedUpdateWithoutRevisedSamplesInput>
  }

  export type CollectionUpdateWithoutRevisedSamplesInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutRevisedSamplesInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type UserUpsertWithoutCustomerSamplesInput = {
    update: XOR<UserUpdateWithoutCustomerSamplesInput, UserUncheckedUpdateWithoutCustomerSamplesInput>
    create: XOR<UserCreateWithoutCustomerSamplesInput, UserUncheckedCreateWithoutCustomerSamplesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerSamplesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerSamplesInput, UserUncheckedUpdateWithoutCustomerSamplesInput>
  }

  export type UserUpdateWithoutCustomerSamplesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerSamplesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUpsertWithoutManufactureSamplesInput = {
    update: XOR<UserUpdateWithoutManufactureSamplesInput, UserUncheckedUpdateWithoutManufactureSamplesInput>
    create: XOR<UserCreateWithoutManufactureSamplesInput, UserUncheckedCreateWithoutManufactureSamplesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutManufactureSamplesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutManufactureSamplesInput, UserUncheckedUpdateWithoutManufactureSamplesInput>
  }

  export type UserUpdateWithoutManufactureSamplesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutManufactureSamplesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type SampleProductionUpsertWithWhereUniqueWithoutSampleInput = {
    where: SampleProductionWhereUniqueInput
    update: XOR<SampleProductionUpdateWithoutSampleInput, SampleProductionUncheckedUpdateWithoutSampleInput>
    create: XOR<SampleProductionCreateWithoutSampleInput, SampleProductionUncheckedCreateWithoutSampleInput>
  }

  export type SampleProductionUpdateWithWhereUniqueWithoutSampleInput = {
    where: SampleProductionWhereUniqueInput
    data: XOR<SampleProductionUpdateWithoutSampleInput, SampleProductionUncheckedUpdateWithoutSampleInput>
  }

  export type SampleProductionUpdateManyWithWhereWithoutSampleInput = {
    where: SampleProductionScalarWhereInput
    data: XOR<SampleProductionUpdateManyMutationInput, SampleProductionUncheckedUpdateManyWithoutSampleInput>
  }

  export type ProductionTrackingUpsertWithWhereUniqueWithoutSampleInput = {
    where: ProductionTrackingWhereUniqueInput
    update: XOR<ProductionTrackingUpdateWithoutSampleInput, ProductionTrackingUncheckedUpdateWithoutSampleInput>
    create: XOR<ProductionTrackingCreateWithoutSampleInput, ProductionTrackingUncheckedCreateWithoutSampleInput>
  }

  export type ProductionTrackingUpdateWithWhereUniqueWithoutSampleInput = {
    where: ProductionTrackingWhereUniqueInput
    data: XOR<ProductionTrackingUpdateWithoutSampleInput, ProductionTrackingUncheckedUpdateWithoutSampleInput>
  }

  export type ProductionTrackingUpdateManyWithWhereWithoutSampleInput = {
    where: ProductionTrackingScalarWhereInput
    data: XOR<ProductionTrackingUpdateManyMutationInput, ProductionTrackingUncheckedUpdateManyWithoutSampleInput>
  }

  export type RevisionUpsertWithWhereUniqueWithoutSampleInput = {
    where: RevisionWhereUniqueInput
    update: XOR<RevisionUpdateWithoutSampleInput, RevisionUncheckedUpdateWithoutSampleInput>
    create: XOR<RevisionCreateWithoutSampleInput, RevisionUncheckedCreateWithoutSampleInput>
  }

  export type RevisionUpdateWithWhereUniqueWithoutSampleInput = {
    where: RevisionWhereUniqueInput
    data: XOR<RevisionUpdateWithoutSampleInput, RevisionUncheckedUpdateWithoutSampleInput>
  }

  export type RevisionUpdateManyWithWhereWithoutSampleInput = {
    where: RevisionScalarWhereInput
    data: XOR<RevisionUpdateManyMutationInput, RevisionUncheckedUpdateManyWithoutSampleInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutSampleInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSampleInput, MessageUncheckedUpdateWithoutSampleInput>
    create: XOR<MessageCreateWithoutSampleInput, MessageUncheckedCreateWithoutSampleInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSampleInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSampleInput, MessageUncheckedUpdateWithoutSampleInput>
  }

  export type MessageUpdateManyWithWhereWithoutSampleInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSampleInput>
  }

  export type CompanyUpsertWithoutSamplesInput = {
    update: XOR<CompanyUpdateWithoutSamplesInput, CompanyUncheckedUpdateWithoutSamplesInput>
    create: XOR<CompanyCreateWithoutSamplesInput, CompanyUncheckedCreateWithoutSamplesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutSamplesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutSamplesInput, CompanyUncheckedUpdateWithoutSamplesInput>
  }

  export type CompanyUpdateWithoutSamplesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutSamplesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type AIAnalysisUpsertWithoutSampleInput = {
    update: XOR<AIAnalysisUpdateWithoutSampleInput, AIAnalysisUncheckedUpdateWithoutSampleInput>
    create: XOR<AIAnalysisCreateWithoutSampleInput, AIAnalysisUncheckedCreateWithoutSampleInput>
    where?: AIAnalysisWhereInput
  }

  export type AIAnalysisUpdateToOneWithWhereWithoutSampleInput = {
    where?: AIAnalysisWhereInput
    data: XOR<AIAnalysisUpdateWithoutSampleInput, AIAnalysisUncheckedUpdateWithoutSampleInput>
  }

  export type AIAnalysisUpdateWithoutSampleInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detectedProduct?: NullableStringFieldUpdateOperationsInput | string | null
    detectedColor?: NullableStringFieldUpdateOperationsInput | string | null
    detectedFabric?: NullableStringFieldUpdateOperationsInput | string | null
    detectedPattern?: NullableStringFieldUpdateOperationsInput | string | null
    detectedGender?: NullableStringFieldUpdateOperationsInput | string | null
    detectedClassification?: NullableStringFieldUpdateOperationsInput | string | null
    detectedAccessories?: NullableStringFieldUpdateOperationsInput | string | null
    technicalDescription?: NullableStringFieldUpdateOperationsInput | string | null
    qualityAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    qualityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    costAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedCostMin?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedCostMax?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestedMinOrder?: NullableIntFieldUpdateOperationsInput | number | null
    trendAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    trendScore?: NullableFloatFieldUpdateOperationsInput | number | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    salesPotential?: NullableStringFieldUpdateOperationsInput | string | null
    designSuggestions?: NullableStringFieldUpdateOperationsInput | string | null
    designStyle?: NullableStringFieldUpdateOperationsInput | string | null
    designFocus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AIAnalysisUncheckedUpdateWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    detectedProduct?: NullableStringFieldUpdateOperationsInput | string | null
    detectedColor?: NullableStringFieldUpdateOperationsInput | string | null
    detectedFabric?: NullableStringFieldUpdateOperationsInput | string | null
    detectedPattern?: NullableStringFieldUpdateOperationsInput | string | null
    detectedGender?: NullableStringFieldUpdateOperationsInput | string | null
    detectedClassification?: NullableStringFieldUpdateOperationsInput | string | null
    detectedAccessories?: NullableStringFieldUpdateOperationsInput | string | null
    technicalDescription?: NullableStringFieldUpdateOperationsInput | string | null
    qualityAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    qualityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    costAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedCostMin?: NullableFloatFieldUpdateOperationsInput | number | null
    estimatedCostMax?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestedMinOrder?: NullableIntFieldUpdateOperationsInput | number | null
    trendAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    trendScore?: NullableFloatFieldUpdateOperationsInput | number | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    salesPotential?: NullableStringFieldUpdateOperationsInput | string | null
    designSuggestions?: NullableStringFieldUpdateOperationsInput | string | null
    designStyle?: NullableStringFieldUpdateOperationsInput | string | null
    designFocus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpsertWithWhereUniqueWithoutSampleInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutSampleInput, TaskUncheckedUpdateWithoutSampleInput>
    create: XOR<TaskCreateWithoutSampleInput, TaskUncheckedCreateWithoutSampleInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutSampleInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutSampleInput, TaskUncheckedUpdateWithoutSampleInput>
  }

  export type TaskUpdateManyWithWhereWithoutSampleInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutSampleInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutSampleInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutSampleInput, NotificationUncheckedUpdateWithoutSampleInput>
    create: XOR<NotificationCreateWithoutSampleInput, NotificationUncheckedCreateWithoutSampleInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutSampleInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutSampleInput, NotificationUncheckedUpdateWithoutSampleInput>
  }

  export type NotificationUpdateManyWithWhereWithoutSampleInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutSampleInput>
  }

  export type SampleCreateWithoutAiAnalysisInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutAiAnalysisInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutAiAnalysisInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutAiAnalysisInput, SampleUncheckedCreateWithoutAiAnalysisInput>
  }

  export type SampleUpsertWithoutAiAnalysisInput = {
    update: XOR<SampleUpdateWithoutAiAnalysisInput, SampleUncheckedUpdateWithoutAiAnalysisInput>
    create: XOR<SampleCreateWithoutAiAnalysisInput, SampleUncheckedCreateWithoutAiAnalysisInput>
    where?: SampleWhereInput
  }

  export type SampleUpdateToOneWithWhereWithoutAiAnalysisInput = {
    where?: SampleWhereInput
    data: XOR<SampleUpdateWithoutAiAnalysisInput, SampleUncheckedUpdateWithoutAiAnalysisInput>
  }

  export type SampleUpdateWithoutAiAnalysisInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutAiAnalysisInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type SampleCreateWithoutProductionHistoryInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutProductionHistoryInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutProductionHistoryInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutProductionHistoryInput, SampleUncheckedCreateWithoutProductionHistoryInput>
  }

  export type UserCreateWithoutSampleProductionUpdatesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutSampleProductionUpdatesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutSampleProductionUpdatesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSampleProductionUpdatesInput, UserUncheckedCreateWithoutSampleProductionUpdatesInput>
  }

  export type SampleUpsertWithoutProductionHistoryInput = {
    update: XOR<SampleUpdateWithoutProductionHistoryInput, SampleUncheckedUpdateWithoutProductionHistoryInput>
    create: XOR<SampleCreateWithoutProductionHistoryInput, SampleUncheckedCreateWithoutProductionHistoryInput>
    where?: SampleWhereInput
  }

  export type SampleUpdateToOneWithWhereWithoutProductionHistoryInput = {
    where?: SampleWhereInput
    data: XOR<SampleUpdateWithoutProductionHistoryInput, SampleUncheckedUpdateWithoutProductionHistoryInput>
  }

  export type SampleUpdateWithoutProductionHistoryInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutProductionHistoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type UserUpsertWithoutSampleProductionUpdatesInput = {
    update: XOR<UserUpdateWithoutSampleProductionUpdatesInput, UserUncheckedUpdateWithoutSampleProductionUpdatesInput>
    create: XOR<UserCreateWithoutSampleProductionUpdatesInput, UserUncheckedCreateWithoutSampleProductionUpdatesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSampleProductionUpdatesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSampleProductionUpdatesInput, UserUncheckedUpdateWithoutSampleProductionUpdatesInput>
  }

  export type UserUpdateWithoutSampleProductionUpdatesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutSampleProductionUpdatesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type CollectionCreateWithoutOrdersInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutOrdersInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutOrdersInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutOrdersInput, CollectionUncheckedCreateWithoutOrdersInput>
  }

  export type UserCreateWithoutCustomerOrdersInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutCustomerOrdersInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutCustomerOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerOrdersInput, UserUncheckedCreateWithoutCustomerOrdersInput>
  }

  export type UserCreateWithoutManufactureOrdersInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutManufactureOrdersInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutManufactureOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutManufactureOrdersInput, UserUncheckedCreateWithoutManufactureOrdersInput>
  }

  export type OrderProductionCreateWithoutOrderInput = {
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    updatedBy: UserCreateNestedOneWithoutOrderProductionUpdatesInput
  }

  export type OrderProductionUncheckedCreateWithoutOrderInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    updatedById: number
  }

  export type OrderProductionCreateOrConnectWithoutOrderInput = {
    where: OrderProductionWhereUniqueInput
    create: XOR<OrderProductionCreateWithoutOrderInput, OrderProductionUncheckedCreateWithoutOrderInput>
  }

  export type OrderProductionCreateManyOrderInputEnvelope = {
    data: OrderProductionCreateManyOrderInput | OrderProductionCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type ProductionTrackingCreateWithoutOrderInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutOrderInput = {
    id?: number
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutOrderInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutOrderInput, ProductionTrackingUncheckedCreateWithoutOrderInput>
  }

  export type ProductionTrackingCreateManyOrderInputEnvelope = {
    data: ProductionTrackingCreateManyOrderInput | ProductionTrackingCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type RevisionCreateWithoutOrderInput = {
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sample?: SampleCreateNestedOneWithoutRevisionsInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutRevisionsInput
  }

  export type RevisionUncheckedCreateWithoutOrderInput = {
    id?: number
    sampleId?: number | null
    productionTrackingId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RevisionCreateOrConnectWithoutOrderInput = {
    where: RevisionWhereUniqueInput
    create: XOR<RevisionCreateWithoutOrderInput, RevisionUncheckedCreateWithoutOrderInput>
  }

  export type RevisionCreateManyOrderInputEnvelope = {
    data: RevisionCreateManyOrderInput | RevisionCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutOrderInput = {
    content: string
    isRead?: boolean
    type?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
    sample?: SampleCreateNestedOneWithoutMessagesInput
    company?: CompanyCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutOrderInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type MessageCreateOrConnectWithoutOrderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput>
  }

  export type MessageCreateManyOrderInputEnvelope = {
    data: MessageCreateManyOrderInput | MessageCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutOrdersInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutOrdersInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutOrdersInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutOrdersInput, CompanyUncheckedCreateWithoutOrdersInput>
  }

  export type TaskCreateWithoutOrderInput = {
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutTasksInput
    assignedTo?: UserCreateNestedOneWithoutAssignedTasksInput
    collection?: CollectionCreateNestedOneWithoutTasksInput
    sample?: SampleCreateNestedOneWithoutTasksInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutOrderInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateOrConnectWithoutOrderInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutOrderInput, TaskUncheckedCreateWithoutOrderInput>
  }

  export type TaskCreateManyOrderInputEnvelope = {
    data: TaskCreateManyOrderInput | TaskCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutOrderInput = {
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
    sample?: SampleCreateNestedOneWithoutNotificationsInput
    productionTracking?: ProductionTrackingCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutOrderInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    sampleId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutOrderInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput>
  }

  export type NotificationCreateManyOrderInputEnvelope = {
    data: NotificationCreateManyOrderInput | NotificationCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CollectionUpsertWithoutOrdersInput = {
    update: XOR<CollectionUpdateWithoutOrdersInput, CollectionUncheckedUpdateWithoutOrdersInput>
    create: XOR<CollectionCreateWithoutOrdersInput, CollectionUncheckedCreateWithoutOrdersInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutOrdersInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutOrdersInput, CollectionUncheckedUpdateWithoutOrdersInput>
  }

  export type CollectionUpdateWithoutOrdersInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type UserUpsertWithoutCustomerOrdersInput = {
    update: XOR<UserUpdateWithoutCustomerOrdersInput, UserUncheckedUpdateWithoutCustomerOrdersInput>
    create: XOR<UserCreateWithoutCustomerOrdersInput, UserUncheckedCreateWithoutCustomerOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerOrdersInput, UserUncheckedUpdateWithoutCustomerOrdersInput>
  }

  export type UserUpdateWithoutCustomerOrdersInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUpsertWithoutManufactureOrdersInput = {
    update: XOR<UserUpdateWithoutManufactureOrdersInput, UserUncheckedUpdateWithoutManufactureOrdersInput>
    create: XOR<UserCreateWithoutManufactureOrdersInput, UserUncheckedCreateWithoutManufactureOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutManufactureOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutManufactureOrdersInput, UserUncheckedUpdateWithoutManufactureOrdersInput>
  }

  export type UserUpdateWithoutManufactureOrdersInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutManufactureOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type OrderProductionUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderProductionWhereUniqueInput
    update: XOR<OrderProductionUpdateWithoutOrderInput, OrderProductionUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderProductionCreateWithoutOrderInput, OrderProductionUncheckedCreateWithoutOrderInput>
  }

  export type OrderProductionUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderProductionWhereUniqueInput
    data: XOR<OrderProductionUpdateWithoutOrderInput, OrderProductionUncheckedUpdateWithoutOrderInput>
  }

  export type OrderProductionUpdateManyWithWhereWithoutOrderInput = {
    where: OrderProductionScalarWhereInput
    data: XOR<OrderProductionUpdateManyMutationInput, OrderProductionUncheckedUpdateManyWithoutOrderInput>
  }

  export type ProductionTrackingUpsertWithWhereUniqueWithoutOrderInput = {
    where: ProductionTrackingWhereUniqueInput
    update: XOR<ProductionTrackingUpdateWithoutOrderInput, ProductionTrackingUncheckedUpdateWithoutOrderInput>
    create: XOR<ProductionTrackingCreateWithoutOrderInput, ProductionTrackingUncheckedCreateWithoutOrderInput>
  }

  export type ProductionTrackingUpdateWithWhereUniqueWithoutOrderInput = {
    where: ProductionTrackingWhereUniqueInput
    data: XOR<ProductionTrackingUpdateWithoutOrderInput, ProductionTrackingUncheckedUpdateWithoutOrderInput>
  }

  export type ProductionTrackingUpdateManyWithWhereWithoutOrderInput = {
    where: ProductionTrackingScalarWhereInput
    data: XOR<ProductionTrackingUpdateManyMutationInput, ProductionTrackingUncheckedUpdateManyWithoutOrderInput>
  }

  export type RevisionUpsertWithWhereUniqueWithoutOrderInput = {
    where: RevisionWhereUniqueInput
    update: XOR<RevisionUpdateWithoutOrderInput, RevisionUncheckedUpdateWithoutOrderInput>
    create: XOR<RevisionCreateWithoutOrderInput, RevisionUncheckedCreateWithoutOrderInput>
  }

  export type RevisionUpdateWithWhereUniqueWithoutOrderInput = {
    where: RevisionWhereUniqueInput
    data: XOR<RevisionUpdateWithoutOrderInput, RevisionUncheckedUpdateWithoutOrderInput>
  }

  export type RevisionUpdateManyWithWhereWithoutOrderInput = {
    where: RevisionScalarWhereInput
    data: XOR<RevisionUpdateManyMutationInput, RevisionUncheckedUpdateManyWithoutOrderInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutOrderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutOrderInput, MessageUncheckedUpdateWithoutOrderInput>
    create: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutOrderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutOrderInput, MessageUncheckedUpdateWithoutOrderInput>
  }

  export type MessageUpdateManyWithWhereWithoutOrderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutOrderInput>
  }

  export type CompanyUpsertWithoutOrdersInput = {
    update: XOR<CompanyUpdateWithoutOrdersInput, CompanyUncheckedUpdateWithoutOrdersInput>
    create: XOR<CompanyCreateWithoutOrdersInput, CompanyUncheckedCreateWithoutOrdersInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutOrdersInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutOrdersInput, CompanyUncheckedUpdateWithoutOrdersInput>
  }

  export type CompanyUpdateWithoutOrdersInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type TaskUpsertWithWhereUniqueWithoutOrderInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutOrderInput, TaskUncheckedUpdateWithoutOrderInput>
    create: XOR<TaskCreateWithoutOrderInput, TaskUncheckedCreateWithoutOrderInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutOrderInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutOrderInput, TaskUncheckedUpdateWithoutOrderInput>
  }

  export type TaskUpdateManyWithWhereWithoutOrderInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutOrderInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutOrderInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutOrderInput, NotificationUncheckedUpdateWithoutOrderInput>
    create: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutOrderInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutOrderInput, NotificationUncheckedUpdateWithoutOrderInput>
  }

  export type NotificationUpdateManyWithWhereWithoutOrderInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutProductionHistoryInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutProductionHistoryInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutProductionHistoryInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutProductionHistoryInput, OrderUncheckedCreateWithoutProductionHistoryInput>
  }

  export type UserCreateWithoutOrderProductionUpdatesInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutOrderProductionUpdatesInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutOrderProductionUpdatesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrderProductionUpdatesInput, UserUncheckedCreateWithoutOrderProductionUpdatesInput>
  }

  export type OrderUpsertWithoutProductionHistoryInput = {
    update: XOR<OrderUpdateWithoutProductionHistoryInput, OrderUncheckedUpdateWithoutProductionHistoryInput>
    create: XOR<OrderCreateWithoutProductionHistoryInput, OrderUncheckedCreateWithoutProductionHistoryInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutProductionHistoryInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutProductionHistoryInput, OrderUncheckedUpdateWithoutProductionHistoryInput>
  }

  export type OrderUpdateWithoutProductionHistoryInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutProductionHistoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutOrderProductionUpdatesInput = {
    update: XOR<UserUpdateWithoutOrderProductionUpdatesInput, UserUncheckedUpdateWithoutOrderProductionUpdatesInput>
    create: XOR<UserCreateWithoutOrderProductionUpdatesInput, UserUncheckedCreateWithoutOrderProductionUpdatesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrderProductionUpdatesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrderProductionUpdatesInput, UserUncheckedUpdateWithoutOrderProductionUpdatesInput>
  }

  export type UserUpdateWithoutOrderProductionUpdatesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutOrderProductionUpdatesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type CollectionCreateWithoutQuestionsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutQuestionsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutQuestionsInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutQuestionsInput, CollectionUncheckedCreateWithoutQuestionsInput>
  }

  export type UserCreateWithoutCustomerQuestionsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutCustomerQuestionsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutCustomerQuestionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerQuestionsInput, UserUncheckedCreateWithoutCustomerQuestionsInput>
  }

  export type UserCreateWithoutManufactureQuestionsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutManufactureQuestionsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutManufactureQuestionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutManufactureQuestionsInput, UserUncheckedCreateWithoutManufactureQuestionsInput>
  }

  export type CollectionUpsertWithoutQuestionsInput = {
    update: XOR<CollectionUpdateWithoutQuestionsInput, CollectionUncheckedUpdateWithoutQuestionsInput>
    create: XOR<CollectionCreateWithoutQuestionsInput, CollectionUncheckedCreateWithoutQuestionsInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutQuestionsInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutQuestionsInput, CollectionUncheckedUpdateWithoutQuestionsInput>
  }

  export type CollectionUpdateWithoutQuestionsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutQuestionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type UserUpsertWithoutCustomerQuestionsInput = {
    update: XOR<UserUpdateWithoutCustomerQuestionsInput, UserUncheckedUpdateWithoutCustomerQuestionsInput>
    create: XOR<UserCreateWithoutCustomerQuestionsInput, UserUncheckedCreateWithoutCustomerQuestionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerQuestionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerQuestionsInput, UserUncheckedUpdateWithoutCustomerQuestionsInput>
  }

  export type UserUpdateWithoutCustomerQuestionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerQuestionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUpsertWithoutManufactureQuestionsInput = {
    update: XOR<UserUpdateWithoutManufactureQuestionsInput, UserUncheckedUpdateWithoutManufactureQuestionsInput>
    create: XOR<UserCreateWithoutManufactureQuestionsInput, UserUncheckedCreateWithoutManufactureQuestionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutManufactureQuestionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutManufactureQuestionsInput, UserUncheckedUpdateWithoutManufactureQuestionsInput>
  }

  export type UserUpdateWithoutManufactureQuestionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutManufactureQuestionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type CollectionCreateWithoutReviewsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutReviewsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutReviewsInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutReviewsInput, CollectionUncheckedCreateWithoutReviewsInput>
  }

  export type UserCreateWithoutCustomerReviewsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutCustomerReviewsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutCustomerReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerReviewsInput, UserUncheckedCreateWithoutCustomerReviewsInput>
  }

  export type CollectionUpsertWithoutReviewsInput = {
    update: XOR<CollectionUpdateWithoutReviewsInput, CollectionUncheckedUpdateWithoutReviewsInput>
    create: XOR<CollectionCreateWithoutReviewsInput, CollectionUncheckedCreateWithoutReviewsInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutReviewsInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutReviewsInput, CollectionUncheckedUpdateWithoutReviewsInput>
  }

  export type CollectionUpdateWithoutReviewsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutReviewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type UserUpsertWithoutCustomerReviewsInput = {
    update: XOR<UserUpdateWithoutCustomerReviewsInput, UserUncheckedUpdateWithoutCustomerReviewsInput>
    create: XOR<UserCreateWithoutCustomerReviewsInput, UserUncheckedCreateWithoutCustomerReviewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerReviewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerReviewsInput, UserUncheckedUpdateWithoutCustomerReviewsInput>
  }

  export type UserUpdateWithoutCustomerReviewsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerReviewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type ProductionTrackingCreateWithoutStageUpdatesInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutStageUpdatesInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutStageUpdatesInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutStageUpdatesInput, ProductionTrackingUncheckedCreateWithoutStageUpdatesInput>
  }

  export type ProductionTrackingUpsertWithoutStageUpdatesInput = {
    update: XOR<ProductionTrackingUpdateWithoutStageUpdatesInput, ProductionTrackingUncheckedUpdateWithoutStageUpdatesInput>
    create: XOR<ProductionTrackingCreateWithoutStageUpdatesInput, ProductionTrackingUncheckedCreateWithoutStageUpdatesInput>
    where?: ProductionTrackingWhereInput
  }

  export type ProductionTrackingUpdateToOneWithWhereWithoutStageUpdatesInput = {
    where?: ProductionTrackingWhereInput
    data: XOR<ProductionTrackingUpdateWithoutStageUpdatesInput, ProductionTrackingUncheckedUpdateWithoutStageUpdatesInput>
  }

  export type ProductionTrackingUpdateWithoutStageUpdatesInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutStageUpdatesInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingCreateWithoutQualityControlsInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutQualityControlsInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutQualityControlsInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutQualityControlsInput, ProductionTrackingUncheckedCreateWithoutQualityControlsInput>
  }

  export type UserCreateWithoutQualityInspectionsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutQualityInspectionsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutQualityInspectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutQualityInspectionsInput, UserUncheckedCreateWithoutQualityInspectionsInput>
  }

  export type ProductionTrackingUpsertWithoutQualityControlsInput = {
    update: XOR<ProductionTrackingUpdateWithoutQualityControlsInput, ProductionTrackingUncheckedUpdateWithoutQualityControlsInput>
    create: XOR<ProductionTrackingCreateWithoutQualityControlsInput, ProductionTrackingUncheckedCreateWithoutQualityControlsInput>
    where?: ProductionTrackingWhereInput
  }

  export type ProductionTrackingUpdateToOneWithWhereWithoutQualityControlsInput = {
    where?: ProductionTrackingWhereInput
    data: XOR<ProductionTrackingUpdateWithoutQualityControlsInput, ProductionTrackingUncheckedUpdateWithoutQualityControlsInput>
  }

  export type ProductionTrackingUpdateWithoutQualityControlsInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutQualityControlsInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type UserUpsertWithoutQualityInspectionsInput = {
    update: XOR<UserUpdateWithoutQualityInspectionsInput, UserUncheckedUpdateWithoutQualityInspectionsInput>
    create: XOR<UserCreateWithoutQualityInspectionsInput, UserUncheckedCreateWithoutQualityInspectionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutQualityInspectionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutQualityInspectionsInput, UserUncheckedUpdateWithoutQualityInspectionsInput>
  }

  export type UserUpdateWithoutQualityInspectionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutQualityInspectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserCreateWithoutOwnedWorkshopsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutOwnedWorkshopsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutOwnedWorkshopsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedWorkshopsInput, UserUncheckedCreateWithoutOwnedWorkshopsInput>
  }

  export type ProductionTrackingCreateWithoutSewingWorkshopInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutSewingWorkshopInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutSewingWorkshopInput, ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput>
  }

  export type ProductionTrackingCreateManySewingWorkshopInputEnvelope = {
    data: ProductionTrackingCreateManySewingWorkshopInput | ProductionTrackingCreateManySewingWorkshopInput[]
    skipDuplicates?: boolean
  }

  export type ProductionTrackingCreateWithoutPackagingWorkshopInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutPackagingWorkshopInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput>
  }

  export type ProductionTrackingCreateManyPackagingWorkshopInputEnvelope = {
    data: ProductionTrackingCreateManyPackagingWorkshopInput | ProductionTrackingCreateManyPackagingWorkshopInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOwnedWorkshopsInput = {
    update: XOR<UserUpdateWithoutOwnedWorkshopsInput, UserUncheckedUpdateWithoutOwnedWorkshopsInput>
    create: XOR<UserCreateWithoutOwnedWorkshopsInput, UserUncheckedCreateWithoutOwnedWorkshopsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedWorkshopsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedWorkshopsInput, UserUncheckedUpdateWithoutOwnedWorkshopsInput>
  }

  export type UserUpdateWithoutOwnedWorkshopsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedWorkshopsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type ProductionTrackingUpsertWithWhereUniqueWithoutSewingWorkshopInput = {
    where: ProductionTrackingWhereUniqueInput
    update: XOR<ProductionTrackingUpdateWithoutSewingWorkshopInput, ProductionTrackingUncheckedUpdateWithoutSewingWorkshopInput>
    create: XOR<ProductionTrackingCreateWithoutSewingWorkshopInput, ProductionTrackingUncheckedCreateWithoutSewingWorkshopInput>
  }

  export type ProductionTrackingUpdateWithWhereUniqueWithoutSewingWorkshopInput = {
    where: ProductionTrackingWhereUniqueInput
    data: XOR<ProductionTrackingUpdateWithoutSewingWorkshopInput, ProductionTrackingUncheckedUpdateWithoutSewingWorkshopInput>
  }

  export type ProductionTrackingUpdateManyWithWhereWithoutSewingWorkshopInput = {
    where: ProductionTrackingScalarWhereInput
    data: XOR<ProductionTrackingUpdateManyMutationInput, ProductionTrackingUncheckedUpdateManyWithoutSewingWorkshopInput>
  }

  export type ProductionTrackingUpsertWithWhereUniqueWithoutPackagingWorkshopInput = {
    where: ProductionTrackingWhereUniqueInput
    update: XOR<ProductionTrackingUpdateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedUpdateWithoutPackagingWorkshopInput>
    create: XOR<ProductionTrackingCreateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedCreateWithoutPackagingWorkshopInput>
  }

  export type ProductionTrackingUpdateWithWhereUniqueWithoutPackagingWorkshopInput = {
    where: ProductionTrackingWhereUniqueInput
    data: XOR<ProductionTrackingUpdateWithoutPackagingWorkshopInput, ProductionTrackingUncheckedUpdateWithoutPackagingWorkshopInput>
  }

  export type ProductionTrackingUpdateManyWithWhereWithoutPackagingWorkshopInput = {
    where: ProductionTrackingScalarWhereInput
    data: XOR<ProductionTrackingUpdateManyMutationInput, ProductionTrackingUncheckedUpdateManyWithoutPackagingWorkshopInput>
  }

  export type CompanyCreateWithoutColorsInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutColorsInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutColorsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutColorsInput, CompanyUncheckedCreateWithoutColorsInput>
  }

  export type CompanyUpsertWithoutColorsInput = {
    update: XOR<CompanyUpdateWithoutColorsInput, CompanyUncheckedUpdateWithoutColorsInput>
    create: XOR<CompanyCreateWithoutColorsInput, CompanyUncheckedCreateWithoutColorsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutColorsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutColorsInput, CompanyUncheckedUpdateWithoutColorsInput>
  }

  export type CompanyUpdateWithoutColorsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutColorsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutFabricsInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutFabricsInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutFabricsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutFabricsInput, CompanyUncheckedCreateWithoutFabricsInput>
  }

  export type CompanyUpsertWithoutFabricsInput = {
    update: XOR<CompanyUpdateWithoutFabricsInput, CompanyUncheckedUpdateWithoutFabricsInput>
    create: XOR<CompanyCreateWithoutFabricsInput, CompanyUncheckedCreateWithoutFabricsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutFabricsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutFabricsInput, CompanyUncheckedUpdateWithoutFabricsInput>
  }

  export type CompanyUpdateWithoutFabricsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutFabricsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutSizeGroupsInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutSizeGroupsInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutSizeGroupsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutSizeGroupsInput, CompanyUncheckedCreateWithoutSizeGroupsInput>
  }

  export type CompanyUpsertWithoutSizeGroupsInput = {
    update: XOR<CompanyUpdateWithoutSizeGroupsInput, CompanyUncheckedUpdateWithoutSizeGroupsInput>
    create: XOR<CompanyCreateWithoutSizeGroupsInput, CompanyUncheckedCreateWithoutSizeGroupsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutSizeGroupsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutSizeGroupsInput, CompanyUncheckedUpdateWithoutSizeGroupsInput>
  }

  export type CompanyUpdateWithoutSizeGroupsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutSizeGroupsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutSeasonsInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutSeasonsInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutSeasonsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutSeasonsInput, CompanyUncheckedCreateWithoutSeasonsInput>
  }

  export type CompanyUpsertWithoutSeasonsInput = {
    update: XOR<CompanyUpdateWithoutSeasonsInput, CompanyUncheckedUpdateWithoutSeasonsInput>
    create: XOR<CompanyCreateWithoutSeasonsInput, CompanyUncheckedCreateWithoutSeasonsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutSeasonsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutSeasonsInput, CompanyUncheckedUpdateWithoutSeasonsInput>
  }

  export type CompanyUpdateWithoutSeasonsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutSeasonsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutFitsInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    certifications?: CertificationCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutFitsInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    certifications?: CertificationUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutFitsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutFitsInput, CompanyUncheckedCreateWithoutFitsInput>
  }

  export type CompanyUpsertWithoutFitsInput = {
    update: XOR<CompanyUpdateWithoutFitsInput, CompanyUncheckedUpdateWithoutFitsInput>
    create: XOR<CompanyCreateWithoutFitsInput, CompanyUncheckedCreateWithoutFitsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutFitsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutFitsInput, CompanyUncheckedUpdateWithoutFitsInput>
  }

  export type CompanyUpdateWithoutFitsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutFitsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutCertificationsInput = {
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    owner?: UserCreateNestedOneWithoutOwnedCompaniesInput
    employees?: UserCreateNestedManyWithoutCompanyInput
    categories?: CategoryCreateNestedManyWithoutCompanyInput
    collections?: CollectionCreateNestedManyWithoutCompanyInput
    samples?: SampleCreateNestedManyWithoutCompanyInput
    orders?: OrderCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutCompanyInput
    messages?: MessageCreateNestedManyWithoutCompanyInput
    colors?: ColorCreateNestedManyWithoutCompanyInput
    fabrics?: FabricCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemCreateNestedManyWithoutCompanyInput
    fits?: FitItemCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutCertificationsInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    ownerId?: number | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    employees?: UserUncheckedCreateNestedManyWithoutCompanyInput
    categories?: CategoryUncheckedCreateNestedManyWithoutCompanyInput
    collections?: CollectionUncheckedCreateNestedManyWithoutCompanyInput
    samples?: SampleUncheckedCreateNestedManyWithoutCompanyInput
    orders?: OrderUncheckedCreateNestedManyWithoutCompanyInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutCompanyInput
    messages?: MessageUncheckedCreateNestedManyWithoutCompanyInput
    colors?: ColorUncheckedCreateNestedManyWithoutCompanyInput
    fabrics?: FabricUncheckedCreateNestedManyWithoutCompanyInput
    sizeGroups?: SizeGroupUncheckedCreateNestedManyWithoutCompanyInput
    seasons?: SeasonItemUncheckedCreateNestedManyWithoutCompanyInput
    fits?: FitItemUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutCertificationsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutCertificationsInput, CompanyUncheckedCreateWithoutCertificationsInput>
  }

  export type CollectionCreateWithoutCertificationsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    tasks?: TaskCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutCertificationsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
    tasks?: TaskUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutCertificationsInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutCertificationsInput, CollectionUncheckedCreateWithoutCertificationsInput>
  }

  export type CompanyUpsertWithoutCertificationsInput = {
    update: XOR<CompanyUpdateWithoutCertificationsInput, CompanyUncheckedUpdateWithoutCertificationsInput>
    create: XOR<CompanyCreateWithoutCertificationsInput, CompanyUncheckedCreateWithoutCertificationsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutCertificationsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutCertificationsInput, CompanyUncheckedUpdateWithoutCertificationsInput>
  }

  export type CompanyUpdateWithoutCertificationsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneWithoutOwnedCompaniesNestedInput
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutCertificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CollectionUpsertWithWhereUniqueWithoutCertificationsInput = {
    where: CollectionWhereUniqueInput
    update: XOR<CollectionUpdateWithoutCertificationsInput, CollectionUncheckedUpdateWithoutCertificationsInput>
    create: XOR<CollectionCreateWithoutCertificationsInput, CollectionUncheckedCreateWithoutCertificationsInput>
  }

  export type CollectionUpdateWithWhereUniqueWithoutCertificationsInput = {
    where: CollectionWhereUniqueInput
    data: XOR<CollectionUpdateWithoutCertificationsInput, CollectionUncheckedUpdateWithoutCertificationsInput>
  }

  export type CollectionUpdateManyWithWhereWithoutCertificationsInput = {
    where: CollectionScalarWhereInput
    data: XOR<CollectionUpdateManyMutationInput, CollectionUncheckedUpdateManyWithoutCertificationsInput>
  }

  export type ProductionTrackingCreateWithoutProductionRevisionsInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutProductionRevisionsInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutProductionRevisionsInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutProductionRevisionsInput, ProductionTrackingUncheckedCreateWithoutProductionRevisionsInput>
  }

  export type UserCreateWithoutRevisionRequestsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutRevisionRequestsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutRevisionRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRevisionRequestsInput, UserUncheckedCreateWithoutRevisionRequestsInput>
  }

  export type ProductionTrackingUpsertWithoutProductionRevisionsInput = {
    update: XOR<ProductionTrackingUpdateWithoutProductionRevisionsInput, ProductionTrackingUncheckedUpdateWithoutProductionRevisionsInput>
    create: XOR<ProductionTrackingCreateWithoutProductionRevisionsInput, ProductionTrackingUncheckedCreateWithoutProductionRevisionsInput>
    where?: ProductionTrackingWhereInput
  }

  export type ProductionTrackingUpdateToOneWithWhereWithoutProductionRevisionsInput = {
    where?: ProductionTrackingWhereInput
    data: XOR<ProductionTrackingUpdateWithoutProductionRevisionsInput, ProductionTrackingUncheckedUpdateWithoutProductionRevisionsInput>
  }

  export type ProductionTrackingUpdateWithoutProductionRevisionsInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutProductionRevisionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type UserUpsertWithoutRevisionRequestsInput = {
    update: XOR<UserUpdateWithoutRevisionRequestsInput, UserUncheckedUpdateWithoutRevisionRequestsInput>
    create: XOR<UserCreateWithoutRevisionRequestsInput, UserUncheckedCreateWithoutRevisionRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRevisionRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRevisionRequestsInput, UserUncheckedUpdateWithoutRevisionRequestsInput>
  }

  export type UserUpdateWithoutRevisionRequestsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutRevisionRequestsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type OrderCreateWithoutNotificationsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    tasks?: TaskCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutNotificationsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    tasks?: TaskUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutNotificationsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
  }

  export type SampleCreateWithoutNotificationsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    tasks?: TaskCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutNotificationsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    tasks?: TaskUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutNotificationsInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutNotificationsInput, SampleUncheckedCreateWithoutNotificationsInput>
  }

  export type ProductionTrackingCreateWithoutNotificationsInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutNotificationsInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    tasks?: TaskUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutNotificationsInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutNotificationsInput, ProductionTrackingUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type OrderUpsertWithoutNotificationsInput = {
    update: XOR<OrderUpdateWithoutNotificationsInput, OrderUncheckedUpdateWithoutNotificationsInput>
    create: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutNotificationsInput, OrderUncheckedUpdateWithoutNotificationsInput>
  }

  export type OrderUpdateWithoutNotificationsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutNotificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type SampleUpsertWithoutNotificationsInput = {
    update: XOR<SampleUpdateWithoutNotificationsInput, SampleUncheckedUpdateWithoutNotificationsInput>
    create: XOR<SampleCreateWithoutNotificationsInput, SampleUncheckedCreateWithoutNotificationsInput>
    where?: SampleWhereInput
  }

  export type SampleUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: SampleWhereInput
    data: XOR<SampleUpdateWithoutNotificationsInput, SampleUncheckedUpdateWithoutNotificationsInput>
  }

  export type SampleUpdateWithoutNotificationsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutNotificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type ProductionTrackingUpsertWithoutNotificationsInput = {
    update: XOR<ProductionTrackingUpdateWithoutNotificationsInput, ProductionTrackingUncheckedUpdateWithoutNotificationsInput>
    create: XOR<ProductionTrackingCreateWithoutNotificationsInput, ProductionTrackingUncheckedCreateWithoutNotificationsInput>
    where?: ProductionTrackingWhereInput
  }

  export type ProductionTrackingUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: ProductionTrackingWhereInput
    data: XOR<ProductionTrackingUpdateWithoutNotificationsInput, ProductionTrackingUncheckedUpdateWithoutNotificationsInput>
  }

  export type ProductionTrackingUpdateWithoutNotificationsInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutNotificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type UserCreateWithoutTasksInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    assignedTasks?: TaskCreateNestedManyWithoutAssignedToInput
  }

  export type UserUncheckedCreateWithoutTasksInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    assignedTasks?: TaskUncheckedCreateNestedManyWithoutAssignedToInput
  }

  export type UserCreateOrConnectWithoutTasksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
  }

  export type UserCreateWithoutAssignedTasksInput = {
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company?: CompanyCreateNestedOneWithoutEmployeesInput
    ownedCompanies?: CompanyCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    categories?: CategoryCreateNestedManyWithoutAuthorInput
    collections?: CollectionCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    tasks?: TaskCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAssignedTasksInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    companyId?: number | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    ownedCompanies?: CompanyUncheckedCreateNestedManyWithoutOwnerInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    categories?: CategoryUncheckedCreateNestedManyWithoutAuthorInput
    collections?: CollectionUncheckedCreateNestedManyWithoutAuthorInput
    customerSamples?: SampleUncheckedCreateNestedManyWithoutCustomerInput
    customerOrders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    customerQuestions?: QuestionUncheckedCreateNestedManyWithoutCustomerInput
    customerReviews?: ReviewUncheckedCreateNestedManyWithoutCustomerInput
    manufactureSamples?: SampleUncheckedCreateNestedManyWithoutManufactureInput
    manufactureOrders?: OrderUncheckedCreateNestedManyWithoutManufactureInput
    manufactureQuestions?: QuestionUncheckedCreateNestedManyWithoutManufactureInput
    sampleProductionUpdates?: SampleProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    orderProductionUpdates?: OrderProductionUncheckedCreateNestedManyWithoutUpdatedByInput
    qualityInspections?: QualityControlUncheckedCreateNestedManyWithoutInspectorInput
    ownedWorkshops?: WorkshopUncheckedCreateNestedManyWithoutOwnerInput
    revisionRequests?: ProductionRevisionUncheckedCreateNestedManyWithoutRequestedByInput
    favoriteCollections?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    tasks?: TaskUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAssignedTasksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
  }

  export type CollectionCreateWithoutTasksInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionCreateNestedManyWithoutCollectionInput
    category?: CategoryCreateNestedOneWithoutCollectionsInput
    author?: UserCreateNestedOneWithoutCollectionsInput
    samples?: SampleCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderCreateNestedManyWithoutCollectionInput
    questions?: QuestionCreateNestedManyWithoutCollectionInput
    reviews?: ReviewCreateNestedManyWithoutCollectionInput
    company?: CompanyCreateNestedOneWithoutCollectionsInput
  }

  export type CollectionUncheckedCreateWithoutTasksInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
    companyId?: number | null
    certifications?: CertificationUncheckedCreateNestedManyWithoutCollectionsInput
    favoritedBy?: UserFavoriteCollectionUncheckedCreateNestedManyWithoutCollectionInput
    samples?: SampleUncheckedCreateNestedManyWithoutCollectionInput
    revisedSamples?: SampleUncheckedCreateNestedManyWithoutOriginalCollectionInput
    orders?: OrderUncheckedCreateNestedManyWithoutCollectionInput
    questions?: QuestionUncheckedCreateNestedManyWithoutCollectionInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCollectionInput
  }

  export type CollectionCreateOrConnectWithoutTasksInput = {
    where: CollectionWhereUniqueInput
    create: XOR<CollectionCreateWithoutTasksInput, CollectionUncheckedCreateWithoutTasksInput>
  }

  export type SampleCreateWithoutTasksInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    collection?: CollectionCreateNestedOneWithoutSamplesInput
    originalCollection?: CollectionCreateNestedOneWithoutRevisedSamplesInput
    customer: UserCreateNestedOneWithoutCustomerSamplesInput
    manufacture: UserCreateNestedOneWithoutManufactureSamplesInput
    productionHistory?: SampleProductionCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutSampleInput
    revisions?: RevisionCreateNestedManyWithoutSampleInput
    messages?: MessageCreateNestedManyWithoutSampleInput
    company?: CompanyCreateNestedOneWithoutSamplesInput
    aiAnalysis?: AIAnalysisCreateNestedOneWithoutSampleInput
    notifications?: NotificationCreateNestedManyWithoutSampleInput
  }

  export type SampleUncheckedCreateWithoutTasksInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    productionHistory?: SampleProductionUncheckedCreateNestedManyWithoutSampleInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutSampleInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutSampleInput
    messages?: MessageUncheckedCreateNestedManyWithoutSampleInput
    aiAnalysis?: AIAnalysisUncheckedCreateNestedOneWithoutSampleInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutSampleInput
  }

  export type SampleCreateOrConnectWithoutTasksInput = {
    where: SampleWhereUniqueInput
    create: XOR<SampleCreateWithoutTasksInput, SampleUncheckedCreateWithoutTasksInput>
  }

  export type OrderCreateWithoutTasksInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collection: CollectionCreateNestedOneWithoutOrdersInput
    customer: UserCreateNestedOneWithoutCustomerOrdersInput
    manufacture: UserCreateNestedOneWithoutManufactureOrdersInput
    productionHistory?: OrderProductionCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingCreateNestedManyWithoutOrderInput
    revisions?: RevisionCreateNestedManyWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    company?: CompanyCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutTasksInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
    companyId?: number | null
    productionHistory?: OrderProductionUncheckedCreateNestedManyWithoutOrderInput
    productionTracking?: ProductionTrackingUncheckedCreateNestedManyWithoutOrderInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutTasksInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
  }

  export type ProductionTrackingCreateWithoutTasksInput = {
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutProductionTrackingInput
    sample?: SampleCreateNestedOneWithoutProductionTrackingInput
    company?: CompanyCreateNestedOneWithoutProductionTrackingInput
    sewingWorkshop?: WorkshopCreateNestedOneWithoutSewingProductionsInput
    packagingWorkshop?: WorkshopCreateNestedOneWithoutPackagingProductionsInput
    stageUpdates?: ProductionStageUpdateCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionCreateNestedManyWithoutProductionInput
    revisions?: RevisionCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingUncheckedCreateWithoutTasksInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
    stageUpdates?: ProductionStageUpdateUncheckedCreateNestedManyWithoutProductionInput
    qualityControls?: QualityControlUncheckedCreateNestedManyWithoutProductionInput
    productionRevisions?: ProductionRevisionUncheckedCreateNestedManyWithoutProductionInput
    revisions?: RevisionUncheckedCreateNestedManyWithoutProductionTrackingInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutProductionTrackingInput
  }

  export type ProductionTrackingCreateOrConnectWithoutTasksInput = {
    where: ProductionTrackingWhereUniqueInput
    create: XOR<ProductionTrackingCreateWithoutTasksInput, ProductionTrackingUncheckedCreateWithoutTasksInput>
  }

  export type UserUpsertWithoutTasksInput = {
    update: XOR<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput>
    create: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTasksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput>
  }

  export type UserUpdateWithoutTasksInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUpsertWithoutAssignedTasksInput = {
    update: XOR<UserUpdateWithoutAssignedTasksInput, UserUncheckedUpdateWithoutAssignedTasksInput>
    create: XOR<UserCreateWithoutAssignedTasksInput, UserUncheckedCreateWithoutAssignedTasksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAssignedTasksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAssignedTasksInput, UserUncheckedUpdateWithoutAssignedTasksInput>
  }

  export type UserUpdateWithoutAssignedTasksInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneWithoutEmployeesNestedInput
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAssignedTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CollectionUpsertWithoutTasksInput = {
    update: XOR<CollectionUpdateWithoutTasksInput, CollectionUncheckedUpdateWithoutTasksInput>
    create: XOR<CollectionCreateWithoutTasksInput, CollectionUncheckedCreateWithoutTasksInput>
    where?: CollectionWhereInput
  }

  export type CollectionUpdateToOneWithWhereWithoutTasksInput = {
    where?: CollectionWhereInput
    data: XOR<CollectionUpdateWithoutTasksInput, CollectionUncheckedUpdateWithoutTasksInput>
  }

  export type CollectionUpdateWithoutTasksInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type SampleUpsertWithoutTasksInput = {
    update: XOR<SampleUpdateWithoutTasksInput, SampleUncheckedUpdateWithoutTasksInput>
    create: XOR<SampleCreateWithoutTasksInput, SampleUncheckedCreateWithoutTasksInput>
    where?: SampleWhereInput
  }

  export type SampleUpdateToOneWithWhereWithoutTasksInput = {
    where?: SampleWhereInput
    data: XOR<SampleUpdateWithoutTasksInput, SampleUncheckedUpdateWithoutTasksInput>
  }

  export type SampleUpdateWithoutTasksInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type OrderUpsertWithoutTasksInput = {
    update: XOR<OrderUpdateWithoutTasksInput, OrderUncheckedUpdateWithoutTasksInput>
    create: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutTasksInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutTasksInput, OrderUncheckedUpdateWithoutTasksInput>
  }

  export type OrderUpdateWithoutTasksInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ProductionTrackingUpsertWithoutTasksInput = {
    update: XOR<ProductionTrackingUpdateWithoutTasksInput, ProductionTrackingUncheckedUpdateWithoutTasksInput>
    create: XOR<ProductionTrackingCreateWithoutTasksInput, ProductionTrackingUncheckedCreateWithoutTasksInput>
    where?: ProductionTrackingWhereInput
  }

  export type ProductionTrackingUpdateToOneWithWhereWithoutTasksInput = {
    where?: ProductionTrackingWhereInput
    data: XOR<ProductionTrackingUpdateWithoutTasksInput, ProductionTrackingUncheckedUpdateWithoutTasksInput>
  }

  export type ProductionTrackingUpdateWithoutTasksInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type UserCreateManyCompanyInput = {
    id?: number
    email: string
    password: string
    name?: string | null
    username?: string | null
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    role?: $Enums.Role
    isCompanyOwner?: boolean
    department?: $Enums.Department | null
    jobTitle?: string | null
    avatar?: string | null
    bio?: string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: boolean
    pushNotifications?: boolean
    language?: string
    timezone?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    isPendingApproval?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryCreateManyCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    parentCategoryId?: number | null
  }

  export type CollectionCreateManyCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    authorId?: number | null
  }

  export type SampleCreateManyCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
  }

  export type OrderCreateManyCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    manufactureId: number
  }

  export type ProductionTrackingCreateManyCompanyInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
  }

  export type MessageCreateManyCompanyInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ColorCreateManyCompanyInput = {
    id?: number
    name: string
    code?: string | null
    hexCode?: string | null
    imageUrl?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FabricCreateManyCompanyInput = {
    id?: number
    name: string
    code?: string | null
    composition: string
    weight?: number | null
    width?: number | null
    supplier?: string | null
    price?: number | null
    minOrder?: number | null
    leadTime?: number | null
    imageUrl?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SizeGroupCreateManyCompanyInput = {
    id?: number
    name: string
    category?: string | null
    sizes: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeasonItemCreateManyCompanyInput = {
    id?: number
    name: string
    fullName: string
    year: number
    type: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FitItemCreateManyCompanyInput = {
    id?: number
    name: string
    code?: string | null
    category?: string | null
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CertificationCreateManyCompanyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    code?: string | null
    category: $Enums.CertificationCategory
    issuer?: string | null
    validFrom?: Date | string | null
    validUntil?: Date | string | null
    certificateNumber?: string | null
    certificateFile?: string | null
    description?: string | null
    isActive?: boolean
  }

  export type UserUpdateWithoutCompanyInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    tasks?: TaskUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownedCompanies?: CompanyUncheckedUpdateManyWithoutOwnerNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutAuthorNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutAuthorNestedInput
    customerSamples?: SampleUncheckedUpdateManyWithoutCustomerNestedInput
    customerOrders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    customerQuestions?: QuestionUncheckedUpdateManyWithoutCustomerNestedInput
    customerReviews?: ReviewUncheckedUpdateManyWithoutCustomerNestedInput
    manufactureSamples?: SampleUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureOrders?: OrderUncheckedUpdateManyWithoutManufactureNestedInput
    manufactureQuestions?: QuestionUncheckedUpdateManyWithoutManufactureNestedInput
    sampleProductionUpdates?: SampleProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    orderProductionUpdates?: OrderProductionUncheckedUpdateManyWithoutUpdatedByNestedInput
    qualityInspections?: QualityControlUncheckedUpdateManyWithoutInspectorNestedInput
    ownedWorkshops?: WorkshopUncheckedUpdateManyWithoutOwnerNestedInput
    revisionRequests?: ProductionRevisionUncheckedUpdateManyWithoutRequestedByNestedInput
    favoriteCollections?: UserFavoriteCollectionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutUserNestedInput
    assignedTasks?: TaskUncheckedUpdateManyWithoutAssignedToNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    isCompanyOwner?: BoolFieldUpdateOperationsInput | boolean
    department?: NullableEnumDepartmentFieldUpdateOperationsInput | $Enums.Department | null
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPendingApproval?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutCompanyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    author?: UserUpdateOneWithoutCategoriesNestedInput
    collections?: CollectionUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    parentCategory?: CategoryUpdateOneWithoutSubCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    collections?: CollectionUncheckedUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CollectionUpdateWithoutCompanyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SampleUpdateWithoutCompanyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderUpdateWithoutCompanyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
  }

  export type ProductionTrackingUpdateWithoutCompanyInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MessageUpdateWithoutCompanyInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
    order?: OrderUpdateOneWithoutMessagesNestedInput
    sample?: SampleUpdateOneWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ColorUpdateWithoutCompanyInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    hexCode?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ColorUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    hexCode?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ColorUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    hexCode?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FabricUpdateWithoutCompanyInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: StringFieldUpdateOperationsInput | string
    weight?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    minOrder?: NullableIntFieldUpdateOperationsInput | number | null
    leadTime?: NullableIntFieldUpdateOperationsInput | number | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FabricUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: StringFieldUpdateOperationsInput | string
    weight?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    minOrder?: NullableIntFieldUpdateOperationsInput | number | null
    leadTime?: NullableIntFieldUpdateOperationsInput | number | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FabricUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: StringFieldUpdateOperationsInput | string
    weight?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    minOrder?: NullableIntFieldUpdateOperationsInput | number | null
    leadTime?: NullableIntFieldUpdateOperationsInput | number | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SizeGroupUpdateWithoutCompanyInput = {
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sizes?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SizeGroupUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sizes?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SizeGroupUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sizes?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeasonItemUpdateWithoutCompanyInput = {
    name?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeasonItemUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeasonItemUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FitItemUpdateWithoutCompanyInput = {
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FitItemUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FitItemUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CertificationUpdateWithoutCompanyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    collections?: CollectionUpdateManyWithoutCertificationsNestedInput
  }

  export type CertificationUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    collections?: CollectionUncheckedUpdateManyWithoutCertificationsNestedInput
  }

  export type CertificationUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductionStageUpdateCreateManyProductionInput = {
    id?: number
    stage: $Enums.ProductionStage
    status?: $Enums.StageStatus
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    estimatedDays?: number | null
    notes?: string | null
    photos?: string | null
    isRevision?: boolean
    delayReason?: string | null
    extraDays?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualityControlCreateManyProductionInput = {
    id?: number
    inspectorId: number
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionRevisionCreateManyProductionInput = {
    id?: number
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    requestedById: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RevisionCreateManyProductionTrackingInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskCreateManyProductionTrackingInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationCreateManyProductionTrackingInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionStageUpdateUpdateWithoutProductionInput = {
    stage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    status?: EnumStageStatusFieldUpdateOperationsInput | $Enums.StageStatus
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    isRevision?: BoolFieldUpdateOperationsInput | boolean
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionStageUpdateUncheckedUpdateWithoutProductionInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    status?: EnumStageStatusFieldUpdateOperationsInput | $Enums.StageStatus
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    isRevision?: BoolFieldUpdateOperationsInput | boolean
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionStageUpdateUncheckedUpdateManyWithoutProductionInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    status?: EnumStageStatusFieldUpdateOperationsInput | $Enums.StageStatus
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    isRevision?: BoolFieldUpdateOperationsInput | boolean
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualityControlUpdateWithoutProductionInput = {
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inspector?: UserUpdateOneRequiredWithoutQualityInspectionsNestedInput
  }

  export type QualityControlUncheckedUpdateWithoutProductionInput = {
    id?: IntFieldUpdateOperationsInput | number
    inspectorId?: IntFieldUpdateOperationsInput | number
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualityControlUncheckedUpdateManyWithoutProductionInput = {
    id?: IntFieldUpdateOperationsInput | number
    inspectorId?: IntFieldUpdateOperationsInput | number
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionRevisionUpdateWithoutProductionInput = {
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedBy?: UserUpdateOneRequiredWithoutRevisionRequestsNestedInput
  }

  export type ProductionRevisionUncheckedUpdateWithoutProductionInput = {
    id?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    requestedById?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionRevisionUncheckedUpdateManyWithoutProductionInput = {
    id?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    requestedById?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RevisionUpdateWithoutProductionTrackingInput = {
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutRevisionsNestedInput
    sample?: SampleUpdateOneWithoutRevisionsNestedInput
  }

  export type RevisionUncheckedUpdateWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RevisionUncheckedUpdateManyWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUpdateWithoutProductionTrackingInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutTasksNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedTasksNestedInput
    collection?: CollectionUpdateOneWithoutTasksNestedInput
    sample?: SampleUpdateOneWithoutTasksNestedInput
    order?: OrderUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUncheckedUpdateManyWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationUpdateWithoutProductionTrackingInput = {
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
    order?: OrderUpdateOneWithoutNotificationsNestedInput
    sample?: SampleUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutProductionTrackingInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateManyOwnerInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    address?: string | null
    location?: string | null
    website?: string | null
    type?: $Enums.CompanyType
    description?: string | null
    isActive?: boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    coverImage?: string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: boolean
    profileSlug?: string | null
    subscriptionPlan?: $Enums.SubscriptionPlan
    subscriptionStatus?: $Enums.SubscriptionStatus
    billingCycle?: $Enums.BillingCycle
    maxUsers?: number
    maxSamples?: number
    maxOrders?: number
    maxCollections?: number
    maxStorageGB?: number
    currentUsers?: number
    currentSamples?: number
    currentOrders?: number
    currentCollections?: number
    currentStorageGB?: number
    trialStartedAt?: Date | string | null
    trialEndsAt?: Date | string | null
    billingEmail?: string | null
    taxId?: string | null
    billingAddress?: string | null
    subscriptionStartedAt?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    cancelAtPeriodEnd?: boolean
    cancelledAt?: Date | string | null
    defaultView?: string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MessageCreateManySenderInput = {
    id?: number
    content: string
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type MessageCreateManyReceiverInput = {
    id?: number
    content: string
    senderId: number
    isRead?: boolean
    type?: string
    orderId?: number | null
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type CategoryCreateManyAuthorInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    parentCategoryId?: number | null
    companyId?: number | null
  }

  export type CollectionCreateManyAuthorInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: number | null
    companyId?: number | null
  }

  export type SampleCreateManyCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
  }

  export type OrderCreateManyCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    manufactureId: number
    companyId?: number | null
  }

  export type QuestionCreateManyCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collectionId: number
    manufactureId: number
  }

  export type ReviewCreateManyCustomerInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    collectionId: number
  }

  export type SampleCreateManyManufactureInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
  }

  export type OrderCreateManyManufactureInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    collectionId: number
    customerId: number
    companyId?: number | null
  }

  export type QuestionCreateManyManufactureInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    collectionId: number
    customerId: number
  }

  export type SampleProductionCreateManyUpdatedByInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    sampleId: number
  }

  export type OrderProductionCreateManyUpdatedByInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    orderId: number
  }

  export type QualityControlCreateManyInspectorInput = {
    id?: number
    productionId: number
    checkDate?: Date | string
    result?: $Enums.QualityResult
    score?: number | null
    notes?: string | null
    photos?: string | null
    fabricDefects?: boolean
    sewingDefects?: boolean
    measureDefects?: boolean
    finishingDefects?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WorkshopCreateManyOwnerInput = {
    id?: number
    name: string
    type: $Enums.WorkshopType
    capacity?: number | null
    location?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductionRevisionCreateManyRequestedByInput = {
    id?: number
    productionId: number
    reason: string
    description?: string | null
    extraDays?: number
    extraCost?: number
    isApproved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserFavoriteCollectionCreateManyUserInput = {
    id?: number
    createdAt?: Date | string
    collectionId: number
  }

  export type NotificationCreateManyUserInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    orderId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskCreateManyUserInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskCreateManyAssignedToInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    collectionId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CompanyUpdateWithoutOwnerInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUpdateManyWithoutCompanyNestedInput
    samples?: SampleUpdateManyWithoutCompanyNestedInput
    orders?: OrderUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutCompanyNestedInput
    messages?: MessageUpdateManyWithoutCompanyNestedInput
    colors?: ColorUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutOwnerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employees?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutCompanyNestedInput
    collections?: CollectionUncheckedUpdateManyWithoutCompanyNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCompanyNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCompanyNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutCompanyNestedInput
    messages?: MessageUncheckedUpdateManyWithoutCompanyNestedInput
    colors?: ColorUncheckedUpdateManyWithoutCompanyNestedInput
    fabrics?: FabricUncheckedUpdateManyWithoutCompanyNestedInput
    sizeGroups?: SizeGroupUncheckedUpdateManyWithoutCompanyNestedInput
    seasons?: SeasonItemUncheckedUpdateManyWithoutCompanyNestedInput
    fits?: FitItemUncheckedUpdateManyWithoutCompanyNestedInput
    certifications?: CertificationUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateManyWithoutOwnerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    settings?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    coverImage?: NullableStringFieldUpdateOperationsInput | string | null
    brandColors?: NullableJsonNullValueInput | InputJsonValue
    socialLinks?: NullableJsonNullValueInput | InputJsonValue
    isPublicProfile?: BoolFieldUpdateOperationsInput | boolean
    profileSlug?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: EnumSubscriptionPlanFieldUpdateOperationsInput | $Enums.SubscriptionPlan
    subscriptionStatus?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    billingCycle?: EnumBillingCycleFieldUpdateOperationsInput | $Enums.BillingCycle
    maxUsers?: IntFieldUpdateOperationsInput | number
    maxSamples?: IntFieldUpdateOperationsInput | number
    maxOrders?: IntFieldUpdateOperationsInput | number
    maxCollections?: IntFieldUpdateOperationsInput | number
    maxStorageGB?: FloatFieldUpdateOperationsInput | number
    currentUsers?: IntFieldUpdateOperationsInput | number
    currentSamples?: IntFieldUpdateOperationsInput | number
    currentOrders?: IntFieldUpdateOperationsInput | number
    currentCollections?: IntFieldUpdateOperationsInput | number
    currentStorageGB?: FloatFieldUpdateOperationsInput | number
    trialStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billingEmail?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelAtPeriodEnd?: BoolFieldUpdateOperationsInput | boolean
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    defaultView?: NullableStringFieldUpdateOperationsInput | string | null
    enabledModules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSenderInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
    order?: OrderUpdateOneWithoutMessagesNestedInput
    sample?: SampleUpdateOneWithoutMessagesNestedInput
    company?: CompanyUpdateOneWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MessageUpdateWithoutReceiverInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    order?: OrderUpdateOneWithoutMessagesNestedInput
    sample?: SampleUpdateOneWithoutMessagesNestedInput
    company?: CompanyUpdateOneWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutReceiverInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MessageUncheckedUpdateManyWithoutReceiverInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoryUpdateWithoutAuthorInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: CollectionUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    parentCategory?: CategoryUpdateOneWithoutSubCategoriesNestedInput
    company?: CompanyUpdateOneWithoutCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutAuthorInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    collections?: CollectionUncheckedUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutAuthorInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CollectionUpdateWithoutAuthorInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutAuthorInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateManyWithoutAuthorInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SampleUpdateWithoutCustomerInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderUpdateWithoutCustomerInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type QuestionUpdateWithoutCustomerInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collection?: CollectionUpdateOneRequiredWithoutQuestionsNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureQuestionsNestedInput
  }

  export type QuestionUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
  }

  export type QuestionUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewUpdateWithoutCustomerInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    collection?: CollectionUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
  }

  export type SampleUpdateWithoutManufactureInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutManufactureInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateManyWithoutManufactureInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderUpdateWithoutManufactureInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collection?: CollectionUpdateOneRequiredWithoutOrdersNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutManufactureInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutManufactureInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type QuestionUpdateWithoutManufactureInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collection?: CollectionUpdateOneRequiredWithoutQuestionsNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerQuestionsNestedInput
  }

  export type QuestionUncheckedUpdateWithoutManufactureInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
  }

  export type QuestionUncheckedUpdateManyWithoutManufactureInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    collectionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
  }

  export type SampleProductionUpdateWithoutUpdatedByInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sample?: SampleUpdateOneRequiredWithoutProductionHistoryNestedInput
  }

  export type SampleProductionUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sampleId?: IntFieldUpdateOperationsInput | number
  }

  export type SampleProductionUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sampleId?: IntFieldUpdateOperationsInput | number
  }

  export type OrderProductionUpdateWithoutUpdatedByInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneRequiredWithoutProductionHistoryNestedInput
  }

  export type OrderProductionUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orderId?: IntFieldUpdateOperationsInput | number
  }

  export type OrderProductionUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orderId?: IntFieldUpdateOperationsInput | number
  }

  export type QualityControlUpdateWithoutInspectorInput = {
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    production?: ProductionTrackingUpdateOneRequiredWithoutQualityControlsNestedInput
  }

  export type QualityControlUncheckedUpdateWithoutInspectorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualityControlUncheckedUpdateManyWithoutInspectorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    checkDate?: DateTimeFieldUpdateOperationsInput | Date | string
    result?: EnumQualityResultFieldUpdateOperationsInput | $Enums.QualityResult
    score?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    fabricDefects?: BoolFieldUpdateOperationsInput | boolean
    sewingDefects?: BoolFieldUpdateOperationsInput | boolean
    measureDefects?: BoolFieldUpdateOperationsInput | boolean
    finishingDefects?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkshopUpdateWithoutOwnerInput = {
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sewingProductions?: ProductionTrackingUpdateManyWithoutSewingWorkshopNestedInput
    packagingProductions?: ProductionTrackingUpdateManyWithoutPackagingWorkshopNestedInput
  }

  export type WorkshopUncheckedUpdateWithoutOwnerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sewingProductions?: ProductionTrackingUncheckedUpdateManyWithoutSewingWorkshopNestedInput
    packagingProductions?: ProductionTrackingUncheckedUpdateManyWithoutPackagingWorkshopNestedInput
  }

  export type WorkshopUncheckedUpdateManyWithoutOwnerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumWorkshopTypeFieldUpdateOperationsInput | $Enums.WorkshopType
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionRevisionUpdateWithoutRequestedByInput = {
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    production?: ProductionTrackingUpdateOneRequiredWithoutProductionRevisionsNestedInput
  }

  export type ProductionRevisionUncheckedUpdateWithoutRequestedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionRevisionUncheckedUpdateManyWithoutRequestedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productionId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    extraDays?: IntFieldUpdateOperationsInput | number
    extraCost?: FloatFieldUpdateOperationsInput | number
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserFavoriteCollectionUpdateWithoutUserInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    collection?: CollectionUpdateOneRequiredWithoutFavoritedByNestedInput
  }

  export type UserFavoriteCollectionUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    collectionId?: IntFieldUpdateOperationsInput | number
  }

  export type UserFavoriteCollectionUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    collectionId?: IntFieldUpdateOperationsInput | number
  }

  export type NotificationUpdateWithoutUserInput = {
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutNotificationsNestedInput
    sample?: SampleUpdateOneWithoutNotificationsNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUpdateWithoutUserInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    assignedTo?: UserUpdateOneWithoutAssignedTasksNestedInput
    collection?: CollectionUpdateOneWithoutTasksNestedInput
    sample?: SampleUpdateOneWithoutTasksNestedInput
    order?: OrderUpdateOneWithoutTasksNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUpdateWithoutAssignedToInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutTasksNestedInput
    collection?: CollectionUpdateOneWithoutTasksNestedInput
    sample?: SampleUpdateOneWithoutTasksNestedInput
    order?: OrderUpdateOneWithoutTasksNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutAssignedToInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUncheckedUpdateManyWithoutAssignedToInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CollectionCreateManyCategoryInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    modelCode: string
    season?: $Enums.Season | null
    gender?: $Enums.Gender | null
    fit?: string | null
    trend?: string | null
    colors?: string | null
    sizeGroups?: string | null
    sizeRange?: string | null
    measurementChart?: string | null
    fabricComposition?: string | null
    accessories?: string | null
    images?: string | null
    techPack?: string | null
    moq?: number | null
    targetPrice?: number | null
    targetLeadTime?: number | null
    notes?: string | null
    likesCount?: number
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
    price?: number
    sku?: string | null
    stock?: number
    isActive?: boolean
    isFeatured?: boolean
    slug?: string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    authorId?: number | null
    companyId?: number | null
  }

  export type CategoryCreateManyParentCategoryInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    authorId?: number | null
    companyId?: number | null
  }

  export type CollectionUpdateWithoutCategoryInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    certifications?: CertificationUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    certifications?: CertificationUncheckedUpdateManyWithoutCollectionsNestedInput
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoryUpdateWithoutParentCategoryInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    author?: UserUpdateOneWithoutCategoriesNestedInput
    collections?: CollectionUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    company?: CompanyUpdateOneWithoutCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutParentCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    collections?: CollectionUncheckedUpdateManyWithoutCategoryNestedInput
    subCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutParentCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserFavoriteCollectionCreateManyCollectionInput = {
    id?: number
    createdAt?: Date | string
    userId: number
  }

  export type SampleCreateManyCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    originalCollectionId?: number | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
  }

  export type SampleCreateManyOriginalCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sampleNumber: string
    sampleType?: $Enums.SampleType
    status?: $Enums.SampleStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customDesignImages?: string | null
    revisionRequests?: string | null
    name?: string | null
    description?: string | null
    images?: string | null
    aiGenerated?: boolean | null
    aiPrompt?: string | null
    aiSketchUrl?: string | null
    unitPrice?: number | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionDate?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    collectionId?: number | null
    customerId: number
    manufactureId: number
    companyId?: number | null
    viewCount?: number
    shareCount?: number
    lastViewedAt?: Date | string | null
  }

  export type OrderCreateManyCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    orderNumber: string
    quantity: number
    unitPrice: number
    totalPrice: number
    status?: $Enums.OrderStatus
    customerNote?: string | null
    manufacturerResponse?: string | null
    customerQuotedPrice?: number | null
    customerQuoteDays?: number | null
    customerQuoteNote?: string | null
    customerQuoteType?: string | null
    customerQuoteSentAt?: Date | string | null
    productionDays?: number | null
    estimatedProductionDate?: Date | string | null
    actualProductionStart?: Date | string | null
    actualProductionEnd?: Date | string | null
    shippingDate?: Date | string | null
    deliveryAddress?: string | null
    cargoTrackingNumber?: string | null
    customerId: number
    manufactureId: number
    companyId?: number | null
  }

  export type QuestionCreateManyCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    question: string
    answer?: string | null
    isAnswered?: boolean
    isPublic?: boolean
    customerId: number
    manufactureId: number
  }

  export type ReviewCreateManyCollectionInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    rating: number
    comment?: string | null
    isApproved?: boolean
    customerId: number
  }

  export type TaskCreateManyCollectionInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    sampleId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CertificationUpdateWithoutCollectionsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    company?: CompanyUpdateOneRequiredWithoutCertificationsNestedInput
  }

  export type CertificationUncheckedUpdateWithoutCollectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
  }

  export type CertificationUncheckedUpdateManyWithoutCollectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumCertificationCategoryFieldUpdateOperationsInput | $Enums.CertificationCategory
    issuer?: NullableStringFieldUpdateOperationsInput | string | null
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificateNumber?: NullableStringFieldUpdateOperationsInput | string | null
    certificateFile?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: IntFieldUpdateOperationsInput | number
  }

  export type UserFavoriteCollectionUpdateWithoutCollectionInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFavoriteCollectionsNestedInput
  }

  export type UserFavoriteCollectionUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type SampleUpdateWithoutCollectionInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    originalCollection?: CollectionUpdateOneWithoutRevisedSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateManyWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    originalCollectionId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SampleUpdateWithoutOriginalCollectionInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collection?: CollectionUpdateOneWithoutSamplesNestedInput
    customer?: UserUpdateOneRequiredWithoutCustomerSamplesNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureSamplesNestedInput
    productionHistory?: SampleProductionUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUpdateManyWithoutSampleNestedInput
    messages?: MessageUpdateManyWithoutSampleNestedInput
    company?: CompanyUpdateOneWithoutSamplesNestedInput
    aiAnalysis?: AIAnalysisUpdateOneWithoutSampleNestedInput
    tasks?: TaskUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateWithoutOriginalCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionHistory?: SampleProductionUncheckedUpdateManyWithoutSampleNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutSampleNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutSampleNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSampleNestedInput
    aiAnalysis?: AIAnalysisUncheckedUpdateOneWithoutSampleNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutSampleNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutSampleNestedInput
  }

  export type SampleUncheckedUpdateManyWithoutOriginalCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sampleNumber?: StringFieldUpdateOperationsInput | string
    sampleType?: EnumSampleTypeFieldUpdateOperationsInput | $Enums.SampleType
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customDesignImages?: NullableStringFieldUpdateOperationsInput | string | null
    revisionRequests?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    aiGenerated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    aiSketchUrl?: NullableStringFieldUpdateOperationsInput | string | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderUpdateWithoutCollectionInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customer?: UserUpdateOneRequiredWithoutCustomerOrdersNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureOrdersNestedInput
    productionHistory?: OrderProductionUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUpdateManyWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    company?: CompanyUpdateOneWithoutOrdersNestedInput
    tasks?: TaskUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    productionHistory?: OrderProductionUncheckedUpdateManyWithoutOrderNestedInput
    productionTracking?: ProductionTrackingUncheckedUpdateManyWithoutOrderNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    customerNote?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuotedPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    customerQuoteDays?: NullableIntFieldUpdateOperationsInput | number | null
    customerQuoteNote?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteType?: NullableStringFieldUpdateOperationsInput | string | null
    customerQuoteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productionDays?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedProductionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualProductionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: NullableStringFieldUpdateOperationsInput | string | null
    cargoTrackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type QuestionUpdateWithoutCollectionInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    customer?: UserUpdateOneRequiredWithoutCustomerQuestionsNestedInput
    manufacture?: UserUpdateOneRequiredWithoutManufactureQuestionsNestedInput
  }

  export type QuestionUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
  }

  export type QuestionUncheckedUpdateManyWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: NullableStringFieldUpdateOperationsInput | string | null
    isAnswered?: BoolFieldUpdateOperationsInput | boolean
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    customerId?: IntFieldUpdateOperationsInput | number
    manufactureId?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewUpdateWithoutCollectionInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    customer?: UserUpdateOneRequiredWithoutCustomerReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    customerId?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewUncheckedUpdateManyWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isApproved?: BoolFieldUpdateOperationsInput | boolean
    customerId?: IntFieldUpdateOperationsInput | number
  }

  export type TaskUpdateWithoutCollectionInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutTasksNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedTasksNestedInput
    sample?: SampleUpdateOneWithoutTasksNestedInput
    order?: OrderUpdateOneWithoutTasksNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUncheckedUpdateManyWithoutCollectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SampleProductionCreateManySampleInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.SampleStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    updatedById: number
  }

  export type ProductionTrackingCreateManySampleInput = {
    id?: number
    orderId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
  }

  export type RevisionCreateManySampleInput = {
    id?: number
    orderId?: number | null
    productionTrackingId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MessageCreateManySampleInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    orderId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type TaskCreateManySampleInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    orderId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationCreateManySampleInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    orderId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SampleProductionUpdateWithoutSampleInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneRequiredWithoutSampleProductionUpdatesNestedInput
  }

  export type SampleProductionUncheckedUpdateWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type SampleProductionUncheckedUpdateManyWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumSampleStatusFieldUpdateOperationsInput | $Enums.SampleStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type ProductionTrackingUpdateWithoutSampleInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RevisionUpdateWithoutSampleInput = {
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutRevisionsNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutRevisionsNestedInput
  }

  export type RevisionUncheckedUpdateWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RevisionUncheckedUpdateManyWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSampleInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
    order?: OrderUpdateOneWithoutMessagesNestedInput
    company?: CompanyUpdateOneWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MessageUncheckedUpdateManyWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TaskUpdateWithoutSampleInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutTasksNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedTasksNestedInput
    collection?: CollectionUpdateOneWithoutTasksNestedInput
    order?: OrderUpdateOneWithoutTasksNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUncheckedUpdateManyWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationUpdateWithoutSampleInput = {
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
    order?: OrderUpdateOneWithoutNotificationsNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutSampleInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderProductionCreateManyOrderInput = {
    id?: number
    createdAt?: Date | string
    status: $Enums.OrderStatus
    note?: string | null
    estimatedDays?: number | null
    actualDate?: Date | string | null
    updatedById: number
  }

  export type ProductionTrackingCreateManyOrderInput = {
    id?: number
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
    packagingWorkshopId?: number | null
  }

  export type RevisionCreateManyOrderInput = {
    id?: number
    sampleId?: number | null
    productionTrackingId?: number | null
    revisionNumber?: number
    requestMessage?: string | null
    responseMessage?: string | null
    status?: string
    requestedAt?: Date | string
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MessageCreateManyOrderInput = {
    id?: number
    content: string
    senderId: number
    receiverId?: number | null
    isRead?: boolean
    type?: string
    sampleId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
  }

  export type TaskCreateManyOrderInput = {
    id?: number
    title: string
    description?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    type: $Enums.TaskType
    relatedStatus?: string | null
    targetStatus?: string | null
    entityType?: string | null
    productionStage?: string | null
    userId: number
    assignedToId?: number | null
    collectionId?: number | null
    sampleId?: number | null
    productionTrackingId?: number | null
    dueDate?: Date | string | null
    completedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    notes?: string | null
    assignedBy?: number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationCreateManyOrderInput = {
    id?: number
    type: $Enums.NotificationType
    title: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: number
    sampleId?: number | null
    productionTrackingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderProductionUpdateWithoutOrderInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: UserUpdateOneRequiredWithoutOrderProductionUpdatesNestedInput
  }

  export type OrderProductionUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type OrderProductionUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    note?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDays?: NullableIntFieldUpdateOperationsInput | number | null
    actualDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedById?: IntFieldUpdateOperationsInput | number
  }

  export type ProductionTrackingUpdateWithoutOrderInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RevisionUpdateWithoutOrderInput = {
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sample?: SampleUpdateOneWithoutRevisionsNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutRevisionsNestedInput
  }

  export type RevisionUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RevisionUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    revisionNumber?: IntFieldUpdateOperationsInput | number
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    responseMessage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutOrderInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
    sample?: SampleUpdateOneWithoutMessagesNestedInput
    company?: CompanyUpdateOneWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MessageUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    senderId?: IntFieldUpdateOperationsInput | number
    receiverId?: NullableIntFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: StringFieldUpdateOperationsInput | string
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TaskUpdateWithoutOrderInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutTasksNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedTasksNestedInput
    collection?: CollectionUpdateOneWithoutTasksNestedInput
    sample?: SampleUpdateOneWithoutTasksNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TaskUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    relatedStatus?: NullableStringFieldUpdateOperationsInput | string | null
    targetStatus?: NullableStringFieldUpdateOperationsInput | string | null
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    productionStage?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
    assignedToId?: NullableIntFieldUpdateOperationsInput | number | null
    collectionId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedBy?: NullableIntFieldUpdateOperationsInput | number | null
    actionData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NotificationUpdateWithoutOrderInput = {
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
    sample?: SampleUpdateOneWithoutNotificationsNestedInput
    productionTracking?: ProductionTrackingUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    productionTrackingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductionTrackingCreateManySewingWorkshopInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    packagingWorkshopId?: number | null
  }

  export type ProductionTrackingCreateManyPackagingWorkshopInput = {
    id?: number
    orderId?: number | null
    sampleId?: number | null
    currentStage?: $Enums.ProductionStage
    overallStatus?: $Enums.ProductionStatus
    progress?: number
    estimatedStartDate?: Date | string | null
    estimatedEndDate?: Date | string | null
    actualStartDate?: Date | string | null
    actualEndDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId?: number | null
    sewingWorkshopId?: number | null
  }

  export type ProductionTrackingUpdateWithoutSewingWorkshopInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    packagingWorkshop?: WorkshopUpdateOneWithoutPackagingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutSewingWorkshopInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutSewingWorkshopInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    packagingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProductionTrackingUpdateWithoutPackagingWorkshopInput = {
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutProductionTrackingNestedInput
    sample?: SampleUpdateOneWithoutProductionTrackingNestedInput
    company?: CompanyUpdateOneWithoutProductionTrackingNestedInput
    sewingWorkshop?: WorkshopUpdateOneWithoutSewingProductionsNestedInput
    stageUpdates?: ProductionStageUpdateUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateWithoutPackagingWorkshopInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
    stageUpdates?: ProductionStageUpdateUncheckedUpdateManyWithoutProductionNestedInput
    qualityControls?: QualityControlUncheckedUpdateManyWithoutProductionNestedInput
    productionRevisions?: ProductionRevisionUncheckedUpdateManyWithoutProductionNestedInput
    revisions?: RevisionUncheckedUpdateManyWithoutProductionTrackingNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutProductionTrackingNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutProductionTrackingNestedInput
  }

  export type ProductionTrackingUncheckedUpdateManyWithoutPackagingWorkshopInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    sampleId?: NullableIntFieldUpdateOperationsInput | number | null
    currentStage?: EnumProductionStageFieldUpdateOperationsInput | $Enums.ProductionStage
    overallStatus?: EnumProductionStatusFieldUpdateOperationsInput | $Enums.ProductionStatus
    progress?: IntFieldUpdateOperationsInput | number
    estimatedStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    sewingWorkshopId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CollectionUpdateWithoutCertificationsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    favoritedBy?: UserFavoriteCollectionUpdateManyWithoutCollectionNestedInput
    category?: CategoryUpdateOneWithoutCollectionsNestedInput
    author?: UserUpdateOneWithoutCollectionsNestedInput
    samples?: SampleUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUpdateManyWithoutCollectionNestedInput
    company?: CompanyUpdateOneWithoutCollectionsNestedInput
  }

  export type CollectionUncheckedUpdateWithoutCertificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
    favoritedBy?: UserFavoriteCollectionUncheckedUpdateManyWithoutCollectionNestedInput
    samples?: SampleUncheckedUpdateManyWithoutCollectionNestedInput
    revisedSamples?: SampleUncheckedUpdateManyWithoutOriginalCollectionNestedInput
    orders?: OrderUncheckedUpdateManyWithoutCollectionNestedInput
    questions?: QuestionUncheckedUpdateManyWithoutCollectionNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCollectionNestedInput
    tasks?: TaskUncheckedUpdateManyWithoutCollectionNestedInput
  }

  export type CollectionUncheckedUpdateManyWithoutCertificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modelCode?: StringFieldUpdateOperationsInput | string
    season?: NullableEnumSeasonFieldUpdateOperationsInput | $Enums.Season | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    fit?: NullableStringFieldUpdateOperationsInput | string | null
    trend?: NullableStringFieldUpdateOperationsInput | string | null
    colors?: NullableStringFieldUpdateOperationsInput | string | null
    sizeGroups?: NullableStringFieldUpdateOperationsInput | string | null
    sizeRange?: NullableStringFieldUpdateOperationsInput | string | null
    measurementChart?: NullableStringFieldUpdateOperationsInput | string | null
    fabricComposition?: NullableStringFieldUpdateOperationsInput | string | null
    accessories?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    techPack?: NullableStringFieldUpdateOperationsInput | string | null
    moq?: NullableIntFieldUpdateOperationsInput | number | null
    targetPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    targetLeadTime?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    lastViewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: FloatFieldUpdateOperationsInput | number
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    productionSchedule?: NullableJsonNullValueInput | InputJsonValue
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    authorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}