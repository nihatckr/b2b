
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  location: 'location',
  website: 'website',
  type: 'type',
  description: 'description',
  ownerId: 'ownerId',
  isActive: 'isActive',
  settings: 'settings',
  subscriptionPlan: 'subscriptionPlan',
  subscriptionStatus: 'subscriptionStatus',
  trialStartedAt: 'trialStartedAt',
  trialEndsAt: 'trialEndsAt',
  subscriptionStartedAt: 'subscriptionStartedAt',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  cancelledAt: 'cancelledAt',
  billingCycle: 'billingCycle',
  billingEmail: 'billingEmail',
  billingAddress: 'billingAddress',
  taxId: 'taxId',
  maxUsers: 'maxUsers',
  maxSamples: 'maxSamples',
  maxOrders: 'maxOrders',
  maxCollections: 'maxCollections',
  maxStorageGB: 'maxStorageGB',
  currentUsers: 'currentUsers',
  currentSamples: 'currentSamples',
  currentOrders: 'currentOrders',
  currentCollections: 'currentCollections',
  currentStorageGB: 'currentStorageGB',
  logo: 'logo',
  coverImage: 'coverImage',
  brandColors: 'brandColors',
  profileSlug: 'profileSlug',
  isPublicProfile: 'isPublicProfile',
  socialLinks: 'socialLinks',
  defaultView: 'defaultView',
  enabledModules: 'enabledModules',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  city: 'city',
  country: 'country'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  senderId: 'senderId',
  receiverId: 'receiverId',
  isRead: 'isRead',
  type: 'type',
  orderId: 'orderId',
  sampleId: 'sampleId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  companyId: 'companyId'
};

exports.Prisma.ProductionTrackingScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  sampleId: 'sampleId',
  currentStage: 'currentStage',
  overallStatus: 'overallStatus',
  progress: 'progress',
  estimatedStartDate: 'estimatedStartDate',
  estimatedEndDate: 'estimatedEndDate',
  actualStartDate: 'actualStartDate',
  actualEndDate: 'actualEndDate',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  companyId: 'companyId',
  sewingWorkshopId: 'sewingWorkshopId',
  packagingWorkshopId: 'packagingWorkshopId',
  customerApprovalStatus: 'customerApprovalStatus',
  customerApprovedAt: 'customerApprovedAt',
  customerNote: 'customerNote',
  revisionCount: 'revisionCount'
};

exports.Prisma.RevisionScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  sampleId: 'sampleId',
  productionTrackingId: 'productionTrackingId',
  revisionNumber: 'revisionNumber',
  requestMessage: 'requestMessage',
  responseMessage: 'responseMessage',
  status: 'status',
  requestedAt: 'requestedAt',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  companyId: 'companyId',
  role: 'role',
  isCompanyOwner: 'isCompanyOwner',
  department: 'department',
  jobTitle: 'jobTitle',
  permissions: 'permissions',
  isActive: 'isActive',
  isPendingApproval: 'isPendingApproval',
  avatar: 'avatar',
  bio: 'bio',
  socialLinks: 'socialLinks',
  emailNotifications: 'emailNotifications',
  pushNotifications: 'pushNotifications',
  language: 'language',
  timezone: 'timezone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  resetToken: 'resetToken',
  resetTokenExpiry: 'resetTokenExpiry',
  emailVerificationExpiry: 'emailVerificationExpiry',
  emailVerificationToken: 'emailVerificationToken',
  emailVerified: 'emailVerified',
  customAvatar: 'customAvatar'
};

exports.Prisma.StandardCategoryScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  level: 'level',
  order: 'order',
  icon: 'icon',
  image: 'image',
  isActive: 'isActive',
  isPublic: 'isPublic',
  keywords: 'keywords',
  tags: 'tags',
  parentId: 'parentId',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyCategoryScalarFieldEnum = {
  id: 'id',
  type: 'type',
  standardCategoryId: 'standardCategoryId',
  name: 'name',
  description: 'description',
  companyId: 'companyId',
  parentId: 'parentId',
  internalCode: 'internalCode',
  order: 'order',
  isActive: 'isActive',
  productCount: 'productCount',
  lastUsedAt: 'lastUsedAt',
  customFields: 'customFields',
  authorId: 'authorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  name: 'name',
  description: 'description',
  authorId: 'authorId',
  parentCategoryId: 'parentCategoryId',
  companyId: 'companyId'
};

exports.Prisma.CollectionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  name: 'name',
  description: 'description',
  modelCode: 'modelCode',
  season: 'season',
  gender: 'gender',
  fit: 'fit',
  trend: 'trend',
  colors: 'colors',
  sizeGroups: 'sizeGroups',
  sizeRange: 'sizeRange',
  measurementChart: 'measurementChart',
  fabricComposition: 'fabricComposition',
  accessories: 'accessories',
  images: 'images',
  techPack: 'techPack',
  moq: 'moq',
  targetPrice: 'targetPrice',
  targetLeadTime: 'targetLeadTime',
  notes: 'notes',
  likesCount: 'likesCount',
  viewCount: 'viewCount',
  shareCount: 'shareCount',
  lastViewedAt: 'lastViewedAt',
  price: 'price',
  sku: 'sku',
  stock: 'stock',
  isActive: 'isActive',
  isFeatured: 'isFeatured',
  slug: 'slug',
  productionSchedule: 'productionSchedule',
  categoryId: 'categoryId',
  companyCategoryId: 'companyCategoryId',
  authorId: 'authorId',
  companyId: 'companyId',
  currency: 'currency',
  deadline: 'deadline',
  deadlineDays: 'deadlineDays'
};

exports.Prisma.UserFavoriteCollectionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  userId: 'userId',
  collectionId: 'collectionId'
};

exports.Prisma.SampleScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  sampleNumber: 'sampleNumber',
  sampleType: 'sampleType',
  status: 'status',
  customerNote: 'customerNote',
  manufacturerResponse: 'manufacturerResponse',
  customDesignImages: 'customDesignImages',
  revisionRequests: 'revisionRequests',
  originalCollectionId: 'originalCollectionId',
  name: 'name',
  description: 'description',
  images: 'images',
  aiGenerated: 'aiGenerated',
  aiPrompt: 'aiPrompt',
  aiSketchUrl: 'aiSketchUrl',
  unitPrice: 'unitPrice',
  productionDays: 'productionDays',
  estimatedProductionDate: 'estimatedProductionDate',
  actualProductionDate: 'actualProductionDate',
  shippingDate: 'shippingDate',
  deliveryAddress: 'deliveryAddress',
  cargoTrackingNumber: 'cargoTrackingNumber',
  customerQuotedPrice: 'customerQuotedPrice',
  customerQuoteDays: 'customerQuoteDays',
  customerQuoteNote: 'customerQuoteNote',
  customerQuoteType: 'customerQuoteType',
  customerQuoteSentAt: 'customerQuoteSentAt',
  collectionId: 'collectionId',
  customerId: 'customerId',
  manufactureId: 'manufactureId',
  companyId: 'companyId',
  viewCount: 'viewCount',
  shareCount: 'shareCount',
  lastViewedAt: 'lastViewedAt'
};

exports.Prisma.AIAnalysisScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  detectedProduct: 'detectedProduct',
  detectedColor: 'detectedColor',
  detectedFabric: 'detectedFabric',
  detectedPattern: 'detectedPattern',
  detectedGender: 'detectedGender',
  detectedClassification: 'detectedClassification',
  detectedAccessories: 'detectedAccessories',
  technicalDescription: 'technicalDescription',
  qualityAnalysis: 'qualityAnalysis',
  qualityScore: 'qualityScore',
  costAnalysis: 'costAnalysis',
  estimatedCostMin: 'estimatedCostMin',
  estimatedCostMax: 'estimatedCostMax',
  suggestedMinOrder: 'suggestedMinOrder',
  trendAnalysis: 'trendAnalysis',
  trendScore: 'trendScore',
  targetMarket: 'targetMarket',
  salesPotential: 'salesPotential',
  designSuggestions: 'designSuggestions',
  designStyle: 'designStyle',
  designFocus: 'designFocus',
  sampleId: 'sampleId'
};

exports.Prisma.SampleProductionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  status: 'status',
  note: 'note',
  estimatedDays: 'estimatedDays',
  actualDate: 'actualDate',
  sampleId: 'sampleId',
  updatedById: 'updatedById'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  orderNumber: 'orderNumber',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  targetPrice: 'targetPrice',
  currency: 'currency',
  deadline: 'deadline',
  notes: 'notes',
  status: 'status',
  customerNote: 'customerNote',
  manufacturerResponse: 'manufacturerResponse',
  customerQuotedPrice: 'customerQuotedPrice',
  customerQuoteDays: 'customerQuoteDays',
  customerQuoteNote: 'customerQuoteNote',
  customerQuoteType: 'customerQuoteType',
  customerQuoteSentAt: 'customerQuoteSentAt',
  productionDays: 'productionDays',
  estimatedProductionDate: 'estimatedProductionDate',
  actualProductionStart: 'actualProductionStart',
  actualProductionEnd: 'actualProductionEnd',
  shippingDate: 'shippingDate',
  deliveryAddress: 'deliveryAddress',
  cargoTrackingNumber: 'cargoTrackingNumber',
  negotiationStatus: 'negotiationStatus',
  agreedPrice: 'agreedPrice',
  agreedDays: 'agreedDays',
  agreedAt: 'agreedAt',
  agreedQuantity: 'agreedQuantity',
  collectionId: 'collectionId',
  customerId: 'customerId',
  manufactureId: 'manufactureId',
  companyId: 'companyId'
};

exports.Prisma.OrderNegotiationScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  senderId: 'senderId',
  senderRole: 'senderRole',
  unitPrice: 'unitPrice',
  productionDays: 'productionDays',
  quantity: 'quantity',
  currency: 'currency',
  message: 'message',
  status: 'status',
  respondedAt: 'respondedAt',
  respondedBy: 'respondedBy',
  createdAt: 'createdAt'
};

exports.Prisma.OrderProductionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  status: 'status',
  note: 'note',
  estimatedDays: 'estimatedDays',
  actualDate: 'actualDate',
  orderId: 'orderId',
  updatedById: 'updatedById'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  question: 'question',
  answer: 'answer',
  isAnswered: 'isAnswered',
  isPublic: 'isPublic',
  collectionId: 'collectionId',
  customerId: 'customerId',
  manufactureId: 'manufactureId'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  rating: 'rating',
  comment: 'comment',
  isApproved: 'isApproved',
  collectionId: 'collectionId',
  customerId: 'customerId'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  path: 'path',
  size: 'size',
  mimetype: 'mimetype',
  encoding: 'encoding',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductionStageUpdateScalarFieldEnum = {
  id: 'id',
  productionId: 'productionId',
  stage: 'stage',
  status: 'status',
  actualStartDate: 'actualStartDate',
  actualEndDate: 'actualEndDate',
  estimatedDays: 'estimatedDays',
  notes: 'notes',
  photos: 'photos',
  isRevision: 'isRevision',
  delayReason: 'delayReason',
  extraDays: 'extraDays',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QualityControlScalarFieldEnum = {
  id: 'id',
  productionId: 'productionId',
  inspectorId: 'inspectorId',
  checkDate: 'checkDate',
  result: 'result',
  score: 'score',
  notes: 'notes',
  photos: 'photos',
  fabricDefects: 'fabricDefects',
  sewingDefects: 'sewingDefects',
  measureDefects: 'measureDefects',
  finishingDefects: 'finishingDefects',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkshopScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  capacity: 'capacity',
  location: 'location',
  isActive: 'isActive',
  ownerId: 'ownerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LibraryItemScalarFieldEnum = {
  id: 'id',
  scope: 'scope',
  category: 'category',
  code: 'code',
  name: 'name',
  description: 'description',
  imageUrl: 'imageUrl',
  data: 'data',
  tags: 'tags',
  internalCode: 'internalCode',
  notes: 'notes',
  isActive: 'isActive',
  isPopular: 'isPopular',
  companyId: 'companyId',
  standardItemId: 'standardItemId',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  iconValue: 'iconValue'
};

exports.Prisma.BillOfMaterialScalarFieldEnum = {
  id: 'id',
  collectionId: 'collectionId',
  componentType: 'componentType',
  libraryItemId: 'libraryItemId',
  componentName: 'componentName',
  consumption: 'consumption',
  unit: 'unit',
  wastePercent: 'wastePercent',
  placement: 'placement',
  supplier: 'supplier',
  supplierCode: 'supplierCode',
  leadTime: 'leadTime',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductionRevisionScalarFieldEnum = {
  id: 'id',
  productionId: 'productionId',
  reason: 'reason',
  description: 'description',
  extraDays: 'extraDays',
  extraCost: 'extraCost',
  isApproved: 'isApproved',
  requestedById: 'requestedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  message: 'message',
  link: 'link',
  isRead: 'isRead',
  userId: 'userId',
  orderId: 'orderId',
  sampleId: 'sampleId',
  productionTrackingId: 'productionTrackingId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  data: 'data'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  status: 'status',
  priority: 'priority',
  type: 'type',
  relatedStatus: 'relatedStatus',
  targetStatus: 'targetStatus',
  entityType: 'entityType',
  productionStage: 'productionStage',
  userId: 'userId',
  assignedToId: 'assignedToId',
  collectionId: 'collectionId',
  sampleId: 'sampleId',
  orderId: 'orderId',
  productionTrackingId: 'productionTrackingId',
  dueDate: 'dueDate',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  notes: 'notes',
  assignedBy: 'assignedBy',
  actionData: 'actionData'
};

exports.Prisma.CompanyPartnershipScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  partnerId: 'partnerId',
  type: 'type',
  status: 'status',
  title: 'title',
  description: 'description',
  terms: 'terms',
  contractValue: 'contractValue',
  currency: 'currency',
  paymentTerms: 'paymentTerms',
  startDate: 'startDate',
  endDate: 'endDate',
  renewalDate: 'renewalDate',
  totalOrders: 'totalOrders',
  totalRevenue: 'totalRevenue',
  averageLeadTime: 'averageLeadTime',
  qualityScore: 'qualityScore',
  onTimeDelivery: 'onTimeDelivery',
  notes: 'notes',
  contractFile: 'contractFile',
  nda: 'nda',
  initiatedById: 'initiatedById',
  approvedById: 'approvedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SharedCategoryMappingScalarFieldEnum = {
  id: 'id',
  partnershipId: 'partnershipId',
  sourceCompanyId: 'sourceCompanyId',
  sourceCategoryId: 'sourceCategoryId',
  targetCompanyId: 'targetCompanyId',
  targetCategoryId: 'targetCategoryId',
  matchScore: 'matchScore',
  isManualMapping: 'isManualMapping',
  isActive: 'isActive',
  allowCrossOrders: 'allowCrossOrders',
  priceAdjustment: 'priceAdjustment',
  notes: 'notes',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminReportScalarFieldEnum = {
  id: 'id',
  type: 'type',
  period: 'period',
  title: 'title',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  companies: 'companies',
  metrics: 'metrics',
  charts: 'charts',
  summary: 'summary',
  insights: 'insights',
  comparisons: 'comparisons',
  rankings: 'rankings',
  benchmarks: 'benchmarks',
  reportFile: 'reportFile',
  createdById: 'createdById',
  isPublic: 'isPublic',
  sharedWith: 'sharedWith',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyMetricsScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  date: 'date',
  period: 'period',
  totalOrders: 'totalOrders',
  completedOrders: 'completedOrders',
  cancelledOrders: 'cancelledOrders',
  pendingOrders: 'pendingOrders',
  orderCompletionRate: 'orderCompletionRate',
  totalRevenue: 'totalRevenue',
  averageOrderValue: 'averageOrderValue',
  totalProfit: 'totalProfit',
  profitMargin: 'profitMargin',
  totalSamples: 'totalSamples',
  approvedSamples: 'approvedSamples',
  sampleApprovalRate: 'sampleApprovalRate',
  averageLeadTime: 'averageLeadTime',
  onTimeDeliveryRate: 'onTimeDeliveryRate',
  qualityScore: 'qualityScore',
  defectRate: 'defectRate',
  returnRate: 'returnRate',
  customerSatisfaction: 'customerSatisfaction',
  activeCustomers: 'activeCustomers',
  newCustomers: 'newCustomers',
  retainedCustomers: 'retainedCustomers',
  customerRetentionRate: 'customerRetentionRate',
  capacityUtilization: 'capacityUtilization',
  productivityScore: 'productivityScore',
  employeeCount: 'employeeCount',
  activeUsers: 'activeUsers',
  loginCount: 'loginCount',
  featureUsage: 'featureUsage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.CompanyOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  location: 'location',
  website: 'website',
  description: 'description',
  billingEmail: 'billingEmail',
  billingAddress: 'billingAddress',
  taxId: 'taxId',
  logo: 'logo',
  coverImage: 'coverImage',
  profileSlug: 'profileSlug',
  defaultView: 'defaultView',
  city: 'city',
  country: 'country'
};

exports.Prisma.MessageOrderByRelevanceFieldEnum = {
  content: 'content',
  type: 'type'
};

exports.Prisma.ProductionTrackingOrderByRelevanceFieldEnum = {
  notes: 'notes',
  customerNote: 'customerNote'
};

exports.Prisma.RevisionOrderByRelevanceFieldEnum = {
  requestMessage: 'requestMessage',
  responseMessage: 'responseMessage',
  status: 'status'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  name: 'name',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  jobTitle: 'jobTitle',
  avatar: 'avatar',
  bio: 'bio',
  language: 'language',
  timezone: 'timezone',
  resetToken: 'resetToken',
  emailVerificationToken: 'emailVerificationToken',
  customAvatar: 'customAvatar'
};

exports.Prisma.StandardCategoryOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  description: 'description',
  icon: 'icon',
  image: 'image',
  keywords: 'keywords',
  tags: 'tags'
};

exports.Prisma.CompanyCategoryOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  internalCode: 'internalCode'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.CollectionOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  modelCode: 'modelCode',
  season: 'season',
  fit: 'fit',
  trend: 'trend',
  colors: 'colors',
  sizeGroups: 'sizeGroups',
  sizeRange: 'sizeRange',
  measurementChart: 'measurementChart',
  fabricComposition: 'fabricComposition',
  accessories: 'accessories',
  images: 'images',
  techPack: 'techPack',
  notes: 'notes',
  sku: 'sku',
  slug: 'slug',
  currency: 'currency'
};

exports.Prisma.SampleOrderByRelevanceFieldEnum = {
  sampleNumber: 'sampleNumber',
  customerNote: 'customerNote',
  manufacturerResponse: 'manufacturerResponse',
  customDesignImages: 'customDesignImages',
  revisionRequests: 'revisionRequests',
  name: 'name',
  description: 'description',
  images: 'images',
  aiPrompt: 'aiPrompt',
  aiSketchUrl: 'aiSketchUrl',
  deliveryAddress: 'deliveryAddress',
  cargoTrackingNumber: 'cargoTrackingNumber',
  customerQuoteNote: 'customerQuoteNote',
  customerQuoteType: 'customerQuoteType'
};

exports.Prisma.AIAnalysisOrderByRelevanceFieldEnum = {
  detectedProduct: 'detectedProduct',
  detectedColor: 'detectedColor',
  detectedFabric: 'detectedFabric',
  detectedPattern: 'detectedPattern',
  detectedGender: 'detectedGender',
  detectedClassification: 'detectedClassification',
  detectedAccessories: 'detectedAccessories',
  technicalDescription: 'technicalDescription',
  qualityAnalysis: 'qualityAnalysis',
  costAnalysis: 'costAnalysis',
  trendAnalysis: 'trendAnalysis',
  targetMarket: 'targetMarket',
  salesPotential: 'salesPotential',
  designSuggestions: 'designSuggestions',
  designStyle: 'designStyle',
  designFocus: 'designFocus'
};

exports.Prisma.SampleProductionOrderByRelevanceFieldEnum = {
  note: 'note'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  orderNumber: 'orderNumber',
  currency: 'currency',
  notes: 'notes',
  customerNote: 'customerNote',
  manufacturerResponse: 'manufacturerResponse',
  customerQuoteNote: 'customerQuoteNote',
  customerQuoteType: 'customerQuoteType',
  deliveryAddress: 'deliveryAddress',
  cargoTrackingNumber: 'cargoTrackingNumber',
  negotiationStatus: 'negotiationStatus'
};

exports.Prisma.OrderNegotiationOrderByRelevanceFieldEnum = {
  senderRole: 'senderRole',
  currency: 'currency',
  message: 'message',
  status: 'status'
};

exports.Prisma.OrderProductionOrderByRelevanceFieldEnum = {
  note: 'note'
};

exports.Prisma.QuestionOrderByRelevanceFieldEnum = {
  question: 'question',
  answer: 'answer'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.FileOrderByRelevanceFieldEnum = {
  id: 'id',
  filename: 'filename',
  path: 'path',
  mimetype: 'mimetype',
  encoding: 'encoding',
  description: 'description'
};

exports.Prisma.ProductionStageUpdateOrderByRelevanceFieldEnum = {
  notes: 'notes',
  photos: 'photos',
  delayReason: 'delayReason'
};

exports.Prisma.QualityControlOrderByRelevanceFieldEnum = {
  notes: 'notes',
  photos: 'photos'
};

exports.Prisma.WorkshopOrderByRelevanceFieldEnum = {
  name: 'name',
  location: 'location'
};

exports.Prisma.LibraryItemOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  description: 'description',
  imageUrl: 'imageUrl',
  internalCode: 'internalCode',
  notes: 'notes',
  iconValue: 'iconValue'
};

exports.Prisma.BillOfMaterialOrderByRelevanceFieldEnum = {
  componentName: 'componentName',
  unit: 'unit',
  placement: 'placement',
  supplier: 'supplier',
  supplierCode: 'supplierCode',
  notes: 'notes'
};

exports.Prisma.ProductionRevisionOrderByRelevanceFieldEnum = {
  reason: 'reason',
  description: 'description'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  title: 'title',
  message: 'message',
  link: 'link'
};

exports.Prisma.TaskOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  relatedStatus: 'relatedStatus',
  targetStatus: 'targetStatus',
  entityType: 'entityType',
  productionStage: 'productionStage',
  notes: 'notes'
};

exports.Prisma.CompanyPartnershipOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  currency: 'currency',
  paymentTerms: 'paymentTerms',
  notes: 'notes',
  contractFile: 'contractFile'
};

exports.Prisma.SharedCategoryMappingOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.AdminReportOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  summary: 'summary',
  insights: 'insights',
  reportFile: 'reportFile'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  COMPANY_OWNER: 'COMPANY_OWNER',
  COMPANY_EMPLOYEE: 'COMPANY_EMPLOYEE',
  INDIVIDUAL_CUSTOMER: 'INDIVIDUAL_CUSTOMER',
  MANUFACTURE: 'MANUFACTURE',
  CUSTOMER: 'CUSTOMER'
};

exports.CompanyType = exports.$Enums.CompanyType = {
  MANUFACTURER: 'MANUFACTURER',
  BUYER: 'BUYER',
  BOTH: 'BOTH'
};

exports.Department = exports.$Enums.Department = {
  PURCHASING: 'PURCHASING',
  PRODUCTION: 'PRODUCTION',
  QUALITY: 'QUALITY',
  DESIGN: 'DESIGN',
  SALES: 'SALES',
  MANAGEMENT: 'MANAGEMENT'
};

exports.SubscriptionPlan = exports.$Enums.SubscriptionPlan = {
  FREE: 'FREE',
  STARTER: 'STARTER',
  PROFESSIONAL: 'PROFESSIONAL',
  ENTERPRISE: 'ENTERPRISE',
  CUSTOM: 'CUSTOM'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  TRIAL: 'TRIAL',
  ACTIVE: 'ACTIVE',
  PAST_DUE: 'PAST_DUE',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

exports.BillingCycle = exports.$Enums.BillingCycle = {
  MONTHLY: 'MONTHLY',
  YEARLY: 'YEARLY'
};

exports.Gender = exports.$Enums.Gender = {
  WOMEN: 'WOMEN',
  MEN: 'MEN',
  GIRLS: 'GIRLS',
  BOYS: 'BOYS',
  UNISEX: 'UNISEX'
};

exports.CategoryType = exports.$Enums.CategoryType = {
  GLOBAL_STANDARD: 'GLOBAL_STANDARD',
  COMPANY_CUSTOM: 'COMPANY_CUSTOM'
};

exports.CategoryLevel = exports.$Enums.CategoryLevel = {
  ROOT: 'ROOT',
  MAIN: 'MAIN',
  SUB: 'SUB',
  DETAIL: 'DETAIL'
};

exports.SampleType = exports.$Enums.SampleType = {
  STANDARD: 'STANDARD',
  REVISION: 'REVISION',
  CUSTOM: 'CUSTOM',
  DEVELOPMENT: 'DEVELOPMENT'
};

exports.SampleStatus = exports.$Enums.SampleStatus = {
  AI_DESIGN: 'AI_DESIGN',
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  PENDING: 'PENDING',
  REVIEWED: 'REVIEWED',
  QUOTE_SENT: 'QUOTE_SENT',
  CUSTOMER_QUOTE_SENT: 'CUSTOMER_QUOTE_SENT',
  MANUFACTURER_REVIEWING_QUOTE: 'MANUFACTURER_REVIEWING_QUOTE',
  CONFIRMED: 'CONFIRMED',
  REJECTED: 'REJECTED',
  REJECTED_BY_CUSTOMER: 'REJECTED_BY_CUSTOMER',
  REJECTED_BY_MANUFACTURER: 'REJECTED_BY_MANUFACTURER',
  IN_DESIGN: 'IN_DESIGN',
  PATTERN_READY: 'PATTERN_READY',
  IN_PRODUCTION: 'IN_PRODUCTION',
  PRODUCTION_COMPLETE: 'PRODUCTION_COMPLETE',
  QUALITY_CHECK: 'QUALITY_CHECK',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  ON_HOLD: 'ON_HOLD',
  CANCELLED: 'CANCELLED',
  REQUESTED: 'REQUESTED',
  RECEIVED: 'RECEIVED',
  COMPLETED: 'COMPLETED'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  REVIEWED: 'REVIEWED',
  QUOTE_SENT: 'QUOTE_SENT',
  CUSTOMER_QUOTE_SENT: 'CUSTOMER_QUOTE_SENT',
  MANUFACTURER_REVIEWING_QUOTE: 'MANUFACTURER_REVIEWING_QUOTE',
  CONFIRMED: 'CONFIRMED',
  PRODUCTION_PLAN_SENT: 'PRODUCTION_PLAN_SENT',
  PRODUCTION_PLAN_APPROVED: 'PRODUCTION_PLAN_APPROVED',
  PRODUCTION_PLAN_REJECTED: 'PRODUCTION_PLAN_REJECTED',
  REJECTED: 'REJECTED',
  REJECTED_BY_CUSTOMER: 'REJECTED_BY_CUSTOMER',
  REJECTED_BY_MANUFACTURER: 'REJECTED_BY_MANUFACTURER',
  IN_PRODUCTION: 'IN_PRODUCTION',
  PRODUCTION_COMPLETE: 'PRODUCTION_COMPLETE',
  QUALITY_CHECK: 'QUALITY_CHECK',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

exports.LibraryCategory = exports.$Enums.LibraryCategory = {
  COLOR: 'COLOR',
  FABRIC: 'FABRIC',
  MATERIAL: 'MATERIAL',
  SIZE_GROUP: 'SIZE_GROUP',
  SEASON: 'SEASON',
  FIT: 'FIT',
  CERTIFICATION: 'CERTIFICATION'
};

exports.LibraryScope = exports.$Enums.LibraryScope = {
  PLATFORM_STANDARD: 'PLATFORM_STANDARD',
  COMPANY_CUSTOM: 'COMPANY_CUSTOM'
};

exports.BOMComponentType = exports.$Enums.BOMComponentType = {
  FABRIC: 'FABRIC',
  MATERIAL: 'MATERIAL',
  LABOR: 'LABOR',
  OTHER: 'OTHER'
};

exports.ProductionStage = exports.$Enums.ProductionStage = {
  PLANNING: 'PLANNING',
  FABRIC: 'FABRIC',
  CUTTING: 'CUTTING',
  SEWING: 'SEWING',
  PRESSING: 'PRESSING',
  QUALITY: 'QUALITY',
  PACKAGING: 'PACKAGING',
  SHIPPING: 'SHIPPING'
};

exports.StageStatus = exports.$Enums.StageStatus = {
  NOT_STARTED: 'NOT_STARTED',
  IN_PROGRESS: 'IN_PROGRESS',
  ON_HOLD: 'ON_HOLD',
  COMPLETED: 'COMPLETED',
  REQUIRES_REVISION: 'REQUIRES_REVISION'
};

exports.ProductionStatus = exports.$Enums.ProductionStatus = {
  IN_PROGRESS: 'IN_PROGRESS',
  WAITING: 'WAITING',
  BLOCKED: 'BLOCKED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.ApprovalStatus = exports.$Enums.ApprovalStatus = {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  REVISION: 'REVISION'
};

exports.QualityResult = exports.$Enums.QualityResult = {
  PENDING: 'PENDING',
  PASSED: 'PASSED',
  FAILED: 'FAILED',
  CONDITIONAL_PASS: 'CONDITIONAL_PASS'
};

exports.WorkshopType = exports.$Enums.WorkshopType = {
  SEWING: 'SEWING',
  PACKAGING: 'PACKAGING',
  QUALITY_CONTROL: 'QUALITY_CONTROL',
  GENERAL: 'GENERAL'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  ORDER: 'ORDER',
  SAMPLE: 'SAMPLE',
  MESSAGE: 'MESSAGE',
  PRODUCTION: 'PRODUCTION',
  QUALITY: 'QUALITY',
  SYSTEM: 'SYSTEM',
  USER_MANAGEMENT: 'USER_MANAGEMENT'
};

exports.TaskStatus = exports.$Enums.TaskStatus = {
  TODO: 'TODO',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.TaskPriority = exports.$Enums.TaskPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH'
};

exports.TaskType = exports.$Enums.TaskType = {
  STATUS_CHANGE: 'STATUS_CHANGE',
  QUOTATION: 'QUOTATION',
  REVIEW_QUOTE: 'REVIEW_QUOTE',
  APPROVE_REJECT: 'APPROVE_REJECT',
  PAYMENT: 'PAYMENT',
  DOCUMENT: 'DOCUMENT',
  PRODUCTION_STAGE: 'PRODUCTION_STAGE',
  QUALITY_CHECK: 'QUALITY_CHECK',
  SHIPMENT: 'SHIPMENT',
  MATERIAL: 'MATERIAL',
  MEETING: 'MEETING',
  REVISION: 'REVISION',
  NOTIFICATION: 'NOTIFICATION',
  DEADLINE_WARNING: 'DEADLINE_WARNING',
  OTHER: 'OTHER'
};

exports.PartnershipType = exports.$Enums.PartnershipType = {
  SUPPLIER: 'SUPPLIER',
  MANUFACTURER: 'MANUFACTURER',
  DISTRIBUTOR: 'DISTRIBUTOR',
  WHITE_LABEL: 'WHITE_LABEL',
  CO_BRANDING: 'CO_BRANDING',
  SUBCONTRACTOR: 'SUBCONTRACTOR',
  STRATEGIC_PARTNER: 'STRATEGIC_PARTNER'
};

exports.PartnershipStatus = exports.$Enums.PartnershipStatus = {
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  TERMINATED: 'TERMINATED',
  REJECTED: 'REJECTED'
};

exports.ReportType = exports.$Enums.ReportType = {
  COMPANY_COMPARISON: 'COMPANY_COMPARISON',
  PERFORMANCE: 'PERFORMANCE',
  FINANCIAL: 'FINANCIAL',
  QUALITY: 'QUALITY',
  MARKET_ANALYSIS: 'MARKET_ANALYSIS',
  TREND_ANALYSIS: 'TREND_ANALYSIS',
  CUSTOM: 'CUSTOM'
};

exports.ReportPeriod = exports.$Enums.ReportPeriod = {
  DAILY: 'DAILY',
  WEEKLY: 'WEEKLY',
  MONTHLY: 'MONTHLY',
  QUARTERLY: 'QUARTERLY',
  YEARLY: 'YEARLY',
  CUSTOM: 'CUSTOM'
};

exports.Prisma.ModelName = {
  Company: 'Company',
  Message: 'Message',
  ProductionTracking: 'ProductionTracking',
  Revision: 'Revision',
  User: 'User',
  StandardCategory: 'StandardCategory',
  CompanyCategory: 'CompanyCategory',
  Category: 'Category',
  Collection: 'Collection',
  UserFavoriteCollection: 'UserFavoriteCollection',
  Sample: 'Sample',
  AIAnalysis: 'AIAnalysis',
  SampleProduction: 'SampleProduction',
  Order: 'Order',
  OrderNegotiation: 'OrderNegotiation',
  OrderProduction: 'OrderProduction',
  Question: 'Question',
  Review: 'Review',
  File: 'File',
  ProductionStageUpdate: 'ProductionStageUpdate',
  QualityControl: 'QualityControl',
  Workshop: 'Workshop',
  LibraryItem: 'LibraryItem',
  BillOfMaterial: 'BillOfMaterial',
  ProductionRevision: 'ProductionRevision',
  Notification: 'Notification',
  Task: 'Task',
  CompanyPartnership: 'CompanyPartnership',
  SharedCategoryMapping: 'SharedCategoryMapping',
  AdminReport: 'AdminReport',
  CompanyMetrics: 'CompanyMetrics'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/nihatcakir/Desktop/websites/fullstack/backend/lib/generated",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "darwin-arm64"
      },
      {
        "fromEnvVar": null,
        "value": "windows"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/nihatcakir/Desktop/websites/fullstack/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../lib/generated\"\n  binaryTargets = [\"native\", \"darwin-arm64\", \"windows\"]\n}\n\ngenerator pothos {\n  provider     = \"prisma-pothos-types\"\n  output       = \"../lib/pothos-prisma-types.ts\"\n  clientOutput = \"./generated\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Company {\n  id                      Int                     @id @default(autoincrement())\n  name                    String\n  email                   String?                 @unique\n  phone                   String?\n  address                 String?\n  location                String?\n  website                 String?\n  type                    CompanyType             @default(MANUFACTURER)\n  description             String?                 @db.Text\n  ownerId                 Int?                    @unique\n  isActive                Boolean                 @default(true)\n  settings                Json?\n  subscriptionPlan        SubscriptionPlan        @default(FREE)\n  subscriptionStatus      SubscriptionStatus      @default(TRIAL)\n  trialStartedAt          DateTime?               @default(now())\n  trialEndsAt             DateTime?\n  subscriptionStartedAt   DateTime?\n  currentPeriodStart      DateTime?\n  currentPeriodEnd        DateTime?\n  cancelAtPeriodEnd       Boolean                 @default(false)\n  cancelledAt             DateTime?\n  billingCycle            BillingCycle            @default(MONTHLY)\n  billingEmail            String?\n  billingAddress          String?                 @db.Text\n  taxId                   String?\n  maxUsers                Int                     @default(3)\n  maxSamples              Int                     @default(10)\n  maxOrders               Int                     @default(5)\n  maxCollections          Int                     @default(5)\n  maxStorageGB            Float                   @default(1)\n  currentUsers            Int                     @default(0)\n  currentSamples          Int                     @default(0)\n  currentOrders           Int                     @default(0)\n  currentCollections      Int                     @default(0)\n  currentStorageGB        Float                   @default(0)\n  logo                    String?\n  coverImage              String?\n  brandColors             Json?\n  profileSlug             String?                 @unique\n  isPublicProfile         Boolean                 @default(false)\n  socialLinks             Json?\n  defaultView             String?\n  enabledModules          Json?\n  createdAt               DateTime                @default(now())\n  updatedAt               DateTime                @updatedAt\n  city                    String?\n  country                 String?\n  categories              Category[]\n  collections             Collection[]\n  owner                   User?                   @relation(\"CompanyOwner\", fields: [ownerId], references: [id])\n  companyCategories       CompanyCategory[]\n  metrics                 CompanyMetrics[]\n  partnershipsAsInitiator CompanyPartnership[]    @relation(\"CompanyAsInitiator\")\n  partnershipsAsPartner   CompanyPartnership[]    @relation(\"CompanyAsPartner\")\n  libraryItems            LibraryItem[]           @relation(\"CompanyLibraryItems\")\n  messages                Message[]\n  orders                  Order[]\n  productionTracking      ProductionTracking[]\n  samples                 Sample[]\n  sourceCategoryMappings  SharedCategoryMapping[] @relation(\"SourceCategoryCompany\")\n  targetCategoryMappings  SharedCategoryMapping[] @relation(\"TargetCategoryCompany\")\n  employees               User[]                  @relation(\"CompanyEmployees\")\n\n  @@index([email])\n  @@index([type, isActive])\n  @@index([isActive, createdAt])\n  @@index([location])\n  @@index([ownerId])\n  @@index([subscriptionPlan])\n  @@index([subscriptionStatus])\n  @@index([trialEndsAt])\n  @@index([currentPeriodEnd])\n  @@index([profileSlug])\n  @@index([isPublicProfile])\n  @@fulltext([name, description])\n  @@map(\"companies\")\n}\n\nmodel Message {\n  id         Int      @id @default(autoincrement())\n  content    String   @db.Text\n  senderId   Int\n  receiverId Int?\n  isRead     Boolean  @default(false)\n  type       String   @default(\"general\")\n  orderId    Int?\n  sampleId   Int?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  companyId  Int?\n  company    Company? @relation(fields: [companyId], references: [id])\n  order      Order?   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  receiver   User?    @relation(\"ReceivedMessages\", fields: [receiverId], references: [id], onDelete: Cascade)\n  sample     Sample?  @relation(fields: [sampleId], references: [id], onDelete: Cascade)\n  sender     User     @relation(\"SentMessages\", fields: [senderId], references: [id], onDelete: Cascade)\n\n  @@index([orderId])\n  @@index([sampleId])\n  @@index([senderId])\n  @@index([receiverId])\n  @@index([companyId], map: \"messages_companyId_fkey\")\n  @@map(\"messages\")\n}\n\nmodel ProductionTracking {\n  id                     Int                     @id @default(autoincrement())\n  orderId                Int?                    @unique\n  sampleId               Int?\n  currentStage           ProductionStage         @default(PLANNING)\n  overallStatus          ProductionStatus        @default(IN_PROGRESS)\n  progress               Int                     @default(0)\n  estimatedStartDate     DateTime?\n  estimatedEndDate       DateTime?\n  actualStartDate        DateTime?\n  actualEndDate          DateTime?\n  notes                  String?                 @db.Text\n  createdAt              DateTime                @default(now())\n  updatedAt              DateTime                @updatedAt\n  companyId              Int?\n  sewingWorkshopId       Int?\n  packagingWorkshopId    Int?\n  customerApprovalStatus ApprovalStatus          @default(DRAFT)\n  customerApprovedAt     DateTime?\n  customerNote           String?                 @db.Text\n  revisionCount          Int                     @default(0)\n  notifications          Notification[]          @relation(\"ProductionNotifications\")\n  productionRevisions    ProductionRevision[]\n  stageUpdates           ProductionStageUpdate[]\n  company                Company?                @relation(fields: [companyId], references: [id])\n  order                  Order?                  @relation(fields: [orderId], references: [id])\n  packagingWorkshop      Workshop?               @relation(\"PackagingWorkshop\", fields: [packagingWorkshopId], references: [id])\n  sample                 Sample?                 @relation(fields: [sampleId], references: [id])\n  sewingWorkshop         Workshop?               @relation(\"SewingWorkshop\", fields: [sewingWorkshopId], references: [id])\n  qualityControls        QualityControl[]\n  revisions              Revision[]\n  tasks                  Task[]                  @relation(\"ProductionTrackingTasks\")\n\n  @@index([companyId], map: \"production_tracking_companyId_fkey\")\n  @@index([packagingWorkshopId], map: \"production_tracking_packagingWorkshopId_fkey\")\n  @@index([sampleId], map: \"production_tracking_sampleId_fkey\")\n  @@index([sewingWorkshopId], map: \"production_tracking_sewingWorkshopId_fkey\")\n  @@map(\"production_tracking\")\n}\n\nmodel Revision {\n  id                   Int                 @id @default(autoincrement())\n  orderId              Int?\n  sampleId             Int?\n  productionTrackingId Int?\n  revisionNumber       Int                 @default(1)\n  requestMessage       String?\n  responseMessage      String?\n  status               String              @default(\"pending\")\n  requestedAt          DateTime            @default(now())\n  completedAt          DateTime?\n  createdAt            DateTime            @default(now())\n  updatedAt            DateTime            @updatedAt\n  order                Order?              @relation(fields: [orderId], references: [id])\n  productionTracking   ProductionTracking? @relation(fields: [productionTrackingId], references: [id])\n  sample               Sample?             @relation(fields: [sampleId], references: [id])\n\n  @@index([orderId], map: \"revisions_orderId_fkey\")\n  @@index([productionTrackingId], map: \"revisions_productionTrackingId_fkey\")\n  @@index([sampleId], map: \"revisions_sampleId_fkey\")\n  @@map(\"revisions\")\n}\n\nmodel User {\n  id                        Int                      @id @default(autoincrement())\n  email                     String                   @unique\n  password                  String\n  name                      String?\n  username                  String?                  @unique\n  firstName                 String?\n  lastName                  String?\n  phone                     String?\n  companyId                 Int?\n  role                      Role                     @default(INDIVIDUAL_CUSTOMER)\n  isCompanyOwner            Boolean                  @default(false)\n  department                Department?\n  jobTitle                  String?\n  permissions               Json?\n  isActive                  Boolean                  @default(true)\n  isPendingApproval         Boolean                  @default(false)\n  avatar                    String?                  @db.Text\n  bio                       String?                  @db.Text\n  socialLinks               Json?\n  emailNotifications        Boolean                  @default(true)\n  pushNotifications         Boolean                  @default(false)\n  language                  String                   @default(\"tr\")\n  timezone                  String                   @default(\"Europe/Istanbul\")\n  createdAt                 DateTime                 @default(now())\n  updatedAt                 DateTime                 @updatedAt\n  resetToken                String?\n  resetTokenExpiry          DateTime?\n  emailVerificationExpiry   DateTime?\n  emailVerificationToken    String?\n  emailVerified             Boolean                  @default(false)\n  customAvatar              String?                  @db.Text\n  orderProductionUpdates    OrderProduction[]        @relation(\"OrderProductionUpdates\")\n  customerQuestions         Question[]               @relation(\"CustomerQuestions\")\n  manufactureQuestions      Question[]               @relation(\"ManufactureQuestions\")\n  customerReviews           Review[]                 @relation(\"CustomerReviews\")\n  sampleProductionUpdates   SampleProduction[]\n  createdReports            AdminReport[]\n  categories                Category[]\n  collections               Collection[]\n  ownedCompanies            Company?                 @relation(\"CompanyOwner\")\n  createdCompanyCategories  CompanyCategory[]\n  approvedPartnerships      CompanyPartnership[]     @relation(\"PartnershipApprover\")\n  initiatedPartnerships     CompanyPartnership[]\n  createdLibraryItems       LibraryItem[]            @relation(\"LibraryItemCreator\")\n  receivedMessages          Message[]                @relation(\"ReceivedMessages\")\n  sentMessages              Message[]                @relation(\"SentMessages\")\n  notifications             Notification[]           @relation(\"UserNotifications\")\n  respondedNegotiations     OrderNegotiation[]       @relation(\"RespondedNegotiations\")\n  sentNegotiations          OrderNegotiation[]       @relation(\"SentNegotiations\")\n  customerOrders            Order[]                  @relation(\"CustomerOrders\")\n  manufactureOrders         Order[]                  @relation(\"ManufactureOrders\")\n  revisionRequests          ProductionRevision[]     @relation(\"RevisionRequester\")\n  qualityInspections        QualityControl[]         @relation(\"QualityInspector\")\n  customerSamples           Sample[]                 @relation(\"CustomerSamples\")\n  manufactureSamples        Sample[]                 @relation(\"ManufactureSamples\")\n  createdCategoryMappings   SharedCategoryMapping[]\n  createdStandardCategories StandardCategory[]       @relation(\"StandardCategoryCreator\")\n  assignedTasks             Task[]                   @relation(\"AssignedTasks\")\n  tasks                     Task[]                   @relation(\"UserTasks\")\n  favoriteCollections       UserFavoriteCollection[]\n  company                   Company?                 @relation(\"CompanyEmployees\", fields: [companyId], references: [id])\n  ownedWorkshops            Workshop[]               @relation(\"WorkshopOwner\")\n\n  @@index([email])\n  @@index([username])\n  @@index([companyId, role])\n  @@index([companyId, isActive])\n  @@index([companyId, department])\n  @@index([role, isActive])\n  @@index([isActive])\n  @@index([isPendingApproval])\n  @@index([createdAt])\n  @@map(\"users\")\n}\n\nmodel StandardCategory {\n  id                Int                @id @default(autoincrement())\n  code              String             @unique\n  name              String\n  description       String?            @db.Text\n  level             CategoryLevel\n  order             Int                @default(0)\n  icon              String?\n  image             String?\n  isActive          Boolean            @default(true)\n  isPublic          Boolean            @default(true)\n  keywords          String?            @db.Text\n  tags              String?\n  parentId          Int?\n  createdById       Int?\n  createdAt         DateTime           @default(now())\n  updatedAt         DateTime           @updatedAt\n  companyCategories CompanyCategory[]\n  createdBy         User?              @relation(\"StandardCategoryCreator\", fields: [createdById], references: [id])\n  parentCategory    StandardCategory?  @relation(\"StandardCategoryTree\", fields: [parentId], references: [id])\n  subCategories     StandardCategory[] @relation(\"StandardCategoryTree\")\n\n  @@index([code])\n  @@index([level])\n  @@index([parentId])\n  @@index([isActive, isPublic])\n  @@index([order])\n  @@index([createdById], map: \"standard_categories_createdById_fkey\")\n  @@fulltext([name, description, keywords])\n  @@map(\"standard_categories\")\n}\n\nmodel CompanyCategory {\n  id                 Int                     @id @default(autoincrement())\n  type               CategoryType            @default(COMPANY_CUSTOM)\n  standardCategoryId Int?\n  name               String\n  description        String?                 @db.Text\n  companyId          Int\n  parentId           Int?\n  internalCode       String?\n  order              Int                     @default(0)\n  isActive           Boolean                 @default(true)\n  productCount       Int                     @default(0)\n  lastUsedAt         DateTime?\n  customFields       Json?\n  authorId           Int?\n  createdAt          DateTime                @default(now())\n  updatedAt          DateTime                @updatedAt\n  collections        Collection[]\n  author             User?                   @relation(fields: [authorId], references: [id])\n  company            Company                 @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  parentCategory     CompanyCategory?        @relation(\"CompanyCategoryTree\", fields: [parentId], references: [id])\n  subCategories      CompanyCategory[]       @relation(\"CompanyCategoryTree\")\n  standardCategory   StandardCategory?       @relation(fields: [standardCategoryId], references: [id])\n  sourceMappings     SharedCategoryMapping[] @relation(\"SourceCategory\")\n  targetMappings     SharedCategoryMapping[] @relation(\"TargetCategory\")\n\n  @@unique([companyId, parentId, name])\n  @@index([companyId, type])\n  @@index([companyId, isActive])\n  @@index([standardCategoryId])\n  @@index([parentId])\n  @@index([productCount])\n  @@index([authorId], map: \"company_categories_authorId_fkey\")\n  @@fulltext([name, description])\n  @@map(\"company_categories\")\n}\n\nmodel Category {\n  id               Int          @id @default(autoincrement())\n  createdAt        DateTime     @default(now())\n  updatedAt        DateTime     @updatedAt\n  name             String\n  description      String?\n  authorId         Int?\n  parentCategoryId Int?\n  companyId        Int?\n  author           User?        @relation(fields: [authorId], references: [id])\n  company          Company?     @relation(fields: [companyId], references: [id])\n  parentCategory   Category?    @relation(\"CategoryToSubCategories\", fields: [parentCategoryId], references: [id])\n  subCategories    Category[]   @relation(\"CategoryToSubCategories\")\n  collections      Collection[]\n\n  @@unique([companyId, parentCategoryId, name])\n  @@index([authorId], map: \"categories_authorId_fkey\")\n  @@index([parentCategoryId], map: \"categories_parentCategoryId_fkey\")\n  @@map(\"categories\")\n}\n\nmodel Collection {\n  id                 Int                      @id @default(autoincrement())\n  createdAt          DateTime                 @default(now())\n  updatedAt          DateTime                 @updatedAt\n  name               String\n  description        String?                  @db.Text\n  modelCode          String                   @unique\n  season             String?\n  gender             Gender?\n  fit                String?\n  trend              String?\n  colors             String?\n  sizeGroups         String?\n  sizeRange          String?\n  measurementChart   String?\n  fabricComposition  String?                  @db.Text\n  accessories        String?                  @db.Text\n  images             String?                  @db.Text\n  techPack           String?\n  moq                Int?\n  targetPrice        Float?\n  targetLeadTime     Int?\n  notes              String?                  @db.Text\n  likesCount         Int                      @default(0)\n  viewCount          Int                      @default(0)\n  shareCount         Int                      @default(0)\n  lastViewedAt       DateTime?\n  price              Float                    @default(0)\n  sku                String?                  @unique\n  stock              Int                      @default(0)\n  isActive           Boolean                  @default(true)\n  isFeatured         Boolean                  @default(false)\n  slug               String?                  @unique\n  productionSchedule Json?\n  categoryId         Int?\n  companyCategoryId  Int?\n  authorId           Int?\n  companyId          Int?\n  currency           String?                  @default(\"USD\")\n  deadline           DateTime?\n  deadlineDays       Int?\n  questions          Question[]\n  reviews            Review[]\n  billOfMaterials    BillOfMaterial[]\n  author             User?                    @relation(fields: [authorId], references: [id])\n  category           Category?                @relation(fields: [categoryId], references: [id])\n  companyCategory    CompanyCategory?         @relation(fields: [companyCategoryId], references: [id])\n  company            Company?                 @relation(fields: [companyId], references: [id])\n  orders             Order[]\n  samples            Sample[]                 @relation(\"SampleCollection\")\n  revisedSamples     Sample[]                 @relation(\"OriginalCollection\")\n  tasks              Task[]                   @relation(\"CollectionTasks\")\n  favoritedBy        UserFavoriteCollection[]\n  certifications     LibraryItem[]            @relation(\"CollectionCertifications\")\n\n  @@index([companyId, isActive])\n  @@index([season])\n  @@index([gender])\n  @@index([isFeatured])\n  @@index([isActive, createdAt])\n  @@index([slug])\n  @@index([modelCode])\n  @@index([createdAt])\n  @@index([viewCount])\n  @@index([likesCount])\n  @@index([authorId], map: \"collections_authorId_fkey\")\n  @@index([categoryId], map: \"collections_categoryId_fkey\")\n  @@index([companyCategoryId], map: \"collections_companyCategoryId_fkey\")\n  @@fulltext([name, description])\n  @@map(\"collections\")\n}\n\nmodel UserFavoriteCollection {\n  id           Int        @id @default(autoincrement())\n  createdAt    DateTime   @default(now())\n  userId       Int\n  collectionId Int\n  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)\n  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, collectionId])\n  @@index([userId])\n  @@index([collectionId])\n  @@map(\"user_favorite_collections\")\n}\n\nmodel Sample {\n  id                      Int                  @id @default(autoincrement())\n  createdAt               DateTime             @default(now())\n  updatedAt               DateTime             @updatedAt\n  sampleNumber            String               @unique\n  sampleType              SampleType           @default(STANDARD)\n  status                  SampleStatus         @default(REQUESTED)\n  customerNote            String?              @db.Text\n  manufacturerResponse    String?              @db.Text\n  customDesignImages      String?              @db.Text\n  revisionRequests        String?\n  originalCollectionId    Int?\n  name                    String?\n  description             String?              @db.Text\n  images                  String?              @db.Text\n  aiGenerated             Boolean?             @default(false)\n  aiPrompt                String?              @db.Text\n  aiSketchUrl             String?\n  unitPrice               Float?\n  productionDays          Int?\n  estimatedProductionDate DateTime?\n  actualProductionDate    DateTime?\n  shippingDate            DateTime?\n  deliveryAddress         String?\n  cargoTrackingNumber     String?\n  customerQuotedPrice     Float?\n  customerQuoteDays       Int?\n  customerQuoteNote       String?              @db.Text\n  customerQuoteType       String?\n  customerQuoteSentAt     DateTime?\n  collectionId            Int?\n  customerId              Int\n  manufactureId           Int\n  companyId               Int?\n  viewCount               Int                  @default(0)\n  shareCount              Int                  @default(0)\n  lastViewedAt            DateTime?\n  productionHistory       SampleProduction[]\n  aiAnalysis              AIAnalysis?\n  messages                Message[]\n  notifications           Notification[]       @relation(\"SampleNotifications\")\n  productionTracking      ProductionTracking[]\n  revisions               Revision[]\n  collection              Collection?          @relation(\"SampleCollection\", fields: [collectionId], references: [id])\n  company                 Company?             @relation(fields: [companyId], references: [id])\n  customer                User                 @relation(\"CustomerSamples\", fields: [customerId], references: [id])\n  manufacture             User                 @relation(\"ManufactureSamples\", fields: [manufactureId], references: [id])\n  originalCollection      Collection?          @relation(\"OriginalCollection\", fields: [originalCollectionId], references: [id])\n  tasks                   Task[]               @relation(\"SampleTasks\")\n\n  @@index([status])\n  @@index([customerId, status])\n  @@index([manufactureId, status])\n  @@index([companyId, status, createdAt])\n  @@index([collectionId])\n  @@index([sampleNumber])\n  @@index([sampleType, status])\n  @@index([aiGenerated])\n  @@index([createdAt])\n  @@index([status, createdAt])\n  @@index([viewCount])\n  @@index([originalCollectionId], map: \"samples_originalCollectionId_fkey\")\n  @@map(\"samples\")\n}\n\nmodel AIAnalysis {\n  id                     Int      @id @default(autoincrement())\n  createdAt              DateTime @default(now())\n  updatedAt              DateTime @updatedAt\n  detectedProduct        String?\n  detectedColor          String?\n  detectedFabric         String?\n  detectedPattern        String?\n  detectedGender         String?\n  detectedClassification String?\n  detectedAccessories    String?\n  technicalDescription   String?  @db.Text\n  qualityAnalysis        String?  @db.Text\n  qualityScore           Float?\n  costAnalysis           String?  @db.Text\n  estimatedCostMin       Float?\n  estimatedCostMax       Float?\n  suggestedMinOrder      Int?\n  trendAnalysis          String?  @db.Text\n  trendScore             Float?\n  targetMarket           String?\n  salesPotential         String?\n  designSuggestions      String?  @db.Text\n  designStyle            String?\n  designFocus            String?\n  sampleId               Int      @unique\n  sample                 Sample   @relation(fields: [sampleId], references: [id], onDelete: Cascade)\n\n  @@map(\"ai_analyses\")\n}\n\nmodel SampleProduction {\n  id            Int          @id @default(autoincrement())\n  createdAt     DateTime     @default(now())\n  status        SampleStatus\n  note          String?\n  estimatedDays Int?\n  actualDate    DateTime?\n  sampleId      Int\n  updatedById   Int\n  sample        Sample       @relation(fields: [sampleId], references: [id])\n  updatedBy     User         @relation(fields: [updatedById], references: [id])\n\n  @@index([sampleId], map: \"SampleProduction_sampleId_fkey\")\n  @@index([updatedById], map: \"SampleProduction_updatedById_fkey\")\n}\n\nmodel Order {\n  id                      Int                 @id @default(autoincrement())\n  createdAt               DateTime            @default(now())\n  updatedAt               DateTime            @updatedAt\n  orderNumber             String              @unique\n  quantity                Int\n  unitPrice               Float\n  totalPrice              Float\n  targetPrice             Float?\n  currency                String?             @default(\"USD\")\n  deadline                DateTime?\n  notes                   String?             @db.Text\n  status                  OrderStatus         @default(PENDING)\n  customerNote            String?\n  manufacturerResponse    String?\n  customerQuotedPrice     Float?\n  customerQuoteDays       Int?\n  customerQuoteNote       String?             @db.Text\n  customerQuoteType       String?\n  customerQuoteSentAt     DateTime?\n  productionDays          Int?\n  estimatedProductionDate DateTime?\n  actualProductionStart   DateTime?\n  actualProductionEnd     DateTime?\n  shippingDate            DateTime?\n  deliveryAddress         String?\n  cargoTrackingNumber     String?\n  negotiationStatus       String?             @default(\"OPEN\")\n  agreedPrice             Float?\n  agreedDays              Int?\n  agreedAt                DateTime?\n  agreedQuantity          Int?\n  collectionId            Int\n  customerId              Int\n  manufactureId           Int\n  companyId               Int?\n  productionHistory       OrderProduction[]\n  messages                Message[]\n  notifications           Notification[]      @relation(\"OrderNotifications\")\n  negotiations            OrderNegotiation[]\n  collection              Collection          @relation(fields: [collectionId], references: [id])\n  company                 Company?            @relation(fields: [companyId], references: [id])\n  customer                User                @relation(\"CustomerOrders\", fields: [customerId], references: [id])\n  manufacture             User                @relation(\"ManufactureOrders\", fields: [manufactureId], references: [id])\n  productionTracking      ProductionTracking?\n  revisions               Revision[]\n  tasks                   Task[]              @relation(\"OrderTasks\")\n\n  @@index([orderNumber])\n  @@index([status])\n  @@index([customerId, status])\n  @@index([manufactureId, status])\n  @@index([companyId, status, createdAt])\n  @@index([collectionId])\n  @@map(\"orders\")\n}\n\nmodel OrderNegotiation {\n  id             Int       @id @default(autoincrement())\n  orderId        Int\n  senderId       Int\n  senderRole     String\n  unitPrice      Float\n  productionDays Int\n  quantity       Int?\n  currency       String    @default(\"USD\")\n  message        String?   @db.Text\n  status         String    @default(\"PENDING\")\n  respondedAt    DateTime?\n  respondedBy    Int?\n  createdAt      DateTime  @default(now())\n  order          Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  responder      User?     @relation(\"RespondedNegotiations\", fields: [respondedBy], references: [id])\n  sender         User      @relation(\"SentNegotiations\", fields: [senderId], references: [id])\n\n  @@index([orderId, createdAt])\n  @@index([status])\n  @@index([respondedBy], map: \"order_negotiations_respondedBy_fkey\")\n  @@index([senderId], map: \"order_negotiations_senderId_fkey\")\n  @@map(\"order_negotiations\")\n}\n\nmodel OrderProduction {\n  id            Int         @id @default(autoincrement())\n  createdAt     DateTime    @default(now())\n  status        OrderStatus\n  note          String?\n  estimatedDays Int?\n  actualDate    DateTime?\n  orderId       Int\n  updatedById   Int\n  order         Order       @relation(fields: [orderId], references: [id])\n  updatedBy     User        @relation(\"OrderProductionUpdates\", fields: [updatedById], references: [id])\n\n  @@index([orderId], map: \"OrderProduction_orderId_fkey\")\n  @@index([updatedById], map: \"OrderProduction_updatedById_fkey\")\n}\n\nmodel Question {\n  id            Int        @id @default(autoincrement())\n  createdAt     DateTime   @default(now())\n  updatedAt     DateTime   @updatedAt\n  question      String\n  answer        String?\n  isAnswered    Boolean    @default(false)\n  isPublic      Boolean    @default(true)\n  collectionId  Int\n  customerId    Int\n  manufactureId Int\n  collection    Collection @relation(fields: [collectionId], references: [id])\n  customer      User       @relation(\"CustomerQuestions\", fields: [customerId], references: [id])\n  manufacture   User       @relation(\"ManufactureQuestions\", fields: [manufactureId], references: [id])\n\n  @@index([collectionId], map: \"Question_collectionId_fkey\")\n  @@index([customerId], map: \"Question_customerId_fkey\")\n  @@index([manufactureId], map: \"Question_manufactureId_fkey\")\n}\n\nmodel Review {\n  id           Int        @id @default(autoincrement())\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime   @updatedAt\n  rating       Int\n  comment      String?\n  isApproved   Boolean    @default(false)\n  collectionId Int\n  customerId   Int\n  collection   Collection @relation(fields: [collectionId], references: [id])\n  customer     User       @relation(\"CustomerReviews\", fields: [customerId], references: [id])\n\n  @@index([collectionId], map: \"Review_collectionId_fkey\")\n  @@index([customerId], map: \"Review_customerId_fkey\")\n}\n\nmodel File {\n  id          String   @id @default(cuid())\n  filename    String\n  path        String\n  size        Int\n  mimetype    String\n  encoding    String?\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"files\")\n}\n\nmodel ProductionStageUpdate {\n  id              Int                @id @default(autoincrement())\n  productionId    Int\n  stage           ProductionStage\n  status          StageStatus        @default(NOT_STARTED)\n  actualStartDate DateTime?\n  actualEndDate   DateTime?\n  estimatedDays   Int?\n  notes           String?            @db.Text\n  photos          String?            @db.Text\n  isRevision      Boolean            @default(false)\n  delayReason     String?            @db.Text\n  extraDays       Int                @default(0)\n  createdAt       DateTime           @default(now())\n  updatedAt       DateTime           @updatedAt\n  production      ProductionTracking @relation(fields: [productionId], references: [id], onDelete: Cascade)\n\n  @@index([productionId], map: \"production_stage_updates_productionId_fkey\")\n  @@map(\"production_stage_updates\")\n}\n\nmodel QualityControl {\n  id               Int                @id @default(autoincrement())\n  productionId     Int\n  inspectorId      Int\n  checkDate        DateTime           @default(now())\n  result           QualityResult      @default(PENDING)\n  score            Int?\n  notes            String?            @db.Text\n  photos           String?            @db.Text\n  fabricDefects    Boolean            @default(false)\n  sewingDefects    Boolean            @default(false)\n  measureDefects   Boolean            @default(false)\n  finishingDefects Boolean            @default(false)\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  inspector        User               @relation(\"QualityInspector\", fields: [inspectorId], references: [id])\n  production       ProductionTracking @relation(fields: [productionId], references: [id], onDelete: Cascade)\n\n  @@index([inspectorId], map: \"quality_controls_inspectorId_fkey\")\n  @@index([productionId], map: \"quality_controls_productionId_fkey\")\n  @@map(\"quality_controls\")\n}\n\nmodel Workshop {\n  id                   Int                  @id @default(autoincrement())\n  name                 String               @unique\n  type                 WorkshopType\n  capacity             Int?\n  location             String?\n  isActive             Boolean              @default(true)\n  ownerId              Int\n  createdAt            DateTime             @default(now())\n  updatedAt            DateTime             @updatedAt\n  packagingProductions ProductionTracking[] @relation(\"PackagingWorkshop\")\n  sewingProductions    ProductionTracking[] @relation(\"SewingWorkshop\")\n  owner                User                 @relation(\"WorkshopOwner\", fields: [ownerId], references: [id])\n\n  @@index([ownerId], map: \"workshops_ownerId_fkey\")\n  @@map(\"workshops\")\n}\n\nmodel LibraryItem {\n  id                                 Int              @id @default(autoincrement())\n  scope                              LibraryScope     @default(COMPANY_CUSTOM)\n  category                           LibraryCategory\n  code                               String?          @unique\n  name                               String\n  description                        String?          @db.Text\n  imageUrl                           String?          @db.Text\n  data                               Json?\n  tags                               Json?\n  internalCode                       String?\n  notes                              String?          @db.Text\n  isActive                           Boolean          @default(true)\n  isPopular                          Boolean          @default(false)\n  companyId                          Int?\n  standardItemId                     Int?\n  createdById                        Int?\n  createdAt                          DateTime         @default(now())\n  updatedAt                          DateTime         @updatedAt\n  iconValue                          String?\n  bomUsages                          BillOfMaterial[] @relation(\"BOMLibraryItems\")\n  company                            Company?         @relation(\"CompanyLibraryItems\", fields: [companyId], references: [id], onDelete: Cascade)\n  createdBy                          User?            @relation(\"LibraryItemCreator\", fields: [createdById], references: [id])\n  standardItem                       LibraryItem?     @relation(\"StandardReference\", fields: [standardItemId], references: [id])\n  companyItems                       LibraryItem[]    @relation(\"StandardReference\")\n  collections                        Collection[]     @relation(\"CollectionCertifications\")\n  library_items_ItemCertifications_A LibraryItem[]    @relation(\"ItemCertifications\")\n  library_items_ItemCertifications_B LibraryItem[]    @relation(\"ItemCertifications\")\n\n  @@unique([companyId, category, name])\n  @@index([scope, category])\n  @@index([companyId, category, isActive])\n  @@index([category, isActive, isPopular])\n  @@index([standardItemId])\n  @@index([code])\n  @@index([createdById], map: \"library_items_createdById_fkey\")\n  @@fulltext([name, description])\n  @@map(\"library_items\")\n}\n\nmodel BillOfMaterial {\n  id            Int              @id @default(autoincrement())\n  collectionId  Int\n  componentType BOMComponentType @default(MATERIAL)\n  libraryItemId Int?\n  componentName String?\n  consumption   Float\n  unit          String\n  wastePercent  Float            @default(0)\n  placement     String?\n  supplier      String?\n  supplierCode  String?\n  leadTime      Int?\n  notes         String?          @db.Text\n  createdAt     DateTime         @default(now())\n  updatedAt     DateTime         @updatedAt\n  collection    Collection       @relation(fields: [collectionId], references: [id], onDelete: Cascade)\n  libraryItem   LibraryItem?     @relation(\"BOMLibraryItems\", fields: [libraryItemId], references: [id])\n\n  @@index([collectionId])\n  @@index([componentType])\n  @@index([libraryItemId])\n  @@map(\"bill_of_materials\")\n}\n\nmodel ProductionRevision {\n  id            Int                @id @default(autoincrement())\n  productionId  Int\n  reason        String\n  description   String?            @db.Text\n  extraDays     Int                @default(0)\n  extraCost     Float              @default(0)\n  isApproved    Boolean            @default(false)\n  requestedById Int\n  createdAt     DateTime           @default(now())\n  updatedAt     DateTime           @updatedAt\n  production    ProductionTracking @relation(fields: [productionId], references: [id], onDelete: Cascade)\n  requestedBy   User               @relation(\"RevisionRequester\", fields: [requestedById], references: [id])\n\n  @@index([productionId], map: \"production_revisions_productionId_fkey\")\n  @@index([requestedById], map: \"production_revisions_requestedById_fkey\")\n  @@map(\"production_revisions\")\n}\n\nmodel Notification {\n  id                   Int                 @id @default(autoincrement())\n  type                 NotificationType\n  title                String\n  message              String              @db.Text\n  link                 String?\n  isRead               Boolean             @default(false)\n  userId               Int\n  orderId              Int?\n  sampleId             Int?\n  productionTrackingId Int?\n  createdAt            DateTime            @default(now())\n  updatedAt            DateTime            @updatedAt\n  data                 Json?\n  order                Order?              @relation(\"OrderNotifications\", fields: [orderId], references: [id], onDelete: Cascade)\n  productionTracking   ProductionTracking? @relation(\"ProductionNotifications\", fields: [productionTrackingId], references: [id], onDelete: Cascade)\n  sample               Sample?             @relation(\"SampleNotifications\", fields: [sampleId], references: [id], onDelete: Cascade)\n  user                 User                @relation(\"UserNotifications\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isRead])\n  @@index([userId, createdAt])\n  @@index([orderId], map: \"notifications_orderId_fkey\")\n  @@index([productionTrackingId], map: \"notifications_productionTrackingId_fkey\")\n  @@index([sampleId], map: \"notifications_sampleId_fkey\")\n  @@map(\"notifications\")\n}\n\nmodel Task {\n  id                   Int                 @id @default(autoincrement())\n  title                String\n  description          String?             @db.LongText\n  status               TaskStatus          @default(TODO)\n  priority             TaskPriority        @default(MEDIUM)\n  type                 TaskType\n  relatedStatus        String?\n  targetStatus         String?\n  entityType           String?\n  productionStage      String?\n  userId               Int\n  assignedToId         Int?\n  collectionId         Int?\n  sampleId             Int?\n  orderId              Int?\n  productionTrackingId Int?\n  dueDate              DateTime?\n  completedAt          DateTime?\n  createdAt            DateTime            @default(now())\n  updatedAt            DateTime            @updatedAt\n  notes                String?             @db.LongText\n  assignedBy           Int?\n  actionData           Json?\n  assignedTo           User?               @relation(\"AssignedTasks\", fields: [assignedToId], references: [id])\n  collection           Collection?         @relation(\"CollectionTasks\", fields: [collectionId], references: [id])\n  order                Order?              @relation(\"OrderTasks\", fields: [orderId], references: [id])\n  productionTracking   ProductionTracking? @relation(\"ProductionTrackingTasks\", fields: [productionTrackingId], references: [id])\n  sample               Sample?             @relation(\"SampleTasks\", fields: [sampleId], references: [id])\n  user                 User                @relation(\"UserTasks\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, status])\n  @@index([userId, dueDate])\n  @@index([status, priority])\n  @@index([relatedStatus])\n  @@index([entityType, relatedStatus])\n  @@index([createdAt])\n  @@index([assignedToId], map: \"tasks_assignedToId_fkey\")\n  @@index([collectionId], map: \"tasks_collectionId_fkey\")\n  @@index([orderId], map: \"tasks_orderId_fkey\")\n  @@index([productionTrackingId], map: \"tasks_productionTrackingId_fkey\")\n  @@index([sampleId], map: \"tasks_sampleId_fkey\")\n  @@map(\"tasks\")\n}\n\nmodel CompanyPartnership {\n  id               Int                     @id @default(autoincrement())\n  companyId        Int\n  partnerId        Int\n  type             PartnershipType\n  status           PartnershipStatus       @default(PENDING)\n  title            String\n  description      String?                 @db.Text\n  terms            Json?\n  contractValue    Float?\n  currency         String?                 @default(\"USD\")\n  paymentTerms     String?\n  startDate        DateTime?\n  endDate          DateTime?\n  renewalDate      DateTime?\n  totalOrders      Int                     @default(0)\n  totalRevenue     Float                   @default(0)\n  averageLeadTime  Int?\n  qualityScore     Float?\n  onTimeDelivery   Float?\n  notes            String?                 @db.Text\n  contractFile     String?\n  nda              Boolean                 @default(false)\n  initiatedById    Int?\n  approvedById     Int?\n  createdAt        DateTime                @default(now())\n  updatedAt        DateTime                @updatedAt\n  approvedBy       User?                   @relation(\"PartnershipApprover\", fields: [approvedById], references: [id])\n  company          Company                 @relation(\"CompanyAsInitiator\", fields: [companyId], references: [id], onDelete: Cascade)\n  initiatedBy      User?                   @relation(fields: [initiatedById], references: [id])\n  partner          Company                 @relation(\"CompanyAsPartner\", fields: [partnerId], references: [id], onDelete: Cascade)\n  categoryMappings SharedCategoryMapping[]\n\n  @@unique([companyId, partnerId, type])\n  @@index([companyId, status])\n  @@index([partnerId, status])\n  @@index([type, status])\n  @@index([status, startDate])\n  @@index([approvedById], map: \"company_partnerships_approvedById_fkey\")\n  @@index([initiatedById], map: \"company_partnerships_initiatedById_fkey\")\n  @@map(\"company_partnerships\")\n}\n\nmodel SharedCategoryMapping {\n  id               Int                @id @default(autoincrement())\n  partnershipId    Int\n  sourceCompanyId  Int\n  sourceCategoryId Int\n  targetCompanyId  Int\n  targetCategoryId Int\n  matchScore       Float?\n  isManualMapping  Boolean            @default(false)\n  isActive         Boolean            @default(true)\n  allowCrossOrders Boolean            @default(true)\n  priceAdjustment  Float?             @default(0)\n  notes            String?            @db.Text\n  createdById      Int?\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  createdBy        User?              @relation(fields: [createdById], references: [id])\n  partnership      CompanyPartnership @relation(fields: [partnershipId], references: [id], onDelete: Cascade)\n  sourceCategory   CompanyCategory    @relation(\"SourceCategory\", fields: [sourceCategoryId], references: [id], onDelete: Cascade)\n  sourceCompany    Company            @relation(\"SourceCategoryCompany\", fields: [sourceCompanyId], references: [id], onDelete: Cascade)\n  targetCategory   CompanyCategory    @relation(\"TargetCategory\", fields: [targetCategoryId], references: [id], onDelete: Cascade)\n  targetCompany    Company            @relation(\"TargetCategoryCompany\", fields: [targetCompanyId], references: [id], onDelete: Cascade)\n\n  @@unique([sourceCategoryId, targetCategoryId])\n  @@index([partnershipId])\n  @@index([sourceCompanyId])\n  @@index([targetCompanyId])\n  @@index([isActive])\n  @@index([createdById], map: \"shared_category_mappings_createdById_fkey\")\n  @@index([targetCategoryId], map: \"shared_category_mappings_targetCategoryId_fkey\")\n  @@map(\"shared_category_mappings\")\n}\n\nmodel AdminReport {\n  id          Int          @id @default(autoincrement())\n  type        ReportType\n  period      ReportPeriod\n  title       String\n  description String?      @db.Text\n  startDate   DateTime\n  endDate     DateTime\n  companies   Json\n  metrics     Json\n  charts      Json?\n  summary     String?      @db.Text\n  insights    String?      @db.Text\n  comparisons Json?\n  rankings    Json?\n  benchmarks  Json?\n  reportFile  String?\n  createdById Int\n  isPublic    Boolean      @default(false)\n  sharedWith  Json?\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n  createdBy   User         @relation(fields: [createdById], references: [id])\n\n  @@index([type, period])\n  @@index([createdById])\n  @@index([startDate, endDate])\n  @@index([createdAt])\n  @@map(\"admin_reports\")\n}\n\nmodel CompanyMetrics {\n  id                    Int          @id @default(autoincrement())\n  companyId             Int\n  date                  DateTime     @default(now())\n  period                ReportPeriod @default(DAILY)\n  totalOrders           Int          @default(0)\n  completedOrders       Int          @default(0)\n  cancelledOrders       Int          @default(0)\n  pendingOrders         Int          @default(0)\n  orderCompletionRate   Float?\n  totalRevenue          Float        @default(0)\n  averageOrderValue     Float?\n  totalProfit           Float?\n  profitMargin          Float?\n  totalSamples          Int          @default(0)\n  approvedSamples       Int          @default(0)\n  sampleApprovalRate    Float?\n  averageLeadTime       Int?\n  onTimeDeliveryRate    Float?\n  qualityScore          Float?\n  defectRate            Float?\n  returnRate            Float?\n  customerSatisfaction  Float?\n  activeCustomers       Int          @default(0)\n  newCustomers          Int          @default(0)\n  retainedCustomers     Int          @default(0)\n  customerRetentionRate Float?\n  capacityUtilization   Float?\n  productivityScore     Float?\n  employeeCount         Int?\n  activeUsers           Int          @default(0)\n  loginCount            Int          @default(0)\n  featureUsage          Json?\n  createdAt             DateTime     @default(now())\n  updatedAt             DateTime     @updatedAt\n  company               Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)\n\n  @@unique([companyId, date, period])\n  @@index([companyId, date])\n  @@index([period, date])\n  @@index([date])\n  @@map(\"company_metrics\")\n}\n\nenum Role {\n  ADMIN\n  COMPANY_OWNER\n  COMPANY_EMPLOYEE\n  INDIVIDUAL_CUSTOMER\n  MANUFACTURE\n  CUSTOMER\n}\n\nenum CompanyType {\n  MANUFACTURER\n  BUYER\n  BOTH\n}\n\nenum Department {\n  PURCHASING\n  PRODUCTION\n  QUALITY\n  DESIGN\n  SALES\n  MANAGEMENT\n}\n\nenum SubscriptionPlan {\n  FREE\n  STARTER\n  PROFESSIONAL\n  ENTERPRISE\n  CUSTOM\n}\n\nenum SubscriptionStatus {\n  TRIAL\n  ACTIVE\n  PAST_DUE\n  CANCELLED\n  EXPIRED\n}\n\nenum BillingCycle {\n  MONTHLY\n  YEARLY\n}\n\nenum Gender {\n  WOMEN\n  MEN\n  GIRLS\n  BOYS\n  UNISEX\n}\n\nenum CategoryType {\n  GLOBAL_STANDARD\n  COMPANY_CUSTOM\n}\n\nenum CategoryLevel {\n  ROOT\n  MAIN\n  SUB\n  DETAIL\n}\n\nenum SampleType {\n  STANDARD\n  REVISION\n  CUSTOM\n  DEVELOPMENT\n}\n\nenum SampleStatus {\n  AI_DESIGN\n  PENDING_APPROVAL\n  PENDING\n  REVIEWED\n  QUOTE_SENT\n  CUSTOMER_QUOTE_SENT\n  MANUFACTURER_REVIEWING_QUOTE\n  CONFIRMED\n  REJECTED\n  REJECTED_BY_CUSTOMER\n  REJECTED_BY_MANUFACTURER\n  IN_DESIGN\n  PATTERN_READY\n  IN_PRODUCTION\n  PRODUCTION_COMPLETE\n  QUALITY_CHECK\n  SHIPPED\n  DELIVERED\n  ON_HOLD\n  CANCELLED\n  REQUESTED\n  RECEIVED\n  COMPLETED\n}\n\nenum OrderStatus {\n  PENDING\n  REVIEWED\n  QUOTE_SENT\n  CUSTOMER_QUOTE_SENT\n  MANUFACTURER_REVIEWING_QUOTE\n  CONFIRMED\n  PRODUCTION_PLAN_SENT\n  PRODUCTION_PLAN_APPROVED\n  PRODUCTION_PLAN_REJECTED\n  REJECTED\n  REJECTED_BY_CUSTOMER\n  REJECTED_BY_MANUFACTURER\n  IN_PRODUCTION\n  PRODUCTION_COMPLETE\n  QUALITY_CHECK\n  SHIPPED\n  DELIVERED\n  CANCELLED\n}\n\nenum LibraryCategory {\n  COLOR\n  FABRIC\n  MATERIAL\n  SIZE_GROUP\n  SEASON\n  FIT\n  CERTIFICATION\n}\n\nenum LibraryScope {\n  PLATFORM_STANDARD\n  COMPANY_CUSTOM\n}\n\nenum BOMComponentType {\n  FABRIC\n  MATERIAL\n  LABOR\n  OTHER\n}\n\nenum ProductionStage {\n  PLANNING\n  FABRIC\n  CUTTING\n  SEWING\n  PRESSING\n  QUALITY\n  PACKAGING\n  SHIPPING\n}\n\nenum StageStatus {\n  NOT_STARTED\n  IN_PROGRESS\n  ON_HOLD\n  COMPLETED\n  REQUIRES_REVISION\n}\n\nenum ProductionStatus {\n  IN_PROGRESS\n  WAITING\n  BLOCKED\n  COMPLETED\n  CANCELLED\n}\n\nenum ApprovalStatus {\n  DRAFT\n  PENDING\n  APPROVED\n  REJECTED\n  REVISION\n}\n\nenum QualityResult {\n  PENDING\n  PASSED\n  FAILED\n  CONDITIONAL_PASS\n}\n\nenum WorkshopType {\n  SEWING\n  PACKAGING\n  QUALITY_CONTROL\n  GENERAL\n}\n\nenum NotificationType {\n  ORDER\n  SAMPLE\n  MESSAGE\n  PRODUCTION\n  QUALITY\n  SYSTEM\n  USER_MANAGEMENT\n}\n\nenum TaskStatus {\n  TODO\n  IN_PROGRESS\n  COMPLETED\n  CANCELLED\n}\n\nenum TaskPriority {\n  LOW\n  MEDIUM\n  HIGH\n}\n\nenum TaskType {\n  STATUS_CHANGE\n  QUOTATION\n  REVIEW_QUOTE\n  APPROVE_REJECT\n  PAYMENT\n  DOCUMENT\n  PRODUCTION_STAGE\n  QUALITY_CHECK\n  SHIPMENT\n  MATERIAL\n  MEETING\n  REVISION\n  NOTIFICATION\n  DEADLINE_WARNING\n  OTHER\n}\n\nenum PartnershipType {\n  SUPPLIER\n  MANUFACTURER\n  DISTRIBUTOR\n  WHITE_LABEL\n  CO_BRANDING\n  SUBCONTRACTOR\n  STRATEGIC_PARTNER\n}\n\nenum PartnershipStatus {\n  PENDING\n  ACTIVE\n  SUSPENDED\n  TERMINATED\n  REJECTED\n}\n\nenum ReportType {\n  COMPANY_COMPARISON\n  PERFORMANCE\n  FINANCIAL\n  QUALITY\n  MARKET_ANALYSIS\n  TREND_ANALYSIS\n  CUSTOM\n}\n\nenum ReportPeriod {\n  DAILY\n  WEEKLY\n  MONTHLY\n  QUARTERLY\n  YEARLY\n  CUSTOM\n}\n",
  "inlineSchemaHash": "a4ed4ff0b68f7fc96c9578cdc3e5134921aeb8df26f973e80e44dc96c9e4d202",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CompanyType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"subscriptionPlan\",\"kind\":\"enum\",\"type\":\"SubscriptionPlan\"},{\"name\":\"subscriptionStatus\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"trialStartedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialEndsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptionStartedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"billingCycle\",\"kind\":\"enum\",\"type\":\"BillingCycle\"},{\"name\":\"billingEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxSamples\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxOrders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxCollections\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxStorageGB\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentSamples\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentOrders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentCollections\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentStorageGB\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brandColors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"profileSlug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublicProfile\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"socialLinks\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"defaultView\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabledModules\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToCompany\"},{\"name\":\"collections\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToCompany\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyOwner\"},{\"name\":\"companyCategories\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"CompanyToCompanyCategory\"},{\"name\":\"metrics\",\"kind\":\"object\",\"type\":\"CompanyMetrics\",\"relationName\":\"CompanyToCompanyMetrics\"},{\"name\":\"partnershipsAsInitiator\",\"kind\":\"object\",\"type\":\"CompanyPartnership\",\"relationName\":\"CompanyAsInitiator\"},{\"name\":\"partnershipsAsPartner\",\"kind\":\"object\",\"type\":\"CompanyPartnership\",\"relationName\":\"CompanyAsPartner\"},{\"name\":\"libraryItems\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"CompanyLibraryItems\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"CompanyToMessage\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CompanyToOrder\"},{\"name\":\"productionTracking\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"CompanyToProductionTracking\"},{\"name\":\"samples\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"CompanyToSample\"},{\"name\":\"sourceCategoryMappings\",\"kind\":\"object\",\"type\":\"SharedCategoryMapping\",\"relationName\":\"SourceCategoryCompany\"},{\"name\":\"targetCategoryMappings\",\"kind\":\"object\",\"type\":\"SharedCategoryMapping\",\"relationName\":\"TargetCategoryCompany\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyEmployees\"}],\"dbName\":\"companies\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToMessage\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"MessageToOrder\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReceivedMessages\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"MessageToSample\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SentMessages\"}],\"dbName\":\"messages\"},\"ProductionTracking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentStage\",\"kind\":\"enum\",\"type\":\"ProductionStage\"},{\"name\":\"overallStatus\",\"kind\":\"enum\",\"type\":\"ProductionStatus\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedStartDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estimatedEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualStartDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sewingWorkshopId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"packagingWorkshopId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerApprovalStatus\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"customerApprovedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customerNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revisionCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"ProductionNotifications\"},{\"name\":\"productionRevisions\",\"kind\":\"object\",\"type\":\"ProductionRevision\",\"relationName\":\"ProductionRevisionToProductionTracking\"},{\"name\":\"stageUpdates\",\"kind\":\"object\",\"type\":\"ProductionStageUpdate\",\"relationName\":\"ProductionStageUpdateToProductionTracking\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToProductionTracking\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToProductionTracking\"},{\"name\":\"packagingWorkshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"PackagingWorkshop\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"ProductionTrackingToSample\"},{\"name\":\"sewingWorkshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"SewingWorkshop\"},{\"name\":\"qualityControls\",\"kind\":\"object\",\"type\":\"QualityControl\",\"relationName\":\"ProductionTrackingToQualityControl\"},{\"name\":\"revisions\",\"kind\":\"object\",\"type\":\"Revision\",\"relationName\":\"ProductionTrackingToRevision\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"ProductionTrackingTasks\"}],\"dbName\":\"production_tracking\"},\"Revision\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionTrackingId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"revisionNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requestMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responseMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToRevision\"},{\"name\":\"productionTracking\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"ProductionTrackingToRevision\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"RevisionToSample\"}],\"dbName\":\"revisions\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"isCompanyOwner\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"department\",\"kind\":\"enum\",\"type\":\"Department\"},{\"name\":\"jobTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPendingApproval\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socialLinks\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pushNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resetToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resetTokenExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailVerificationExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailVerificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"customAvatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderProductionUpdates\",\"kind\":\"object\",\"type\":\"OrderProduction\",\"relationName\":\"OrderProductionUpdates\"},{\"name\":\"customerQuestions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"CustomerQuestions\"},{\"name\":\"manufactureQuestions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"ManufactureQuestions\"},{\"name\":\"customerReviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"CustomerReviews\"},{\"name\":\"sampleProductionUpdates\",\"kind\":\"object\",\"type\":\"SampleProduction\",\"relationName\":\"SampleProductionToUser\"},{\"name\":\"createdReports\",\"kind\":\"object\",\"type\":\"AdminReport\",\"relationName\":\"AdminReportToUser\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToUser\"},{\"name\":\"collections\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToUser\"},{\"name\":\"ownedCompanies\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyOwner\"},{\"name\":\"createdCompanyCategories\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"CompanyCategoryToUser\"},{\"name\":\"approvedPartnerships\",\"kind\":\"object\",\"type\":\"CompanyPartnership\",\"relationName\":\"PartnershipApprover\"},{\"name\":\"initiatedPartnerships\",\"kind\":\"object\",\"type\":\"CompanyPartnership\",\"relationName\":\"CompanyPartnershipToUser\"},{\"name\":\"createdLibraryItems\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"LibraryItemCreator\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ReceivedMessages\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"SentMessages\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"UserNotifications\"},{\"name\":\"respondedNegotiations\",\"kind\":\"object\",\"type\":\"OrderNegotiation\",\"relationName\":\"RespondedNegotiations\"},{\"name\":\"sentNegotiations\",\"kind\":\"object\",\"type\":\"OrderNegotiation\",\"relationName\":\"SentNegotiations\"},{\"name\":\"customerOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CustomerOrders\"},{\"name\":\"manufactureOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"ManufactureOrders\"},{\"name\":\"revisionRequests\",\"kind\":\"object\",\"type\":\"ProductionRevision\",\"relationName\":\"RevisionRequester\"},{\"name\":\"qualityInspections\",\"kind\":\"object\",\"type\":\"QualityControl\",\"relationName\":\"QualityInspector\"},{\"name\":\"customerSamples\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"CustomerSamples\"},{\"name\":\"manufactureSamples\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"ManufactureSamples\"},{\"name\":\"createdCategoryMappings\",\"kind\":\"object\",\"type\":\"SharedCategoryMapping\",\"relationName\":\"SharedCategoryMappingToUser\"},{\"name\":\"createdStandardCategories\",\"kind\":\"object\",\"type\":\"StandardCategory\",\"relationName\":\"StandardCategoryCreator\"},{\"name\":\"assignedTasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"AssignedTasks\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"UserTasks\"},{\"name\":\"favoriteCollections\",\"kind\":\"object\",\"type\":\"UserFavoriteCollection\",\"relationName\":\"UserToUserFavoriteCollection\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyEmployees\"},{\"name\":\"ownedWorkshops\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopOwner\"}],\"dbName\":\"users\"},\"StandardCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"CategoryLevel\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keywords\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyCategories\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"CompanyCategoryToStandardCategory\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StandardCategoryCreator\"},{\"name\":\"parentCategory\",\"kind\":\"object\",\"type\":\"StandardCategory\",\"relationName\":\"StandardCategoryTree\"},{\"name\":\"subCategories\",\"kind\":\"object\",\"type\":\"StandardCategory\",\"relationName\":\"StandardCategoryTree\"}],\"dbName\":\"standard_categories\"},\"CompanyCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CategoryType\"},{\"name\":\"standardCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"internalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"productCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"collections\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToCompanyCategory\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyCategoryToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCompanyCategory\"},{\"name\":\"parentCategory\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"CompanyCategoryTree\"},{\"name\":\"subCategories\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"CompanyCategoryTree\"},{\"name\":\"standardCategory\",\"kind\":\"object\",\"type\":\"StandardCategory\",\"relationName\":\"CompanyCategoryToStandardCategory\"},{\"name\":\"sourceMappings\",\"kind\":\"object\",\"type\":\"SharedCategoryMapping\",\"relationName\":\"SourceCategory\"},{\"name\":\"targetMappings\",\"kind\":\"object\",\"type\":\"SharedCategoryMapping\",\"relationName\":\"TargetCategory\"}],\"dbName\":\"company_categories\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parentCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CategoryToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CategoryToCompany\"},{\"name\":\"parentCategory\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToSubCategories\"},{\"name\":\"subCategories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToSubCategories\"},{\"name\":\"collections\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CategoryToCollection\"}],\"dbName\":\"categories\"},\"Collection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"fit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trend\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colors\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sizeGroups\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sizeRange\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"measurementChart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fabricComposition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"techPack\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"moq\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"targetPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"targetLeadTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"likesCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shareCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastViewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productionSchedule\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deadlineDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"CollectionToQuestion\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"CollectionToReview\"},{\"name\":\"billOfMaterials\",\"kind\":\"object\",\"type\":\"BillOfMaterial\",\"relationName\":\"BillOfMaterialToCollection\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CollectionToUser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToCollection\"},{\"name\":\"companyCategory\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"CollectionToCompanyCategory\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CollectionToCompany\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CollectionToOrder\"},{\"name\":\"samples\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"SampleCollection\"},{\"name\":\"revisedSamples\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"OriginalCollection\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"CollectionTasks\"},{\"name\":\"favoritedBy\",\"kind\":\"object\",\"type\":\"UserFavoriteCollection\",\"relationName\":\"CollectionToUserFavoriteCollection\"},{\"name\":\"certifications\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"CollectionCertifications\"}],\"dbName\":\"collections\"},\"UserFavoriteCollection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToUserFavoriteCollection\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserFavoriteCollection\"}],\"dbName\":\"user_favorite_collections\"},\"Sample\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sampleNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sampleType\",\"kind\":\"enum\",\"type\":\"SampleType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SampleStatus\"},{\"name\":\"customerNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturerResponse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customDesignImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revisionRequests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalCollectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiGenerated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"aiPrompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiSketchUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"productionDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedProductionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualProductionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shippingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cargoTrackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerQuotedPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"customerQuoteDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerQuoteNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerQuoteType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerQuoteSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"manufactureId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shareCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastViewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productionHistory\",\"kind\":\"object\",\"type\":\"SampleProduction\",\"relationName\":\"SampleToSampleProduction\"},{\"name\":\"aiAnalysis\",\"kind\":\"object\",\"type\":\"AIAnalysis\",\"relationName\":\"AIAnalysisToSample\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToSample\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"SampleNotifications\"},{\"name\":\"productionTracking\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"ProductionTrackingToSample\"},{\"name\":\"revisions\",\"kind\":\"object\",\"type\":\"Revision\",\"relationName\":\"RevisionToSample\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"SampleCollection\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToSample\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CustomerSamples\"},{\"name\":\"manufacture\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ManufactureSamples\"},{\"name\":\"originalCollection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"OriginalCollection\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"SampleTasks\"}],\"dbName\":\"samples\"},\"AIAnalysis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"detectedProduct\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedFabric\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedPattern\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedGender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedClassification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedAccessories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"technicalDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qualityAnalysis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"costAnalysis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedCostMin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"estimatedCostMax\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"suggestedMinOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trendAnalysis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trendScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"targetMarket\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salesPotential\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"designSuggestions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"designStyle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"designFocus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"AIAnalysisToSample\"}],\"dbName\":\"ai_analyses\"},\"SampleProduction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SampleStatus\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actualDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"SampleToSampleProduction\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SampleProductionToUser\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"targetPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"customerNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturerResponse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerQuotedPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"customerQuoteDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerQuoteNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerQuoteType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerQuoteSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productionDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedProductionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualProductionStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualProductionEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shippingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cargoTrackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"negotiationStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agreedPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"agreedDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"agreedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agreedQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"manufactureId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionHistory\",\"kind\":\"object\",\"type\":\"OrderProduction\",\"relationName\":\"OrderToOrderProduction\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToOrder\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"OrderNotifications\"},{\"name\":\"negotiations\",\"kind\":\"object\",\"type\":\"OrderNegotiation\",\"relationName\":\"OrderToOrderNegotiation\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToOrder\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToOrder\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CustomerOrders\"},{\"name\":\"manufacture\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ManufactureOrders\"},{\"name\":\"productionTracking\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"OrderToProductionTracking\"},{\"name\":\"revisions\",\"kind\":\"object\",\"type\":\"Revision\",\"relationName\":\"OrderToRevision\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"OrderTasks\"}],\"dbName\":\"orders\"},\"OrderNegotiation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"senderRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"productionDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"respondedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderNegotiation\"},{\"name\":\"responder\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RespondedNegotiations\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SentNegotiations\"}],\"dbName\":\"order_negotiations\"},\"OrderProduction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actualDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderProduction\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderProductionUpdates\"}],\"dbName\":null},\"Question\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAnswered\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"manufactureId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToQuestion\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CustomerQuestions\"},{\"name\":\"manufacture\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ManufactureQuestions\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionToReview\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CustomerReviews\"}],\"dbName\":null},\"File\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimetype\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encoding\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"files\"},\"ProductionStageUpdate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"ProductionStage\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"StageStatus\"},{\"name\":\"actualStartDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estimatedDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photos\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRevision\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"delayReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extraDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"production\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"ProductionStageUpdateToProductionTracking\"}],\"dbName\":\"production_stage_updates\"},\"QualityControl\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"inspectorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"checkDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"result\",\"kind\":\"enum\",\"type\":\"QualityResult\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photos\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fabricDefects\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sewingDefects\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"measureDefects\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"finishingDefects\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inspector\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QualityInspector\"},{\"name\":\"production\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"ProductionTrackingToQualityControl\"}],\"dbName\":\"quality_controls\"},\"Workshop\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"WorkshopType\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"packagingProductions\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"PackagingWorkshop\"},{\"name\":\"sewingProductions\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"SewingWorkshop\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"WorkshopOwner\"}],\"dbName\":\"workshops\"},\"LibraryItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"scope\",\"kind\":\"enum\",\"type\":\"LibraryScope\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"LibraryCategory\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"internalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPopular\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"standardItemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"iconValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bomUsages\",\"kind\":\"object\",\"type\":\"BillOfMaterial\",\"relationName\":\"BOMLibraryItems\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyLibraryItems\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LibraryItemCreator\"},{\"name\":\"standardItem\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"StandardReference\"},{\"name\":\"companyItems\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"StandardReference\"},{\"name\":\"collections\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionCertifications\"},{\"name\":\"library_items_ItemCertifications_A\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"ItemCertifications\"},{\"name\":\"library_items_ItemCertifications_B\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"ItemCertifications\"}],\"dbName\":\"library_items\"},\"BillOfMaterial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"componentType\",\"kind\":\"enum\",\"type\":\"BOMComponentType\"},{\"name\":\"libraryItemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"componentName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consumption\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wastePercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"placement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplierCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"BillOfMaterialToCollection\"},{\"name\":\"libraryItem\",\"kind\":\"object\",\"type\":\"LibraryItem\",\"relationName\":\"BOMLibraryItems\"}],\"dbName\":\"bill_of_materials\"},\"ProductionRevision\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extraDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"extraCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"requestedById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"production\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"ProductionRevisionToProductionTracking\"},{\"name\":\"requestedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RevisionRequester\"}],\"dbName\":\"production_revisions\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionTrackingId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderNotifications\"},{\"name\":\"productionTracking\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"ProductionNotifications\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"SampleNotifications\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserNotifications\"}],\"dbName\":\"notifications\"},\"Task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TaskStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"TaskPriority\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TaskType\"},{\"name\":\"relatedStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productionStage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assignedToId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sampleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionTrackingId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actionData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"assignedTo\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedTasks\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"Collection\",\"relationName\":\"CollectionTasks\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderTasks\"},{\"name\":\"productionTracking\",\"kind\":\"object\",\"type\":\"ProductionTracking\",\"relationName\":\"ProductionTrackingTasks\"},{\"name\":\"sample\",\"kind\":\"object\",\"type\":\"Sample\",\"relationName\":\"SampleTasks\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserTasks\"}],\"dbName\":\"tasks\"},\"CompanyPartnership\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"partnerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PartnershipType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PartnershipStatus\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terms\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contractValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"renewalDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalOrders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalRevenue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"averageLeadTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"onTimeDelivery\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractFile\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nda\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"initiatedById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approvedById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PartnershipApprover\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyAsInitiator\"},{\"name\":\"initiatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyPartnershipToUser\"},{\"name\":\"partner\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyAsPartner\"},{\"name\":\"categoryMappings\",\"kind\":\"object\",\"type\":\"SharedCategoryMapping\",\"relationName\":\"CompanyPartnershipToSharedCategoryMapping\"}],\"dbName\":\"company_partnerships\"},\"SharedCategoryMapping\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"partnershipId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sourceCompanyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sourceCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"targetCompanyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"targetCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isManualMapping\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allowCrossOrders\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priceAdjustment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SharedCategoryMappingToUser\"},{\"name\":\"partnership\",\"kind\":\"object\",\"type\":\"CompanyPartnership\",\"relationName\":\"CompanyPartnershipToSharedCategoryMapping\"},{\"name\":\"sourceCategory\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"SourceCategory\"},{\"name\":\"sourceCompany\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"SourceCategoryCompany\"},{\"name\":\"targetCategory\",\"kind\":\"object\",\"type\":\"CompanyCategory\",\"relationName\":\"TargetCategory\"},{\"name\":\"targetCompany\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"TargetCategoryCompany\"}],\"dbName\":\"shared_category_mappings\"},\"AdminReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ReportType\"},{\"name\":\"period\",\"kind\":\"enum\",\"type\":\"ReportPeriod\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companies\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metrics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"charts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insights\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comparisons\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"rankings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"benchmarks\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reportFile\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sharedWith\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminReportToUser\"}],\"dbName\":\"admin_reports\"},\"CompanyMetrics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"period\",\"kind\":\"enum\",\"type\":\"ReportPeriod\"},{\"name\":\"totalOrders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completedOrders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cancelledOrders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pendingOrders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderCompletionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalRevenue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"averageOrderValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalProfit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"profitMargin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalSamples\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approvedSamples\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sampleApprovalRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"averageLeadTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"onTimeDeliveryRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defectRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"returnRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"customerSatisfaction\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"activeCustomers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"newCustomers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"retainedCustomers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerRetentionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"capacityUtilization\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"productivityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"employeeCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activeUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loginCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"featureUsage\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCompanyMetrics\"}],\"dbName\":\"company_metrics\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

