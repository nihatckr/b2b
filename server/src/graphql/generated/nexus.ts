/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../../context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddOrderItemInput: { // input type
    discountAmount?: number | null; // Float
    discountPercent?: number | null; // Float
    itemNote?: string | null; // String
    orderId: number; // Int!
    productVariantId: number; // Int!
    quantity: number; // Int!
    unitPrice: number; // Float!
  }
  AnalyticsFilterInput: { // input type
    categories?: Array<string | null> | null; // [String]
    customerId?: string | null; // String
    endDate?: string | null; // String
    manufacturerId?: string | null; // String
    period?: string | null; // String
    startDate?: string | null; // String
  }
  ApprovalFilterInput: { // input type
    approvalType?: NexusGenEnums['ApprovalType'] | null; // ApprovalType
    approverUserId?: number | null; // Int
    isOverdue?: boolean | null; // Boolean
    requesterUserId?: number | null; // Int
    status?: NexusGenEnums['StageStatus'] | null; // StageStatus
  }
  CategoryCreateInput: { // input type
    description?: string | null; // String
    name: string; // String!
    parentCategoryId?: number | null; // Int
  }
  CategoryUpdateInput: { // input type
    description?: string | null; // String
    name?: string | null; // String
    parentCategoryId?: number | null; // Int
  }
  ChangePasswordInput: { // input type
    newPassword: string; // String!
    oldPassword: string; // String!
  }
  CollectionFilterInput: { // input type
    categoryId?: number | null; // Int
    companyId?: number | null; // Int
    isActive?: boolean | null; // Boolean
    isFeatured?: boolean | null; // Boolean
    search?: string | null; // String
    userId?: number | null; // Int
  }
  CollectionFiltersInput: { // input type
    categoryId?: number | null; // Int
    certifications?: Array<string | null> | null; // [String]
    fabrics?: Array<string | null> | null; // [String]
    fit?: string | null; // String
    gender?: string | null; // String
    isActive?: boolean | null; // Boolean
    isFeatured?: boolean | null; // Boolean
    leadTimeMax?: number | null; // Int
    leadTimeMin?: number | null; // Int
    manufacturerId?: number | null; // Int
    minimumOrderQuantity?: number | null; // Int
    priceMax?: number | null; // Float
    priceMin?: number | null; // Float
    searchTerm?: string | null; // String
    season?: string | null; // String
  }
  CreateCompanyInput: { // input type
    address?: string | null; // String
    description?: string | null; // String
    email?: string | null; // String
    logo?: string | null; // String
    name: string; // String!
    phone?: string | null; // String
    taxNumber?: string | null; // String
    website?: string | null; // String
  }
  CreateNotificationInput: { // input type
    message: string; // String!
    metadata?: string | null; // String
    orderId: number; // Int!
    priority?: number | null; // Int
    recipientUserId: number; // Int!
    title: string; // String!
    type: NexusGenEnums['NotificationType']; // NotificationType!
  }
  CreateOrderApprovalInput: { // input type
    approvalType: NexusGenEnums['ApprovalType']; // ApprovalType!
    approverUserId: number; // Int!
    deadline?: string | null; // String
    metadata?: string | null; // String
    orderId: number; // Int!
    requestMessage?: string | null; // String
    stageTrackingId?: number | null; // Int
  }
  CreateOrderDeadlineInput: { // input type
    deadlineDate: string; // String!
    deadlineType: string; // String!
    description: string; // String!
    orderId: number; // Int!
    warningDays?: number | null; // Int
  }
  CreateOrderStageInput: { // input type
    assignedToId?: number | null; // Int
    notes?: string | null; // String
    orderId: number; // Int!
    plannedEndDate?: string | null; // String
    plannedStartDate?: string | null; // String
    priority?: number | null; // Int
    stage: NexusGenEnums['OrderStage']; // OrderStage!
    status?: NexusGenEnums['StageStatus'] | null; // StageStatus
  }
  CreateProductVariantInput: { // input type
    collectionId: number; // Int!
    color?: string | null; // String
    colorHex?: string | null; // String
    costPrice?: number | null; // Float
    currency?: NexusGenEnums['Currency'] | null; // Currency
    customAttributes?: NexusGenScalars['JSON'] | null; // JSON
    description?: string | null; // String
    dimensions?: NexusGenScalars['JSON'] | null; // JSON
    images?: NexusGenScalars['JSON'] | null; // JSON
    isActive?: boolean | null; // Boolean
    isAvailable?: boolean | null; // Boolean
    leadTimeDays?: number | null; // Int
    material?: string | null; // String
    maxOrderQuantity?: number | null; // Int
    minOrderQuantity?: number | null; // Int
    name: string; // String!
    packagingInfo?: NexusGenScalars['JSON'] | null; // JSON
    pattern?: string | null; // String
    price?: number | null; // Float
    size?: string | null; // String
    stockQuantity?: number | null; // Int
    thumbnail?: string | null; // String
    variantCode: string; // String!
    weight?: number | null; // Float
  }
  CreateRevisionApprovalInput: { // input type
    approvalType: string; // String!
    approverId: number; // Int!
    comments?: string | null; // String
    conditions?: string | null; // String
    deadline?: string | null; // String
    level: NexusGenEnums['ApprovalLevel']; // ApprovalLevel!
    metadata?: string | null; // String
    revisionRequestId: number; // Int!
  }
  CreateRevisionImpactInput: { // input type
    affectedResources?: string | null; // String
    alternativeOptions?: string | null; // String
    area: string; // String!
    costImpact: number; // Float!
    description: string; // String!
    mitigationPlan?: string | null; // String
    revisionRequestId: number; // Int!
    severity: NexusGenEnums['ImpactSeverity']; // ImpactSeverity!
    timeImpact: number; // Int!
  }
  CreateRevisionRequestInput: { // input type
    assignedToId?: number | null; // Int
    description: string; // String!
    estimatedCostImpact: number; // Float!
    estimatedTimeImpact: number; // Int!
    metadata?: string | null; // String
    orderId?: number | null; // Int
    productionTrackingId?: number | null; // Int
    requestedDeadline?: string | null; // String
    requiredApprovalLevel: NexusGenEnums['ApprovalLevel']; // ApprovalLevel!
    requiresCustomerApproval: boolean; // Boolean!
    requiresManufacturerApproval: boolean; // Boolean!
    sampleId?: number | null; // Int
    title: string; // String!
    type: NexusGenEnums['RevisionType']; // RevisionType!
  }
  CreateRevisionTimelineInput: { // input type
    description: string; // String!
    eventType: NexusGenEnums['RevisionEventType']; // RevisionEventType!
    metadata?: string | null; // String
    newValue?: string | null; // String
    previousValue?: string | null; // String
    revisionRequestId: number; // Int!
  }
  CreateSampleVariantInput: { // input type
    productVariantId: number; // Int!
    quantity?: number | null; // Int
    requestedColor?: string | null; // String
    requestedSize?: string | null; // String
    sampleId: number; // Int!
    specialRequest?: string | null; // String
    unitPrice?: number | null; // Float
  }
  FinalizeUploadInput: { // input type
    finalFileName?: string | null; // String
    metadata?: string | null; // String
    processImage?: boolean | null; // Boolean
    uploadId: string; // String!
  }
  ImageProcessingOptions: { // input type
    format?: NexusGenEnums['ImageFormat'] | null; // ImageFormat
    quality?: number | null; // Int
    resize?: NexusGenInputs['ImageResizeOptions'] | null; // ImageResizeOptions
  }
  ImageResizeOptions: { // input type
    fit?: NexusGenEnums['ImageFitMode'] | null; // ImageFitMode
    height?: number | null; // Int
    width?: number | null; // Int
  }
  MessageInput: { // input type
    content: string; // String!
    messageType?: NexusGenEnums['MessageType'] | null; // MessageType
    receiverId: number; // Int!
    relatedCollectionId?: number | null; // Int
    relatedOrderId?: number | null; // Int
    relatedSampleId?: number | null; // Int
  }
  NotificationFilterInput: { // input type
    fromDate?: string | null; // String
    isRead?: boolean | null; // Boolean
    minPriority?: number | null; // Int
    toDate?: string | null; // String
    type?: NexusGenEnums['NotificationType'] | null; // NotificationType
  }
  OrderFilterInput: { // input type
    collectionId?: number | null; // Int
    companyId?: number | null; // Int
    customerId?: number | null; // Int
    manufactureId?: number | null; // Int
    search?: string | null; // String
    status?: NexusGenEnums['OrderStatus'] | null; // OrderStatus
  }
  OrderFiltersInput: { // input type
    customerId?: number | null; // Int
    dueDateAfter?: string | null; // String
    dueDateBefore?: string | null; // String
    isRevised?: boolean | null; // Boolean
    manufactureId?: number | null; // Int
    orderCode?: string | null; // String
    priority?: string | null; // String
    searchTerm?: string | null; // String
    statuses?: Array<string | null> | null; // [String]
  }
  OrderWorkflowFilterInput: { // input type
    assignedToId?: number | null; // Int
    deadlineAfter?: string | null; // String
    deadlineBefore?: string | null; // String
    hasApprovals?: boolean | null; // Boolean
    hasDeadlines?: boolean | null; // Boolean
    hasNotifications?: boolean | null; // Boolean
    stage?: NexusGenEnums['OrderStage'] | null; // OrderStage
    status?: NexusGenEnums['StageStatus'] | null; // StageStatus
  }
  PaginationInput: { // input type
    after?: string | null; // String
    before?: string | null; // String
    first?: number | null; // Int
    last?: number | null; // Int
  }
  ProductVariantFiltersInput: { // input type
    collectionId?: number | null; // Int
    colorVariant?: string | null; // String
    isActive?: boolean | null; // Boolean
    priceMax?: number | null; // Float
    priceMin?: number | null; // Float
    searchTerm?: string | null; // String
    sizeVariant?: string | null; // String
    stockMin?: number | null; // Int
    variantCode?: string | null; // String
  }
  ProductionStageInput: { // input type
    actualEndDate?: NexusGenScalars['DateTime'] | null; // DateTime
    actualStartDate?: NexusGenScalars['DateTime'] | null; // DateTime
    notes?: string | null; // String
    productionId: number; // Int!
    stage: NexusGenEnums['ProductionStage']; // ProductionStage!
    status: NexusGenEnums['StageStatus']; // StageStatus!
  }
  RequestUploadInput: { // input type
    assetType: string; // String!
    category?: string | null; // String
    fileName: string; // String!
    fileSize: number; // Int!
    isPublic?: boolean | null; // Boolean
    metadata?: string | null; // String
    mimeType: string; // String!
  }
  RespondToApprovalInput: { // input type
    responseMessage?: string | null; // String
    status: NexusGenEnums['StageStatus']; // StageStatus!
  }
  RespondToRevisionApprovalInput: { // input type
    comments?: string | null; // String
    conditions?: string | null; // String
    status: NexusGenEnums['StageStatus']; // StageStatus!
  }
  RevisionApprovalFilterInput: { // input type
    approvalType?: string | null; // String
    approverId?: number | null; // Int
    createdAfter?: string | null; // String
    createdBefore?: string | null; // String
    deadlineAfter?: string | null; // String
    deadlineBefore?: string | null; // String
    level?: NexusGenEnums['ApprovalLevel'] | null; // ApprovalLevel
    revisionRequestId?: number | null; // Int
    status?: NexusGenEnums['StageStatus'] | null; // StageStatus
  }
  RevisionImpactFilterInput: { // input type
    area?: string | null; // String
    maxCostImpact?: number | null; // Float
    maxTimeImpact?: number | null; // Int
    minCostImpact?: number | null; // Float
    minTimeImpact?: number | null; // Int
    revisionRequestId?: number | null; // Int
    severity?: NexusGenEnums['ImpactSeverity'] | null; // ImpactSeverity
  }
  RevisionRequestFilterInput: { // input type
    assignedToId?: number | null; // Int
    createdAfter?: string | null; // String
    createdBefore?: string | null; // String
    currentApprovalLevel?: NexusGenEnums['ApprovalLevel'] | null; // ApprovalLevel
    deadlineAfter?: string | null; // String
    deadlineBefore?: string | null; // String
    maxCostImpact?: number | null; // Float
    maxTimeImpact?: number | null; // Int
    minCostImpact?: number | null; // Float
    minTimeImpact?: number | null; // Int
    orderId?: number | null; // Int
    productionTrackingId?: number | null; // Int
    requestedById?: number | null; // Int
    requiredApprovalLevel?: NexusGenEnums['ApprovalLevel'] | null; // ApprovalLevel
    requiresCustomerApproval?: boolean | null; // Boolean
    requiresManufacturerApproval?: boolean | null; // Boolean
    sampleId?: number | null; // Int
    search?: string | null; // String
    status?: NexusGenEnums['StageStatus'] | null; // StageStatus
    type?: NexusGenEnums['RevisionType'] | null; // RevisionType
  }
  RevisionRequestOrderByInput: { // input type
    direction: string; // String!
    field: string; // String!
  }
  RevisionTimelineFilterInput: { // input type
    createdAfter?: string | null; // String
    createdBefore?: string | null; // String
    eventType?: NexusGenEnums['RevisionEventType'] | null; // RevisionEventType
    performedById?: number | null; // Int
    revisionRequestId?: number | null; // Int
  }
  SampleFilterInput: { // input type
    collectionId?: number | null; // Int
    companyId?: number | null; // Int
    customerId?: number | null; // Int
    manufactureId?: number | null; // Int
    search?: string | null; // String
    status?: NexusGenEnums['SampleStatus'] | null; // SampleStatus
  }
  SampleFiltersInput: { // input type
    customerId?: number | null; // Int
    deliveryMethod?: string | null; // String
    manufactureId?: number | null; // Int
    sampleNumber?: string | null; // String
    sampleType?: string | null; // String
    searchTerm?: string | null; // String
    statuses?: Array<string | null> | null; // [String]
  }
  SearchFiltersInput: { // input type
    categoryId?: number | null; // Int
    certifications?: Array<string | null> | null; // [String]
    companyId?: number | null; // Int
    createdAfter?: string | null; // String
    createdBefore?: string | null; // String
    customerId?: number | null; // Int
    fabrics?: Array<string | null> | null; // [String]
    fit?: string | null; // String
    gender?: string | null; // String
    isActive?: boolean | null; // Boolean
    isFeatured?: boolean | null; // Boolean
    leadTimeMax?: number | null; // Int
    leadTimeMin?: number | null; // Int
    manufacturerId?: number | null; // Int
    priceMax?: number | null; // Float
    priceMin?: number | null; // Float
    searchTerm?: string | null; // String
    statuses?: Array<string | null> | null; // [String]
    tags?: Array<string | null> | null; // [String]
  }
  SearchSortInput: { // input type
    direction?: string | null; // String
    field?: string | null; // String
  }
  SortOrder: { // input type
    direction: string; // String!
    field: string; // String!
  }
  UpdateCompanyInput: { // input type
    address?: string | null; // String
    description?: string | null; // String
    email?: string | null; // String
    isActive?: boolean | null; // Boolean
    logo?: string | null; // String
    name?: string | null; // String
    phone?: string | null; // String
    taxNumber?: string | null; // String
    website?: string | null; // String
  }
  UpdateOrderDeadlineInput: { // input type
    deadlineDate?: string | null; // String
    description?: string | null; // String
    isActive?: boolean | null; // Boolean
    isCompleted?: boolean | null; // Boolean
    warningDays?: number | null; // Int
  }
  UpdateOrderItemInput: { // input type
    discountAmount?: number | null; // Float
    discountPercent?: number | null; // Float
    itemNote?: string | null; // String
    quantity?: number | null; // Int
    unitPrice?: number | null; // Float
  }
  UpdateOrderStageInput: { // input type
    actualEndDate?: string | null; // String
    actualStartDate?: string | null; // String
    assignedToId?: number | null; // Int
    notes?: string | null; // String
    priority?: number | null; // Int
    status?: NexusGenEnums['StageStatus'] | null; // StageStatus
  }
  UpdateProductVariantInput: { // input type
    color?: string | null; // String
    colorHex?: string | null; // String
    costPrice?: number | null; // Float
    currency?: NexusGenEnums['Currency'] | null; // Currency
    customAttributes?: NexusGenScalars['JSON'] | null; // JSON
    description?: string | null; // String
    dimensions?: NexusGenScalars['JSON'] | null; // JSON
    discontinuedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    images?: NexusGenScalars['JSON'] | null; // JSON
    isActive?: boolean | null; // Boolean
    isAvailable?: boolean | null; // Boolean
    leadTimeDays?: number | null; // Int
    material?: string | null; // String
    maxOrderQuantity?: number | null; // Int
    minOrderQuantity?: number | null; // Int
    name?: string | null; // String
    packagingInfo?: NexusGenScalars['JSON'] | null; // JSON
    pattern?: string | null; // String
    price?: number | null; // Float
    reservedQuantity?: number | null; // Int
    seasonalAvailability?: NexusGenScalars['JSON'] | null; // JSON
    size?: string | null; // String
    stockQuantity?: number | null; // Int
    thumbnail?: string | null; // String
    weight?: number | null; // Float
  }
  UpdateRevisionImpactInput: { // input type
    affectedResources?: string | null; // String
    alternativeOptions?: string | null; // String
    area?: string | null; // String
    costImpact?: number | null; // Float
    description?: string | null; // String
    mitigationPlan?: string | null; // String
    severity?: NexusGenEnums['ImpactSeverity'] | null; // ImpactSeverity
    timeImpact?: number | null; // Int
  }
  UpdateRevisionRequestInput: { // input type
    assignedToId?: number | null; // Int
    description?: string | null; // String
    estimatedCostImpact?: number | null; // Float
    estimatedTimeImpact?: number | null; // Int
    metadata?: string | null; // String
    requestedDeadline?: string | null; // String
    requiredApprovalLevel?: NexusGenEnums['ApprovalLevel'] | null; // ApprovalLevel
    requiresCustomerApproval?: boolean | null; // Boolean
    requiresManufacturerApproval?: boolean | null; // Boolean
    status?: NexusGenEnums['StageStatus'] | null; // StageStatus
    title?: string | null; // String
    type?: NexusGenEnums['RevisionType'] | null; // RevisionType
  }
  UpdateSampleVariantInput: { // input type
    completedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    quantity?: number | null; // Int
    requestedColor?: string | null; // String
    requestedSize?: string | null; // String
    specialRequest?: string | null; // String
    status?: NexusGenEnums['SampleStatus'] | null; // SampleStatus
    totalPrice?: number | null; // Float
    unitPrice?: number | null; // Float
  }
  UploadOptions: { // input type
    allowedTypes?: Array<string | null> | null; // [String]
    customPath?: string | null; // String
    expiresInMinutes?: number | null; // Int
    maxSize?: number | null; // Int
  }
  UserCreateInput: { // input type
    email: string; // String!
    name?: string | null; // String
    password: string; // String!
    role?: NexusGenEnums['Role'] | null; // Role
  }
  UserFilterInput: { // input type
    companyId?: number | null; // Int
    isActive?: boolean | null; // Boolean
    role?: NexusGenEnums['Role'] | null; // Role
    search?: string | null; // String
  }
  UserUniqueInput: { // input type
    email?: string | null; // String
    id?: number | null; // Int
  }
  UserUpdateInput: { // input type
    email?: string | null; // String
    name?: string | null; // String
  }
}

export interface NexusGenEnums {
  ApprovalLevel: "FINAL" | "L1" | "L2" | "L3"
  ApprovalType: "CUSTOMER_APPROVAL" | "DESIGN_APPROVAL" | "MANUFACTURER_APPROVAL" | "PRICE_APPROVAL" | "PRODUCTION_APPROVAL" | "QUALITY_APPROVAL" | "SAMPLE_APPROVAL" | "SHIPPING_APPROVAL"
  AssetType: "CERTIFICATE" | "COLLECTION_IMAGE" | "DOCUMENT" | "EVIDENCE_FILE" | "MESSAGE_ATTACHMENT" | "OTHER" | "PRODUCT_IMAGE" | "PROFILE_PICTURE" | "QC_REPORT" | "SAMPLE_IMAGE" | "SIZE_CHART" | "TECH_PACK"
  CollectionCategory: "BLOUSE" | "DRESS" | "JACKET" | "KNITWEAR" | "PANTS" | "SHIRT" | "SKIRT"
  Currency: "EUR" | "GBP" | "TRY" | "USD"
  DeliveryMethod: "CARGO" | "COURIER" | "PICKUP"
  Gender: "BOYS" | "GIRLS" | "MEN" | "UNISEX" | "WOMEN"
  ImageFitMode: "CONTAIN" | "COVER" | "FILL" | "INSIDE" | "OUTSIDE"
  ImageFormat: "JPEG" | "PNG" | "WEBP"
  ImpactSeverity: "CRITICAL" | "HIGH" | "LOW" | "MEDIUM"
  Incoterm: "CFR" | "CIF" | "CIP" | "CPT" | "DAP" | "DDP" | "DPU" | "EXW" | "FAS" | "FCA" | "FOB"
  MessageType: "DOCUMENT" | "IMAGE" | "SYSTEM" | "TEXT"
  NotificationType: "APPROVAL_GIVEN" | "APPROVAL_REQUIRED" | "DEADLINE_APPROACHING" | "DEADLINE_PASSED" | "MESSAGE_RECEIVED" | "ORDER_CREATED" | "PAYMENT_REQUIRED" | "PRODUCTION_STARTED" | "QUALITY_ISSUE" | "REJECTION_GIVEN" | "SHIPPING_UPDATE" | "STATUS_CHANGED"
  OrderStage: "APPROVAL" | "COMPLETION" | "INQUIRY" | "NEGOTIATION" | "PACKAGING" | "PRODUCTION" | "PRODUCTION_PLANNING" | "QUALITY_CONTROL" | "QUOTATION" | "SHIPPING"
  OrderStatus: "CANCELLED" | "CONFIRMED" | "DELIVERED" | "IN_PRODUCTION" | "PENDING" | "PRODUCTION_COMPLETE" | "QUALITY_CHECK" | "QUOTE_SENT" | "REJECTED" | "REVIEWED" | "SHIPPED"
  ProductionStage: "CUTTING" | "FABRIC" | "PACKAGING" | "PLANNING" | "QUALITY" | "SEWING" | "SHIPPING"
  ProductionStatus: "BLOCKED" | "CANCELLED" | "COMPLETED" | "DELAYED" | "IN_PROGRESS" | "NOT_STARTED" | "WAITING"
  QualityResult: "FAILED" | "NEEDS_REVISION" | "PASSED"
  QualityTestType: "APPEARANCE" | "COLOR_FASTNESS" | "DURABILITY" | "FABRIC_WEIGHT" | "MEASUREMENT" | "SEAM_STRENGTH" | "SHRINKAGE"
  ResponsibleDept: "FABRIC_SUPPLY" | "FABRIC_WORKSHOP" | "LOGISTICS" | "SEWING_WORKSHOP"
  RevisionEventType: "APPROVED" | "CANCELLED" | "CREATED" | "IMPLEMENTED" | "REJECTED" | "SUBMITTED" | "UPDATED"
  RevisionReason: "CAPACITY_ISSUE" | "FABRIC_DELAY" | "LOGISTICS_DELAY" | "OTHER" | "QUALITY_PROBLEM"
  RevisionType: "DEADLINE_CHANGE" | "OTHER" | "QUALITY_ISSUE" | "QUANTITY_CHANGE" | "SPECIFICATION_CHANGE" | "URGENT_REQUEST"
  Role: "ADMIN" | "CUSTOMER" | "MANUFACTURE"
  SampleStatus: "COMPLETED" | "IN_DESIGN" | "IN_PRODUCTION" | "PATTERN_READY" | "QUALITY_CHECK" | "RECEIVED" | "REJECTED" | "REQUESTED" | "SHIPPED"
  SampleType: "CRITICAL_URGENT" | "CUSTOM" | "STANDARD"
  SearchType: "ALL" | "COLLECTIONS" | "ORDERS" | "PRODUCTS" | "SAMPLES"
  StageStatus: "APPROVED" | "CANCELLED" | "COMPLETED" | "IN_PROGRESS" | "NOT_STARTED" | "ON_HOLD" | "REJECTED" | "WAITING_APPROVAL"
  UploadCategory: "COLLECTIONS" | "DOCUMENTS" | "QC" | "REVISIONS" | "SAMPLES" | "TEMP" | "USERS"
  VariantType: "COLOR" | "COMBINATION" | "CUSTOM" | "MATERIAL" | "PATTERN" | "SIZE"
  WorkshopType: "CUTTING" | "FABRIC" | "PACKAGING" | "SEWING"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  Decimal: any
  JSON: any
}

export interface NexusGenObjects {
  Asset: { // root type
    assetType: string; // String!
    category?: string | null; // String
    companyId?: number | null; // Int
    createdAt: string; // String!
    fileName: string; // String!
    fileSize: number; // Int!
    fileUrl: string; // String!
    id: number; // Int!
    isProcessed: boolean; // Boolean!
    isPublic: boolean; // Boolean!
    metadata?: string | null; // String
    mimeType: string; // String!
    originalName: string; // String!
    processingStatus?: string | null; // String
    thumbnailUrl?: string | null; // String
    updatedAt: string; // String!
    uploadId: string; // String!
    uploaderId: number; // Int!
  }
  AuthPayload: { // root type
    refreshToken?: string | null; // String
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  BusinessAnalytics: { // root type
    customers: NexusGenRootTypes['CustomerAnalytics']; // CustomerAnalytics!
    manufacturers: NexusGenRootTypes['ManufacturerAnalytics']; // ManufacturerAnalytics!
    marketTrends: Array<NexusGenRootTypes['MarketTrend'] | null>; // [MarketTrend]!
    orders: NexusGenRootTypes['OrderAnalytics']; // OrderAnalytics!
    revenue: NexusGenRootTypes['RevenueAnalytics']; // RevenueAnalytics!
  }
  Category: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description?: string | null; // String
    id: number; // Int!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  CategoryPerformance: { // root type
    averageDeliveryDays: number; // Float!
    categoryName: string; // String!
    completedOrders: number; // Int!
    customerSatisfaction: number; // Float!
    revisionRate: number; // Float!
    score: number; // Float!
    totalOrders: number; // Int!
  }
  Collection: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description?: string | null; // String
    id: number; // Int!
    images?: string | null; // String
    isActive: boolean; // Boolean!
    isFeatured: boolean; // Boolean!
    name: string; // String!
    priceRange?: string | null; // String
    season?: string | null; // String
    slug: string; // String!
    tags?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    viewCount: number; // Int!
    year?: number | null; // Int
  }
  CollectionConnection: { // root type
    edges: NexusGenRootTypes['CollectionEdge'][]; // [CollectionEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  CollectionEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Collection']; // Collection!
  }
  Company: { // root type
    address?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description?: string | null; // String
    email?: string | null; // String
    id: number; // Int!
    isActive: boolean; // Boolean!
    logo?: string | null; // String
    name: string; // String!
    phone?: string | null; // String
    taxNumber?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    website?: string | null; // String
  }
  CompanyStats: { // root type
    activeOrders: number; // Int!
    completedOrders: number; // Int!
    totalCollections: number; // Int!
    totalOrders: number; // Int!
    totalUsers: number; // Int!
  }
  CustomerAnalytics: { // root type
    activeCustomers: number; // Int!
    averageOrdersPerCustomer: number; // Float!
    customerRetentionRate: number; // Float!
    topCustomers: Array<NexusGenRootTypes['TopCustomerItem'] | null>; // [TopCustomerItem]!
    totalCustomers: number; // Int!
  }
  FileInfo: { // root type
    createdAt?: string | null; // String
    exists: boolean; // Boolean!
    mimeType?: string | null; // String
    modifiedAt?: string | null; // String
    size?: number | null; // Int
  }
  FileValidationResult: { // root type
    detectedMimeType?: string | null; // String
    errors?: string[] | null; // [String!]
    isValid: boolean; // Boolean!
    suggestedFileName?: string | null; // String
    warnings?: string[] | null; // [String!]
  }
  ManufacturerAnalytics: { // root type
    averageSlaScore: number; // Float!
    performanceDistribution: Array<NexusGenRootTypes['PerformanceDistributionItem'] | null>; // [PerformanceDistributionItem]!
    topPerformers: Array<NexusGenRootTypes['ManufacturerPerformanceItem'] | null>; // [ManufacturerPerformanceItem]!
    totalManufacturers: number; // Int!
  }
  ManufacturerPerformanceItem: { // root type
    averageResponseTime?: number | null; // Float
    manufacturerId: number; // Int!
    manufacturerName: string; // String!
    onTimeDeliveryRate: number; // Float!
    qualityScore: number; // Float!
    slaScore: number; // Float!
    totalOrders: number; // Int!
  }
  MarketTrend: { // root type
    analysis?: string | null; // String
    metric: string; // String!
    period: string; // String!
    trend: string; // String!
    value: number; // Float!
  }
  Message: { // root type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isRead: boolean; // Boolean!
    messageType: NexusGenEnums['MessageType']; // MessageType!
    relatedCollectionId?: number | null; // Int
    relatedOrderId?: number | null; // Int
    relatedSampleId?: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MonthlyRevenueItem: { // root type
    growthRate?: number | null; // Float
    month: string; // String!
    orderCount: number; // Int!
    revenue: number; // Float!
  }
  MonthlyTrend: { // root type
    changePercent?: number | null; // Float
    month: string; // String!
    status?: string | null; // String
    target: number; // Float!
    trend: string; // String!
    value: number; // Float!
  }
  Mutation: {};
  Order: { // root type
    actualDelivery?: NexusGenScalars['DateTime'] | null; // DateTime
    actualProductionEnd?: NexusGenScalars['DateTime'] | null; // DateTime
    actualProductionStart?: NexusGenScalars['DateTime'] | null; // DateTime
    advancePayment?: number | null; // Float
    cargoTrackingNumber?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    customerNote?: string | null; // String
    deliveryAddress?: string | null; // String
    estimatedDelivery?: NexusGenScalars['DateTime'] | null; // DateTime
    estimatedProductionDate?: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    manufacturerNote?: string | null; // String
    orderNumber: string; // String!
    productionDays?: number | null; // Int
    quantity: number; // Int!
    remainingBalance?: number | null; // Float
    shippingDate?: NexusGenScalars['DateTime'] | null; // DateTime
    status: NexusGenEnums['OrderStatus']; // OrderStatus!
    totalPrice: number; // Float!
    unitPrice: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  OrderAnalytics: { // root type
    averageCompletionDays: number; // Float!
    completionRate: number; // Float!
    onTimeDeliveryRate: number; // Float!
    ordersByStatus: Array<NexusGenRootTypes['OrderStatusCount'] | null>; // [OrderStatusCount]!
    revisionRate: number; // Float!
    totalOrders: number; // Int!
  }
  OrderApproval: { // root type
    approvalType: NexusGenEnums['ApprovalType']; // ApprovalType!
    approverUser?: NexusGenRootTypes['User'] | null; // User
    approverUserId?: number | null; // Int
    companyId: number; // Int!
    createdAt: string; // String!
    deadline?: string | null; // String
    id: number; // Int!
    metadata?: NexusGenScalars['JSON'] | null; // JSON
    order?: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    requestMessage?: string | null; // String
    requestedAt: string; // String!
    requesterUser?: NexusGenRootTypes['User'] | null; // User
    requesterUserId: number; // Int!
    respondedAt?: string | null; // String
    responseMessage?: string | null; // String
    stageTracking?: NexusGenRootTypes['OrderStageTracking'] | null; // OrderStageTracking
    stageTrackingId?: number | null; // Int
    status: NexusGenEnums['StageStatus']; // StageStatus!
    updatedAt: string; // String!
  }
  OrderConnection: { // root type
    edges: NexusGenRootTypes['OrderEdge'][]; // [OrderEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  OrderDeadline: { // root type
    companyId: number; // Int!
    completedAt?: string | null; // String
    createdAt: string; // String!
    deadlineDate: string; // String!
    deadlineType: string; // String!
    description: string; // String!
    id: number; // Int!
    isActive: boolean; // Boolean!
    isCompleted: boolean; // Boolean!
    isWarningTriggered: boolean; // Boolean!
    order?: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    updatedAt: string; // String!
    warningDays: number; // Int!
    warningTriggeredAt?: string | null; // String
  }
  OrderEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Order']; // Order!
  }
  OrderItem: { // root type
    companyId: number; // Int!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    discountAmount?: number | null; // Float
    discountPercent?: number | null; // Float
    finalPrice: number; // Float!
    id: number; // Int!
    itemNote?: string | null; // String
    orderId: number; // Int!
    productVariantId: number; // Int!
    quantity: number; // Int!
    totalPrice: number; // Float!
    unitPrice: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  OrderItemConnection: { // root type
    edges?: Array<NexusGenRootTypes['OrderItemEdge'] | null> | null; // [OrderItemEdge]
    pageInfo?: NexusGenRootTypes['PageInfo'] | null; // PageInfo
    totalCount?: number | null; // Int
  }
  OrderItemEdge: { // root type
    cursor?: string | null; // String
    node?: NexusGenRootTypes['OrderItem'] | null; // OrderItem
  }
  OrderNotification: { // root type
    companyId: number; // Int!
    createdAt: string; // String!
    id: number; // Int!
    isRead: boolean; // Boolean!
    message: string; // String!
    metadata?: NexusGenScalars['JSON'] | null; // JSON
    order?: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    priority: number; // Int!
    readAt?: string | null; // String
    recipientUser?: NexusGenRootTypes['User'] | null; // User
    recipientUserId: number; // Int!
    title: string; // String!
    type: NexusGenEnums['NotificationType']; // NotificationType!
  }
  OrderStageTracking: { // root type
    actualEndDate?: string | null; // String
    actualStartDate?: string | null; // String
    assignedTo?: NexusGenRootTypes['User'] | null; // User
    assignedToId?: number | null; // Int
    companyId: number; // Int!
    createdAt: string; // String!
    id: number; // Int!
    notes?: string | null; // String
    order?: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    plannedEndDate?: string | null; // String
    plannedStartDate?: string | null; // String
    priority: number; // Int!
    stage: NexusGenEnums['OrderStage']; // OrderStage!
    status: NexusGenEnums['StageStatus']; // StageStatus!
    updatedAt: string; // String!
  }
  OrderStatusCount: { // root type
    averageCompletionDays?: number | null; // Float
    count: number; // Int!
    percentage: number; // Float!
    status: string; // String!
  }
  OrderWorkflowSummary: { // root type
    activeDeadlines: number; // Int!
    completedStages: number; // Int!
    currentStage?: NexusGenEnums['OrderStage'] | null; // OrderStage
    currentStageStatus?: NexusGenEnums['StageStatus'] | null; // StageStatus
    estimatedCompletion?: string | null; // String
    nextDeadline?: NexusGenRootTypes['OrderDeadline'] | null; // OrderDeadline
    orderId: number; // Int!
    pendingApprovals: number; // Int!
    progressPercentage: number; // Int!
    totalStages: number; // Int!
    unreadNotifications: number; // Int!
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  PerformanceDistributionItem: { // root type
    manufacturerCount: number; // Int!
    percentage: number; // Float!
    scoreRange: string; // String!
  }
  PerformanceIssue: { // root type
    affectedOrders: number; // Int!
    category: string; // String!
    description: string; // String!
    estimatedImpact?: string | null; // String
    severity: string; // String!
    suggestedAction: string; // String!
  }
  PerformanceRecommendation: { // root type
    category: string; // String!
    description: string; // String!
    estimatedDays?: number | null; // Int
    expectedImprovement?: string | null; // String
    potentialROI?: number | null; // Float
    priority: string; // String!
    title: string; // String!
  }
  ProductVariant: { // root type
    collectionId: number; // Int!
    color?: string | null; // String
    colorHex?: string | null; // String
    companyId: number; // Int!
    costPrice?: NexusGenScalars['Decimal'] | null; // Decimal
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: NexusGenEnums['Currency']; // Currency!
    customAttributes?: NexusGenScalars['JSON'] | null; // JSON
    description?: string | null; // String
    dimensions?: NexusGenScalars['JSON'] | null; // JSON
    discontinuedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    images?: NexusGenScalars['JSON'] | null; // JSON
    isActive: boolean; // Boolean!
    isAvailable: boolean; // Boolean!
    leadTimeDays?: number | null; // Int
    material?: string | null; // String
    maxOrderQuantity?: number | null; // Int
    minOrderQuantity: number; // Int!
    name: string; // String!
    packagingInfo?: NexusGenScalars['JSON'] | null; // JSON
    pattern?: string | null; // String
    price?: NexusGenScalars['Decimal'] | null; // Decimal
    reservedQuantity: number; // Int!
    seasonalAvailability?: NexusGenScalars['JSON'] | null; // JSON
    size?: string | null; // String
    stockQuantity: number; // Int!
    thumbnail?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    variantCode: string; // String!
    weight?: NexusGenScalars['Decimal'] | null; // Decimal
  }
  ProductVariantConnection: { // root type
    edges?: Array<NexusGenRootTypes['ProductVariantEdge'] | null> | null; // [ProductVariantEdge]
    pageInfo?: NexusGenRootTypes['PageInfo'] | null; // PageInfo
    totalCount?: number | null; // Int
  }
  ProductVariantEdge: { // root type
    cursor?: string | null; // String
    node?: NexusGenRootTypes['ProductVariant'] | null; // ProductVariant
  }
  ProductionRevision: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    newValue?: string | null; // String
    oldValue?: string | null; // String
    reason: string; // String!
    revisionType: NexusGenEnums['RevisionType']; // RevisionType!
  }
  ProductionStageUpdate: { // root type
    actualEndDate?: NexusGenScalars['DateTime'] | null; // DateTime
    actualStartDate?: NexusGenScalars['DateTime'] | null; // DateTime
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    note?: string | null; // String
    stage: NexusGenEnums['ProductionStage']; // ProductionStage!
    status: NexusGenEnums['ProductionStatus']; // ProductionStatus!
  }
  ProductionTracking: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currentStage: NexusGenEnums['ProductionStage']; // ProductionStage!
    cuttingDays: number; // Int!
    estimatedTotalDays: number; // Int!
    fabricDays: number; // Int!
    id: number; // Int!
    overallStatus: NexusGenEnums['ProductionStatus']; // ProductionStatus!
    packagingDays: number; // Int!
    planningDays: number; // Int!
    qualityDays: number; // Int!
    sewingDays: number; // Int!
    shippingDays: number; // Int!
    startDate: NexusGenScalars['DateTime']; // DateTime!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  QualityControl: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    details?: string | null; // String
    id: number; // Int!
    result: NexusGenEnums['QualityResult']; // QualityResult!
    testDate: NexusGenScalars['DateTime']; // DateTime!
    testType: NexusGenEnums['QualityTestType']; // QualityTestType!
  }
  Query: {};
  Question: { // root type
    answer?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isAnswered: boolean; // Boolean!
    isPublic: boolean; // Boolean!
    question: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RevenueAnalytics: { // root type
    averageOrderValue: number; // Float!
    monthlyGrowthRate: number; // Float!
    monthlyRevenue: Array<NexusGenRootTypes['MonthlyRevenueItem'] | null>; // [MonthlyRevenueItem]!
    reportDate: string; // String!
    revenueByCategory: Array<NexusGenRootTypes['RevenueByCategoryItem'] | null>; // [RevenueByCategoryItem]!
    totalOrders: number; // Int!
    totalRevenue: number; // Float!
  }
  RevenueByCategoryItem: { // root type
    averageOrderValue: number; // Float!
    categoryName: string; // String!
    growthRate?: number | null; // Float
    orderCount: number; // Int!
    revenue: number; // Float!
  }
  Review: { // root type
    comment?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    rating: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RevisionApproval: { // root type
    approvalType: string; // String!
    approver?: NexusGenRootTypes['User'] | null; // User
    approverId: number; // Int!
    comments?: string | null; // String
    companyId: number; // Int!
    conditions?: string | null; // String
    deadline?: string | null; // String
    id: number; // Int!
    metadata?: NexusGenScalars['JSON'] | null; // JSON
    revisionRequest?: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    revisionRequestId: number; // Int!
    status: NexusGenEnums['StageStatus']; // StageStatus!
  }
  RevisionApprovalConnection: { // root type
    edges: NexusGenRootTypes['RevisionApprovalEdge'][]; // [RevisionApprovalEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  RevisionApprovalEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['RevisionApproval']; // RevisionApproval!
  }
  RevisionImpact: { // root type
    afterValue?: string | null; // String
    beforeValue?: string | null; // String
    companyId: number; // Int!
    description: string; // String!
    id: number; // Int!
    impactLevel: number; // Int!
    impactType: string; // String!
    mitigationCost?: number | null; // Float
    mitigationPlan?: string | null; // String
    revisionRequest?: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    revisionRequestId: number; // Int!
  }
  RevisionRequest: { // root type
    approvalLevel: number; // Int!
    approvals?: Array<NexusGenRootTypes['RevisionApproval'] | null> | null; // [RevisionApproval]
    assignedTo?: NexusGenRootTypes['User'] | null; // User
    assignedToId?: number | null; // Int
    attachments?: NexusGenScalars['JSON'] | null; // JSON
    category?: string | null; // String
    companyId: number; // Int!
    costImpact?: number | null; // Float
    deliveryImpact?: NexusGenScalars['DateTime'] | null; // DateTime
    description: string; // String!
    estimatedDays?: number | null; // Int
    id: number; // Int!
    impactedStages?: NexusGenScalars['JSON'] | null; // JSON
    impacts?: Array<NexusGenRootTypes['RevisionImpact'] | null> | null; // [RevisionImpact]
    order?: NexusGenRootTypes['Order'] | null; // Order
    orderId?: number | null; // Int
    productionTracking?: NexusGenRootTypes['ProductionTracking'] | null; // ProductionTracking
    productionTrackingId?: number | null; // Int
    qualityImpact?: string | null; // String
    requestedBy?: NexusGenRootTypes['User'] | null; // User
    requestedById: number; // Int!
    revisionNumber: string; // String!
    revisionType?: NexusGenEnums['RevisionType'] | null; // RevisionType
    sample?: NexusGenRootTypes['Sample'] | null; // Sample
    sampleId?: number | null; // Int
    status: NexusGenEnums['StageStatus']; // StageStatus!
    timeline?: Array<NexusGenRootTypes['RevisionTimeline'] | null> | null; // [RevisionTimeline]
    title: string; // String!
    totalApprovalLevels: number; // Int!
    urgency?: number | null; // Int
  }
  RevisionRequestConnection: { // root type
    edges: NexusGenRootTypes['RevisionRequestEdge'][]; // [RevisionRequestEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  RevisionRequestEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['RevisionRequest']; // RevisionRequest!
  }
  RevisionStats: { // root type
    approvedRevisions: number; // Int!
    avgApprovalTime: number; // Float!
    implementedRevisions: number; // Int!
    monthlyTrends?: NexusGenScalars['JSON'] | null; // JSON
    pendingRevisions: number; // Int!
    rejectedRevisions: number; // Int!
    revisionsBySeverity?: NexusGenScalars['JSON'] | null; // JSON
    revisionsByType?: NexusGenScalars['JSON'] | null; // JSON
    totalCostImpact: number; // Float!
    totalRevisions: number; // Int!
    totalTimeImpact: number; // Int!
  }
  RevisionTimeline: { // root type
    companyId: number; // Int!
    description?: string | null; // String
    eventDescription: string; // String!
    eventType: NexusGenEnums['RevisionEventType']; // RevisionEventType!
    id: number; // Int!
    metadata?: NexusGenScalars['JSON'] | null; // JSON
    newValue?: string | null; // String
    performedBy?: NexusGenRootTypes['User'] | null; // User
    performedById?: number | null; // Int
    previousValue?: string | null; // String
    revisionRequest?: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    revisionRequestId: number; // Int!
  }
  SLADashboard: { // root type
    categoryPerformance: Array<NexusGenRootTypes['CategoryPerformance'] | null>; // [CategoryPerformance]!
    communicationScore: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    customerSatisfaction: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    deliveryPerformance: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    lastUpdated: string; // String!
    monthlyTrends: Array<NexusGenRootTypes['MonthlyTrend'] | null>; // [MonthlyTrend]!
    overallScore: number; // Float!
    performanceLevel: string; // String!
    qualityPerformance: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    recommendations: Array<NexusGenRootTypes['PerformanceRecommendation'] | null>; // [PerformanceRecommendation]!
    responseTime: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    revisionRate: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    topIssues: Array<NexusGenRootTypes['PerformanceIssue'] | null>; // [PerformanceIssue]!
  }
  SLAMetric: { // root type
    calculatedAt: string; // String!
    description?: string | null; // String
    metricName: string; // String!
    previousValue?: number | null; // Float
    status: string; // String!
    target: number; // Float!
    trend?: string | null; // String
    unit: string; // String!
    value: number; // Float!
  }
  Sample: { // root type
    accessories?: string | null; // String
    category?: NexusGenEnums['CollectionCategory'] | null; // CollectionCategory
    collectionName?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency?: NexusGenEnums['Currency'] | null; // Currency
    customerNote?: string | null; // String
    deliveryMethod: NexusGenEnums['DeliveryMethod']; // DeliveryMethod!
    estimatedPrice?: number | null; // Float
    fabric?: string | null; // String
    fabricColor?: string | null; // String
    finalPrice?: number | null; // Float
    gender?: NexusGenEnums['Gender'] | null; // Gender
    id: number; // Int!
    leadTimeDays?: number | null; // Int
    manufacturerResponse?: string | null; // String
    priorityReason?: string | null; // String
    revisionDate?: NexusGenScalars['DateTime'] | null; // DateTime
    sampleNumber: string; // String!
    sampleType?: string | null; // String
    sizeChartUrl?: string | null; // String
    sizeOrPattern?: string | null; // String
    status: NexusGenEnums['SampleStatus']; // SampleStatus!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  SampleConnection: { // root type
    edges: NexusGenRootTypes['SampleEdge'][]; // [SampleEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  SampleEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Sample']; // Sample!
  }
  SampleVariant: { // root type
    companyId: number; // Int!
    completedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    productVariantId: number; // Int!
    quantity: number; // Int!
    requestedColor?: string | null; // String
    requestedSize?: string | null; // String
    sampleId: number; // Int!
    specialRequest?: string | null; // String
    status: NexusGenEnums['SampleStatus']; // SampleStatus!
    totalPrice?: number | null; // Float
    unitPrice?: number | null; // Float
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  SampleVariantConnection: { // root type
    edges?: Array<NexusGenRootTypes['SampleVariantEdge'] | null> | null; // [SampleVariantEdge]
    pageInfo?: NexusGenRootTypes['PageInfo'] | null; // PageInfo
    totalCount?: number | null; // Int
  }
  SampleVariantEdge: { // root type
    cursor?: string | null; // String
    node?: NexusGenRootTypes['SampleVariant'] | null; // SampleVariant
  }
  SearchResult: { // root type
    collections: Array<NexusGenRootTypes['Collection'] | null>; // [Collection]!
    orders: Array<NexusGenRootTypes['Order'] | null>; // [Order]!
    products: Array<NexusGenRootTypes['Collection'] | null>; // [Collection]!
    query?: string | null; // String
    samples: Array<NexusGenRootTypes['Sample'] | null>; // [Sample]!
    totalCount: number; // Int!
  }
  Subscription: {};
  TopCustomerItem: { // root type
    averageOrderValue: number; // Float!
    customerId: number; // Int!
    customerName: string; // String!
    lastOrderDate?: string | null; // String
    orderCount: number; // Int!
    totalRevenue: number; // Float!
  }
  UploadProgressResponse: { // root type
    assetId?: string | null; // String
    error?: string | null; // String
    progress?: number | null; // Int
    status: string; // String!
    uploadId: string; // String!
  }
  UploadResult: { // root type
    fileName: string; // String!
    mimeType: string; // String!
    originalName: string; // String!
    path: string; // String!
    size: number; // Int!
    url: string; // String!
  }
  UploadToken: { // root type
    allowedTypes: Array<string | null>; // [String]!
    expiresAt: string; // String!
    fileName: string; // String!
    maxSize: number; // Int!
    token: string; // String!
    uploadUrl: string; // String!
  }
  UploadUrlResponse: { // root type
    allowedMimeTypes?: string[] | null; // [String!]
    expiresIn: number; // Int!
    fields?: string | null; // String
    maxFileSize: string; // String!
    uploadId: string; // String!
    uploadUrl: string; // String!
  }
  User: { // root type
    businessLicense?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    firstName?: string | null; // String
    id: number; // Int!
    isActive: boolean; // Boolean!
    lastName?: string | null; // String
    name?: string | null; // String
    phone?: string | null; // String
    profilePicture?: string | null; // String
    role: NexusGenEnums['Role']; // Role!
    taxNumber?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    username?: string | null; // String
  }
  UserConnection: { // root type
    edges: NexusGenRootTypes['UserEdge'][]; // [UserEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  UserEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['User']; // User!
  }
  UserStats: { // root type
    adminCount: number; // Int!
    customerCount: number; // Int!
    manufactureCount: number; // Int!
    totalUsers: number; // Int!
  }
  Workshop: { // root type
    capacity?: number | null; // Int
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isActive: boolean; // Boolean!
    location?: string | null; // String
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Asset: { // field return type
    assetType: string; // String!
    category: string | null; // String
    companyId: number | null; // Int
    createdAt: string; // String!
    fileName: string; // String!
    fileSize: number; // Int!
    fileUrl: string; // String!
    id: number; // Int!
    isProcessed: boolean; // Boolean!
    isPublic: boolean; // Boolean!
    metadata: string | null; // String
    mimeType: string; // String!
    originalName: string; // String!
    processingStatus: string | null; // String
    thumbnailUrl: string | null; // String
    updatedAt: string; // String!
    uploadId: string; // String!
    uploaderId: number; // Int!
  }
  AuthPayload: { // field return type
    refreshToken: string | null; // String
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  BusinessAnalytics: { // field return type
    customers: NexusGenRootTypes['CustomerAnalytics']; // CustomerAnalytics!
    manufacturers: NexusGenRootTypes['ManufacturerAnalytics']; // ManufacturerAnalytics!
    marketTrends: Array<NexusGenRootTypes['MarketTrend'] | null>; // [MarketTrend]!
    orders: NexusGenRootTypes['OrderAnalytics']; // OrderAnalytics!
    revenue: NexusGenRootTypes['RevenueAnalytics']; // RevenueAnalytics!
  }
  Category: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string | null; // String
    id: number; // Int!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  CategoryPerformance: { // field return type
    averageDeliveryDays: number; // Float!
    categoryName: string; // String!
    completedOrders: number; // Int!
    customerSatisfaction: number; // Float!
    revisionRate: number; // Float!
    score: number; // Float!
    totalOrders: number; // Int!
  }
  Collection: { // field return type
    category: NexusGenRootTypes['Category'] | null; // Category
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string | null; // String
    id: number; // Int!
    images: string | null; // String
    isActive: boolean; // Boolean!
    isFeatured: boolean; // Boolean!
    name: string; // String!
    priceRange: string | null; // String
    season: string | null; // String
    slug: string; // String!
    tags: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    viewCount: number; // Int!
    year: number | null; // Int
  }
  CollectionConnection: { // field return type
    edges: NexusGenRootTypes['CollectionEdge'][]; // [CollectionEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  CollectionEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Collection']; // Collection!
  }
  Company: { // field return type
    address: string | null; // String
    collections: Array<NexusGenRootTypes['Collection'] | null> | null; // [Collection]
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string | null; // String
    email: string | null; // String
    id: number; // Int!
    isActive: boolean; // Boolean!
    logo: string | null; // String
    name: string; // String!
    orders: Array<NexusGenRootTypes['Order'] | null> | null; // [Order]
    phone: string | null; // String
    taxNumber: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    website: string | null; // String
  }
  CompanyStats: { // field return type
    activeOrders: number; // Int!
    completedOrders: number; // Int!
    totalCollections: number; // Int!
    totalOrders: number; // Int!
    totalUsers: number; // Int!
  }
  CustomerAnalytics: { // field return type
    activeCustomers: number; // Int!
    averageOrdersPerCustomer: number; // Float!
    customerRetentionRate: number; // Float!
    topCustomers: Array<NexusGenRootTypes['TopCustomerItem'] | null>; // [TopCustomerItem]!
    totalCustomers: number; // Int!
  }
  FileInfo: { // field return type
    createdAt: string | null; // String
    exists: boolean; // Boolean!
    mimeType: string | null; // String
    modifiedAt: string | null; // String
    size: number | null; // Int
  }
  FileValidationResult: { // field return type
    detectedMimeType: string | null; // String
    errors: string[] | null; // [String!]
    isValid: boolean; // Boolean!
    suggestedFileName: string | null; // String
    warnings: string[] | null; // [String!]
  }
  ManufacturerAnalytics: { // field return type
    averageSlaScore: number; // Float!
    performanceDistribution: Array<NexusGenRootTypes['PerformanceDistributionItem'] | null>; // [PerformanceDistributionItem]!
    topPerformers: Array<NexusGenRootTypes['ManufacturerPerformanceItem'] | null>; // [ManufacturerPerformanceItem]!
    totalManufacturers: number; // Int!
  }
  ManufacturerPerformanceItem: { // field return type
    averageResponseTime: number | null; // Float
    manufacturerId: number; // Int!
    manufacturerName: string; // String!
    onTimeDeliveryRate: number; // Float!
    qualityScore: number; // Float!
    slaScore: number; // Float!
    totalOrders: number; // Int!
  }
  MarketTrend: { // field return type
    analysis: string | null; // String
    metric: string; // String!
    period: string; // String!
    trend: string; // String!
    value: number; // Float!
  }
  Message: { // field return type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isRead: boolean; // Boolean!
    messageType: NexusGenEnums['MessageType']; // MessageType!
    receiver: NexusGenRootTypes['User'] | null; // User
    relatedCollectionId: number | null; // Int
    relatedOrderId: number | null; // Int
    relatedSampleId: number | null; // Int
    sender: NexusGenRootTypes['User'] | null; // User
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MonthlyRevenueItem: { // field return type
    growthRate: number | null; // Float
    month: string; // String!
    orderCount: number; // Int!
    revenue: number; // Float!
  }
  MonthlyTrend: { // field return type
    changePercent: number | null; // Float
    month: string; // String!
    status: string | null; // String
    target: number; // Float!
    trend: string; // String!
    value: number; // Float!
  }
  Mutation: { // field return type
    answerQuestion: NexusGenRootTypes['Question'] | null; // Question
    askQuestion: NexusGenRootTypes['Question'] | null; // Question
    cancelOrder: NexusGenRootTypes['Order'] | null; // Order
    cleanupTempFiles: number | null; // Int
    confirmOrder: NexusGenRootTypes['Order'] | null; // Order
    createApprovalRequest: NexusGenRootTypes['OrderApproval'] | null; // OrderApproval
    createCollection: NexusGenRootTypes['Collection'] | null; // Collection
    createNotification: string | null; // String
    createOrderFromCollection: NexusGenRootTypes['Order'] | null; // Order
    createOrderStage: NexusGenRootTypes['OrderStageTracking'] | null; // OrderStageTracking
    createQualityControl: NexusGenRootTypes['QualityControl'] | null; // QualityControl
    createReview: NexusGenRootTypes['Review'] | null; // Review
    createRevisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    createSample: NexusGenRootTypes['Sample'] | null; // Sample
    createWorkshop: NexusGenRootTypes['Workshop'] | null; // Workshop
    deleteCollection: boolean | null; // Boolean
    deleteFile: boolean | null; // Boolean
    deleteQualityControl: boolean | null; // Boolean
    deleteQuestion: boolean | null; // Boolean
    deleteReview: boolean | null; // Boolean
    deleteSample: boolean | null; // Boolean
    deleteWorkshop: boolean | null; // Boolean
    finalizeUpload: string | null; // String
    generateUploadToken: NexusGenRootTypes['UploadToken'] | null; // UploadToken
    getUploadProgress: string | null; // String
    implementRevisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    login: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    logout: boolean | null; // Boolean
    markMessageAsRead: NexusGenRootTypes['Message'] | null; // Message
    markNotificationAsRead: boolean | null; // Boolean
    processRevisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    refreshToken: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    removeImage: boolean | null; // Boolean
    requestUpload: string | null; // String
    respondToApproval: NexusGenRootTypes['OrderApproval'] | null; // OrderApproval
    sendBulkNotification: string | null; // String
    sendMessage: NexusGenRootTypes['Message'] | null; // Message
    signup: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    submitRevisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    updateCollection: NexusGenRootTypes['Collection'] | null; // Collection
    updateOrderPrice: NexusGenRootTypes['Order'] | null; // Order
    updateOrderStage: NexusGenRootTypes['OrderStageTracking'] | null; // OrderStageTracking
    updateProductionStage: NexusGenRootTypes['ProductionStageUpdate'] | null; // ProductionStageUpdate
    updateQualityControl: NexusGenRootTypes['QualityControl'] | null; // QualityControl
    updateQuestion: NexusGenRootTypes['Question'] | null; // Question
    updateReview: NexusGenRootTypes['Review'] | null; // Review
    updateRevisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    updateSample: NexusGenRootTypes['Sample'] | null; // Sample
    updateWorkshop: NexusGenRootTypes['Workshop'] | null; // Workshop
    uploadAndProcessImage: NexusGenRootTypes['UploadResult'] | null; // UploadResult
    uploadBase64: NexusGenRootTypes['UploadResult'] | null; // UploadResult
    uploadBusinessLicense: string | null; // String
    uploadCollectionImage: string | null; // String
    uploadCollectionImages: string | null; // String
    uploadMessageAttachment: string | null; // String
    uploadProfilePicture: string | null; // String
    uploadSampleImage: string | null; // String
  }
  Order: { // field return type
    actualDelivery: NexusGenScalars['DateTime'] | null; // DateTime
    actualProductionEnd: NexusGenScalars['DateTime'] | null; // DateTime
    actualProductionStart: NexusGenScalars['DateTime'] | null; // DateTime
    advancePayment: number | null; // Float
    cargoTrackingNumber: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    customer: NexusGenRootTypes['User'] | null; // User
    customerNote: string | null; // String
    deliveryAddress: string | null; // String
    estimatedDelivery: NexusGenScalars['DateTime'] | null; // DateTime
    estimatedProductionDate: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    manufacture: NexusGenRootTypes['User'] | null; // User
    manufacturerNote: string | null; // String
    orderNumber: string; // String!
    productionDays: number | null; // Int
    quantity: number; // Int!
    remainingBalance: number | null; // Float
    shippingDate: NexusGenScalars['DateTime'] | null; // DateTime
    status: NexusGenEnums['OrderStatus']; // OrderStatus!
    totalPrice: number; // Float!
    unitPrice: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  OrderAnalytics: { // field return type
    averageCompletionDays: number; // Float!
    completionRate: number; // Float!
    onTimeDeliveryRate: number; // Float!
    ordersByStatus: Array<NexusGenRootTypes['OrderStatusCount'] | null>; // [OrderStatusCount]!
    revisionRate: number; // Float!
    totalOrders: number; // Int!
  }
  OrderApproval: { // field return type
    approvalType: NexusGenEnums['ApprovalType']; // ApprovalType!
    approverUser: NexusGenRootTypes['User'] | null; // User
    approverUserId: number | null; // Int
    companyId: number; // Int!
    createdAt: string; // String!
    deadline: string | null; // String
    id: number; // Int!
    metadata: NexusGenScalars['JSON'] | null; // JSON
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    requestMessage: string | null; // String
    requestedAt: string; // String!
    requesterUser: NexusGenRootTypes['User'] | null; // User
    requesterUserId: number; // Int!
    respondedAt: string | null; // String
    responseMessage: string | null; // String
    stageTracking: NexusGenRootTypes['OrderStageTracking'] | null; // OrderStageTracking
    stageTrackingId: number | null; // Int
    status: NexusGenEnums['StageStatus']; // StageStatus!
    updatedAt: string; // String!
  }
  OrderConnection: { // field return type
    edges: NexusGenRootTypes['OrderEdge'][]; // [OrderEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  OrderDeadline: { // field return type
    companyId: number; // Int!
    completedAt: string | null; // String
    createdAt: string; // String!
    deadlineDate: string; // String!
    deadlineType: string; // String!
    description: string; // String!
    id: number; // Int!
    isActive: boolean; // Boolean!
    isCompleted: boolean; // Boolean!
    isWarningTriggered: boolean; // Boolean!
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    updatedAt: string; // String!
    warningDays: number; // Int!
    warningTriggeredAt: string | null; // String
  }
  OrderEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Order']; // Order!
  }
  OrderItem: { // field return type
    company: NexusGenRootTypes['Company'] | null; // Company
    companyId: number; // Int!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    discountAmount: number | null; // Float
    discountPercent: number | null; // Float
    finalPrice: number; // Float!
    id: number; // Int!
    itemNote: string | null; // String
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    productVariant: NexusGenRootTypes['ProductVariant'] | null; // ProductVariant
    productVariantId: number; // Int!
    quantity: number; // Int!
    totalPrice: number; // Float!
    unitPrice: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  OrderItemConnection: { // field return type
    edges: Array<NexusGenRootTypes['OrderItemEdge'] | null> | null; // [OrderItemEdge]
    pageInfo: NexusGenRootTypes['PageInfo'] | null; // PageInfo
    totalCount: number | null; // Int
  }
  OrderItemEdge: { // field return type
    cursor: string | null; // String
    node: NexusGenRootTypes['OrderItem'] | null; // OrderItem
  }
  OrderNotification: { // field return type
    companyId: number; // Int!
    createdAt: string; // String!
    id: number; // Int!
    isRead: boolean; // Boolean!
    message: string; // String!
    metadata: NexusGenScalars['JSON'] | null; // JSON
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    priority: number; // Int!
    readAt: string | null; // String
    recipientUser: NexusGenRootTypes['User'] | null; // User
    recipientUserId: number; // Int!
    title: string; // String!
    type: NexusGenEnums['NotificationType']; // NotificationType!
  }
  OrderStageTracking: { // field return type
    actualEndDate: string | null; // String
    actualStartDate: string | null; // String
    assignedTo: NexusGenRootTypes['User'] | null; // User
    assignedToId: number | null; // Int
    companyId: number; // Int!
    createdAt: string; // String!
    id: number; // Int!
    notes: string | null; // String
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: number; // Int!
    plannedEndDate: string | null; // String
    plannedStartDate: string | null; // String
    priority: number; // Int!
    stage: NexusGenEnums['OrderStage']; // OrderStage!
    status: NexusGenEnums['StageStatus']; // StageStatus!
    updatedAt: string; // String!
  }
  OrderStatusCount: { // field return type
    averageCompletionDays: number | null; // Float
    count: number; // Int!
    percentage: number; // Float!
    status: string; // String!
  }
  OrderWorkflowSummary: { // field return type
    activeDeadlines: number; // Int!
    completedStages: number; // Int!
    currentStage: NexusGenEnums['OrderStage'] | null; // OrderStage
    currentStageStatus: NexusGenEnums['StageStatus'] | null; // StageStatus
    estimatedCompletion: string | null; // String
    nextDeadline: NexusGenRootTypes['OrderDeadline'] | null; // OrderDeadline
    orderId: number; // Int!
    pendingApprovals: number; // Int!
    progressPercentage: number; // Int!
    totalStages: number; // Int!
    unreadNotifications: number; // Int!
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  PerformanceDistributionItem: { // field return type
    manufacturerCount: number; // Int!
    percentage: number; // Float!
    scoreRange: string; // String!
  }
  PerformanceIssue: { // field return type
    affectedOrders: number; // Int!
    category: string; // String!
    description: string; // String!
    estimatedImpact: string | null; // String
    severity: string; // String!
    suggestedAction: string; // String!
  }
  PerformanceRecommendation: { // field return type
    category: string; // String!
    description: string; // String!
    estimatedDays: number | null; // Int
    expectedImprovement: string | null; // String
    potentialROI: number | null; // Float
    priority: string; // String!
    title: string; // String!
  }
  ProductVariant: { // field return type
    collection: NexusGenRootTypes['Collection'] | null; // Collection
    collectionId: number; // Int!
    color: string | null; // String
    colorHex: string | null; // String
    company: NexusGenRootTypes['Company'] | null; // Company
    companyId: number; // Int!
    costPrice: NexusGenScalars['Decimal'] | null; // Decimal
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: NexusGenEnums['Currency']; // Currency!
    customAttributes: NexusGenScalars['JSON'] | null; // JSON
    description: string | null; // String
    dimensions: NexusGenScalars['JSON'] | null; // JSON
    discontinuedAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    images: NexusGenScalars['JSON'] | null; // JSON
    isActive: boolean; // Boolean!
    isAvailable: boolean; // Boolean!
    leadTimeDays: number | null; // Int
    material: string | null; // String
    maxOrderQuantity: number | null; // Int
    minOrderQuantity: number; // Int!
    name: string; // String!
    orderItems: Array<NexusGenRootTypes['OrderItem'] | null> | null; // [OrderItem]
    packagingInfo: NexusGenScalars['JSON'] | null; // JSON
    pattern: string | null; // String
    price: NexusGenScalars['Decimal'] | null; // Decimal
    reservedQuantity: number; // Int!
    sampleVariants: Array<NexusGenRootTypes['SampleVariant'] | null> | null; // [SampleVariant]
    seasonalAvailability: NexusGenScalars['JSON'] | null; // JSON
    size: string | null; // String
    stockQuantity: number; // Int!
    thumbnail: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    variantCode: string; // String!
    weight: NexusGenScalars['Decimal'] | null; // Decimal
  }
  ProductVariantConnection: { // field return type
    edges: Array<NexusGenRootTypes['ProductVariantEdge'] | null> | null; // [ProductVariantEdge]
    pageInfo: NexusGenRootTypes['PageInfo'] | null; // PageInfo
    totalCount: number | null; // Int
  }
  ProductVariantEdge: { // field return type
    cursor: string | null; // String
    node: NexusGenRootTypes['ProductVariant'] | null; // ProductVariant
  }
  ProductionRevision: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    newValue: string | null; // String
    oldValue: string | null; // String
    productionTracking: NexusGenRootTypes['ProductionTracking'] | null; // ProductionTracking
    reason: string; // String!
    revisionType: NexusGenEnums['RevisionType']; // RevisionType!
    updatedBy: NexusGenRootTypes['User'] | null; // User
  }
  ProductionStageUpdate: { // field return type
    actualEndDate: NexusGenScalars['DateTime'] | null; // DateTime
    actualStartDate: NexusGenScalars['DateTime'] | null; // DateTime
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    note: string | null; // String
    productionTracking: NexusGenRootTypes['ProductionTracking'] | null; // ProductionTracking
    stage: NexusGenEnums['ProductionStage']; // ProductionStage!
    status: NexusGenEnums['ProductionStatus']; // ProductionStatus!
  }
  ProductionTracking: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currentStage: NexusGenEnums['ProductionStage']; // ProductionStage!
    cuttingDays: number; // Int!
    estimatedTotalDays: number; // Int!
    fabricDays: number; // Int!
    id: number; // Int!
    overallStatus: NexusGenEnums['ProductionStatus']; // ProductionStatus!
    packagingDays: number; // Int!
    planningDays: number; // Int!
    qualityDays: number; // Int!
    sewingDays: number; // Int!
    shippingDays: number; // Int!
    startDate: NexusGenScalars['DateTime']; // DateTime!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    workshop: NexusGenRootTypes['Workshop'] | null; // Workshop
  }
  QualityControl: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    details: string | null; // String
    id: number; // Int!
    productionTracking: NexusGenRootTypes['ProductionTracking'] | null; // ProductionTracking
    result: NexusGenEnums['QualityResult']; // QualityResult!
    testDate: NexusGenScalars['DateTime']; // DateTime!
    testType: NexusGenEnums['QualityTestType']; // QualityTestType!
  }
  Query: { // field return type
    allCategories: NexusGenRootTypes['Category'][]; // [Category!]!
    allUsers: NexusGenRootTypes['User'][]; // [User!]!
    businessAnalytics: string | null; // String
    categories: NexusGenRootTypes['Category'][]; // [Category!]!
    categoryPerformance: string | null; // String
    collections: NexusGenRootTypes['Collection'][]; // [Collection!]!
    customerSatisfactionMetrics: string | null; // String
    dashboardStats: string | null; // String
    fileInfo: NexusGenRootTypes['FileInfo'] | null; // FileInfo
    generateCustomerReport: string | null; // String
    generateInventoryReport: string | null; // String
    generateManufacturerReport: string | null; // String
    generateSalesReport: string | null; // String
    globalSearch: string | null; // String
    myAssets: string | null; // String
    myMessages: NexusGenRootTypes['Message'][]; // [Message!]!
    orderAnalytics: string | null; // String
    orderApprovals: Array<NexusGenRootTypes['OrderApproval'] | null> | null; // [OrderApproval]
    orderNotifications: Array<NexusGenRootTypes['OrderNotification'] | null> | null; // [OrderNotification]
    orderStageTrackings: Array<NexusGenRootTypes['OrderStageTracking'] | null> | null; // [OrderStageTracking]
    orderWorkflowSummary: NexusGenRootTypes['OrderWorkflowSummary'] | null; // OrderWorkflowSummary
    orders: NexusGenRootTypes['Order'][]; // [Order!]!
    productionAnalytics: string | null; // String
    productionTrackings: NexusGenRootTypes['ProductionTracking'][]; // [ProductionTracking!]!
    qualityControl: NexusGenRootTypes['QualityControl'] | null; // QualityControl
    qualityControls: NexusGenRootTypes['QualityControl'][]; // [QualityControl!]!
    qualityMetrics: string | null; // String
    question: NexusGenRootTypes['Question'] | null; // Question
    questions: NexusGenRootTypes['Question'][]; // [Question!]!
    revenueAnalytics: string | null; // String
    review: NexusGenRootTypes['Review'] | null; // Review
    reviews: NexusGenRootTypes['Review'][]; // [Review!]!
    revisionAnalytics: string | null; // String
    revisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    revisionRequests: NexusGenRootTypes['RevisionRequestConnection'] | null; // RevisionRequestConnection
    revisionStats: NexusGenRootTypes['RevisionStats'] | null; // RevisionStats
    samples: NexusGenRootTypes['Sample'][]; // [Sample!]!
    searchCollections: NexusGenRootTypes['CollectionConnection'] | null; // CollectionConnection
    slaDashboard: string | null; // String
    slaScore: number | null; // Float
    unreadMessageCount: number | null; // Int
    uploadStats: NexusGenScalars['JSON'] | null; // JSON
    userStats: NexusGenRootTypes['UserStats'] | null; // UserStats
    validateFile: string | null; // String
    workshop: NexusGenRootTypes['Workshop'] | null; // Workshop
    workshops: NexusGenRootTypes['Workshop'][]; // [Workshop!]!
  }
  Question: { // field return type
    answer: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    customer: NexusGenRootTypes['User'] | null; // User
    id: number; // Int!
    isAnswered: boolean; // Boolean!
    isPublic: boolean; // Boolean!
    manufacture: NexusGenRootTypes['User'] | null; // User
    question: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RevenueAnalytics: { // field return type
    averageOrderValue: number; // Float!
    monthlyGrowthRate: number; // Float!
    monthlyRevenue: Array<NexusGenRootTypes['MonthlyRevenueItem'] | null>; // [MonthlyRevenueItem]!
    reportDate: string; // String!
    revenueByCategory: Array<NexusGenRootTypes['RevenueByCategoryItem'] | null>; // [RevenueByCategoryItem]!
    totalOrders: number; // Int!
    totalRevenue: number; // Float!
  }
  RevenueByCategoryItem: { // field return type
    averageOrderValue: number; // Float!
    categoryName: string; // String!
    growthRate: number | null; // Float
    orderCount: number; // Int!
    revenue: number; // Float!
  }
  Review: { // field return type
    comment: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    customer: NexusGenRootTypes['User'] | null; // User
    id: number; // Int!
    rating: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  RevisionApproval: { // field return type
    approvalType: string; // String!
    approvedAt: string | null; // String
    approver: NexusGenRootTypes['User'] | null; // User
    approverId: number; // Int!
    comments: string | null; // String
    companyId: number; // Int!
    conditions: string | null; // String
    createdAt: string; // String!
    deadline: string | null; // String
    id: number; // Int!
    level: NexusGenEnums['ApprovalLevel']; // ApprovalLevel!
    metadata: NexusGenScalars['JSON'] | null; // JSON
    revisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    revisionRequestId: number; // Int!
    status: NexusGenEnums['StageStatus']; // StageStatus!
    updatedAt: string; // String!
  }
  RevisionApprovalConnection: { // field return type
    edges: NexusGenRootTypes['RevisionApprovalEdge'][]; // [RevisionApprovalEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  RevisionApprovalEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['RevisionApproval']; // RevisionApproval!
  }
  RevisionImpact: { // field return type
    afterValue: string | null; // String
    beforeValue: string | null; // String
    companyId: number; // Int!
    createdAt: string; // String!
    description: string; // String!
    id: number; // Int!
    impactLevel: number; // Int!
    impactType: string; // String!
    mitigationCost: number | null; // Float
    mitigationPlan: string | null; // String
    revisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    revisionRequestId: number; // Int!
    updatedAt: string; // String!
  }
  RevisionRequest: { // field return type
    approvalLevel: number; // Int!
    approvals: Array<NexusGenRootTypes['RevisionApproval'] | null> | null; // [RevisionApproval]
    approvedAt: string | null; // String
    assignedTo: NexusGenRootTypes['User'] | null; // User
    assignedToId: number | null; // Int
    attachments: NexusGenScalars['JSON'] | null; // JSON
    category: string | null; // String
    companyId: number; // Int!
    costImpact: number | null; // Float
    createdAt: string; // String!
    deliveryImpact: NexusGenScalars['DateTime'] | null; // DateTime
    description: string; // String!
    estimatedDays: number | null; // Int
    id: number; // Int!
    impactedStages: NexusGenScalars['JSON'] | null; // JSON
    impacts: Array<NexusGenRootTypes['RevisionImpact'] | null> | null; // [RevisionImpact]
    implementedAt: string | null; // String
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: number | null; // Int
    productionTracking: NexusGenRootTypes['ProductionTracking'] | null; // ProductionTracking
    productionTrackingId: number | null; // Int
    qualityImpact: string | null; // String
    requestedBy: NexusGenRootTypes['User'] | null; // User
    requestedById: number; // Int!
    revisionNumber: string; // String!
    revisionType: NexusGenEnums['RevisionType'] | null; // RevisionType
    sample: NexusGenRootTypes['Sample'] | null; // Sample
    sampleId: number | null; // Int
    status: NexusGenEnums['StageStatus']; // StageStatus!
    timeline: Array<NexusGenRootTypes['RevisionTimeline'] | null> | null; // [RevisionTimeline]
    title: string; // String!
    totalApprovalLevels: number; // Int!
    updatedAt: string; // String!
    urgency: number | null; // Int
  }
  RevisionRequestConnection: { // field return type
    edges: NexusGenRootTypes['RevisionRequestEdge'][]; // [RevisionRequestEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  RevisionRequestEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['RevisionRequest']; // RevisionRequest!
  }
  RevisionStats: { // field return type
    approvedRevisions: number; // Int!
    avgApprovalTime: number; // Float!
    implementedRevisions: number; // Int!
    monthlyTrends: NexusGenScalars['JSON'] | null; // JSON
    pendingRevisions: number; // Int!
    rejectedRevisions: number; // Int!
    revisionsBySeverity: NexusGenScalars['JSON'] | null; // JSON
    revisionsByType: NexusGenScalars['JSON'] | null; // JSON
    totalCostImpact: number; // Float!
    totalRevisions: number; // Int!
    totalTimeImpact: number; // Int!
  }
  RevisionTimeline: { // field return type
    companyId: number; // Int!
    createdAt: string; // String!
    description: string | null; // String
    eventDescription: string; // String!
    eventType: NexusGenEnums['RevisionEventType']; // RevisionEventType!
    id: number; // Int!
    metadata: NexusGenScalars['JSON'] | null; // JSON
    newValue: string | null; // String
    performedBy: NexusGenRootTypes['User'] | null; // User
    performedById: number | null; // Int
    previousValue: string | null; // String
    revisionRequest: NexusGenRootTypes['RevisionRequest'] | null; // RevisionRequest
    revisionRequestId: number; // Int!
  }
  SLADashboard: { // field return type
    categoryPerformance: Array<NexusGenRootTypes['CategoryPerformance'] | null>; // [CategoryPerformance]!
    communicationScore: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    customerSatisfaction: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    deliveryPerformance: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    lastUpdated: string; // String!
    monthlyTrends: Array<NexusGenRootTypes['MonthlyTrend'] | null>; // [MonthlyTrend]!
    overallScore: number; // Float!
    performanceLevel: string; // String!
    qualityPerformance: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    recommendations: Array<NexusGenRootTypes['PerformanceRecommendation'] | null>; // [PerformanceRecommendation]!
    responseTime: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    revisionRate: NexusGenRootTypes['SLAMetric']; // SLAMetric!
    topIssues: Array<NexusGenRootTypes['PerformanceIssue'] | null>; // [PerformanceIssue]!
  }
  SLAMetric: { // field return type
    calculatedAt: string; // String!
    description: string | null; // String
    metricName: string; // String!
    previousValue: number | null; // Float
    status: string; // String!
    target: number; // Float!
    trend: string | null; // String
    unit: string; // String!
    value: number; // Float!
  }
  Sample: { // field return type
    accessories: string | null; // String
    category: NexusGenEnums['CollectionCategory'] | null; // CollectionCategory
    collectionName: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: NexusGenEnums['Currency'] | null; // Currency
    customer: NexusGenRootTypes['User'] | null; // User
    customerNote: string | null; // String
    deliveryMethod: NexusGenEnums['DeliveryMethod']; // DeliveryMethod!
    estimatedPrice: number | null; // Float
    fabric: string | null; // String
    fabricColor: string | null; // String
    finalPrice: number | null; // Float
    gender: NexusGenEnums['Gender'] | null; // Gender
    id: number; // Int!
    leadTimeDays: number | null; // Int
    manufacture: NexusGenRootTypes['User'] | null; // User
    manufacturerResponse: string | null; // String
    priorityReason: string | null; // String
    revisionDate: NexusGenScalars['DateTime'] | null; // DateTime
    sampleNumber: string; // String!
    sampleType: string | null; // String
    sizeChartUrl: string | null; // String
    sizeOrPattern: string | null; // String
    status: NexusGenEnums['SampleStatus']; // SampleStatus!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  SampleConnection: { // field return type
    edges: NexusGenRootTypes['SampleEdge'][]; // [SampleEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  SampleEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Sample']; // Sample!
  }
  SampleVariant: { // field return type
    company: NexusGenRootTypes['Company'] | null; // Company
    companyId: number; // Int!
    completedAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    productVariant: NexusGenRootTypes['ProductVariant'] | null; // ProductVariant
    productVariantId: number; // Int!
    quantity: number; // Int!
    requestedColor: string | null; // String
    requestedSize: string | null; // String
    sample: NexusGenRootTypes['Sample'] | null; // Sample
    sampleId: number; // Int!
    specialRequest: string | null; // String
    status: NexusGenEnums['SampleStatus']; // SampleStatus!
    totalPrice: number | null; // Float
    unitPrice: number | null; // Float
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  SampleVariantConnection: { // field return type
    edges: Array<NexusGenRootTypes['SampleVariantEdge'] | null> | null; // [SampleVariantEdge]
    pageInfo: NexusGenRootTypes['PageInfo'] | null; // PageInfo
    totalCount: number | null; // Int
  }
  SampleVariantEdge: { // field return type
    cursor: string | null; // String
    node: NexusGenRootTypes['SampleVariant'] | null; // SampleVariant
  }
  SearchResult: { // field return type
    collections: Array<NexusGenRootTypes['Collection'] | null>; // [Collection]!
    orders: Array<NexusGenRootTypes['Order'] | null>; // [Order]!
    products: Array<NexusGenRootTypes['Collection'] | null>; // [Collection]!
    query: string | null; // String
    samples: Array<NexusGenRootTypes['Sample'] | null>; // [Sample]!
    totalCount: number; // Int!
  }
  Subscription: { // field return type
    newSampleRequest: NexusGenRootTypes['Sample'] | null; // Sample
    orderStatusChanged: NexusGenRootTypes['Order'] | null; // Order
    orderUpdated: NexusGenRootTypes['Order'] | null; // Order
    productionTrackingUpdate: NexusGenRootTypes['ProductionTracking'] | null; // ProductionTracking
    systemNotification: string | null; // String
  }
  TopCustomerItem: { // field return type
    averageOrderValue: number; // Float!
    customerId: number; // Int!
    customerName: string; // String!
    lastOrderDate: string | null; // String
    orderCount: number; // Int!
    totalRevenue: number; // Float!
  }
  UploadProgressResponse: { // field return type
    assetId: string | null; // String
    error: string | null; // String
    progress: number | null; // Int
    status: string; // String!
    uploadId: string; // String!
  }
  UploadResult: { // field return type
    fileName: string; // String!
    mimeType: string; // String!
    originalName: string; // String!
    path: string; // String!
    size: number; // Int!
    url: string; // String!
  }
  UploadToken: { // field return type
    allowedTypes: Array<string | null>; // [String]!
    expiresAt: string; // String!
    fileName: string; // String!
    maxSize: number; // Int!
    token: string; // String!
    uploadUrl: string; // String!
  }
  UploadUrlResponse: { // field return type
    allowedMimeTypes: string[] | null; // [String!]
    expiresIn: number; // Int!
    fields: string | null; // String
    maxFileSize: string; // String!
    uploadId: string; // String!
    uploadUrl: string; // String!
  }
  User: { // field return type
    businessLicense: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    firstName: string | null; // String
    id: number; // Int!
    isActive: boolean; // Boolean!
    lastName: string | null; // String
    name: string | null; // String
    phone: string | null; // String
    profilePicture: string | null; // String
    role: NexusGenEnums['Role']; // Role!
    taxNumber: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    username: string | null; // String
  }
  UserConnection: { // field return type
    edges: NexusGenRootTypes['UserEdge'][]; // [UserEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  UserEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['User']; // User!
  }
  UserStats: { // field return type
    adminCount: number; // Int!
    customerCount: number; // Int!
    manufactureCount: number; // Int!
    totalUsers: number; // Int!
  }
  Workshop: { // field return type
    capacity: number | null; // Int
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    isActive: boolean; // Boolean!
    location: string | null; // String
    name: string; // String!
    owner: NexusGenRootTypes['User'] | null; // User
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenFieldTypeNames {
  Asset: { // field return type name
    assetType: 'String'
    category: 'String'
    companyId: 'Int'
    createdAt: 'String'
    fileName: 'String'
    fileSize: 'Int'
    fileUrl: 'String'
    id: 'Int'
    isProcessed: 'Boolean'
    isPublic: 'Boolean'
    metadata: 'String'
    mimeType: 'String'
    originalName: 'String'
    processingStatus: 'String'
    thumbnailUrl: 'String'
    updatedAt: 'String'
    uploadId: 'String'
    uploaderId: 'Int'
  }
  AuthPayload: { // field return type name
    refreshToken: 'String'
    token: 'String'
    user: 'User'
  }
  BusinessAnalytics: { // field return type name
    customers: 'CustomerAnalytics'
    manufacturers: 'ManufacturerAnalytics'
    marketTrends: 'MarketTrend'
    orders: 'OrderAnalytics'
    revenue: 'RevenueAnalytics'
  }
  Category: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    id: 'Int'
    name: 'String'
    updatedAt: 'DateTime'
  }
  CategoryPerformance: { // field return type name
    averageDeliveryDays: 'Float'
    categoryName: 'String'
    completedOrders: 'Int'
    customerSatisfaction: 'Float'
    revisionRate: 'Float'
    score: 'Float'
    totalOrders: 'Int'
  }
  Collection: { // field return type name
    category: 'Category'
    createdAt: 'DateTime'
    description: 'String'
    id: 'Int'
    images: 'String'
    isActive: 'Boolean'
    isFeatured: 'Boolean'
    name: 'String'
    priceRange: 'String'
    season: 'String'
    slug: 'String'
    tags: 'String'
    updatedAt: 'DateTime'
    user: 'User'
    viewCount: 'Int'
    year: 'Int'
  }
  CollectionConnection: { // field return type name
    edges: 'CollectionEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  CollectionEdge: { // field return type name
    cursor: 'String'
    node: 'Collection'
  }
  Company: { // field return type name
    address: 'String'
    collections: 'Collection'
    createdAt: 'DateTime'
    description: 'String'
    email: 'String'
    id: 'Int'
    isActive: 'Boolean'
    logo: 'String'
    name: 'String'
    orders: 'Order'
    phone: 'String'
    taxNumber: 'String'
    updatedAt: 'DateTime'
    users: 'User'
    website: 'String'
  }
  CompanyStats: { // field return type name
    activeOrders: 'Int'
    completedOrders: 'Int'
    totalCollections: 'Int'
    totalOrders: 'Int'
    totalUsers: 'Int'
  }
  CustomerAnalytics: { // field return type name
    activeCustomers: 'Int'
    averageOrdersPerCustomer: 'Float'
    customerRetentionRate: 'Float'
    topCustomers: 'TopCustomerItem'
    totalCustomers: 'Int'
  }
  FileInfo: { // field return type name
    createdAt: 'String'
    exists: 'Boolean'
    mimeType: 'String'
    modifiedAt: 'String'
    size: 'Int'
  }
  FileValidationResult: { // field return type name
    detectedMimeType: 'String'
    errors: 'String'
    isValid: 'Boolean'
    suggestedFileName: 'String'
    warnings: 'String'
  }
  ManufacturerAnalytics: { // field return type name
    averageSlaScore: 'Float'
    performanceDistribution: 'PerformanceDistributionItem'
    topPerformers: 'ManufacturerPerformanceItem'
    totalManufacturers: 'Int'
  }
  ManufacturerPerformanceItem: { // field return type name
    averageResponseTime: 'Float'
    manufacturerId: 'Int'
    manufacturerName: 'String'
    onTimeDeliveryRate: 'Float'
    qualityScore: 'Float'
    slaScore: 'Float'
    totalOrders: 'Int'
  }
  MarketTrend: { // field return type name
    analysis: 'String'
    metric: 'String'
    period: 'String'
    trend: 'String'
    value: 'Float'
  }
  Message: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    isRead: 'Boolean'
    messageType: 'MessageType'
    receiver: 'User'
    relatedCollectionId: 'Int'
    relatedOrderId: 'Int'
    relatedSampleId: 'Int'
    sender: 'User'
    updatedAt: 'DateTime'
  }
  MonthlyRevenueItem: { // field return type name
    growthRate: 'Float'
    month: 'String'
    orderCount: 'Int'
    revenue: 'Float'
  }
  MonthlyTrend: { // field return type name
    changePercent: 'Float'
    month: 'String'
    status: 'String'
    target: 'Float'
    trend: 'String'
    value: 'Float'
  }
  Mutation: { // field return type name
    answerQuestion: 'Question'
    askQuestion: 'Question'
    cancelOrder: 'Order'
    cleanupTempFiles: 'Int'
    confirmOrder: 'Order'
    createApprovalRequest: 'OrderApproval'
    createCollection: 'Collection'
    createNotification: 'String'
    createOrderFromCollection: 'Order'
    createOrderStage: 'OrderStageTracking'
    createQualityControl: 'QualityControl'
    createReview: 'Review'
    createRevisionRequest: 'RevisionRequest'
    createSample: 'Sample'
    createWorkshop: 'Workshop'
    deleteCollection: 'Boolean'
    deleteFile: 'Boolean'
    deleteQualityControl: 'Boolean'
    deleteQuestion: 'Boolean'
    deleteReview: 'Boolean'
    deleteSample: 'Boolean'
    deleteWorkshop: 'Boolean'
    finalizeUpload: 'String'
    generateUploadToken: 'UploadToken'
    getUploadProgress: 'String'
    implementRevisionRequest: 'RevisionRequest'
    login: 'AuthPayload'
    logout: 'Boolean'
    markMessageAsRead: 'Message'
    markNotificationAsRead: 'Boolean'
    processRevisionRequest: 'RevisionRequest'
    refreshToken: 'AuthPayload'
    removeImage: 'Boolean'
    requestUpload: 'String'
    respondToApproval: 'OrderApproval'
    sendBulkNotification: 'String'
    sendMessage: 'Message'
    signup: 'AuthPayload'
    submitRevisionRequest: 'RevisionRequest'
    updateCollection: 'Collection'
    updateOrderPrice: 'Order'
    updateOrderStage: 'OrderStageTracking'
    updateProductionStage: 'ProductionStageUpdate'
    updateQualityControl: 'QualityControl'
    updateQuestion: 'Question'
    updateReview: 'Review'
    updateRevisionRequest: 'RevisionRequest'
    updateSample: 'Sample'
    updateWorkshop: 'Workshop'
    uploadAndProcessImage: 'UploadResult'
    uploadBase64: 'UploadResult'
    uploadBusinessLicense: 'String'
    uploadCollectionImage: 'String'
    uploadCollectionImages: 'String'
    uploadMessageAttachment: 'String'
    uploadProfilePicture: 'String'
    uploadSampleImage: 'String'
  }
  Order: { // field return type name
    actualDelivery: 'DateTime'
    actualProductionEnd: 'DateTime'
    actualProductionStart: 'DateTime'
    advancePayment: 'Float'
    cargoTrackingNumber: 'String'
    createdAt: 'DateTime'
    customer: 'User'
    customerNote: 'String'
    deliveryAddress: 'String'
    estimatedDelivery: 'DateTime'
    estimatedProductionDate: 'DateTime'
    id: 'Int'
    manufacture: 'User'
    manufacturerNote: 'String'
    orderNumber: 'String'
    productionDays: 'Int'
    quantity: 'Int'
    remainingBalance: 'Float'
    shippingDate: 'DateTime'
    status: 'OrderStatus'
    totalPrice: 'Float'
    unitPrice: 'Float'
    updatedAt: 'DateTime'
  }
  OrderAnalytics: { // field return type name
    averageCompletionDays: 'Float'
    completionRate: 'Float'
    onTimeDeliveryRate: 'Float'
    ordersByStatus: 'OrderStatusCount'
    revisionRate: 'Float'
    totalOrders: 'Int'
  }
  OrderApproval: { // field return type name
    approvalType: 'ApprovalType'
    approverUser: 'User'
    approverUserId: 'Int'
    companyId: 'Int'
    createdAt: 'String'
    deadline: 'String'
    id: 'Int'
    metadata: 'JSON'
    order: 'Order'
    orderId: 'Int'
    requestMessage: 'String'
    requestedAt: 'String'
    requesterUser: 'User'
    requesterUserId: 'Int'
    respondedAt: 'String'
    responseMessage: 'String'
    stageTracking: 'OrderStageTracking'
    stageTrackingId: 'Int'
    status: 'StageStatus'
    updatedAt: 'String'
  }
  OrderConnection: { // field return type name
    edges: 'OrderEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  OrderDeadline: { // field return type name
    companyId: 'Int'
    completedAt: 'String'
    createdAt: 'String'
    deadlineDate: 'String'
    deadlineType: 'String'
    description: 'String'
    id: 'Int'
    isActive: 'Boolean'
    isCompleted: 'Boolean'
    isWarningTriggered: 'Boolean'
    order: 'Order'
    orderId: 'Int'
    updatedAt: 'String'
    warningDays: 'Int'
    warningTriggeredAt: 'String'
  }
  OrderEdge: { // field return type name
    cursor: 'String'
    node: 'Order'
  }
  OrderItem: { // field return type name
    company: 'Company'
    companyId: 'Int'
    createdAt: 'DateTime'
    discountAmount: 'Float'
    discountPercent: 'Float'
    finalPrice: 'Float'
    id: 'Int'
    itemNote: 'String'
    order: 'Order'
    orderId: 'Int'
    productVariant: 'ProductVariant'
    productVariantId: 'Int'
    quantity: 'Int'
    totalPrice: 'Float'
    unitPrice: 'Float'
    updatedAt: 'DateTime'
  }
  OrderItemConnection: { // field return type name
    edges: 'OrderItemEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  OrderItemEdge: { // field return type name
    cursor: 'String'
    node: 'OrderItem'
  }
  OrderNotification: { // field return type name
    companyId: 'Int'
    createdAt: 'String'
    id: 'Int'
    isRead: 'Boolean'
    message: 'String'
    metadata: 'JSON'
    order: 'Order'
    orderId: 'Int'
    priority: 'Int'
    readAt: 'String'
    recipientUser: 'User'
    recipientUserId: 'Int'
    title: 'String'
    type: 'NotificationType'
  }
  OrderStageTracking: { // field return type name
    actualEndDate: 'String'
    actualStartDate: 'String'
    assignedTo: 'User'
    assignedToId: 'Int'
    companyId: 'Int'
    createdAt: 'String'
    id: 'Int'
    notes: 'String'
    order: 'Order'
    orderId: 'Int'
    plannedEndDate: 'String'
    plannedStartDate: 'String'
    priority: 'Int'
    stage: 'OrderStage'
    status: 'StageStatus'
    updatedAt: 'String'
  }
  OrderStatusCount: { // field return type name
    averageCompletionDays: 'Float'
    count: 'Int'
    percentage: 'Float'
    status: 'String'
  }
  OrderWorkflowSummary: { // field return type name
    activeDeadlines: 'Int'
    completedStages: 'Int'
    currentStage: 'OrderStage'
    currentStageStatus: 'StageStatus'
    estimatedCompletion: 'String'
    nextDeadline: 'OrderDeadline'
    orderId: 'Int'
    pendingApprovals: 'Int'
    progressPercentage: 'Int'
    totalStages: 'Int'
    unreadNotifications: 'Int'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  PerformanceDistributionItem: { // field return type name
    manufacturerCount: 'Int'
    percentage: 'Float'
    scoreRange: 'String'
  }
  PerformanceIssue: { // field return type name
    affectedOrders: 'Int'
    category: 'String'
    description: 'String'
    estimatedImpact: 'String'
    severity: 'String'
    suggestedAction: 'String'
  }
  PerformanceRecommendation: { // field return type name
    category: 'String'
    description: 'String'
    estimatedDays: 'Int'
    expectedImprovement: 'String'
    potentialROI: 'Float'
    priority: 'String'
    title: 'String'
  }
  ProductVariant: { // field return type name
    collection: 'Collection'
    collectionId: 'Int'
    color: 'String'
    colorHex: 'String'
    company: 'Company'
    companyId: 'Int'
    costPrice: 'Decimal'
    createdAt: 'DateTime'
    currency: 'Currency'
    customAttributes: 'JSON'
    description: 'String'
    dimensions: 'JSON'
    discontinuedAt: 'DateTime'
    id: 'Int'
    images: 'JSON'
    isActive: 'Boolean'
    isAvailable: 'Boolean'
    leadTimeDays: 'Int'
    material: 'String'
    maxOrderQuantity: 'Int'
    minOrderQuantity: 'Int'
    name: 'String'
    orderItems: 'OrderItem'
    packagingInfo: 'JSON'
    pattern: 'String'
    price: 'Decimal'
    reservedQuantity: 'Int'
    sampleVariants: 'SampleVariant'
    seasonalAvailability: 'JSON'
    size: 'String'
    stockQuantity: 'Int'
    thumbnail: 'String'
    updatedAt: 'DateTime'
    variantCode: 'String'
    weight: 'Decimal'
  }
  ProductVariantConnection: { // field return type name
    edges: 'ProductVariantEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  ProductVariantEdge: { // field return type name
    cursor: 'String'
    node: 'ProductVariant'
  }
  ProductionRevision: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    newValue: 'String'
    oldValue: 'String'
    productionTracking: 'ProductionTracking'
    reason: 'String'
    revisionType: 'RevisionType'
    updatedBy: 'User'
  }
  ProductionStageUpdate: { // field return type name
    actualEndDate: 'DateTime'
    actualStartDate: 'DateTime'
    createdAt: 'DateTime'
    id: 'Int'
    note: 'String'
    productionTracking: 'ProductionTracking'
    stage: 'ProductionStage'
    status: 'ProductionStatus'
  }
  ProductionTracking: { // field return type name
    createdAt: 'DateTime'
    currentStage: 'ProductionStage'
    cuttingDays: 'Int'
    estimatedTotalDays: 'Int'
    fabricDays: 'Int'
    id: 'Int'
    overallStatus: 'ProductionStatus'
    packagingDays: 'Int'
    planningDays: 'Int'
    qualityDays: 'Int'
    sewingDays: 'Int'
    shippingDays: 'Int'
    startDate: 'DateTime'
    updatedAt: 'DateTime'
    workshop: 'Workshop'
  }
  QualityControl: { // field return type name
    createdAt: 'DateTime'
    details: 'String'
    id: 'Int'
    productionTracking: 'ProductionTracking'
    result: 'QualityResult'
    testDate: 'DateTime'
    testType: 'QualityTestType'
  }
  Query: { // field return type name
    allCategories: 'Category'
    allUsers: 'User'
    businessAnalytics: 'String'
    categories: 'Category'
    categoryPerformance: 'String'
    collections: 'Collection'
    customerSatisfactionMetrics: 'String'
    dashboardStats: 'String'
    fileInfo: 'FileInfo'
    generateCustomerReport: 'String'
    generateInventoryReport: 'String'
    generateManufacturerReport: 'String'
    generateSalesReport: 'String'
    globalSearch: 'String'
    myAssets: 'String'
    myMessages: 'Message'
    orderAnalytics: 'String'
    orderApprovals: 'OrderApproval'
    orderNotifications: 'OrderNotification'
    orderStageTrackings: 'OrderStageTracking'
    orderWorkflowSummary: 'OrderWorkflowSummary'
    orders: 'Order'
    productionAnalytics: 'String'
    productionTrackings: 'ProductionTracking'
    qualityControl: 'QualityControl'
    qualityControls: 'QualityControl'
    qualityMetrics: 'String'
    question: 'Question'
    questions: 'Question'
    revenueAnalytics: 'String'
    review: 'Review'
    reviews: 'Review'
    revisionAnalytics: 'String'
    revisionRequest: 'RevisionRequest'
    revisionRequests: 'RevisionRequestConnection'
    revisionStats: 'RevisionStats'
    samples: 'Sample'
    searchCollections: 'CollectionConnection'
    slaDashboard: 'String'
    slaScore: 'Float'
    unreadMessageCount: 'Int'
    uploadStats: 'JSON'
    userStats: 'UserStats'
    validateFile: 'String'
    workshop: 'Workshop'
    workshops: 'Workshop'
  }
  Question: { // field return type name
    answer: 'String'
    createdAt: 'DateTime'
    customer: 'User'
    id: 'Int'
    isAnswered: 'Boolean'
    isPublic: 'Boolean'
    manufacture: 'User'
    question: 'String'
    updatedAt: 'DateTime'
  }
  RevenueAnalytics: { // field return type name
    averageOrderValue: 'Float'
    monthlyGrowthRate: 'Float'
    monthlyRevenue: 'MonthlyRevenueItem'
    reportDate: 'String'
    revenueByCategory: 'RevenueByCategoryItem'
    totalOrders: 'Int'
    totalRevenue: 'Float'
  }
  RevenueByCategoryItem: { // field return type name
    averageOrderValue: 'Float'
    categoryName: 'String'
    growthRate: 'Float'
    orderCount: 'Int'
    revenue: 'Float'
  }
  Review: { // field return type name
    comment: 'String'
    createdAt: 'DateTime'
    customer: 'User'
    id: 'Int'
    rating: 'Int'
    updatedAt: 'DateTime'
  }
  RevisionApproval: { // field return type name
    approvalType: 'String'
    approvedAt: 'String'
    approver: 'User'
    approverId: 'Int'
    comments: 'String'
    companyId: 'Int'
    conditions: 'String'
    createdAt: 'String'
    deadline: 'String'
    id: 'Int'
    level: 'ApprovalLevel'
    metadata: 'JSON'
    revisionRequest: 'RevisionRequest'
    revisionRequestId: 'Int'
    status: 'StageStatus'
    updatedAt: 'String'
  }
  RevisionApprovalConnection: { // field return type name
    edges: 'RevisionApprovalEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  RevisionApprovalEdge: { // field return type name
    cursor: 'String'
    node: 'RevisionApproval'
  }
  RevisionImpact: { // field return type name
    afterValue: 'String'
    beforeValue: 'String'
    companyId: 'Int'
    createdAt: 'String'
    description: 'String'
    id: 'Int'
    impactLevel: 'Int'
    impactType: 'String'
    mitigationCost: 'Float'
    mitigationPlan: 'String'
    revisionRequest: 'RevisionRequest'
    revisionRequestId: 'Int'
    updatedAt: 'String'
  }
  RevisionRequest: { // field return type name
    approvalLevel: 'Int'
    approvals: 'RevisionApproval'
    approvedAt: 'String'
    assignedTo: 'User'
    assignedToId: 'Int'
    attachments: 'JSON'
    category: 'String'
    companyId: 'Int'
    costImpact: 'Float'
    createdAt: 'String'
    deliveryImpact: 'DateTime'
    description: 'String'
    estimatedDays: 'Int'
    id: 'Int'
    impactedStages: 'JSON'
    impacts: 'RevisionImpact'
    implementedAt: 'String'
    order: 'Order'
    orderId: 'Int'
    productionTracking: 'ProductionTracking'
    productionTrackingId: 'Int'
    qualityImpact: 'String'
    requestedBy: 'User'
    requestedById: 'Int'
    revisionNumber: 'String'
    revisionType: 'RevisionType'
    sample: 'Sample'
    sampleId: 'Int'
    status: 'StageStatus'
    timeline: 'RevisionTimeline'
    title: 'String'
    totalApprovalLevels: 'Int'
    updatedAt: 'String'
    urgency: 'Int'
  }
  RevisionRequestConnection: { // field return type name
    edges: 'RevisionRequestEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  RevisionRequestEdge: { // field return type name
    cursor: 'String'
    node: 'RevisionRequest'
  }
  RevisionStats: { // field return type name
    approvedRevisions: 'Int'
    avgApprovalTime: 'Float'
    implementedRevisions: 'Int'
    monthlyTrends: 'JSON'
    pendingRevisions: 'Int'
    rejectedRevisions: 'Int'
    revisionsBySeverity: 'JSON'
    revisionsByType: 'JSON'
    totalCostImpact: 'Float'
    totalRevisions: 'Int'
    totalTimeImpact: 'Int'
  }
  RevisionTimeline: { // field return type name
    companyId: 'Int'
    createdAt: 'String'
    description: 'String'
    eventDescription: 'String'
    eventType: 'RevisionEventType'
    id: 'Int'
    metadata: 'JSON'
    newValue: 'String'
    performedBy: 'User'
    performedById: 'Int'
    previousValue: 'String'
    revisionRequest: 'RevisionRequest'
    revisionRequestId: 'Int'
  }
  SLADashboard: { // field return type name
    categoryPerformance: 'CategoryPerformance'
    communicationScore: 'SLAMetric'
    customerSatisfaction: 'SLAMetric'
    deliveryPerformance: 'SLAMetric'
    lastUpdated: 'String'
    monthlyTrends: 'MonthlyTrend'
    overallScore: 'Float'
    performanceLevel: 'String'
    qualityPerformance: 'SLAMetric'
    recommendations: 'PerformanceRecommendation'
    responseTime: 'SLAMetric'
    revisionRate: 'SLAMetric'
    topIssues: 'PerformanceIssue'
  }
  SLAMetric: { // field return type name
    calculatedAt: 'String'
    description: 'String'
    metricName: 'String'
    previousValue: 'Float'
    status: 'String'
    target: 'Float'
    trend: 'String'
    unit: 'String'
    value: 'Float'
  }
  Sample: { // field return type name
    accessories: 'String'
    category: 'CollectionCategory'
    collectionName: 'String'
    createdAt: 'DateTime'
    currency: 'Currency'
    customer: 'User'
    customerNote: 'String'
    deliveryMethod: 'DeliveryMethod'
    estimatedPrice: 'Float'
    fabric: 'String'
    fabricColor: 'String'
    finalPrice: 'Float'
    gender: 'Gender'
    id: 'Int'
    leadTimeDays: 'Int'
    manufacture: 'User'
    manufacturerResponse: 'String'
    priorityReason: 'String'
    revisionDate: 'DateTime'
    sampleNumber: 'String'
    sampleType: 'String'
    sizeChartUrl: 'String'
    sizeOrPattern: 'String'
    status: 'SampleStatus'
    updatedAt: 'DateTime'
  }
  SampleConnection: { // field return type name
    edges: 'SampleEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  SampleEdge: { // field return type name
    cursor: 'String'
    node: 'Sample'
  }
  SampleVariant: { // field return type name
    company: 'Company'
    companyId: 'Int'
    completedAt: 'DateTime'
    createdAt: 'DateTime'
    id: 'Int'
    productVariant: 'ProductVariant'
    productVariantId: 'Int'
    quantity: 'Int'
    requestedColor: 'String'
    requestedSize: 'String'
    sample: 'Sample'
    sampleId: 'Int'
    specialRequest: 'String'
    status: 'SampleStatus'
    totalPrice: 'Float'
    unitPrice: 'Float'
    updatedAt: 'DateTime'
  }
  SampleVariantConnection: { // field return type name
    edges: 'SampleVariantEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  SampleVariantEdge: { // field return type name
    cursor: 'String'
    node: 'SampleVariant'
  }
  SearchResult: { // field return type name
    collections: 'Collection'
    orders: 'Order'
    products: 'Collection'
    query: 'String'
    samples: 'Sample'
    totalCount: 'Int'
  }
  Subscription: { // field return type name
    newSampleRequest: 'Sample'
    orderStatusChanged: 'Order'
    orderUpdated: 'Order'
    productionTrackingUpdate: 'ProductionTracking'
    systemNotification: 'String'
  }
  TopCustomerItem: { // field return type name
    averageOrderValue: 'Float'
    customerId: 'Int'
    customerName: 'String'
    lastOrderDate: 'String'
    orderCount: 'Int'
    totalRevenue: 'Float'
  }
  UploadProgressResponse: { // field return type name
    assetId: 'String'
    error: 'String'
    progress: 'Int'
    status: 'String'
    uploadId: 'String'
  }
  UploadResult: { // field return type name
    fileName: 'String'
    mimeType: 'String'
    originalName: 'String'
    path: 'String'
    size: 'Int'
    url: 'String'
  }
  UploadToken: { // field return type name
    allowedTypes: 'String'
    expiresAt: 'String'
    fileName: 'String'
    maxSize: 'Int'
    token: 'String'
    uploadUrl: 'String'
  }
  UploadUrlResponse: { // field return type name
    allowedMimeTypes: 'String'
    expiresIn: 'Int'
    fields: 'String'
    maxFileSize: 'String'
    uploadId: 'String'
    uploadUrl: 'String'
  }
  User: { // field return type name
    businessLicense: 'String'
    createdAt: 'DateTime'
    email: 'String'
    firstName: 'String'
    id: 'Int'
    isActive: 'Boolean'
    lastName: 'String'
    name: 'String'
    phone: 'String'
    profilePicture: 'String'
    role: 'Role'
    taxNumber: 'String'
    updatedAt: 'DateTime'
    username: 'String'
  }
  UserConnection: { // field return type name
    edges: 'UserEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  UserEdge: { // field return type name
    cursor: 'String'
    node: 'User'
  }
  UserStats: { // field return type name
    adminCount: 'Int'
    customerCount: 'Int'
    manufactureCount: 'Int'
    totalUsers: 'Int'
  }
  Workshop: { // field return type name
    capacity: 'Int'
    createdAt: 'DateTime'
    id: 'Int'
    isActive: 'Boolean'
    location: 'String'
    name: 'String'
    owner: 'User'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    answerQuestion: { // args
      answer: string; // String!
      id: number; // Int!
    }
    askQuestion: { // args
      isPublic?: boolean | null; // Boolean
      manufactureId: number; // Int!
      question: string; // String!
    }
    cancelOrder: { // args
      id: number; // Int!
      reason?: string | null; // String
    }
    confirmOrder: { // args
      id: number; // Int!
    }
    createApprovalRequest: { // args
      input: NexusGenInputs['CreateOrderApprovalInput']; // CreateOrderApprovalInput!
    }
    createCollection: { // args
      categoryId: number; // Int!
      description?: string | null; // String
      name: string; // String!
    }
    createNotification: { // args
      entityId?: number | null; // Int
      entityType?: string | null; // String
      message: string; // String!
      title: string; // String!
      type?: string | null; // String
      userId: number; // Int!
    }
    createOrderFromCollection: { // args
      collectionId: number; // Int!
      customerNote?: string | null; // String
      deliveryAddress: string; // String!
      quantity: number; // Int!
    }
    createOrderStage: { // args
      input: NexusGenInputs['CreateOrderStageInput']; // CreateOrderStageInput!
    }
    createQualityControl: { // args
      details?: string | null; // String
      productionTrackingId: number; // Int!
      result: NexusGenEnums['QualityResult']; // QualityResult!
      testDate?: NexusGenScalars['DateTime'] | null; // DateTime
      testType: NexusGenEnums['QualityTestType']; // QualityTestType!
    }
    createReview: { // args
      comment?: string | null; // String
      rating: number; // Int!
    }
    createRevisionRequest: { // args
      input: NexusGenInputs['CreateRevisionRequestInput']; // CreateRevisionRequestInput!
    }
    createSample: { // args
      collectionId: number; // Int!
      customerNote?: string | null; // String
    }
    createWorkshop: { // args
      capacity?: number | null; // Int
      location?: string | null; // String
      name: string; // String!
    }
    deleteCollection: { // args
      id: number; // Int!
    }
    deleteFile: { // args
      path: string; // String!
    }
    deleteQualityControl: { // args
      id: number; // Int!
    }
    deleteQuestion: { // args
      id: number; // Int!
    }
    deleteReview: { // args
      id: number; // Int!
    }
    deleteSample: { // args
      id: number; // Int!
    }
    deleteWorkshop: { // args
      id: number; // Int!
    }
    finalizeUpload: { // args
      input: NexusGenInputs['FinalizeUploadInput']; // FinalizeUploadInput!
    }
    generateUploadToken: { // args
      category?: NexusGenEnums['UploadCategory'] | null; // UploadCategory
      options?: NexusGenInputs['UploadOptions'] | null; // UploadOptions
    }
    getUploadProgress: { // args
      uploadId: string; // String!
    }
    implementRevisionRequest: { // args
      comments?: string | null; // String
      id: number; // Int!
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    markMessageAsRead: { // args
      messageId: number; // Int!
    }
    markNotificationAsRead: { // args
      id: number; // Int!
    }
    processRevisionRequest: { // args
      approve: boolean; // Boolean!
      comments?: string | null; // String
      id: number; // Int!
    }
    refreshToken: { // args
      refreshToken: string; // String!
    }
    removeImage: { // args
      entityId: number; // Int!
      entityType: string; // String!
      imageUrl: string; // String!
    }
    requestUpload: { // args
      input: NexusGenInputs['RequestUploadInput']; // RequestUploadInput!
    }
    respondToApproval: { // args
      id: number; // Int!
      input: NexusGenInputs['RespondToApprovalInput']; // RespondToApprovalInput!
    }
    sendBulkNotification: { // args
      message: string; // String!
      title: string; // String!
      type?: string | null; // String
      userRole?: string | null; // String
    }
    sendMessage: { // args
      content: string; // String!
      messageType?: NexusGenEnums['MessageType'] | null; // MessageType
      receiverId: number; // Int!
      relatedCollectionId?: number | null; // Int
      relatedOrderId?: number | null; // Int
      relatedSampleId?: number | null; // Int
    }
    signup: { // args
      email: string; // String!
      name?: string | null; // String
      password: string; // String!
      role?: NexusGenEnums['Role'] | null; // Role
    }
    submitRevisionRequest: { // args
      id: number; // Int!
    }
    updateCollection: { // args
      description?: string | null; // String
      id: number; // Int!
      isActive?: boolean | null; // Boolean
      name?: string | null; // String
    }
    updateOrderPrice: { // args
      id: number; // Int!
      manufacturerNote?: string | null; // String
      productionDays?: number | null; // Int
      unitPrice: string; // String!
    }
    updateOrderStage: { // args
      id: number; // Int!
      input: NexusGenInputs['UpdateOrderStageInput']; // UpdateOrderStageInput!
    }
    updateProductionStage: { // args
      actualEndDate?: NexusGenScalars['DateTime'] | null; // DateTime
      actualStartDate?: NexusGenScalars['DateTime'] | null; // DateTime
      note?: string | null; // String
      productionTrackingId: number; // Int!
      stage: NexusGenEnums['ProductionStage']; // ProductionStage!
      status: NexusGenEnums['ProductionStatus']; // ProductionStatus!
    }
    updateQualityControl: { // args
      details?: string | null; // String
      id: number; // Int!
      result?: NexusGenEnums['QualityResult'] | null; // QualityResult
      testDate?: NexusGenScalars['DateTime'] | null; // DateTime
    }
    updateQuestion: { // args
      id: number; // Int!
      isPublic?: boolean | null; // Boolean
      question?: string | null; // String
    }
    updateReview: { // args
      comment?: string | null; // String
      id: number; // Int!
      rating?: number | null; // Int
    }
    updateRevisionRequest: { // args
      id: number; // Int!
      input: NexusGenInputs['UpdateRevisionRequestInput']; // UpdateRevisionRequestInput!
    }
    updateSample: { // args
      id: number; // Int!
      manufacturerResponse?: string | null; // String
    }
    updateWorkshop: { // args
      capacity?: number | null; // Int
      id: number; // Int!
      isActive?: boolean | null; // Boolean
      location?: string | null; // String
      name?: string | null; // String
    }
    uploadAndProcessImage: { // args
      base64Data: string; // String!
      category?: NexusGenEnums['UploadCategory'] | null; // UploadCategory
      fileName?: string | null; // String
      processingOptions?: NexusGenInputs['ImageProcessingOptions'] | null; // ImageProcessingOptions
    }
    uploadBase64: { // args
      base64Data: string; // String!
      category?: NexusGenEnums['UploadCategory'] | null; // UploadCategory
      fileName?: string | null; // String
    }
    uploadBusinessLicense: { // args
      file: string; // String!
      filename: string; // String!
      userId: number; // Int!
    }
    uploadCollectionImage: { // args
      collectionId: number; // Int!
      description?: string | null; // String
      imageUrl: string; // String!
    }
    uploadCollectionImages: { // args
      collectionId: number; // Int!
      images: string; // String!
    }
    uploadMessageAttachment: { // args
      attachmentUrl: string; // String!
      fileName?: string | null; // String
      messageId: number; // Int!
    }
    uploadProfilePicture: { // args
      file: string; // String!
      filename: string; // String!
      userId: number; // Int!
    }
    uploadSampleImage: { // args
      description?: string | null; // String
      imageUrl: string; // String!
      sampleId: number; // Int!
    }
  }
  Query: {
    allUsers: { // args
      role?: NexusGenEnums['Role'] | null; // Role
      searchString?: string | null; // String
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    businessAnalytics: { // args
      filters?: string | null; // String
    }
    categories: { // args
      searchString?: string | null; // String
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    categoryPerformance: { // args
      manufacturerId?: number | null; // Int
      period?: string | null; // String
    }
    collections: { // args
      categoryId?: number | null; // Int
      isActive?: boolean | null; // Boolean
      skip?: number | null; // Int
      take?: number | null; // Int
      userId?: number | null; // Int
    }
    customerSatisfactionMetrics: { // args
      manufacturerId?: number | null; // Int
      period?: string | null; // String
    }
    fileInfo: { // args
      path: string; // String!
    }
    generateCustomerReport: { // args
      customerId?: number | null; // Int
      endDate?: NexusGenScalars['DateTime'] | null; // DateTime
      startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    }
    generateManufacturerReport: { // args
      endDate?: NexusGenScalars['DateTime'] | null; // DateTime
      manufactureId?: number | null; // Int
      startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    }
    generateSalesReport: { // args
      endDate?: NexusGenScalars['DateTime'] | null; // DateTime
      manufactureId?: number | null; // Int
      startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    }
    globalSearch: { // args
      after?: string | null; // String
      filters?: NexusGenInputs['SearchFiltersInput'] | null; // SearchFiltersInput
      first?: number | null; // Int
      searchTerm: string; // String!
      sort?: NexusGenInputs['SearchSortInput'] | null; // SearchSortInput
      type?: NexusGenEnums['SearchType'] | null; // SearchType
    }
    myAssets: { // args
      assetType?: string | null; // String
      category?: string | null; // String
      first?: number | null; // Int
    }
    myMessages: { // args
      messageType?: NexusGenEnums['MessageType'] | null; // MessageType
      skip?: number | null; // Int
      take?: number | null; // Int
      withUserId?: number | null; // Int
    }
    orderAnalytics: { // args
      manufacturerId?: number | null; // Int
      period?: string | null; // String
    }
    orderApprovals: { // args
      filter?: NexusGenInputs['ApprovalFilterInput'] | null; // ApprovalFilterInput
      orderId?: number | null; // Int
    }
    orderNotifications: { // args
      filter?: NexusGenInputs['NotificationFilterInput'] | null; // NotificationFilterInput
      orderId?: number | null; // Int
    }
    orderStageTrackings: { // args
      filter?: NexusGenInputs['OrderWorkflowFilterInput'] | null; // OrderWorkflowFilterInput
      orderId: number; // Int!
    }
    orderWorkflowSummary: { // args
      orderId: number; // Int!
    }
    orders: { // args
      collectionId?: number | null; // Int
      customerId?: number | null; // Int
      manufactureId?: number | null; // Int
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    productionTrackings: { // args
      orderId?: number | null; // Int
      skip?: number | null; // Int
      stage?: NexusGenEnums['ProductionStage'] | null; // ProductionStage
      status?: NexusGenEnums['ProductionStatus'] | null; // ProductionStatus
      take?: number | null; // Int
    }
    qualityControl: { // args
      id: number; // Int!
    }
    qualityControls: { // args
      productionTrackingId?: number | null; // Int
      result?: NexusGenEnums['QualityResult'] | null; // QualityResult
      skip?: number | null; // Int
      take?: number | null; // Int
      testType?: NexusGenEnums['QualityTestType'] | null; // QualityTestType
    }
    qualityMetrics: { // args
      manufacturerId?: number | null; // Int
      period?: string | null; // String
    }
    question: { // args
      id: number; // Int!
    }
    questions: { // args
      customerId?: number | null; // Int
      isAnswered?: boolean | null; // Boolean
      isPublic?: boolean | null; // Boolean
      manufactureId?: number | null; // Int
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    revenueAnalytics: { // args
      endDate?: string | null; // String
      manufacturerId?: number | null; // Int
      startDate?: string | null; // String
    }
    review: { // args
      id: number; // Int!
    }
    reviews: { // args
      customerId?: number | null; // Int
      rating?: number | null; // Int
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    revisionAnalytics: { // args
      manufacturerId?: number | null; // Int
      period?: string | null; // String
    }
    revisionRequest: { // args
      id: number; // Int!
    }
    revisionRequests: { // args
      after?: string | null; // String
      filter?: NexusGenInputs['RevisionRequestFilterInput'] | null; // RevisionRequestFilterInput
      first?: number | null; // Int
      orderBy?: NexusGenInputs['RevisionRequestOrderByInput'] | null; // RevisionRequestOrderByInput
    }
    samples: { // args
      collectionId?: number | null; // Int
      customerId?: number | null; // Int
      manufactureId?: number | null; // Int
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    searchCollections: { // args
      after?: string | null; // String
      filters?: NexusGenInputs['CollectionFiltersInput'] | null; // CollectionFiltersInput
      first?: number | null; // Int
      sort?: NexusGenInputs['SearchSortInput'] | null; // SearchSortInput
    }
    slaDashboard: { // args
      manufacturerId?: number | null; // Int
      period?: string | null; // String
    }
    slaScore: { // args
      manufacturerId?: number | null; // Int
      period?: string | null; // String
    }
    validateFile: { // args
      assetType: string; // String!
      fileName: string; // String!
      fileSize: number; // Int!
      mimeType: string; // String!
    }
    workshop: { // args
      id: number; // Int!
    }
    workshops: { // args
      isActive?: boolean | null; // Boolean
      ownerId?: number | null; // Int
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Subscription: {
    orderStatusChanged: { // args
      userId?: string | null; // String
    }
    orderUpdated: { // args
      orderId?: number | null; // Int
    }
    productionTrackingUpdate: { // args
      orderId?: string | null; // String
    }
    systemNotification: { // args
      userId?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}