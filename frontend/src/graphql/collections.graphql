# Collection GraphQL Operations
# These operations align with the backend Collection schema and support the Library Management integration

# ========================================
# QUERIES
# ========================================

# Get all collections with filtering and pagination (using existing backend query)
query CollectionsList(
  $skip: Int
  $take: Int
  $search: String
  $featured: Boolean
  $categoryId: Int
  $season: String
  $gender: String
) {
  collections(
    skip: $skip
    take: $take
    search: $search
    featured: $featured
    categoryId: $categoryId
    season: $season
    gender: $gender
  ) {
    id
    name
    description
    modelCode
    season
    gender
    images
    price
    isFeatured
    isActive
    targetPrice
    currency
    moq
    targetLeadTime
    deadline
    deadlineDays
    fit
    trend
    colors
    sizeRange
    fabricComposition
    accessories
    fabricDetails {
      id
      name
      iconValue
      certifications {
        id
        name
        iconValue
        data
      }
    }
    accessoryDetails {
      id
      name
      iconValue
      certifications {
        id
        name
        iconValue
        data
      }
    }
    viewCount
    likesCount
    createdAt
    updatedAt
    author {
      id
      name
    }
    category {
      id
      name
    }
    company {
      id
      name
    }
  }
}

# Get collection details by ID (using existing backend query)
query CollectionsDetail($id: Int!) {
  collection(id: $id) {
    id
    name
    description
    modelCode
    slug
    season
    gender
    fit
    trend
    colors
    sizeGroups
    sizeRange
    measurementChart
    fabricComposition
    accessories
    images
    techPack
    fabricDetails {
      id
      name
      description
      imageUrl
      iconValue
      data
      tags
      certifications {
        id
        name
        category
        description
        imageUrl
        iconValue
      }
    }
    accessoryDetails {
      id
      name
      description
      imageUrl
      iconValue
      data
      tags
      certifications {
        id
        name
        category
        description
        imageUrl
        iconValue
      }
    }
    moq
    targetPrice
    currency
    targetLeadTime
    deadline
    deadlineDays
    notes
    isActive
    isFeatured
    price
    sku
    stock
    viewCount
    shareCount
    likesCount
    lastViewedAt
    createdAt
    updatedAt
    author {
      id
      name
    }
    category {
      id
      name
    }
    companyCategory {
      id
      name
    }
    company {
      id
      name
      type
    }
    certifications {
      id
      name
      category
      description
      imageUrl
      iconValue
    }
    samples {
      id
      sampleNumber
      name
      status
      images
    }
    orders {
      id
      orderNumber
      quantity
      status
    }
  }
}

# Get featured collections
query CollectionsFeatured($skip: Int, $take: Int) {
  featuredCollections(skip: $skip, take: $take) {
    id
    name
    modelCode
    description
    season
    gender
    images
    company {
      id
      name
    }
    createdAt
  }
}

# ========================================
# MUTATIONS (using existing backend mutations)
# ========================================

# Create new collection (basic - matching backend mutation)
mutation CollectionsCreate(
  $name: String!
  $description: String
  $modelCode: String
  $season: String
  $gender: String
  $fit: String
  $trend: String
  $colors: String
  $sizeRange: String
  $fabricComposition: String
  $accessories: String
  $images: String
  $moq: Int
  $targetPrice: Float
  $currency: String
  $deadlineDays: Int
  $notes: String
) {
  createCollection(
    name: $name
    description: $description
    modelCode: $modelCode
    season: $season
    gender: $gender
    fit: $fit
    trend: $trend
    colors: $colors
    sizeRange: $sizeRange
    fabricComposition: $fabricComposition
    accessories: $accessories
    images: $images
    moq: $moq
    targetPrice: $targetPrice
    currency: $currency
    deadlineDays: $deadlineDays
    notes: $notes
  ) {
    id
    name
    modelCode
    description
    season
    gender
    fit
    trend
    colors
    sizeRange
    fabricComposition
    accessories
    images
    moq
    targetPrice
    currency
    deadline
    deadlineDays
    notes
    createdAt
    updatedAt
  }
}

# Update existing collection (matching backend mutation)
mutation CollectionsUpdate(
  $id: Int!
  $name: String
  $description: String
  $isFeatured: Boolean
  $season: String
  $gender: String
  $fit: String
  $trend: String
  $colors: String
  $sizeGroups: String
  $sizeRange: String
  $measurementChart: String
  $fabricComposition: String
  $accessories: String
  $techPack: String
  $moq: Int
  $targetPrice: Float
  $currency: String
  $targetLeadTime: Int
  $deadline: DateTime
  $deadlineDays: Int
  $notes: String
  $images: String
  $productionSchedule: String
) {
  updateCollection(
    id: $id
    name: $name
    description: $description
    isFeatured: $isFeatured
    season: $season
    gender: $gender
    fit: $fit
    trend: $trend
    colors: $colors
    sizeGroups: $sizeGroups
    sizeRange: $sizeRange
    measurementChart: $measurementChart
    fabricComposition: $fabricComposition
    accessories: $accessories
    techPack: $techPack
    moq: $moq
    targetPrice: $targetPrice
    currency: $currency
    targetLeadTime: $targetLeadTime
    deadline: $deadline
    deadlineDays: $deadlineDays
    notes: $notes
    images: $images
    productionSchedule: $productionSchedule
  ) {
    id
    name
    description
    modelCode
    season
    gender
    fit
    trend
    colors
    sizeGroups
    sizeRange
    fabricComposition
    accessories
    images
    moq
    targetPrice
    currency
    targetLeadTime
    deadline
    deadlineDays
    notes
    isFeatured
    updatedAt
  }
}

# Delete collection
mutation CollectionsDelete($id: Int!) {
  deleteCollection(id: $id)
}

# Publish collection
mutation CollectionsPublish($id: Int!) {
  publishCollection(id: $id)
}

# Like/Unlike collection
mutation CollectionsToggleLike($id: Int!) {
  toggleCollectionLike(id: $id) {
    id
    likesCount
  }
}

# Increment view count
mutation CollectionsIncrementView($id: Int!) {
  incrementCollectionView(id: $id) {
    id
    viewCount
    lastViewedAt
  }
}
