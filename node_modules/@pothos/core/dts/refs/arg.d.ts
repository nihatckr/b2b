import { inputFieldShapeKey, type PothosInputFieldConfig, type PothosTypeConfig, type SchemaTypes } from '../types';
export declare class ArgumentRef<Types extends SchemaTypes, T = unknown> {
    kind: "Arg";
    fieldName?: string;
    $inferInput: T;
    [inputFieldShapeKey]: T;
    protected pendingActions: ((config: PothosInputFieldConfig<Types>) => PothosInputFieldConfig<Types> | void)[];
    private initConfig;
    private onUseCallbacks;
    constructor(initConfig: (name: string, field: string, typeConfig: PothosTypeConfig) => PothosInputFieldConfig<Types>);
    onConfig(cb: (config: PothosInputFieldConfig<Types>) => PothosInputFieldConfig<Types> | void): void;
    updateConfig(cb: (config: PothosInputFieldConfig<Types>) => PothosInputFieldConfig<Types> | void): void;
    getConfig(name: string, field: string, typeConfig: PothosTypeConfig): PothosInputFieldConfig<Types>;
    onFirstUse(cb: (config: PothosInputFieldConfig<Types>) => void): void;
}
//# sourceMappingURL=arg.d.ts.map