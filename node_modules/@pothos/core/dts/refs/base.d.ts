import type { SchemaTypes } from '../types';
export declare class BaseTypeRef<Types extends SchemaTypes, T = unknown> implements PothosSchemaTypes.BaseTypeRef<Types, T> {
    kind: "InputObject" | "Enum" | "Scalar" | "List" | "Object" | "Interface" | "Union" | "InputList";
    name: string;
    association: BaseTypeRef<Types, T> | string | null;
    protected configCallbacks: Set<(config: T) => void>;
    protected preparedForBuild: boolean;
    private currentConfig;
    constructor(kind: 'Enum' | 'InputList' | 'InputObject' | 'Interface' | 'List' | 'Object' | 'Scalar' | 'Union', name: string, config?: T | null);
    toString(): string;
    associate(ref: BaseTypeRef<Types, T> | string): void;
    onConfig(cb: (config: T) => T | void): void;
    updateConfig(config: T | ((oldConfig: T) => T)): void;
    prepareForBuild(): void;
    protected onceOnConfig(cb: (config: T) => T | void): void;
}
//# sourceMappingURL=base.d.ts.map