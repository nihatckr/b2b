import type { PothosUnionTypeConfig, SchemaTypes } from '../types';
import { type ObjectParam, type OutputRef, outputShapeKey, parentShapeKey } from '../types/type-params';
import { BaseTypeRef } from './base';
export declare class UnionRef<Types extends SchemaTypes, T, P = T> extends BaseTypeRef<Types, PothosUnionTypeConfig> implements OutputRef<T>, PothosSchemaTypes.UnionRef<Types, T, P> {
    kind: "Union";
    $inferType: T;
    [outputShapeKey]: T;
    [parentShapeKey]: P;
    private types;
    constructor(name: string, config?: PothosUnionTypeConfig);
    addTypes(types: ObjectParam<Types>[] | (() => ObjectParam<Types>[])): void;
    prepareForBuild(): void;
}
//# sourceMappingURL=union.d.ts.map