import { type FieldKind, outputFieldShapeKey, type PothosOutputFieldConfig, type PothosTypeConfig, type SchemaTypes } from '../types';
export declare class FieldRef<Types extends SchemaTypes, T = unknown, Kind extends FieldKind = FieldKind> implements PothosSchemaTypes.FieldRef<Types, T, Kind> {
    kind: FieldKind;
    fieldName?: string;
    $inferType: T;
    [outputFieldShapeKey]: T;
    protected pendingActions: ((config: PothosOutputFieldConfig<Types>) => PothosOutputFieldConfig<Types> | undefined)[];
    private initConfig;
    private onUseCallbacks;
    constructor(kind: Kind, initConfig: (name: string, typeConfig: PothosTypeConfig) => PothosOutputFieldConfig<Types>);
    updateConfig(cb: (config: PothosOutputFieldConfig<Types>) => PothosOutputFieldConfig<Types> | undefined): void;
    getConfig(name: string, typeConfig: PothosTypeConfig): PothosOutputFieldConfig<Types>;
    onFirstUse(cb: (config: PothosOutputFieldConfig<Types>) => void): void;
}
//# sourceMappingURL=field.d.ts.map