function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    }
    else {
        obj[key] = value;
    }
    return obj;
}
import { inputShapeKey, outputShapeKey, parentShapeKey } from '../types/index.js';
import { BaseTypeRef } from './base.js';
let _outputShapeKey = outputShapeKey, _parentShapeKey = parentShapeKey, _inputShapeKey = inputShapeKey;
export class ScalarRef extends BaseTypeRef {
    constructor(name, config) {
        super("Scalar", name, config), _define_property(this, "kind", "Scalar"), _define_property(this, "$inferType", void 0), _define_property(this, "$inferInput", void 0), _define_property(this, _outputShapeKey, void 0), _define_property(this, _parentShapeKey, void 0), _define_property(this, _inputShapeKey, void 0);
    }
}
//# sourceMappingURL=scalar.js.map
