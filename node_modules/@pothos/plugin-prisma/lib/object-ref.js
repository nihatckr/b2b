"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get PrismaObjectRef () {
        return PrismaObjectRef;
    },
    get prismaModelKey () {
        return prismaModelKey;
    }
});
const _core = require("@pothos/core");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
const prismaModelKey = Symbol.for('Pothos.prismaModelKey');
let _prismaModelKey = prismaModelKey, _abstractReturnShapeKey = _core.abstractReturnShapeKey;
class PrismaObjectRef extends _core.ObjectRef {
    addBrand(value) {
        if (Array.isArray(value)) {
            for (const val of value){
                (0, _core.brandWithType)(val, this.name);
            }
            return value;
        }
        (0, _core.brandWithType)(value, this.name);
        return value;
    }
    hasBrand(value) {
        return typeof value === 'object' && value !== null && _core.typeBrandKey in value && value[_core.typeBrandKey] === this.name;
    }
    constructor(name, modelName){
        super(name), _define_property(this, _prismaModelKey, void 0), _define_property(this, _abstractReturnShapeKey, void 0), _define_property(this, "modelName", void 0);
        this.modelName = modelName;
    }
}

//# sourceMappingURL=object-ref.js.map