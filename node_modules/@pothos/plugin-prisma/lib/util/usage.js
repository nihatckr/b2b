"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get extendWithUsage () {
        return extendWithUsage;
    },
    get isUsed () {
        return isUsed;
    },
    get usageSymbol () {
        return usageSymbol;
    },
    get wrapWithUsageCheck () {
        return wrapWithUsageCheck;
    }
});
const usageSymbol = Symbol.for('Pothos.isUsed');
function wrapWithUsageCheck(obj) {
    const result = {};
    let used = true;
    Object.defineProperty(result, usageSymbol, {
        get () {
            return used;
        },
        set (value) {
            used = value;
        },
        enumerable: false
    });
    for (const key of Object.keys(obj)){
        // only set to false if the object has keys
        used = false;
        Object.defineProperty(result, key, {
            enumerable: true,
            configurable: true,
            get () {
                used = true;
                return obj[key];
            }
        });
    }
    return result;
}
function isUsed(obj) {
    return !(usageSymbol in obj) || obj[usageSymbol];
}
function extendWithUsage(original, extension) {
    if (!(usageSymbol in original)) {
        return {
            ...original,
            ...extension
        };
    }
    const result = {
        ...extension
    };
    for (const key of [
        usageSymbol,
        ...Object.keys(original)
    ]){
        if (key in result) {
            continue;
        }
        Object.defineProperty(result, key, {
            enumerable: key !== usageSymbol,
            configurable: key !== usageSymbol,
            get () {
                return original[key];
            }
        });
    }
    return result;
}

//# sourceMappingURL=usage.js.map