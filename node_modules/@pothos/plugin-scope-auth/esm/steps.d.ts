import { type SchemaTypes } from '@pothos/core';
import type { GraphQLFieldResolver } from 'graphql';
import type { FieldAuthScopes, FieldGrantScopes, ResolveStep, TypeAuthScopes, TypeGrantScopes } from './types.js';
export declare function createTypeAuthScopesStep<Types extends SchemaTypes>(authScopes: TypeAuthScopes<Types, unknown>, type: string): ResolveStep<Types>;
export declare function createTypeGrantScopesStep<Types extends SchemaTypes>(grantScopes: TypeGrantScopes<Types, unknown>, type: string, forField: boolean): ResolveStep<Types>;
export declare function createFieldAuthScopesStep<Types extends SchemaTypes>(authScopes: FieldAuthScopes<Types, {}, {}>): ResolveStep<Types>;
export declare function createFieldGrantScopesStep<Types extends SchemaTypes>(grantScopes: FieldGrantScopes<Types, {}, {}>): ResolveStep<Types>;
export declare function createResolveStep<Types extends SchemaTypes>(resolver: GraphQLFieldResolver<unknown, Types["Context"], object>): ResolveStep<Types>;
//# sourceMappingURL=steps.d.ts.map
