"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _core = require("@pothos/core");
_core.RootFieldBuilder.prototype.validate = function validate(args, schema) {
    // Store the validation schema for this args object
    const [firstArg] = Object.values(args);
    if (!firstArg) {
        throw new _core.PothosSchemaError('t.validate() requires at least one argument to validate');
    }
    firstArg.updateConfig((config)=>{
        var _extensions_pothospluginvalidation;
        var _config_extensions;
        const extensions = (_config_extensions = config.extensions) !== null && _config_extensions !== void 0 ? _config_extensions : {};
        var _extensions_pothospluginvalidation_parentSchemas;
        const existingParentSchemas = (_extensions_pothospluginvalidation_parentSchemas = (_extensions_pothospluginvalidation = extensions['@pothos/plugin-validation']) === null || _extensions_pothospluginvalidation === void 0 ? void 0 : _extensions_pothospluginvalidation.parentSchemas) !== null && _extensions_pothospluginvalidation_parentSchemas !== void 0 ? _extensions_pothospluginvalidation_parentSchemas : [];
        return {
            ...config,
            extensions: {
                ...extensions,
                '@pothos/plugin-validation': {
                    ...extensions['@pothos/plugin-validation'],
                    parentSchemas: [
                        ...existingParentSchemas,
                        schema
                    ]
                }
            }
        };
    });
    return args;
};
_core.FieldRef.prototype.validate = function validate(schema) {
    this.updateConfig((config)=>{
        var _extensions_pothospluginvalidation;
        var _config_extensions;
        const extensions = (_config_extensions = config.extensions) !== null && _config_extensions !== void 0 ? _config_extensions : {};
        return {
            ...config,
            extensions: {
                ...extensions,
                '@pothos/plugin-validation': {
                    ...extensions['@pothos/plugin-validation'],
                    schemas: ((_extensions_pothospluginvalidation = extensions['@pothos/plugin-validation']) === null || _extensions_pothospluginvalidation === void 0 ? void 0 : _extensions_pothospluginvalidation.schemas) ? [
                        schema,
                        ...extensions['@pothos/plugin-validation'].schemas
                    ] : [
                        schema
                    ]
                }
            }
        };
    });
    return this;
};
_core.InputFieldRef.prototype.validate = function validate(schema) {
    this.updateConfig((config)=>{
        var _extensions_pothospluginvalidation;
        var _config_extensions;
        const extensions = (_config_extensions = config.extensions) !== null && _config_extensions !== void 0 ? _config_extensions : {};
        return {
            ...config,
            extensions: {
                ...extensions,
                '@pothos/plugin-validation': {
                    ...extensions['@pothos/plugin-validation'],
                    schemas: ((_extensions_pothospluginvalidation = extensions['@pothos/plugin-validation']) === null || _extensions_pothospluginvalidation === void 0 ? void 0 : _extensions_pothospluginvalidation.schemas) ? [
                        schema,
                        ...extensions['@pothos/plugin-validation'].schemas
                    ] : [
                        schema
                    ]
                }
            }
        };
    });
    return this;
};
_core.ArgumentRef.prototype.validate = function validate(schema) {
    this.updateConfig((config)=>{
        var _extensions_pothospluginvalidation;
        var _config_extensions;
        const extensions = (_config_extensions = config.extensions) !== null && _config_extensions !== void 0 ? _config_extensions : {};
        return {
            ...config,
            extensions: {
                ...extensions,
                '@pothos/plugin-validation': {
                    ...extensions['@pothos/plugin-validation'],
                    schemas: ((_extensions_pothospluginvalidation = extensions['@pothos/plugin-validation']) === null || _extensions_pothospluginvalidation === void 0 ? void 0 : _extensions_pothospluginvalidation.schemas) ? [
                        schema,
                        ...extensions['@pothos/plugin-validation'].schemas
                    ] : [
                        schema
                    ]
                }
            }
        };
    });
    return this;
};
_core.InputObjectRef.prototype.validate = function validate(schema) {
    this.updateConfig((config)=>{
        var _extensions_pothospluginvalidation;
        var _config_extensions;
        const extensions = (_config_extensions = config.extensions) !== null && _config_extensions !== void 0 ? _config_extensions : {};
        return {
            ...config,
            extensions: {
                ...extensions,
                '@pothos/plugin-validation': {
                    ...extensions['@pothos/plugin-validation'],
                    schemas: ((_extensions_pothospluginvalidation = extensions['@pothos/plugin-validation']) === null || _extensions_pothospluginvalidation === void 0 ? void 0 : _extensions_pothospluginvalidation.schemas) ? [
                        schema,
                        ...extensions['@pothos/plugin-validation'].schemas
                    ] : [
                        schema
                    ]
                }
            }
        };
    });
    return this;
};

//# sourceMappingURL=methods.js.map