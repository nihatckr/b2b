"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get InputValidationError () {
        return _errors.InputValidationError;
    },
    get PothosValidationPlugin () {
        return PothosValidationPlugin;
    },
    get default () {
        return _default;
    }
});
require("./global-types");
require("./methods");
const _core = /*#__PURE__*/ _interop_require_wildcard(require("@pothos/core"));
const _errors = require("./errors");
const _utils = require("./utils");
_export_star(require("./types"), exports);
function _export_star(from, to) {
    Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
            Object.defineProperty(to, k, {
                enumerable: true,
                get: function() {
                    return from[k];
                }
            });
        }
    });
    return from;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const pluginName = 'validation';
class PothosValidationPlugin extends _core.BasePlugin {
    onInputFieldConfig(fieldConfig) {
        var _extensions_pothospluginvalidation;
        var _fieldConfig_extensions;
        const extensions = (_fieldConfig_extensions = fieldConfig.extensions) !== null && _fieldConfig_extensions !== void 0 ? _fieldConfig_extensions : {};
        var _extensions_pothospluginvalidation_schemas;
        const existingSchemas = (_extensions_pothospluginvalidation_schemas = (_extensions_pothospluginvalidation = extensions['@pothos/plugin-validation']) === null || _extensions_pothospluginvalidation === void 0 ? void 0 : _extensions_pothospluginvalidation.schemas) !== null && _extensions_pothospluginvalidation_schemas !== void 0 ? _extensions_pothospluginvalidation_schemas : [];
        const optionsSchema = fieldConfig.pothosOptions.validate;
        if (optionsSchema || existingSchemas.length > 0) {
            return {
                ...fieldConfig,
                extensions: {
                    ...extensions,
                    '@pothos/plugin-validation': {
                        ...extensions['@pothos/plugin-validation'],
                        schemas: optionsSchema ? [
                            optionsSchema,
                            ...existingSchemas
                        ] : existingSchemas
                    }
                }
            };
        }
        return fieldConfig;
    }
    onTypeConfig(typeConfig) {
        if (typeConfig.graphqlKind === 'InputObject') {
            var _typeConfig_extensions;
            const extensions = (_typeConfig_extensions = typeConfig.extensions) !== null && _typeConfig_extensions !== void 0 ? _typeConfig_extensions : {};
            var _extensions_validationSchemas;
            const existingSchemas = (_extensions_validationSchemas = extensions.validationSchemas) !== null && _extensions_validationSchemas !== void 0 ? _extensions_validationSchemas : [];
            const optionsSchema = typeConfig.pothosOptions.validate;
            if (optionsSchema || existingSchemas.length > 0) {
                return {
                    ...typeConfig,
                    extensions: {
                        ...extensions,
                        '@pothos/plugin-validation': {
                            schemas: optionsSchema ? [
                                optionsSchema,
                                ...existingSchemas
                            ] : existingSchemas
                        }
                    }
                };
            }
        }
        return typeConfig;
    }
    onOutputFieldConfig(fieldConfig) {
        var _fieldConfig_pothosOptions_validate;
        const argsSchema = (_fieldConfig_pothosOptions_validate = fieldConfig.pothosOptions.validate) !== null && _fieldConfig_pothosOptions_validate !== void 0 ? _fieldConfig_pothosOptions_validate : null;
        const argsSchemas = new Set(Object.values(fieldConfig.args).flatMap((arg)=>{
            var _arg_extensions_pothospluginvalidation, _arg_extensions;
            var _arg_extensions_pothospluginvalidation_parentSchemas;
            return (_arg_extensions_pothospluginvalidation_parentSchemas = (_arg_extensions = arg.extensions) === null || _arg_extensions === void 0 ? void 0 : (_arg_extensions_pothospluginvalidation = _arg_extensions['@pothos/plugin-validation']) === null || _arg_extensions_pothospluginvalidation === void 0 ? void 0 : _arg_extensions_pothospluginvalidation.parentSchemas) !== null && _arg_extensions_pothospluginvalidation_parentSchemas !== void 0 ? _arg_extensions_pothospluginvalidation_parentSchemas : [];
        }));
        const argMappings = (0, _core.mapInputFields)(fieldConfig.args, this.buildCache, (field)=>{
            var _field_extensions_pothospluginvalidation, _field_extensions, _typeConfig_extensions_pothospluginvalidation, _typeConfig_extensions;
            var _field_extensions_pothospluginvalidation_schemas;
            const baseSchemas = (_field_extensions_pothospluginvalidation_schemas = (_field_extensions = field.extensions) === null || _field_extensions === void 0 ? void 0 : (_field_extensions_pothospluginvalidation = _field_extensions['@pothos/plugin-validation']) === null || _field_extensions_pothospluginvalidation === void 0 ? void 0 : _field_extensions_pothospluginvalidation.schemas) !== null && _field_extensions_pothospluginvalidation_schemas !== void 0 ? _field_extensions_pothospluginvalidation_schemas : [];
            const argOptionsSchema = field.kind === 'Arg' && field.pothosOptions.validate;
            const fieldSchemas = argOptionsSchema ? [
                ...baseSchemas.slice().reverse(),
                argOptionsSchema
            ] : baseSchemas.slice().reverse();
            const fieldTypeName = (0, _core.unwrapInputFieldType)(field.type);
            const typeConfig = this.buildCache.getTypeConfig(fieldTypeName);
            var _typeConfig_extensions_pothospluginvalidation_schemas;
            const typeSchemas = typeConfig.kind === 'InputObject' ? (_typeConfig_extensions_pothospluginvalidation_schemas = (_typeConfig_extensions = typeConfig.extensions) === null || _typeConfig_extensions === void 0 ? void 0 : (_typeConfig_extensions_pothospluginvalidation = _typeConfig_extensions['@pothos/plugin-validation']) === null || _typeConfig_extensions_pothospluginvalidation === void 0 ? void 0 : _typeConfig_extensions_pothospluginvalidation.schemas) !== null && _typeConfig_extensions_pothospluginvalidation_schemas !== void 0 ? _typeConfig_extensions_pothospluginvalidation_schemas : null : null;
            return fieldSchemas.length > 0 || typeSchemas ? {
                fieldSchemas,
                typeSchemas: typeSchemas !== null && typeSchemas !== void 0 ? typeSchemas : []
            } : null;
        });
        // Convert Set to Array and combine with argsSchema
        const allArgsSchemas = [
            ...argsSchema ? [
                argsSchema
            ] : [],
            ...Array.from(argsSchemas)
        ];
        if (!argMappings && allArgsSchemas.length === 0) {
            return fieldConfig;
        }
        const argValidator = (0, _utils.createArgsValidator)(argMappings, allArgsSchemas, {
            validationError: (failure, args, context)=>{
                var _this_builder_options_validation;
                const validationErrorFn = (_this_builder_options_validation = this.builder.options.validation) === null || _this_builder_options_validation === void 0 ? void 0 : _this_builder_options_validation.validationError;
                const error = validationErrorFn ? validationErrorFn(failure, args, context) : new _errors.InputValidationError(failure);
                if (typeof error === 'string') {
                    throw new _core.PothosValidationError(error);
                }
                throw error;
            }
        });
        var _fieldConfig_argMappers;
        return {
            ...fieldConfig,
            argMappers: [
                ...(_fieldConfig_argMappers = fieldConfig.argMappers) !== null && _fieldConfig_argMappers !== void 0 ? _fieldConfig_argMappers : [],
                (args, ctx, info)=>argValidator(args, ctx, info)
            ]
        };
    }
}
_core.default.registerPlugin(pluginName, PothosValidationPlugin);
const _default = pluginName;

//# sourceMappingURL=index.js.map