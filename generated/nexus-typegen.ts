/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../server/src/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  Currency: "EUR" | "GBP" | "TRY" | "USD"
  MessageStatus: "DELIVERED" | "FAILED" | "READ" | "SENT"
  OrderStatus: "CANCELLED" | "CONFIRMED" | "DELIVERED" | "DRAFT" | "IN_PRODUCTION" | "PENDING" | "SHIPPED"
  POStatus: "ACKNOWLEDGED" | "CANCELLED" | "CONFIRMED" | "DRAFT" | "SENT"
  ProductionStatus: "CANCELLED" | "COMPLETED" | "DELAYED" | "IN_PROGRESS" | "PENDING"
  Role: "ADMIN" | "CUSTOMER" | "MANAGER" | "MANUFACTURER" | "USER"
  SampleStatus: "APPROVED" | "DELIVERED" | "IN_PRODUCTION" | "REJECTED" | "REQUESTED" | "SHIPPED"
  VariantType: "BUNDLE" | "CONFIGURABLE" | "SIMPLE" | "VIRTUAL"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  Decimal: any
  JSON: any
}

export interface NexusGenObjects {
  ProductVariant: { // root type
    collectionId: number; // Int!
    color?: string | null; // String
    colorHex?: string | null; // String
    companyId: number; // Int!
    costPrice?: NexusGenScalars['Decimal'] | null; // Decimal
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: NexusGenEnums['Currency']; // Currency!
    customAttributes?: NexusGenScalars['JSON'] | null; // JSON
    description?: string | null; // String
    dimensions?: NexusGenScalars['JSON'] | null; // JSON
    discontinuedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    images?: NexusGenScalars['JSON'] | null; // JSON
    isActive: boolean; // Boolean!
    isAvailable: boolean; // Boolean!
    leadTimeDays?: number | null; // Int
    material?: string | null; // String
    maxOrderQuantity?: number | null; // Int
    minOrderQuantity: number; // Int!
    name: string; // String!
    packagingInfo?: NexusGenScalars['JSON'] | null; // JSON
    pattern?: string | null; // String
    price?: NexusGenScalars['Decimal'] | null; // Decimal
    reservedQuantity: number; // Int!
    seasonalAvailability?: NexusGenScalars['JSON'] | null; // JSON
    size?: string | null; // String
    stockQuantity: number; // Int!
    thumbnail?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    variantCode: string; // String!
    weight?: NexusGenScalars['Decimal'] | null; // Decimal
  }
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  ProductVariant: { // field return type
    collectionId: number; // Int!
    color: string | null; // String
    colorHex: string | null; // String
    companyId: number; // Int!
    costPrice: NexusGenScalars['Decimal'] | null; // Decimal
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: NexusGenEnums['Currency']; // Currency!
    customAttributes: NexusGenScalars['JSON'] | null; // JSON
    description: string | null; // String
    dimensions: NexusGenScalars['JSON'] | null; // JSON
    discontinuedAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    images: NexusGenScalars['JSON'] | null; // JSON
    isActive: boolean; // Boolean!
    isAvailable: boolean; // Boolean!
    leadTimeDays: number | null; // Int
    material: string | null; // String
    maxOrderQuantity: number | null; // Int
    minOrderQuantity: number; // Int!
    name: string; // String!
    packagingInfo: NexusGenScalars['JSON'] | null; // JSON
    pattern: string | null; // String
    price: NexusGenScalars['Decimal'] | null; // Decimal
    reservedQuantity: number; // Int!
    seasonalAvailability: NexusGenScalars['JSON'] | null; // JSON
    size: string | null; // String
    stockQuantity: number; // Int!
    thumbnail: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    variantCode: string; // String!
    weight: NexusGenScalars['Decimal'] | null; // Decimal
  }
  Query: { // field return type
    ok: boolean; // Boolean!
  }
}

export interface NexusGenFieldTypeNames {
  ProductVariant: { // field return type name
    collectionId: 'Int'
    color: 'String'
    colorHex: 'String'
    companyId: 'Int'
    costPrice: 'Decimal'
    createdAt: 'DateTime'
    currency: 'Currency'
    customAttributes: 'JSON'
    description: 'String'
    dimensions: 'JSON'
    discontinuedAt: 'DateTime'
    id: 'Int'
    images: 'JSON'
    isActive: 'Boolean'
    isAvailable: 'Boolean'
    leadTimeDays: 'Int'
    material: 'String'
    maxOrderQuantity: 'Int'
    minOrderQuantity: 'Int'
    name: 'String'
    packagingInfo: 'JSON'
    pattern: 'String'
    price: 'Decimal'
    reservedQuantity: 'Int'
    seasonalAvailability: 'JSON'
    size: 'String'
    stockQuantity: 'Int'
    thumbnail: 'String'
    updatedAt: 'DateTime'
    variantCode: 'String'
    weight: 'Decimal'
  }
  Query: { // field return type name
    ok: 'Boolean'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}